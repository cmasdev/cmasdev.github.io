<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GitHub on Christian Amado's Blog</title><link>https://cmas.dev/tags/github/</link><description>Recent content in GitHub on Christian Amado's Blog</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Wed, 11 Sep 2024 00:00:00 -0400</lastBuildDate><atom:link href="https://cmas.dev/tags/github/index.xml" rel="self" type="application/rss+xml"/><item><title>Mejores prácticas de modularidad con Deno 2</title><link>https://cmas.dev/posts/2024-09-11-best-practices-modularity-deno2/</link><pubDate>Wed, 11 Sep 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-09-11-best-practices-modularity-deno2/</guid><description>&lt;p>&lt;strong>Deno 2&lt;/strong> ha revolucionado el desarrollo con &lt;strong>JavaScript&lt;/strong> y &lt;strong>TypeScript&lt;/strong> al proporcionar un entorno moderno, seguro y modular. Su sistema de importación basado en URL y su soporte nativo para &lt;strong>TypeScript&lt;/strong> facilitan la creación de aplicaciones bien estructuradas y mantenibles. En este artículo, exploraremos las mejores prácticas para lograr modularidad en proyectos con &lt;strong>Deno 2&lt;/strong>.&lt;/p>
&lt;h2 id="1-introducción-a-la-modularidad-en-deno-2">1. Introducción a la modularidad en Deno 2&lt;/h2>
&lt;p>La modularidad se refiere a dividir un programa en componentes más pequeños e independientes. En &lt;strong>Deno 2&lt;/strong>, cada archivo actúa como un módulo independiente, importado y exportado mediante URLs. Esto elimina la necesidad de gestores de paquetes como npm y fomenta un enfoque más directo para manejar dependencias.&lt;/p>
&lt;h3 id="ventajas-de-la-modularidad-en-deno-2">Ventajas de la modularidad en Deno 2&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Mantenibilidad:&lt;/strong> El código está organizado y es fácil de entender.&lt;/li>
&lt;li>&lt;strong>Reutilización:&lt;/strong> Los módulos pueden reutilizarse en diferentes proyectos.&lt;/li>
&lt;li>&lt;strong>Escalabilidad:&lt;/strong> Es más fácil agregar nuevas funcionalidades.&lt;/li>
&lt;li>&lt;strong>Colaboración:&lt;/strong> Los equipos pueden trabajar en diferentes módulos de forma independiente.&lt;/li>
&lt;/ul>
&lt;h2 id="2-estructura-de-carpetas-recomendada">2. Estructura de carpetas recomendada&lt;/h2>
&lt;p>Una estructura de carpetas bien organizada es esencial para la modularidad. Una configuración recomendada para proyectos en Deno es:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">project/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── src/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── controllers/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ └── userController.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── services/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ └── userService.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── utils/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ └── logger.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── deps.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── tests/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── userService_test.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── mod.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── README.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>&lt;code>src/&lt;/code>&lt;/strong>: Contiene el código principal de la aplicación.&lt;/li>
&lt;li>&lt;strong>&lt;code>deps.ts&lt;/code>&lt;/strong>: Centraliza las dependencias externas.&lt;/li>
&lt;li>&lt;strong>&lt;code>tests/&lt;/code>&lt;/strong>: Almacena los archivos de prueba.&lt;/li>
&lt;li>&lt;strong>&lt;code>mod.ts&lt;/code>&lt;/strong>: Archivo principal que expone los módulos necesarios.&lt;/li>
&lt;/ul>
&lt;h2 id="3-uso-de-depsts-para-centralizar-dependencias">3. Uso de deps.ts para centralizar dependencias&lt;/h2>
&lt;p>En Deno, es común utilizar un archivo &lt;code>deps.ts&lt;/code> para centralizar todas las dependencias externas, lo que facilita su gestión y actualización.&lt;/p>
&lt;h3 id="ejemplo-de-depsts">Ejemplo de deps.ts&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Router&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/oak/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">assertEquals&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/std/testing/asserts.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">config&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/dotenv/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="uso-en-un-módulo">Uso en un módulo&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Router&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../deps.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">router&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Router&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Hello, Deno!&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">listen&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8000&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="4-importaciones-y-exportaciones-claras">4. Importaciones y exportaciones claras&lt;/h2>
&lt;p>Las importaciones y exportaciones claras mejoran la legibilidad del código.&lt;/p>
&lt;h3 id="exportaciones-nombradas">Exportaciones nombradas&lt;/h3>
&lt;p>Prefiere exportar funciones y clases de manera nombrada:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">logInfo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">INFO&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="importaciones-claras">Importaciones claras&lt;/h3>
&lt;p>Importa solo lo necesario para evitar confusión:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">import { logInfo } from &amp;#34;./utils/logger.ts&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">logInfo(&amp;#34;Application started&amp;#34;);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="5-modularización-de-funcionalidades">5. Modularización de funcionalidades&lt;/h2>
&lt;h3 id="servicios">Servicios&lt;/h3>
&lt;p>Los servicios encapsulan la lógica de negocio.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">userService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">getUsers&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">Promise&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="ne">Array&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">User&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">[{&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;John Doe&amp;#34;&lt;/span> &lt;span class="p">}];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="controladores">Controladores&lt;/h3>
&lt;p>Los controladores gestionan las solicitudes HTTP.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">userController&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Router&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../deps.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">getUsers&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../services/userService.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">router&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Router&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/users&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">getUsers&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">default&lt;/span> &lt;span class="n">router&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="utilidades">Utilidades&lt;/h3>
&lt;p>Las utilidades ofrecen funciones auxiliares reutilizables.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">logError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">ERROR&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="6-testing-modular">6. Testing modular&lt;/h2>
&lt;p>Deno incluye soporte integrado para pruebas, lo que facilita el desarrollo modular.&lt;/p>
&lt;h3 id="ejemplo-de-prueba">Ejemplo de prueba&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">getUsers&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../src/services/userService.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">assertEquals&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../src/deps.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">deno&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;getUsers devuelve una lista de usuarios&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">users&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">getUsers&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">assertEquals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">assertEquals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;John Doe&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="7-ejemplo-práctico-api-rest-modular">7. Ejemplo práctico: API REST modular&lt;/h2>
&lt;h3 id="estructura-del-proyecto">Estructura del proyecto&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">project/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── src/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── controllers/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ └── userController.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── services/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ └── userService.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── deps.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── mod.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── tests/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── userService_test.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── README.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="modts">mod.ts&lt;/h3>
&lt;p>Archivo principal que inicia la aplicación:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Application&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;./deps.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="n">userRouter&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;./controllers/userController.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">userRouter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Server running on http://localhost:8000&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">listen&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8000&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="8-conclusión">8. Conclusión&lt;/h2>
&lt;p>La modularidad en &lt;strong>Deno 2&lt;/strong> no solo mejora la organización del código, sino que también facilita la escalabilidad y mantenibilidad de los proyectos. Al seguir las mejores prácticas descritas, como centralizar dependencias, usar importaciones claras y escribir pruebas modulares, puedes garantizar que tus aplicaciones sean robustas y fáciles de gestionar a medida que crecen.&lt;/p></description></item><item><title>Configuración de CI/CD para proyectos Angular con GitHub Actions</title><link>https://cmas.dev/posts/2024-09-04-config-ci-cd-angular-github/</link><pubDate>Wed, 04 Sep 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-09-04-config-ci-cd-angular-github/</guid><description>&lt;p>La integración continua (CI) y la entrega continua (CD) son pilares fundamentales en el desarrollo de software moderno. &lt;strong>GitHub Actions&lt;/strong> proporciona una solución poderosa y flexible para automatizar procesos de &lt;strong>CI/CD&lt;/strong> directamente en repositorios de &lt;strong>GitHub&lt;/strong>. En este artículo, aprenderemos a configurar &lt;strong>CI/CD&lt;/strong> para un proyecto Angular utilizando &lt;strong>GitHub Actions&lt;/strong>.&lt;/p>
&lt;h2 id="1-introducción-a-cicd-y-github-actions">1. Introducción a CI/CD y GitHub Actions&lt;/h2>
&lt;h3 id="qué-es-cicd">¿Qué es CI/CD?&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>CI (Integración Continua):&lt;/strong> Automatiza la verificación del código mediante pruebas y validaciones cada vez que se realiza un cambio en el repositorio.&lt;/li>
&lt;li>&lt;strong>CD (Entrega Continua):&lt;/strong> Automatiza el proceso de despliegue del código a entornos de producción o pruebas.&lt;/li>
&lt;/ul>
&lt;h3 id="ventajas-de-github-actions">Ventajas de GitHub Actions&lt;/h3>
&lt;ul>
&lt;li>Integración nativa con repositorios de GitHub.&lt;/li>
&lt;li>Flexibilidad para definir pipelines personalizados.&lt;/li>
&lt;li>Amplio ecosistema de acciones reutilizables.&lt;/li>
&lt;li>Historial detallado de ejecuciones y logs.&lt;/li>
&lt;/ul>
&lt;h2 id="2-configuración-inicial-del-proyecto-angular">2. Configuración inicial del proyecto Angular&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Crear un proyecto Angular:&lt;/strong>
Si no tienes un proyecto Angular, puedes crear uno nuevo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng new angular-ci-cd-example
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd angular-ci-cd-example
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Subir el proyecto a GitHub:&lt;/strong>
Inicializa un repositorio y empuja el proyecto:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">git init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git remote add origin &amp;lt;tu-repositorio&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git commit -m &amp;#34;Initial commit&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push -u origin main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="3-creación-del-workflow-de-ci">3. Creación del workflow de CI&lt;/h2>
&lt;h3 id="estructura-básica-del-workflow">Estructura básica del workflow&lt;/h3>
&lt;p>GitHub Actions utiliza un archivo YAML ubicado en &lt;code>.github/workflows&lt;/code>. Crearemos un archivo llamado &lt;code>ci.yml&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">name: CI for Angular
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">on:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> push:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> branches:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pull_request:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> branches:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jobs:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> build-and-test:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> runs-on: ubuntu-latest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> steps:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Check out code
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uses: actions/checkout@v3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Set up Node.js
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uses: actions/setup-node@v3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> with:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> node-version: 18
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Install dependencies
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> run: npm ci
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Run linting
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> run: npm run lint
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Run tests
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> run: npm test
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="explicación-del-workflow">Explicación del workflow&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Eventos de disparo:&lt;/strong> Ejecuta el workflow en cada &lt;code>push&lt;/code> o &lt;code>pull_request&lt;/code> hacia la rama &lt;code>main&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Jobs:&lt;/strong> El trabajo &lt;code>build-and-test&lt;/code> incluye:
&lt;ul>
&lt;li>&lt;strong>actions/checkout:&lt;/strong> Descarga el código del repositorio.&lt;/li>
&lt;li>&lt;strong>actions/setup-node:&lt;/strong> Configura Node.js en la máquina.&lt;/li>
&lt;li>&lt;strong>npm ci:&lt;/strong> Instala las dependencias de forma limpia.&lt;/li>
&lt;li>&lt;strong>npm run lint:&lt;/strong> Ejecuta la verificación de estilo de código.&lt;/li>
&lt;li>&lt;strong>npm test:&lt;/strong> Ejecuta pruebas unitarias.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="4-configuración-del-workflow-de-cd">4. Configuración del workflow de CD&lt;/h2>
&lt;h3 id="despliegue-en-github-pages">Despliegue en GitHub Pages&lt;/h3>
&lt;p>Si deseas publicar tu aplicación Angular en GitHub Pages, sigue estos pasos:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Configurar el archivo &lt;code>angular.json&lt;/code>:&lt;/strong>
Asegúrate de que la propiedad &lt;code>outputPath&lt;/code> de &lt;code>build&lt;/code> esté configurada correctamente:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;#34;outputPath&amp;#34;: &amp;#34;dist/angular-ci-cd-example&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Agregar el workflow de despliegue:&lt;/strong>
Crea un archivo &lt;code>.github/workflows/cd-gh-pages.yml&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">name: Deploy to GitHub Pages
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">on:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> push:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> branches:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jobs:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> deploy:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> runs-on: ubuntu-latest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> steps:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Check out code
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uses: actions/checkout@v3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Set up Node.js
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uses: actions/setup-node@v3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> with:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> node-version: 18
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Install dependencies
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> run: npm ci
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Build project
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> run: npm run build -- --output-path=dist
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Deploy to GitHub Pages
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uses: peaceiris/actions-gh-pages@v3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> with:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> github_token: ${{ secrets.GITHUB_TOKEN }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> publish_dir: ./dist/angular-ci-cd-example
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Habilitar GitHub Pages:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Ve a la configuración de tu repositorio en GitHub.&lt;/li>
&lt;li>Activa GitHub Pages y selecciona la rama &lt;code>gh-pages&lt;/code> como fuente.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="despliegue-en-un-servidor-externo">Despliegue en un servidor externo&lt;/h3>
&lt;p>Si prefieres desplegar en un servidor externo, como AWS o Azure, puedes agregar un paso adicional al workflow.&lt;/p>
&lt;p>&lt;strong>Ejemplo para FTP:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Deploy&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">FTP&lt;/span> &lt;span class="n">server&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">uses&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">sebastianpopp&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ftp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">action&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">v2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">with&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">host&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="n">secrets&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">FTP_HOST&lt;/span> &lt;span class="p">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">username&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="n">secrets&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">FTP_USERNAME&lt;/span> &lt;span class="p">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="n">secrets&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">FTP_PASSWORD&lt;/span> &lt;span class="p">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">local&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">dir&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">./&lt;/span>&lt;span class="n">dist&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">angular&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">ci&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">cd&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">example&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">remote&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">dir&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">www&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">html&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="5-buenas-prácticas-en-cicd-para-angular">5. Buenas prácticas en CI/CD para Angular&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Usar &lt;code>npm ci&lt;/code> en lugar de &lt;code>npm install&lt;/code>:&lt;/strong> Garantiza una instalación consistente de dependencias.&lt;/li>
&lt;li>&lt;strong>Configurar pruebas end-to-end (E2E):&lt;/strong> Agrega un paso para ejecutar pruebas E2E utilizando herramientas como Cypress o Protractor.&lt;/li>
&lt;li>&lt;strong>Separar workflows:&lt;/strong> Divide CI y CD en archivos separados para mayor claridad.&lt;/li>
&lt;li>&lt;strong>Utilizar secretos de GitHub:&lt;/strong> Almacena credenciales sensibles en &lt;code>Secrets&lt;/code> para mantener la seguridad.&lt;/li>
&lt;li>&lt;strong>Monitorear el rendimiento:&lt;/strong> Usa herramientas de seguimiento como Lighthouse para verificar el impacto de los cambios.&lt;/li>
&lt;/ol>
&lt;h2 id="6-conclusión">6. Conclusión&lt;/h2>
&lt;p>Configurar &lt;strong>CI/CD&lt;/strong> para proyectos &lt;strong>Angular&lt;/strong> con &lt;strong>GitHub Actions&lt;/strong> mejora la eficiencia del desarrollo y asegura entregas rápidas y confiables. Desde la ejecución de pruebas hasta el despliegue automatizado en &lt;strong>GitHub Pages&lt;/strong> o servidores externos, &lt;strong>GitHub Actions&lt;/strong> simplifica el proceso y permite un flujo de trabajo profesional y moderno. ¡Empieza a automatizar hoy mismo y lleva tu proyecto Angular al siguiente nivel!&lt;/p></description></item><item><title>Git y WSL</title><link>https://cmas.dev/posts/2022-05-04-git-and-wsl/</link><pubDate>Wed, 04 May 2022 13:48:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-05-04-git-and-wsl/</guid><description>&lt;p>En este artículo mostraré cómo instalar o actualizar git dentro de &lt;strong>Windows Subsystem for Linux&lt;/strong> de modo a poder clonar repositorio desde y hacia &lt;strong>GitHub&lt;/strong>. En un &lt;a href="https://cmas.dev/posts/2022-04-26-configuring-my-wsl-environment/">artículo anterior&lt;/a> hemos visto cómo habilitar la plataforma &lt;strong>Windows Subsystem for Linux&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22610&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Debemos seguir algunos pasos para poder isntalar/actualizar &lt;em>Git&lt;/em> dentro de &lt;strong>WSL&lt;/strong> en &lt;em>Windows 11&lt;/em>.&lt;/p>
&lt;h2 id="instalar-git-en-wsl">Instalar Git en WSL&lt;/h2>
&lt;p>Realmente, resulta muy complicado que &lt;strong>WSL&lt;/strong> no traiga instalado &lt;strong>Git&lt;/strong> (lo considera una herramienta indispensable para los desarrolladores), pero si es el caso debemos seguir estos pasos:&lt;/p>
&lt;ol>
&lt;li>Iniciar la aplicación &lt;strong>Windows Subsystem for Linux (Ubuntu)&lt;/strong>.&lt;/li>
&lt;li>Verificamos la versión de Git instalada:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">git --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Asumimos que no tenemos instalado &lt;strong>Git&lt;/strong> (aunque es difícil), entonces procedemos a instalarlo con el comenado &lt;strong>apt-get&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt install git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Veremos la versión actual instalada(Ojo: no es lo mismo Git en Windows que Git en WSL, pueden ser versiones distintas):
&lt;img src="https://cmas.dev/img/posts/2022/05/04/1.png" alt="">&lt;/li>
&lt;/ol>
&lt;h2 id="actualizar-git-en-wsl">Actualizar Git en WSL&lt;/h2>
&lt;p>Debemos seguir algunos pasos sencillos para lograrlos. Estos serían:&lt;/p>
&lt;ol>
&lt;li>Verificamos la versión de Git instalada:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">git --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Actualizamos Git utilizando el mismo comando de instalación:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt install git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Luego de actualizar tendremos la última versión disponible&lt;/li>
&lt;/ol>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Integración de Azure DevOps con GitHub</title><link>https://cmas.dev/posts/2022-04-18-azure-devops-integration-with-github/</link><pubDate>Mon, 18 Apr 2022 23:24:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-04-18-azure-devops-integration-with-github/</guid><description>&lt;p>En este artículo mostraré cómo integrar un repositorio GitHub, que lo hemos visto en &lt;a href="https://cmas.dev/posts/2022-04-04-create-repository-github/">este artículo&lt;/a>, con Azure DevOps que lo hemos visto &lt;a href="https://cmas.dev/posts/2022-04-11-create-project-azure-devops/">aquí&lt;/a>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22598&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Primeramente, debemos ingresar a la configuración del proyecto:
&lt;img src="https://cmas.dev/img/posts/2022/04/18/1.png" alt="">&lt;/p>
&lt;p>Nos dirigmos a la sección &lt;strong>Boards&lt;/strong> &amp;gt; &lt;strong>GitHub connections&lt;/strong> y hacemos clic en el botón correspondiente:
&lt;img src="https://cmas.dev/img/posts/2022/04/18/2.png" alt="">&lt;/p>
&lt;p>Como toda aplicación tercerizada, debemos autorizar su uso:
&lt;img src="https://cmas.dev/img/posts/2022/04/18/3.png" alt="">&lt;/p>
&lt;p>Agregamos los repositorios necesarios:
&lt;img src="https://cmas.dev/img/posts/2022/04/18/4.png" alt="">&lt;/p>
&lt;p>Autorizamos a Azure Boards para el acceso a GitHub:
&lt;img src="https://cmas.dev/img/posts/2022/04/18/5.png" alt="">&lt;/p>
&lt;p>Verificamos que la conexión esté activa y funcional:
&lt;img src="https://cmas.dev/img/posts/2022/04/18/6.png" alt="">&lt;/p>
&lt;p>Tenemos lista la integración entre Azure DevOps y GitHub para proceder con la automatización de procesos. En artículos posteriores iremos avanzando con el CI/CD para sacarle el jugo a esta configuración.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Crear un repositorio en GitHub</title><link>https://cmas.dev/posts/2022-04-04-create-repository-github/</link><pubDate>Mon, 04 Apr 2022 22:13:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-04-04-create-repository-github/</guid><description>&lt;p>En este artículo mostraré cómo crear un repositorio en GitHub para poder integrarlo en el futuro con Azure DevOps.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22581&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Crear un repositorio en GitHub es un proceso muy sencillo. La documentación es muy completa y se encuentra &lt;a href="https://docs.github.com/es/repositories">aquí&lt;/a>. Este artículo sólo busca acortar el proceso de creación de un repositorio que lo utilizaremos las próximas semanas.&lt;/p>
&lt;h2 id="crear-nuevo-repositorio">Crear nuevo repositorio&lt;/h2>
&lt;p>Para crear el nuevo repositorio buscamos el menú &lt;strong>New&lt;/strong>
&lt;img src="https://cmas.dev/img/posts/2022/04/04/0.png" alt="">&lt;/p>
&lt;p>Luego, procedemos a cargar los datos necesarios para la creación del repositorio:
&lt;img src="https://cmas.dev/img/posts/2022/04/04/1.png" alt="">&lt;/p>
&lt;p>Por último, verificamos el repositorio creado:
&lt;img src="https://cmas.dev/img/posts/2022/04/04/2.png" alt="">&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item></channel></rss>