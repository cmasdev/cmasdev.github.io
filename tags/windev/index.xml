<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>WinDev on Christian Amado's Blog</title><link>https://cmas.dev/tags/windev/</link><description>Recent content in WinDev on Christian Amado's Blog</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Fri, 15 Dec 2023 18:30:00 -0400</lastBuildDate><atom:link href="https://cmas.dev/tags/windev/index.xml" rel="self" type="application/rss+xml"/><item><title>XAML para cambio de orientación de pantalla</title><link>https://cmas.dev/posts/2023-12-15-maui-xaml-orientation-screen/</link><pubDate>Fri, 15 Dec 2023 18:30:00 -0400</pubDate><guid>https://cmas.dev/posts/2023-12-15-maui-xaml-orientation-screen/</guid><description>&lt;p>En este artículo veremos la posibilidad de crear un diseño que se adapte a la orientación de pantalla en &lt;strong>.NET MAUI&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22635.2915&lt;/strong>&lt;/em>&lt;/p>
&lt;p>La idea central aquí es aprender a crear un diseño responsivo para brindar la mejor experiencia de usuario con controles que se adapten a la orientación de la pantalla (anteriormente se lograba esto haciendo cambios por plataforma), para ellos adaptaremos una solución presentada por un desarrollador experto en la materia.&lt;/p>
&lt;h2 id="bloquear-orientación-de-pantalla">Bloquear orientación de pantalla&lt;/h2>
&lt;p>Primeramente, debemos mencionar que tenemos la opción de bloquear el cambio de orientación de pantalla. Esto se da cuando, por ejemplo, queremos que nuestro diseño sólo quede en posición vertical. Para ello, debemos preparar código para cada plataforma (aquí veremos &lt;strong>Android&lt;/strong> y &lt;strong>Windows&lt;/strong>):&lt;/p>
&lt;h3 id="windows">Windows&lt;/h3>
&lt;p>Se realiza mediante el gestor de manifiesto &lt;strong>Package.appxmanifest&lt;/strong>:
&lt;img src="https://i.ibb.co/0jQZXvN/Orientation1.png" alt="">&lt;/p>
&lt;h3 id="android">Android&lt;/h3>
&lt;p>En la clase &lt;strong>MainActivity&lt;/strong> de la plataforma &lt;strong>Android&lt;/strong> se agrega el decorado:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ScreenOrientation = ScreenOrientation.Portrait
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>La clase quedaría así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">using Android.App;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">using Android.Content.PM;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">namespace MauiApp1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Activity(Theme = &amp;#34;@style/Maui.SplashTheme&amp;#34;, MainLauncher = true, ConfigurationChanges = ConfigChanges.ScreenSize | ConfigChanges.Orientation | ConfigChanges.UiMode | ConfigChanges.ScreenLayout | ConfigChanges.SmallestScreenSize | ConfigChanges.Density, ScreenOrientation = ScreenOrientation.Portrait)]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public class MainActivity : MauiAppCompatActivity
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="diseño-responsivo">Diseño responsivo&lt;/h2>
&lt;p>En &lt;strong>.NET MAUI&lt;/strong> esto se logra utilziando de manera criteriosa alguno de los elementos (controles) &lt;strong>Layout&lt;/strong> nativos que nos presenta la plataforma. En este caso nos enfocaremos en en control &lt;strong>Grid&lt;/strong> (disculpen pero soy un fanático de este control).&lt;/p>
&lt;h3 id="opción-1">Opción 1&lt;/h3>
&lt;p>En esta opción adaptaremos los controles utilizando el Grid y utilizando código &lt;strong>C#&lt;/strong> para reorientar los objetos (básicamente se cambian filas por columnas, por describirlo de una manera). Entonces, el XAML quedaría así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;ContentPage xmlns=&amp;#34;http://schemas.microsoft.com/dotnet/2021/maui&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2009/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Class=&amp;#34;MauiApp1.MainPage&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ScrollView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid x:Name=&amp;#34;grillaCompleta&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RowDefinition Height=&amp;#34;*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid x:Name=&amp;#34;grillaInterna&amp;#34; Grid.Row=&amp;#34;0&amp;#34; Padding=&amp;#34;10&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RowDefinition Height=&amp;#34;*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid.ColumnDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ColumnDefinition Width=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ColumnDefinition Width=&amp;#34;*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid.ColumnDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Image Source=&amp;#34;dotnet_bot.png&amp;#34; Grid.Row=&amp;#34;0&amp;#34; Grid.Column=&amp;#34;0&amp;#34; HeightRequest=&amp;#34;100&amp;#34; WidthRequest=&amp;#34;100&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid x:Name=&amp;#34;grillaControles&amp;#34; Grid.Row=&amp;#34;0&amp;#34; Grid.Column=&amp;#34;1&amp;#34; &amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RowDefinition Height=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RowDefinition Height=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RowDefinition Height=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid.ColumnDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ColumnDefinition Width=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ColumnDefinition Width=&amp;#34;*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid.ColumnDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label Text=&amp;#34;Nombre:&amp;#34; Grid.Row=&amp;#34;0&amp;#34; Grid.Column=&amp;#34;0&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label Text=&amp;#34;Fecha:&amp;#34; Grid.Row=&amp;#34;1&amp;#34; Grid.Column=&amp;#34;0&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label Text=&amp;#34;Etiquetas:&amp;#34; Grid.Row=&amp;#34;2&amp;#34; Grid.Column=&amp;#34;0&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Entry Grid.Row=&amp;#34;0&amp;#34; Grid.Column=&amp;#34;1&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Entry Grid.Row=&amp;#34;1&amp;#34; Grid.Column=&amp;#34;1&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Entry Grid.Row=&amp;#34;2&amp;#34; Grid.Column=&amp;#34;1&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/ScrollView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/ContentPage&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Sobre-escribimos el método &lt;strong>OnSizeAllocated&lt;/strong> en el código C# que presta atención al cambio (de tamaño del contenedor de página, orientación, de alguna forma) quedaría así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">protected override void OnSizeAllocated(double width, double height)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> base.OnSizeAllocated(width, height);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (width != this.width || height != this.height)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> this.width = width;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> this.height = height;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (width &amp;gt; height)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.RowDefinitions.Clear();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.ColumnDefinitions.Clear();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.RowDefinitions.Add(new RowDefinition { Height = new GridLength(1, GridUnitType.Star) });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.ColumnDefinitions.Add(new ColumnDefinition { Width = new GridLength(1, GridUnitType.Star) });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.ColumnDefinitions.Add(new ColumnDefinition { Width = new GridLength(1, GridUnitType.Star) });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.Children.Remove(grillaControles);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.Add(grillaControles, 1, 0);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> else
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.RowDefinitions.Clear();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.ColumnDefinitions.Clear();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.ColumnDefinitions.Add(new ColumnDefinition { Width = new GridLength(1, GridUnitType.Star) });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.RowDefinitions.Add(new RowDefinition { Height = new GridLength(1, GridUnitType.Auto) });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.RowDefinitions.Add(new RowDefinition { Height = new GridLength(1, GridUnitType.Star) });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.Children.Remove(grillaControles);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.Add(grillaControles, 0, 1);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>El resultado Horizontal es:
&lt;img src="https://i.ibb.co/bKnfKs6/Orientation2.png" alt="">&lt;/p>
&lt;p>El resultado Vertical es:
&lt;img src="https://i.ibb.co/3132hFy/Orientation3.png" alt="">&lt;/p>
&lt;p>Me ha funcionado este método, pero hay algunos problemas reportados en GitHub sobre el tema &lt;a href="https://github.com/dotnet/maui/issues/9795">aquí&lt;/a>&lt;/p>
&lt;h3 id="opción-2-extraída-de-otro-blog">Opción 2 (extraída de otro Blog)&lt;/h3>
&lt;p>Definimos el &lt;strong>XAML&lt;/strong> de la página agregando Manejadores de eventos visuales, en este caso, &lt;strong>OrientationStateTrigger&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;ContentPage.Resources&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ResourceDictionary&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Style TargetType=&amp;#34;Grid&amp;#34; x:Key=&amp;#34;grillaInternaStyle&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;VisualStateManager.VisualStateGroups&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualStateGroupList&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualStateGroup&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState x:Name=&amp;#34;Portrait&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState.StateTriggers&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;OrientationStateTrigger Orientation=&amp;#34;Portrait&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState.StateTriggers&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState.Setters&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;RowDefinitions&amp;#34; Value=&amp;#34;*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;ColumnDefinitions&amp;#34; Value=&amp;#34;*,*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState.Setters&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState x:Name=&amp;#34;Landscape&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState.StateTriggers&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;OrientationStateTrigger Orientation=&amp;#34;Landscape&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState.StateTriggers&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState.Setters&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;RowDefinitions&amp;#34; Value=&amp;#34;Auto,*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;ColumnDefinitions&amp;#34; Value=&amp;#34;*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState.Setters&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualStateGroup&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualStateGroupList&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Setter&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Style&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/ResourceDictionary&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/ContentPage.Resources&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>De esta manera, el código completo quedaría así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;ContentPage xmlns=&amp;#34;http://schemas.microsoft.com/dotnet/2021/maui&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2009/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Class=&amp;#34;MauiApp1.MainPage&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ContentPage.Resources&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ResourceDictionary&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Style TargetType=&amp;#34;Grid&amp;#34; x:Key=&amp;#34;grillaInternaStyle&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;VisualStateManager.VisualStateGroups&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualStateGroupList&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualStateGroup&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState x:Name=&amp;#34;Portrait&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState.StateTriggers&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;OrientationStateTrigger Orientation=&amp;#34;Portrait&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState.StateTriggers&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState.Setters&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;RowDefinitions&amp;#34; Value=&amp;#34;*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;ColumnDefinitions&amp;#34; Value=&amp;#34;*,*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState.Setters&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState x:Name=&amp;#34;Landscape&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState.StateTriggers&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;OrientationStateTrigger Orientation=&amp;#34;Landscape&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState.StateTriggers&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState.Setters&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;RowDefinitions&amp;#34; Value=&amp;#34;Auto,*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;ColumnDefinitions&amp;#34; Value=&amp;#34;*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState.Setters&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualStateGroup&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualStateGroupList&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Setter&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Style&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/ResourceDictionary&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/ContentPage.Resources&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid x:Name=&amp;#34;grillaCompleta&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RowDefinition Height=&amp;#34;*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid x:Name=&amp;#34;grillaInterna&amp;#34; Grid.Row=&amp;#34;0&amp;#34; Padding=&amp;#34;10&amp;#34; Style=&amp;#34;{StaticResource grillaInternaStyle}&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Image Source=&amp;#34;dotnet_bot.png&amp;#34; Grid.Row=&amp;#34;0&amp;#34; Grid.Column=&amp;#34;0&amp;#34; HeightRequest=&amp;#34;100&amp;#34; WidthRequest=&amp;#34;100&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid x:Name=&amp;#34;grillaControles&amp;#34; Grid.Row=&amp;#34;0&amp;#34; Grid.Column=&amp;#34;1&amp;#34; &amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RowDefinition Height=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RowDefinition Height=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RowDefinition Height=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid.ColumnDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ColumnDefinition Width=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ColumnDefinition Width=&amp;#34;*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid.ColumnDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label Text=&amp;#34;Nombre:&amp;#34; Grid.Row=&amp;#34;0&amp;#34; Grid.Column=&amp;#34;0&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label Text=&amp;#34;Fecha:&amp;#34; Grid.Row=&amp;#34;1&amp;#34; Grid.Column=&amp;#34;0&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label Text=&amp;#34;Etiquetas:&amp;#34; Grid.Row=&amp;#34;2&amp;#34; Grid.Column=&amp;#34;0&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Entry Grid.Row=&amp;#34;0&amp;#34; Grid.Column=&amp;#34;1&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Entry Grid.Row=&amp;#34;1&amp;#34; Grid.Column=&amp;#34;1&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Entry Grid.Row=&amp;#34;2&amp;#34; Grid.Column=&amp;#34;1&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/ContentPage&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Logrando así el mismo efecto que la Opción 1 (con la diferencia que esta solución me funcionó en &lt;strong>Android&lt;/strong> y &lt;strong>Windows&lt;/strong>).&lt;/p>
&lt;p>La opción 2 se encuentra perfectamente explicada en &lt;a href="https://blog.ewers-peters.de/add-responsive-layouts-to-your-maui-app">este blog&lt;/a> gracias a &lt;a href="https://github.com/ewerspej">Julian Ewers-Peters&lt;/a>&lt;/p>
&lt;p>Recuerden que durante todo este mes de Diciembre estamos en el &lt;strong>&lt;a href="https://elcamino.dev/calendario-adviento-net-maui-espanol-23">Calendario de Adviento .NET MAUI&lt;/a>&lt;/strong>&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Novedades en .NET MAUI con .NET 8</title><link>https://cmas.dev/posts/2023-12-01-whats-new-in-maui-net-8/</link><pubDate>Fri, 01 Dec 2023 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2023-12-01-whats-new-in-maui-net-8/</guid><description>&lt;p>En este artículo mostraré algunas novedades de .NET 8 en &lt;strong>.NET MAUI&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22635.2776&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;strong>.NET 8&lt;/strong> se ha lanzado con muchas novedades y también han sufrido cambios (para bien) en la plataforma &lt;strong>.NET MAUI&lt;/strong>. Es muy fácili dirigirnos al &lt;a href="https://learn.microsoft.com/es-es/dotnet/maui/whats-new/dotnet-8?view=net-maui-8.0">sitio oficial&lt;/a> y leer ahí las novedades pero me interesa probarlas novedades y contarles un poco lo que se viene, pero en mayor detalle lo que voy probando. ¡Así que manos a la obra!&lt;/p>
&lt;h2 id="novedades-generales">Novedades generales&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Diseño de derecha a izquierda&lt;/strong>: Gracias a las mejoras de performance de .NET 8 se logra que los diseños para idiomas que van de derecha a izquierda ahora se vean correctamente además de responder en tiempo y forma.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Comportamiento de teclado&lt;/strong>: Se han mejorado las disposiciones de teclado, que responden más rápidamente al ingreso de texto por parte del usuario, además el scroll responde más rápido ante la aparición/desaparición del teclado.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Gestión de memoria&lt;/strong>: Esto viene atado a las mejoras introducidas en general dentro de .NET 8.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="cómo-habilito-net-maui-8">¿Cómo habilito .NET MAUI 8?&lt;/h2>
&lt;p>Primero, debemos descargar e instalar el &lt;strong>SDK&lt;/strong> de &lt;strong>.NET 8&lt;/strong>, eso lo encontramos &lt;a href="https://dotnet.microsoft.com/en-us/download/dotnet/thank-you/sdk-8.0.100-windows-x64-installer">aquí&lt;/a>.&lt;/p>
&lt;p>Luego, debemos actualizar &lt;strong>Visual Studio 2022&lt;/strong> a su versión &lt;strong>17.8.0&lt;/strong> o superior (acabo de ver disponible la versión &lt;strong>17.8.2&lt;/strong>) que se puede descargar desde &lt;a href="https://visualstudio.microsoft.com/downloads/">aquí&lt;/a>.&lt;/p>
&lt;p>Iniciamos el instalador de &lt;strong>Visual Studio&lt;/strong> e indicamos la opción de &lt;strong>.NET Multi-platform App UI development&lt;/strong>:
&lt;img src="https://i.ibb.co/7bnx4RQ/1.png" alt="">&lt;/p>
&lt;h2 id="creando-un-proyecto-net-maui-8">Creando un proyecto .NET MAUI 8&lt;/h2>
&lt;p>Al abrir &lt;strong>Visual Studio&lt;/strong> procedemos a crear un nuevo proyecto y definimos el &lt;em>Tipo&lt;/em> &lt;strong>MAUI&lt;/strong> (en mi caso tengo &lt;a href="https://www.telerik.com/maui-ui">Telerik UI for .NET MAUI&lt;/a> instalado):
&lt;img src="https://i.ibb.co/QDyvX8v/2.png" alt="">&lt;/p>
&lt;p>Seleccionamos la versión de .NET (en este caso ya seleccionamos el 8):
&lt;img src="https://i.ibb.co/LCZv5vc/3.png" alt="">&lt;/p>
&lt;p>Nos dirigimos a las &lt;strong>Propiedades&lt;/strong> del proyecto y verificamos que todo corresponda al &lt;strong>.NET 8&lt;/strong>:
&lt;img src="https://i.ibb.co/L0NYJSx/4.png" alt="">&lt;/p>
&lt;p>Con estos pasos tenemos un nuevo proyecto creado en &lt;strong>.NET MAUI 8&lt;/strong> ;)&lt;/p>
&lt;h2 id="cambio-en-mauiprogramcs">Cambio en MauiProgram.cs&lt;/h2>
&lt;p>En el archivo de arranque de un proyecto &lt;strong>.NET MAUI&lt;/strong> se ingresa una línea de código nueva:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">#if DEBUG
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">builder.Logging.AddDebug();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#endif
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>El código completo queda así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Extensions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Logging&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">namespace&lt;/span> &lt;span class="n">MauiApp1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="k">static&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">MauiProgram&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="k">static&lt;/span> &lt;span class="n">MauiApp&lt;/span> &lt;span class="n">CreateMauiApp&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">builder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">MauiApp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CreateBuilder&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">builder&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">UseMauiApp&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">App&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">ConfigureFonts&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fonts&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fonts&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddFont&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;OpenSans-Regular.ttf&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;OpenSansRegular&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fonts&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddFont&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;OpenSans-Semibold.ttf&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;OpenSansSemibold&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#if DEBUG&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Logging&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddDebug&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#endif&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Build&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Básicamente, se registran los eventos y éstos se agregan a la ventana del depurar (pero sólo durante la depuración no así en Release).&lt;/p>
&lt;h2 id="keyboard-acelerator">Keyboard Acelerator&lt;/h2>
&lt;p>Para dar una explicación rápida, podemos decir que son atajos de teclado que nos permiten realiar una acción dentro de la aplicación:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;ContentPage.MenuBarItems&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;MenuBarItem Text=&amp;#34;File&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;MenuFlyoutItem Text=&amp;#34;Exit&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Clicked=&amp;#34;MenuFlyoutItem_Clicked&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/MenuBarItem&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;MenuBarItem Text=&amp;#34;Locations&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;MenuFlyoutSeparator /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;MenuFlyoutItem Text=&amp;#34;Add Location&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Clicked=&amp;#34;MenuFlyoutItem_Clicked_1&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;MenuFlyoutItem.KeyboardAccelerators&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;KeyboardAccelerator Modifiers=&amp;#34;Ctrl&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Key=&amp;#34;L&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/MenuFlyoutItem.KeyboardAccelerators&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/MenuFlyoutItem&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;MenuFlyoutItem Text=&amp;#34;Edit Location&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;MenuFlyoutItem Text=&amp;#34;Remove Location&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/MenuBarItem&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/ContentPage.MenuBarItems&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Arrancamos la App y vemos el Menú:
&lt;img src="https://i.ibb.co/FWRFggx/5.png" alt="">&lt;/p>
&lt;p>Hacemos clic o bien utilizamos el atajo &lt;strong>Ctrl&lt;/strong>+&lt;strong>L&lt;/strong> y veremos:
&lt;img src="https://i.ibb.co/dGNdZDc/6.png" alt="">&lt;/p>
&lt;p>Estas son las novedades que quería compartir con ustedes en estas primeras pruebas que estoy realizando (de hecho estoy actualmente en un proyecto &lt;strong>.NET MAUI 8&lt;/strong>). Iré avanzando en las novedades de &lt;strong>.NET MAUI&lt;/strong> en todo este mes de Diciembre ya que nos encontramos en pleno &lt;strong>&lt;a href="https://elcamino.dev/calendario-adviento-net-maui-espanol-23">Calendario de Adviento .NET MAUI&lt;/a>&lt;/strong>&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>ChatGPT en WPF</title><link>https://cmas.dev/posts/2023-03-19-chatgpt-wpf/</link><pubDate>Sun, 19 Mar 2023 09:01:00 -0400</pubDate><guid>https://cmas.dev/posts/2023-03-19-chatgpt-wpf/</guid><description>&lt;p>En este artículo veremos cómo crear un Chat con la API de &lt;strong>ChatGPT&lt;/strong> y &lt;strong>WPF&lt;/strong> con controles &lt;strong>Telerik&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25314&lt;/strong>&lt;/em>&lt;/p>
&lt;p>En el articulo de &lt;a href="https://cmas.dev/posts/2023-03-15-creating-chat-app-wpf-using-telerik/">la semana pasada&lt;/a> hemos visto cómo crear una pequeña aplicación tipo Chat con &lt;strong>Telerik&lt;/strong>. El viernes, &lt;a href="https://cmas.dev/posts/2023-03-17-chatgpt-from-paraguay/">vimos cómo habilitar &lt;strong>ChatGPT&lt;/strong>&lt;/a> en Paraguay (teniendo en cuenta que no está habilitado oficialmente aún).&lt;/p>
&lt;h2 id="creando-una-aplicación">Creando una aplicación&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Abrimos &lt;strong>Visual Studio Professional 2022&lt;/strong> (va servir la edición &lt;strong>Community&lt;/strong>).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Agregamos los paquetes &lt;strong>NuGet&lt;/strong> necesarios para nuestro proyecto:
&lt;img src="https://i.ibb.co/H7GLDJk/1.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Agregar configuraciones de la aplicación:
&lt;img src="https://i.ibb.co/F5pTW4J/2.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Adicionar las configuraciones en el archivo creado:
&lt;img src="https://i.ibb.co/XCPVnmR/3.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Vamos a trabajar con &lt;strong>RadChat&lt;/strong> de &lt;strong>Telerik for WPF&lt;/strong>, así que debemos agregar el modelo para &lt;strong>TextMessage&lt;/strong>. Entonces, agregamos la clase en cuestión:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">using System;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">using Telerik.Windows.Controls.ConversationalUI;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">namespace TelerikWpfChat
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public class TextMessageModel
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public string Text { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public Author Author { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public DateTime CreationDate { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>Dentro del &lt;em>Framework&lt;/em> que utiliza &lt;strong>Telerik Conversational UI&lt;/strong> y &lt;strong>WPF&lt;/strong> se hace muy común el uso de conversores para manipalutación de datos que se modifican a nivel visual. Entonces, aplicamos el conversor:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Telerik&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Windows&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Controls&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ConversationalUI&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">namespace&lt;/span> &lt;span class="n">TelerikWpfChat&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">MessageConverter&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">IMessageConverter&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">MessageBase&lt;/span> &lt;span class="n">ConvertItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">object&lt;/span> &lt;span class="n">item&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">messageModel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">TextMessageModel&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">TextMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">messageModel&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Author&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">messageModel&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Text&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">messageModel&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CreationDate&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">object&lt;/span> &lt;span class="n">ConvertMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MessageBase&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">textMessage&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">TextMessage&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">TextMessageModel&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Author&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">textMessage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Author&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">textMessage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Text&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">CreationDate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">textMessage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CreationDate&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Creamos el &lt;em>ViewModel&lt;/em> que va interactuar entre el &lt;strong>ChatGPT&lt;/strong> y &lt;strong>WPF&lt;/strong>. Tener en cuenta que aquí se encuentra la llamada a la API de &lt;strong>GPT&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ObjectModel&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Telerik&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Windows&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Controls&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ConversationalUI&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Threading&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Tasks&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Net&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Http&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Windows&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Threading&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Windows&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Newtonsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Json&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">namespace&lt;/span> &lt;span class="n">TelerikWpfChat&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">ChatViewModel&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">ObservableCollection&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">TextMessageModel&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">Messages&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">Author&lt;/span> &lt;span class="n">CurrentAuthor&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">private&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">Author&lt;/span> &lt;span class="n">OtherAuthor&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">private&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">ChatViewModel&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CurrentAuthor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Author&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Christian&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">OtherAuthor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Author&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;GPT&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Messages&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">null&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Messages&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">ObservableCollection&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">TextMessageModel&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">internal&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">SendCurrentMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">prompt&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span>&lt;span class="n">Agregamos&lt;/span> &lt;span class="n">nuestra&lt;/span> &lt;span class="n">interacción&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Messages&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new&lt;/span> &lt;span class="n">TextMessageModel&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">prompt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Author&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">CurrentAuthor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">CreationDate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DateTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Now&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span>&lt;span class="n">Llamamos&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">la&lt;/span> &lt;span class="n">API&lt;/span> &lt;span class="n">de&lt;/span> &lt;span class="n">GPT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">sendToGpt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">prompt&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">null&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">MessageBox&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Show&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Error en la Matrix!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span>&lt;span class="n">Obtenemos&lt;/span> &lt;span class="n">los&lt;/span> &lt;span class="n">resultados&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="n">le&lt;/span> &lt;span class="n">pasamos&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">la&lt;/span> &lt;span class="n">interfaz&lt;/span> &lt;span class="n">en&lt;/span> &lt;span class="n">un&lt;/span> &lt;span class="n">hilo&lt;/span> &lt;span class="n">separado&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">Dispatcher&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CurrentDispatcher&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">BeginInvoke&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">Action&lt;/span>&lt;span class="p">)(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Messages&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new&lt;/span> &lt;span class="n">TextMessageModel&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Author&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">OtherAuthor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">CreationDate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DateTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Now&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">sendToGpt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">prompt&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">apiKey&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Properties&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Settings&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Default&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ApiGPTChat&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">model&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Properties&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Settings&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Default&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Model&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">maxTokens&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">500&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">using&lt;/span> &lt;span class="k">var&lt;/span> &lt;span class="n">client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">HttpClient&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DefaultRequestHeaders&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Authorization&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="s2">&amp;#34;Bearer {apiKey}&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;https://api.openai.com/v1/completions&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">requestBody&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">prompt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">prompt&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">model&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">model&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temperature&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">max_tokens&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">maxTokens&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">postJson&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Text&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">JsonSerializer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Serialize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">requestBody&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">PostAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">new&lt;/span> &lt;span class="n">StringContent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">postJson&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Text&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Encoding&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">UTF8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;application/json&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">responseBody&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Content&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ReadAsStringAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dynamic&lt;/span> &lt;span class="n">responseData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">JsonConvert&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DeserializeObject&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">dynamic&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">responseBody&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ne">int&lt;/span> &lt;span class="n">lastChoice&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">responseData&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">choices&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Count&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">responseData&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">choices&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">lastChoice&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>Creamos el diseño de nuestro Chat inteligente:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;Window x:Class=&amp;#34;TelerikWpfChat.MainWindow&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns=&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:telerik=&amp;#34;http://schemas.telerik.com/2008/xaml/presentation&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:local=&amp;#34;clr-namespace:TelerikWpfChat&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Title=&amp;#34;ChatGPT on WPF&amp;#34; Height=&amp;#34;600&amp;#34; Width=&amp;#34;800&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;telerik:RadChat Margin=&amp;#34;10&amp;#34; CurrentAuthor=&amp;#34;{Binding CurrentAuthor}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> DataSource=&amp;#34;{Binding Messages}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SendMessage=&amp;#34;chat_SendMessage&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;telerik:RadChat.DataContext&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;local:ChatViewModel /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/telerik:RadChat.DataContext&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;telerik:RadChat.MessageConverter&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;local:MessageConverter /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/telerik:RadChat.MessageConverter&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/telerik:RadChat&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/Window&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://i.ibb.co/HHMzpp3/4.png" alt="">&lt;/p>
&lt;ol start="6">
&lt;li>Agregamos la llamada al evento que envía mensaje en nuestra página &lt;strong>WPF&lt;/strong> (incluye trabajo asíncronos y multihilo):&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Windows&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Telerik&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Windows&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Controls&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Telerik&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Windows&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Controls&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ConversationalUI&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">namespace&lt;/span> &lt;span class="n">TelerikWpfChat&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">partial&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">MainWindow&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">Window&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">MainWindow&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">InitializeComponent&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">chat_SendMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">object&lt;/span> &lt;span class="n">sender&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SendMessageEventArgs&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">e&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Handled&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">chat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sender&lt;/span> &lt;span class="n">as&lt;/span> &lt;span class="n">RadChat&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">model&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ChatViewModel&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">chat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DataContext&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">mensaje&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Message&lt;/span> &lt;span class="n">as&lt;/span> &lt;span class="n">TextMessage&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">chat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TypingIndicatorVisibility&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Visibility&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Visible&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">chat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TypingIndicatorText&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Esperando respuesta de &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">model&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">OtherAuthor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">model&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SendCurrentMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mensaje&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Text&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">chat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TypingIndicatorVisibility&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Visibility&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Collapsed&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">chat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TypingIndicatorText&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Empty&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="7">
&lt;li>Volvemos a ejecutar con &lt;em>F5&lt;/em> y disfrutamos del chat.&lt;/li>
&lt;/ol>
&lt;h2 id="cómo-interactúa">¿Cómo interactúa?&lt;/h2>
&lt;p>Jugando un poco con la &lt;em>API&lt;/em> de &lt;strong>ChatGPT&lt;/strong> logramos esta funcionalidad:&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>El código fuente completo &lt;a href="https://github.com/cmasdev/TelerikWpfChatGPT">se encuentra en GitHub&lt;/a>.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Ingresando a ChatGPT desde Paraguay</title><link>https://cmas.dev/posts/2023-03-17-chatgpt-from-paraguay/</link><pubDate>Fri, 17 Mar 2023 21:25:00 -0400</pubDate><guid>https://cmas.dev/posts/2023-03-17-chatgpt-from-paraguay/</guid><description>&lt;p>En este artículo veremos cómo crear una cuenta en OpenAI para utilizar su famoso producto &lt;strong>ChatGPT&lt;/strong> y obtener acceso a su API para usarlo en nuestros desarrollos de &lt;strong>Windows&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25314&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Debemos crear una cuenta en OpenAI para poder utilizar el ChatGPT que está revolucionando el mercado tecnológico en los últimos días. ¡El famoso chat que sabe todo!&lt;/p>
&lt;h2 id="instalar-vpn">Instalar VPN&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Buscamos la extensión para &lt;strong>Microsoft Edge&lt;/strong> con el nombre &lt;strong>Free VPN for Edge&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2023/03/17/1.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Agregamos la extensión:
&lt;img src="https://cmas.dev/img/posts/2023/03/17/2.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Siguiente a toda la publicidad:
&lt;img src="https://cmas.dev/img/posts/2023/03/17/3.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Seleccionamos un país como EEUU o Francia (en Paraguay) y hacemos clic en el botón de encendido:
&lt;img src="https://cmas.dev/img/posts/2023/03/17/4.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Listo. Debemos ingresar al sitio oficial del chat sin problemas&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="chatgpt">ChatGPT&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Ir al sitio oficial del &lt;a href="https://chat.openai.com/chat">chat&lt;/a> e iniciar sesión:
&lt;img src="https://cmas.dev/img/posts/2023/03/17/5.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Colocar los datos personales:
&lt;img src="https://cmas.dev/img/posts/2023/03/17/6.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Verificar el número de teléfono:
&lt;img src="https://cmas.dev/img/posts/2023/03/17/7.png" alt="">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Para este caso no funciona un número de Paraguay, debe ser un número que corresponda a algunos de los &lt;a href="https://platform.openai.com/docs/supported-countries">países habilitados&lt;/a> pero lo podemos hacer con algunas herramientas que se encuentran gracias a &lt;strong>Microsoft Bing&lt;/strong>.&lt;/p>
&lt;ol start="4">
&lt;li>Luego de la verificación, podremos ingresar a la plataforma:
&lt;img src="https://cmas.dev/img/posts/2023/03/17/8.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Creando una aplicación tipo Chat en WPF usando Telerik</title><link>https://cmas.dev/posts/2023-03-15-creating-chat-app-wpf-using-telerik/</link><pubDate>Wed, 15 Mar 2023 20:57:00 -0400</pubDate><guid>https://cmas.dev/posts/2023-03-15-creating-chat-app-wpf-using-telerik/</guid><description>&lt;p>En este artículo veremos cómo crear una aplicación de Chat en &lt;strong>WPF&lt;/strong> con &lt;strong>Telerik&lt;/strong>. (Antesala de todo el tema de &lt;a href="https://openai.com/blog/chatgpt/">ChatGPT&lt;/a>)&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25290&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Es raro, que después de tantos años vuelva a escribir un artículo sobre WPF (el último fue &lt;a href="https://cmasdevnet.blogspot.com/2016/03/wpf-how-to-notificaciones-en-bandeja-de.html">este&lt;/a>) pero amerita hacerlo pues encontré un botón muy práctico para todo lo relacionado con este nuevo ¡BOOM! que es el ChatGPT.&lt;/p>
&lt;p>El control en cuestión es &lt;a href="https://docs.telerik.com/devtools/wpf/controls/radchat/overview">RadChat&lt;/a> que es parte del &lt;a href="https://www.telerik.com/conversational-ui">&lt;strong>ConversationalUI&lt;/strong>&lt;/a> de &lt;strong>Telerik&lt;/strong>. Esto representa un Chat agnóstico para casi todas sus plataformas (aún no disponible para &lt;strong>WinUI&lt;/strong> ni &lt;strong>Blazor&lt;/strong> que me interesan muchísimo).&lt;/p>
&lt;h2 id="proyecto-wpf">Proyecto WPF&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Vamos a crear un proyecto de tipo &lt;strong>WPF&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2023/03/15/1.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Colocamos un nombre descriptivo:
&lt;img src="https://cmas.dev/img/posts/2023/03/15/2.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Seguimos los pasos en pantalla.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Agregamos las librerías necesarias:
&lt;img src="https://cmas.dev/img/posts/2023/03/15/3.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Insertamos el control &lt;strong>XAML&lt;/strong>:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;Window x:Class=&amp;#34;TelerikWpfChat.MainWindow&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns=&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:telerik=&amp;#34;http://schemas.telerik.com/2008/xaml/presentation&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Title=&amp;#34;MainWindow&amp;#34; Height=&amp;#34;350&amp;#34; Width=&amp;#34;525&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;telerik:RadChat Name=&amp;#34;chat&amp;#34; SendMessage=&amp;#34;chat_SendMessage&amp;#34; &amp;gt;&amp;lt;/telerik:RadChat&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/Window&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>
&lt;p>Probamos la aplicación:
&lt;img src="https://cmas.dev/img/posts/2023/03/15/4.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Entonces, el código C# nos quedaría así:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Windows&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Telerik&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Windows&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Controls&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ConversationalUI&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">namespace&lt;/span> &lt;span class="n">TelerikWpfChat&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">///&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">summary&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">///&lt;/span> &lt;span class="n">Interaction&lt;/span> &lt;span class="n">logic&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">MainWindow&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xaml&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">///&lt;/span> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">summary&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">partial&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">MainWindow&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">Window&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span>&lt;span class="n">Creamos&lt;/span> &lt;span class="n">los&lt;/span> &lt;span class="n">objetos&lt;/span> &lt;span class="n">que&lt;/span> &lt;span class="n">interactúan&lt;/span> &lt;span class="n">en&lt;/span> &lt;span class="n">el&lt;/span> &lt;span class="n">Chat&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">Author&lt;/span> &lt;span class="n">currentAuthor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">Author&lt;/span> &lt;span class="n">externalAuthor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">MainWindow&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">InitializeComponent&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span>&lt;span class="n">Asignamos&lt;/span> &lt;span class="n">nombres&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">currentAuthor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Author&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Christian&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">externalAuthor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Author&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;External&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">chat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CurrentAuthor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">currentAuthor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">chat_SendMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">object&lt;/span> &lt;span class="n">sender&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SendMessageEventArgs&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">e&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Handled&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span>&lt;span class="n">El&lt;/span> &lt;span class="n">texto&lt;/span> &lt;span class="n">que&lt;/span> &lt;span class="n">escribimos&lt;/span> &lt;span class="n">en&lt;/span> &lt;span class="n">el&lt;/span> &lt;span class="n">chat&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">updatedMessageText&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Message&lt;/span> &lt;span class="n">as&lt;/span> &lt;span class="n">TextMessage&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Text&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">chat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">chat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CurrentAuthor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">updatedMessageText&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span>&lt;span class="n">La&lt;/span> &lt;span class="n">respuesta&lt;/span> &lt;span class="n">que&lt;/span> &lt;span class="n">obtenemos&lt;/span> &lt;span class="n">acada&lt;/span> &lt;span class="n">interacción&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">chat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CurrentAuthor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">externalAuthor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">chat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">chat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CurrentAuthor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;¡No tengo respuestas aún!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Listo, de esta forma logramos hacer un pequeño Chat (que puede convertirse en ChatBot). Y nos queda algo así:
&lt;img src="https://cmas.dev/img/posts/2023/03/15/5.png" alt="">&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Django sobre WSL</title><link>https://cmas.dev/posts/2022-12-21-django-on-wsl/</link><pubDate>Wed, 21 Dec 2022 19:39:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-12-21-django-on-wsl/</guid><description>&lt;p>En este corto artículo veremos cómo desarrollar sobre &lt;strong>WSL (Windows Subsystem for Linux)&lt;/strong> con &lt;strong>Python&lt;/strong> y &lt;strong>Django&lt;/strong>. Ya hemos visto que lo podemos hacer con &lt;a href="https://cmas.dev/posts/2022-06-29-java-with-wsl-part-2/">Java&lt;/a>&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25267&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;strong>WSL&lt;/strong> nos ofrece demasiadas ventajas a la hora de desarrollar software sobre el sistema operativo Linux, en este caso &lt;strong>Ubuntu&lt;/strong>. Hoy en día Python es un lenguaje demasiado difundido y muy utilizado en varios ámbitos, con sus ventajas y desventajas como todas las plataformas existentes. A eso le sumaron un Framework muy potente y completo &amp;ldquo;&lt;strong>Django&lt;/strong>&amp;rdquo;.&lt;/p>
&lt;p>Aquí veremos como instalar y ejecutar una aplicación web &lt;strong>Django&lt;/strong> utilizando &lt;strong>Visual Studio Code&lt;/strong>.&lt;/p>
&lt;h2 id="instalar-django-en-wslubuntu">Instalar Django en &lt;strong>WSL:Ubuntu&lt;/strong>&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Abrimos &lt;strong>Windows Terminal&lt;/strong> con el perfil &lt;strong>Ubuntu&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/12/21/1.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Procedemos a instalar &lt;strong>Django&lt;/strong> con el siguiente comando:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt install python3-django
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>
&lt;p>Seguimos las instrucciones en pantalla y listo.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Verificamos la instalación con el siguiente comando:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">django-admin --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://cmas.dev/img/posts/2022/12/21/2.png" alt="">&lt;/p>
&lt;h2 id="crear-proyecto-django-y-empezar-a-trabajar">Crear proyecto Django y empezar a trabajar&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Ir a la carpeta donde debe estar nuestro proyecto:
&lt;img src="https://cmas.dev/img/posts/2022/12/21/3.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Crear un ambiente virtual de &lt;strong>Python&lt;/strong>:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ python3 -m venv pythonTest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Activar el ambiente virtual:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ source pythonTest/bin/activate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Instalar &lt;strong>Django&lt;/strong> en el ambiente virtual:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">(pythonTest) $ pip install django
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>Se crea el proyecto en la carpeta actual:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">(pythonTest) $ django-admin startproject testproject .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>Migramos la base de datos inicial:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">(pythonTest) $ python manage.py migrate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="7">
&lt;li>Se crea la administracion de la Web:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">(pythonTest) $ python manage.py createsuperuser
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="8">
&lt;li>
&lt;p>Completamos los datos y listo:
&lt;img src="https://cmas.dev/img/posts/2022/12/21/4.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Abrimos la carpeta donde alojamos el proyecto y empezamos a desarrollar:
&lt;img src="https://cmas.dev/img/posts/2022/12/21/5.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Activamos el ambiernte virtual de Python y ejecutamos el servidor de Django:
&lt;img src="https://cmas.dev/img/posts/2022/12/21/6.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Veremos la página principal de Django:
&lt;img src="https://cmas.dev/img/posts/2022/12/21/7.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Si accedemos a la URL con el contexto &lt;em>/admin&lt;/em> veremos lo siguiente:
&lt;img src="https://cmas.dev/img/posts/2022/12/21/8.png" alt="">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2022/12/21/9.png" alt="">&lt;/p>
&lt;p>Listo para desarrollar aplicaciones web con &lt;strong>Django&lt;/strong> y &lt;strong>Python&lt;/strong> sobre &lt;strong>Visual Studio Code&lt;/strong> y &lt;strong>WSL&lt;/strong>.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Desarrollo con Python sobre WSL</title><link>https://cmas.dev/posts/2022-12-14-developing-python-on-wsl/</link><pubDate>Wed, 14 Dec 2022 21:12:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-12-14-developing-python-on-wsl/</guid><description>&lt;p>En este corto artículo veremos cómo desarrollar sobre &lt;strong>WSL (Windows Subsystem for Linux)&lt;/strong> con &lt;strong>Python&lt;/strong>. Ya hemos visto que lo podemos hacer con &lt;a href="https://cmas.dev/posts/2022-06-29-java-with-wsl-part-2/">Java&lt;/a>&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25267&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;strong>WSL&lt;/strong> nos ofrece demasiadas ventajas a la hora de desarrollar software sobre el sistema operativo Linux, en este caso &lt;strong>Ubuntu&lt;/strong>. Hoy en día Python es un lenguaje demasiado difundido y muy utilizado en varios ámbitos, con sus ventajas y desventajas como todas las plataformas existentes.&lt;/p>
&lt;p>Aquí veremos como instalar y ejecutar un pequeño código utilizando &lt;strong>Visual Studio Code&lt;/strong>.&lt;/p>
&lt;h2 id="python-en-wsl">Python en WSL&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Abrimos Visual Studio Code (pero en WSL):
&lt;img src="https://cmas.dev/img/posts/2022/12/14/1.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>En extensiones, buscamos &amp;ldquo;python&amp;rdquo; y lo instalamos (el fabricante debe ser Microsoft):
&lt;img src="https://cmas.dev/img/posts/2022/12/14/2.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Luego de la instalación, procedemos a crear un nuevo archivo:
&lt;img src="https://cmas.dev/img/posts/2022/12/14/3.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Seleccionamos el archivo de tipo Python, colocamos en el lugar de preferencia (dentro del WSL):
&lt;img src="https://cmas.dev/img/posts/2022/12/14/4.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Crear un archivo nuevo &lt;strong>pythonTest.py&lt;/strong> (en mi caso) y escribir el siguiente código.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">print(&amp;#34;Hello, World from VS Code and WSL&amp;#34;)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>
&lt;p>Casi hacemos &lt;em>F5&lt;/em> pero notamos que falta algo:
&lt;img src="https://cmas.dev/img/posts/2022/12/14/5.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Seleccionamos el Intérprete recomendado:
&lt;img src="https://cmas.dev/img/posts/2022/12/14/6.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Seleccionamos la configuración del depurador (porque es un archivo suelto):
&lt;img src="https://cmas.dev/img/posts/2022/12/14/7.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ejecutamos nuestro archivo &lt;strong>.py&lt;/strong> y listo:
&lt;img src="https://cmas.dev/img/posts/2022/12/14/8.png" alt="">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Figma y Windows Fluent Design System</title><link>https://cmas.dev/posts/2022-12-07-figma-and-windows-fluent-design-system/</link><pubDate>Wed, 07 Dec 2022 21:12:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-12-07-figma-and-windows-fluent-design-system/</guid><description>&lt;p>En este corto artículo trataremos de entender las directrices de diseño y analizaremos código de interfaz de usuario para crear experiencias de aplicaciones de &lt;strong>Windows&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25252&lt;/strong>&lt;/em>&lt;/p>
&lt;p>En el título hay dos temas, uno de ellos lo hemos visto &lt;a href="https://cmas.dev/posts/2022-04-25-introduction-to-windows-fluent-system/">aquí&lt;/a> para tratar de entenderlo. Ahora que eso quedó claro, nos queda enteder que es &lt;strong>&lt;a href="https://www.figma.com/">Figma&lt;/a>&lt;/strong>.&lt;/p>
&lt;p>Como he escrito varios artículos del tipo &amp;ldquo;HowTo&amp;rdquo; debemos tener en claro los lineamientos de diseño para la plataforma Windows, pues el próximo año nos enfocaremos en &lt;strong>WinUI&lt;/strong>&lt;/p>
&lt;p>Dejo a cargo de los lectores la investigación de los temas relacionados a lineamientos de diseño (es bastante largo y completo por lo que no entraría en un solo artículo). A decir verdad, no me llevo bien con diseño de aplicaciones (para eso están los diseñadores). Puedes leer todo &lt;a href="https://learn.microsoft.com/es-es/windows/apps/design/">aquí&lt;/a>&lt;/p>
&lt;h2 id="qué-es-figma">¿Qué es Figma?&lt;/h2>
&lt;p>&lt;strong>Figma&lt;/strong> es una herramienta de diseño de interfaces que permite la colaboración en tiempo real entre equipos. Se pueden crear sitios web, gráficos y más.&lt;/p>
&lt;p>&lt;strong>Figma&lt;/strong> tiene muchas características que la hacen una herramienta de diseño muy útil y versátil. Algunas de ellas son:&lt;/p>
&lt;ul>
&lt;li>Es una aplicación web, lo que significa que se puede acceder a ella desde cualquier navegador y dispositivo.&lt;/li>
&lt;li>Permite la creación de prototipos interactivos y realistas, que se puede compartir y probar con tu equipo o clientes.&lt;/li>
&lt;li>Facilita la colaboración entre diseñadores y desarrolladores, ya que se puede exportar el código CSS, SVG o React de tus diseños.&lt;/li>
&lt;li>Tiene un sistema de componentes y estilos que ayuda a crear interfaces consistentes y reutilizables.&lt;/li>
&lt;/ul>
&lt;h3 id="qué-tiene-que-ver-figma-con-windows-app-sdk">¿Qué tiene que ver Figma con Windows App SDK?&lt;/h3>
&lt;p>Con &lt;strong>Figma&lt;/strong> se pueden crear diseños de interfaces para aplicaciones de escritorio de &lt;strong>Windows&lt;/strong> usando el &lt;strong>Windows App SDK&lt;/strong>, un conjunto de componentes y herramientas que te permiten usar las APIs y funcionalidades de &lt;strong>Windows 11&lt;/strong> y versiones anteriores.&lt;/p>
&lt;p>Se puede descargar la aplicación de escritorio de &lt;strong>Figma&lt;/strong> para &lt;strong>Windows&lt;/strong> desde su &lt;a href="https://www.figma.com/download/desktop/win">sitio web&lt;/a> y usarla para diseñar, prototipar y colaborar en los proyectos. También se puede usar la plataforma de desarrolladores de &lt;strong>Figma&lt;/strong> para crear plugins o integraciones con otras herramientas.&lt;/p>
&lt;h2 id="empezar-a-trabajar-con-figma-y-windows-fluent-design-system">Empezar a trabajar con Figma y Windows Fluent Design System&lt;/h2>
&lt;p>Y nada, rápidamente debemos empezar en &lt;a href="https://learn.microsoft.com/es-es/windows/apps/design/downloads/">esta página&lt;/a> y ¡manos a la obra!&lt;/p>
&lt;p>Deberías instalarlo desde Microsoft Store para probar.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Usando MAUI con Windows App SDK</title><link>https://cmas.dev/posts/2022-11-02-windows-app-using-maui/</link><pubDate>Wed, 02 Nov 2022 23:42:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-11-02-windows-app-using-maui/</guid><description>&lt;p>En este artículo veremos cómo &lt;strong>.NET MAUI&lt;/strong> interactúa con &lt;strong>Windows 11&lt;/strong> sin necesidad de funciones extras ni código para llegar a ese resultado.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25236&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Hemos visto en varios artículos anteriores, detalles sobre &lt;strong>.NET MAUI&lt;/strong>, pero aquí me surge la necesidad de saber qué pasa en el caso de Windows cuando, por ejemplo, necesitamos acceder al sistema de archivos. ¿Qué pasa? Comparando con &lt;strong>Android&lt;/strong> ¿Cómo se comporta? Seguí leyendo y veamos.&lt;/p>
&lt;h2 id="abrir-imagen-en-windows-11">Abrir imagen en Windows 11&lt;/h2>
&lt;p>Con estos pasos lograremos abrir un archivo y cargarlo en nuestro diseño.&lt;/p>
&lt;ol>
&lt;li>Creamos el método que permite abrir los archivos en el Windows:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">private&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">FileResult&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">PickAndShow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PickOptions&lt;/span> &lt;span class="n">options&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">try&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">FilePicker&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Default&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">PickAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">options&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">null&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">FileName&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">EndsWith&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;jpg&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">StringComparison&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">OrdinalIgnoreCase&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">FileName&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">EndsWith&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;png&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">StringComparison&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">OrdinalIgnoreCase&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">using&lt;/span> &lt;span class="k">var&lt;/span> &lt;span class="n">stream&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">OpenReadAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">image&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ImageSource&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">FromStream&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">stream&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Exception&lt;/span> &lt;span class="n">ex&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">throw&lt;/span> &lt;span class="n">ex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Hacemos la llamada al método y el resultado lo exponemos en la imagen principal:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">private&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">OnCounterClicked&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">object&lt;/span> &lt;span class="n">sender&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">EventArgs&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">resultado&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">PickAndShow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PickOptions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Images&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">imgLogo&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Source&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ImageSource&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">ImageSourceConverter&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ConvertFromString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">resultado&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">FullPath&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Hicimos un cambio en el XAML, colocamos un nombre a la imagen para poder reemplazar el &lt;em>Source&lt;/em> de dicha imagen:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;Image
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Name=&amp;#34;imgLogo&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Source=&amp;#34;dotnet_bot.png&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.Description=&amp;#34;Cute dot net bot waving hi to you!&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HeightRequest=&amp;#34;200&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Ejecutamos la aplicación y vemos los resultados:
&lt;img src="https://cmas.dev/img/posts/2022/11/02/1.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2022/11/02/2.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2022/11/02/3.png" alt="">&lt;/p>
&lt;h2 id="abrir-imagen-en-android">Abrir imagen en Android&lt;/h2>
&lt;p>Como todo esto lo hicimos con &lt;strong>.NET MAUI&lt;/strong>, debemos hacer ¡NADA!&lt;/p>
&lt;ol>
&lt;li>Ejecutamos en &lt;strong>Android&lt;/strong> y&amp;hellip;
&lt;img src="https://cmas.dev/img/posts/2022/11/02/4.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2022/11/02/5.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2022/11/02/6.png" alt="">&lt;/p>
&lt;p>Con una única línea de código pudimos realizar esta tarea sencilla sin necesidad de solicitar permisos ni nada desde la aplicación. esa es una de las ventajas que me gusta de &lt;strong>.NET MAUI&lt;/strong>&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Windows Terminal en Windows 11</title><link>https://cmas.dev/posts/2022-10-26-windows-terminal-in-windows-11/</link><pubDate>Wed, 26 Oct 2022 13:01:14 -0400</pubDate><guid>https://cmas.dev/posts/2022-10-26-windows-terminal-in-windows-11/</guid><description>&lt;p>En este artículo explicaré detalles sobre &lt;strong>Windows Terminal&lt;/strong> (que forma parte del sistema operativo &lt;strong>Windows 11&lt;/strong>).&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25227&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;strong>Windows Terminal&lt;/strong> es una nueva aplicación de terminal moderna, rápida, eficiente y productiva para usuarios de herramientas y shells de línea de comandos como el &lt;strong>símbolo del sistema&lt;/strong>, &lt;strong>PowerShell&lt;/strong> y &lt;strong>WSL&lt;/strong>. Tiene múltiples pestañas, soporte para caracteres &lt;em>Unicode&lt;/em> y &lt;em>UTF-8&lt;/em>, un motor de renderizado de texto acelerado por &lt;em>GPU&lt;/em> y temas personalizados.&lt;/p>
&lt;h2 id="beneficios">Beneficios&lt;/h2>
&lt;p>&lt;strong>Windows Terminal&lt;/strong> tiene muchos beneficios para los usuarios de &lt;strong>línea de comandos&lt;/strong> y &lt;strong>WSL&lt;/strong>. Algunos de ellos son:&lt;/p>
&lt;ul>
&lt;li>Modo de pantalla completa.&lt;/li>
&lt;li>Interfaz con pestañas para abrir múltiples instancias de las herramientas.&lt;/li>
&lt;li>Teclas de acceso rápido para abrir nuevas pestañas.&lt;/li>
&lt;li>Zoom con el ratón.&lt;/li>
&lt;li>Soporte para caracteres &lt;em>Unicode&lt;/em> y &lt;em>UTF-8&lt;/em>, como emoji y caracteres de diferentes idiomas.&lt;/li>
&lt;li>Motor de renderizado de texto acelerado por &lt;em>GPU&lt;/em>.&lt;/li>
&lt;li>Temas y estilos personalizados.&lt;/li>
&lt;li>Soporte para stylus.&lt;/li>
&lt;li>Acceso a sistemas remotos o ejecución de scripts en ellos.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Windows Terminal&lt;/strong> también tiene algunas desventajas que debes tener en cuenta antes de instalarlo. Algunas de ellas son:&lt;/p>
&lt;ul>
&lt;li>Limitaciones en la reproducción de vídeo HD a través del terminal.&lt;/li>
&lt;li>Falta de soporte para dispositivos USB como cámaras y almacenamiento externo.&lt;/li>
&lt;li>No es ideal para requerimientos gráficos pesados.&lt;/li>
&lt;/ul>
&lt;h2 id="cómo-instalarlo">¿Cómo instalarlo?&lt;/h2>
&lt;p>A partir de windows 11 22H2 no es necesario instalarlo, pues ya forma parte del sistema operativo. Aquí es donde se puede ver eso:
&lt;img src="https://cmas.dev/img/posts/2022/10/26/1.png" alt="">&lt;/p>
&lt;p>Pero, para versiones anteriores a la mencionada debemos seguir los siguientes pasos:&lt;/p>
&lt;ul>
&lt;li>Abrir *&lt;em>Microsoft Store&lt;/em> y buscar &lt;strong>Windows Terminal&lt;/strong>.&lt;/li>
&lt;li>Seleccionar &lt;strong>Obtener&lt;/strong> o &lt;strong>Instalar&lt;/strong> para descargar e instalar la aplicación.&lt;/li>
&lt;li>Una vez instalada, se puede abrir &lt;strong>Windows Terminal&lt;/strong> desde el menú Inicio o la barra de tareas.&lt;/li>
&lt;li>También se puede configurar la terminal predeterminada en &lt;strong>Configuración&lt;/strong> &amp;gt; &lt;strong>Privacidad y seguridad&lt;/strong> &amp;gt; &lt;strong>Para desarrolladores&lt;/strong> &amp;gt; &lt;strong>Terminal&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="funciones">Funciones&lt;/h2>
&lt;h3 id="perfiles">Perfiles&lt;/h3>
&lt;p>Los perfiles en &lt;strong>Windows Terminal&lt;/strong> son configuraciones que determinan la apariencia y el comportamiento de cada shell o aplicación que se ejecuta en el terminal. Se pueden personalizar los perfiles para cambiar el color, la fuente, el icono y otras opciones de cada shell. También se pueden ocultar o deshabilitar los perfiles que se no quieran ver en el menú desplegable del terminal. Además, puedes agregar perfiles de terceros como &lt;strong>Git Bash&lt;/strong> o &lt;strong>Azure Cloud Shell&lt;/strong> (como tengo instalados los compnentede de desarrollo Azure de Visual Studio viene activado de manera predeterminada).&lt;/p>
&lt;p>En mi máquina se ve así:
&lt;img src="https://cmas.dev/img/posts/2022/10/26/2.png" alt="">&lt;/p>
&lt;h3 id="pestañas-y-paneles">Pestañas y paneles&lt;/h3>
&lt;p>Las pestañas y los paneles son formas de organizar las diferentes shells o aplicaciones que se ejecutan en el terminal. Se pueden abrir varias pestañas con diferentes perfiles y cambiar entre ellas con &lt;strong>Ctrl&lt;/strong> + &lt;strong>Tab&lt;/strong> o haciendo clic en el nombre de la pestaña. También se puede dividir una pestaña en varios paneles para ver varias shells al mismo tiempo. Se pueden crear, mover, cambiar el tamaño y cerrar los paneles con el teclado o el ratón.&lt;/p>
&lt;p>Aquí vemos detalles de lo que explicamos más arriba:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Apertura de pestañas del mismo perfil o de otro perfil necesario (Todo desde el mimso terminal):
&lt;video width=100% controls autoplay>
&lt;source src="https://cmas.dev/img/posts/2022/10/26/3.mp4" type="video/mp4">
Your browser does not support the video tag.
&lt;/video>
&lt;img src="" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Apertura de paneles (en la misma pestaña) utilizando las teclas &lt;strong>Alt&lt;/strong>+ hacer clic en el icono &amp;ldquo;+&amp;rdquo;:
&lt;video width=100% controls autoplay>
&lt;source src="https://cmas.dev/img/posts/2022/10/26/4.mp4" type="video/mp4">
Your browser does not support the video tag.
&lt;/video>
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="paleta-de-comandos">Paleta de comandos&lt;/h3>
&lt;p>La paleta de comandos permite visualizar y ejecutar las acciones que se puede hacer dentro de &lt;strong>Windows Terminal&lt;/strong>. Se puede invocar la paleta de comandos con &lt;strong>Ctrl&lt;/strong> + &lt;strong>Shift&lt;/strong> + &lt;strong>P&lt;/strong> o personalizar el atajo de teclado. También se puede usar el modo de línea de comandos para escribir un comando &lt;em>&lt;strong>wt&lt;/strong>&lt;/em> directamente en la paleta. Además, se pueden agregar iconos, comandos anidados, comandos iterables y ocultar los comandos que no se quiera ver.&lt;/p>
&lt;p>Una vez presionadas las teclas mencionadas arriba veremos lo siguiente:
&lt;img src="https://cmas.dev/img/posts/2022/10/26/5.png" alt="">&lt;/p>
&lt;h3 id="personalización">Personalización&lt;/h3>
&lt;p>&lt;strong>Windows Terminal&lt;/strong> permite personalizar muchos aspectos de su apariencia y funcionamiento. Se puede acceder a la configuración de &lt;strong>Windows Terminal&lt;/strong> desde el menú desplegable o con &lt;strong>Ctrl&lt;/strong> + &lt;strong>,&lt;/strong>. Algunas de las opciones de personalización que se pueden encontrar son:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Idioma&lt;/strong>: se puede cambiar el idioma preferido de la aplicación.&lt;/li>
&lt;li>&lt;strong>Tema&lt;/strong>: se puede elegir entre un tema claro, oscuro o basado en el sistema.&lt;/li>
&lt;li>&lt;strong>Posición de las pestañas&lt;/strong>: se puede decidir si las nuevas pestañas se abren al principio o al final.&lt;/li>
&lt;li>&lt;strong>Barra de título&lt;/strong>: se puede ocultar la barra de título para ahorrar espacio.&lt;/li>
&lt;li>&lt;strong>Acrílico&lt;/strong>: se puede activar o desactivar el efecto acrílico en la fila de pestañas.&lt;/li>
&lt;li>&lt;strong>Título de la aplicación&lt;/strong>: se puede usar el título del terminal activo como título de la aplicación.&lt;/li>
&lt;li>&lt;strong>Siempre visible&lt;/strong>: se puede hacer que Windows Terminal permanezca siempre encima de otras ventanas.&lt;/li>
&lt;li>&lt;strong>Modo de ancho de las pestañas&lt;/strong>: se puede ajustar el ancho de las pestañas según tu preferencia.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2022/10/26/6.png" alt="">&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Visual Studio Code Server WSL</title><link>https://cmas.dev/posts/2022-10-19-visual-studio-code-server-wsl/</link><pubDate>Wed, 19 Oct 2022 22:35:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-10-19-visual-studio-code-server-wsl/</guid><description>&lt;p>En este artículo corto, pero preciso, mostraré cómo utilizar &lt;strong>Visual Studio Code&lt;/strong> como servidor de &lt;strong>WSL&lt;/strong> para facilitarnos la vida en ciertas pruebas que tenemos como desarrolladores.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25227&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;strong>Visual Studio Code Server&lt;/strong> es un servicio que se puede ejecutar en una máquina de desarrollo remota, como la PC de escritorio o una máquina virtual (VM). Permite conectar de forma segura a esa máquina remota desde cualquier lugar a través de un cliente local de &lt;strong>VS Code&lt;/strong>, sin la necesidad de &lt;strong>SSH&lt;/strong>. También se puede acceder al servidor a través del navegador usando &lt;strong>VS Code&lt;/strong> para la Web (también conocido como &lt;strong>vscode.dev&lt;/strong>).&lt;/p>
&lt;p>La arquitectura del servicio lo expone Microsoft en su web:
&lt;img src="https://code.visualstudio.com/assets/docs/remote/vscode-server/server-arch-latest.png" alt="">&lt;/p>
&lt;h2 id="configurar-acceso">Configurar acceso&lt;/h2>
&lt;p>Para que esto funcione se debe enlazar con &lt;strong>GitHub&lt;/strong> para que nos cree el &lt;strong>CodeSpace&lt;/strong> necesario.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Se accede al entorno de &lt;strong>WSL:Ubuntu&lt;/strong> para hacer las gestiones:
&lt;img src="https://cmas.dev/img/posts/2022/10/19/1.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Una vez allí se verifica que el Visual Studio Code corresponda a &lt;strong>Ubuntu&lt;/strong>:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2022/10/19/2.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Accedemos al menú contextual de &amp;ldquo;Turn on Remote Tunnel Access&amp;hellip;&amp;rdquo;:
&lt;img src="https://cmas.dev/img/posts/2022/10/19/3.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Seguimos las instrucciones en pantalla para Iniciar sesión en &lt;strong>GitHub&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Habilitar el Tunnel Remoto:
&lt;img src="https://cmas.dev/img/posts/2022/10/19/4.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Copiar el enlace que se muestra en la ventana emergente:
&lt;img src="https://cmas.dev/img/posts/2022/10/19/5.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Acceder al navegador de prefrencia y veremos nuestro Visual Studio remoto (que mantiene el enlace con nuestro Visual Studio WSL local):
&lt;img src="https://cmas.dev/img/posts/2022/10/19/6.png" alt="">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Aplicación multilingüe en MAUI</title><link>https://cmas.dev/posts/2022-10-05-multi-language-app-maui/</link><pubDate>Wed, 05 Oct 2022 17:48:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-10-05-multi-language-app-maui/</guid><description>&lt;p>En este artículo mostraré cómo crear una aplicación &lt;strong>.NET MAUI&lt;/strong> multilingüe sobre &lt;strong>Windows 11&lt;/strong> utilizando archivos de recursos.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22621&lt;/strong>&lt;/em>&lt;/p>
&lt;p>En un &lt;a href="https://cmas.dev/posts/2022-09-21-data-binding-in-maui/">artículo anterior&lt;/a> hemos creado un proyecto donde vimos cómo utilizar la técnica de &lt;em>Data binding&lt;/em> (usaremos ese mismo proyecto).&lt;/p>
&lt;p>Necesitamos crear archivos de recuros y enlazarlos al XAML para que éstos funcionen. Vamos a enfocarnos en el idioma inglés (ya que el proyecto viene así).&lt;/p>
&lt;h2 id="crear-archivos-de-recursos">Crear archivos de recursos&lt;/h2>
&lt;p>Para empezar con la localización,&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Crear una carpeta con el nombre &lt;em>Localization&lt;/em> (puede tener cualquier nombre) y colocarla dentro de la carpeta &lt;em>Resources&lt;/em>:
&lt;img src="https://cmas.dev/img/posts/2022/10/05/1.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Dentro de dicha carpeta, se crear el archivo de tipo Recurso(.resx):&lt;br>
&lt;img src="https://cmas.dev/img/posts/2022/10/05/2.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Completamos las filas con los registros necesarios (deben ser nombres descriptivos sin espacios ni caracteres especiales):
&lt;img src="https://cmas.dev/img/posts/2022/10/05/3.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Repetimos el paso 2, pero le colocamos las iniciales del idioma que queremos utilizar (en mi caso &lt;strong>es&lt;/strong>) y completamos las fials con las traducciones:
&lt;img src="https://cmas.dev/img/posts/2022/10/05/4.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>¡Listo! Es hora de código &lt;strong>XAML&lt;/strong> y &lt;strong>C#&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="localizar-aplicaciones-net-maui">Localizar aplicaciones .NET MAUI&lt;/h2>
&lt;p>Aquí es donde se realiza el trabajo, los cuatro(4) primeros pasos corresponden a configuraciones generales, es decir, que se realizan de la misma forma para todos los proyectos multilingüe que queramos. Luego, el código &lt;strong>XAML&lt;/strong> ya puede variar según cada caso.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Instalar el paquete &lt;strong>NuGet&lt;/strong> con el nombre &lt;strong>Microsoft.Extensions.Localization&lt;/strong> (lo puedes descargar &lt;a href="https://www.nuget.org/packages/Microsoft.Extensions.Localization">aquí&lt;/a>):&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Crear (en la raíz del proyecto) el archivo &lt;strong>ServiceHelper.cs&lt;/strong> que permite identificar cada plataforma y obtener el servicio (relacionado a la &lt;em>Dependency Injection&lt;/em>):&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">namespace Maui_DataBinding
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public static class ServiceHelper
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public static TService GetService&amp;lt;TService&amp;gt;() =&amp;gt; Current.GetService&amp;lt;TService&amp;gt;();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public static IServiceProvider Current =&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#if WINDOWS
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> MauiWinUIApplication.Current.Services;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#elif ANDROID
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> MauiApplication.Current.Services;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#elif IOS || MACCATALYST
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> MauiUIApplicationDelegate.Current.Services;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#else
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> null;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#endif
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Crear una extension de método para poder utilizarla en cualquier página &lt;strong>XAML&lt;/strong> que necesitemos:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">using Maui_DataBinding.Resources.Localization;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">using Microsoft.Extensions.Localization;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">namespace Maui_DataBinding
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [ContentProperty(nameof(Key))]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public class LocalizeExtension : IMarkupExtension
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> IStringLocalizer&amp;lt;AppLocalize&amp;gt; _localizer;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public string Key { get; set; } = string.Empty;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public LocalizeExtension()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> _localizer = ServiceHelper.GetService&amp;lt;IStringLocalizer&amp;lt;AppLocalize&amp;gt;&amp;gt;();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public object ProvideValue(IServiceProvider serviceProvider)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> string localizedText = _localizer[Key];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return localizedText;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> object IMarkupExtension.ProvideValue(IServiceProvider serviceProvider) =&amp;gt; ProvideValue(serviceProvider);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Por último, el el archivo &lt;strong>MauiProgram.cs&lt;/strong> se agregar el servicio de Localización:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">builder.Services.AddLocalization();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>La clase completa, queda así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Extensions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Logging&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">namespace&lt;/span> &lt;span class="n">Maui_DataBinding&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="k">static&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">MauiProgram&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="k">static&lt;/span> &lt;span class="n">MauiApp&lt;/span> &lt;span class="n">CreateMauiApp&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">builder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">MauiApp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CreateBuilder&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">builder&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">UseMauiApp&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">App&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">ConfigureFonts&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fonts&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fonts&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddFont&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;OpenSans-Regular.ttf&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;OpenSansRegular&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fonts&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddFont&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;OpenSans-Semibold.ttf&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;OpenSansSemibold&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddLocalization&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#if DEBUG&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Logging&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddDebug&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#endif&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Build&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>Modificamos nuestro código XAML, donde agregamos el espacio de nombre de nuestro proyecto y agregamos las extensiones en las propiedades de texto:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34; ?&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;ContentPage xmlns=&amp;#34;http://schemas.microsoft.com/dotnet/2021/maui&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2009/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:local=&amp;#34;clr-namespace:Maui_DataBinding&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Class=&amp;#34;Maui_DataBinding.MainPage&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ScrollView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VerticalStackLayout
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Spacing=&amp;#34;25&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Padding=&amp;#34;30,0&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> VerticalOptions=&amp;#34;Center&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Image
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Source=&amp;#34;dotnet_bot.png&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.Description=&amp;#34;{local:Localize Key=BotImage}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HeightRequest=&amp;#34;200&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;{local:Localize Key=HelloText}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.HeadingLevel=&amp;#34;Level1&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FontSize=&amp;#34;32&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;{local:Localize Key=WelcomeText}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.HeadingLevel=&amp;#34;Level2&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.Description=&amp;#34;{local:Localize Key=WelcomeDescriptionText}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FontSize=&amp;#34;18&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Button
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Name=&amp;#34;CounterBtn&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;{Binding CounterBtnText}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.Hint=&amp;#34;{local:Localize Key=ButtonTextHint}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Clicked=&amp;#34;OnCounterClicked&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Button
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Name=&amp;#34;LangBtn&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;Change language&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Clicked=&amp;#34;OnLangBtnClicked&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VerticalStackLayout&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/ScrollView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/ContentPage&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>En vista, que hemos modificado el código &lt;strong>C#&lt;/strong> para la técnica de &lt;em>Data Binding&lt;/em>, debemos modificarla también:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">public string CounterBtnText
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> get
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (Count == 0)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return AppLocalize.ButtonTextInitial;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (Count == 1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return AppLocalize.ButtonTextSingular.Replace(&amp;#34;{Count}&amp;#34;, Count.ToString());
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return AppLocalize.ButtonTextPlural.Replace(&amp;#34;{Count}&amp;#34;, Count.ToString());
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="7">
&lt;li>&lt;strong>EXTRA&lt;/strong> aquí se muestra como cambiar el idioma sin reiniciar la aplicación:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">private void OnLangBtnClicked(object sender, EventArgs e)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> (App.Current as App).MainPage.Dispatcher.Dispatch(() =&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo(&amp;#34;es-PY&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Thread.CurrentThread.CurrentUICulture = new System.Globalization.CultureInfo(&amp;#34;es-PY&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> (App.Current as App).MainPage = new AppShell();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="8">
&lt;li>
&lt;p>Ejecutamos la aplicación presionando &lt;em>F5&lt;/em> y veremos en Inglés así:
&lt;img src="https://cmas.dev/img/posts/2022/10/05/5.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Hacemo clic en el botón &amp;ldquo;Change language&amp;rdquo; y debemos ver el español:
&lt;img src="https://cmas.dev/img/posts/2022/10/05/6.png" alt="">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Aplicando modelo MVVM con MAUI</title><link>https://cmas.dev/posts/2022-09-28-mvvm-in-maui/</link><pubDate>Wed, 28 Sep 2022 21:06:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-09-28-mvvm-in-maui/</guid><description>&lt;p>En este artículo mostraré cómo aplicar el modelo MVVM en &lt;strong>.NET MAUI&lt;/strong> sobre &lt;strong>Windows 11&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25206&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;strong>MVVM&lt;/strong> en &lt;strong>.NET MAUI&lt;/strong> para &lt;strong>Windows&lt;/strong> es un patrón que permite crear aplicaciones de escritorio con una interfaz de usuario basada en &lt;strong>XAML&lt;/strong> y una lógica de negocio separada en el modelo de vista. &lt;strong>MVVM&lt;/strong> es un patrón bien establecido en &lt;strong>.NET&lt;/strong> y hay muchos marcos que facilitan su desarrollo. Uno de ellos es el &lt;strong>MVVM Toolkit&lt;/strong>, que es parte del &lt;strong>.NET Community Toolkit&lt;/strong>.&lt;/p>
&lt;p>Así que me puse a leer la documentación oficial (deberías hacer lo mismo) que se encuentra &lt;a href="https://learn.microsoft.com/es-es/dotnet/architecture/maui/mvvm">aquí&lt;/a>.&lt;/p>
&lt;p>Para el ejemplo, crearemos una lista de &amp;ldquo;Alumnos&amp;rdquo; (Nombre y Apellido con fotos) que aplicaremos en un modelo &lt;em>MVVM&lt;/em>.&lt;/p>
&lt;h2 id="creando-el-código">Creando el código&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Descargamos el paquete &lt;strong>NuGet&lt;/strong> para &lt;em>MVVM&lt;/em> que se encuentra &lt;a href="https://www.nuget.org/packages/CommunityToolkit.Mvvm/">aquí&lt;/a>(obviamente es mejor hacerlo desde Visual Studio 2022) y lo instalamos.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Agregamos una nueva clase con el nombre &lt;strong>Alumno.cs&lt;/strong> y lo colocamos en la raiz del proyecto con el siguiente código:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">namespace MauiMvvm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public class Alumno
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public string FirstName { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public string LastName { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public string ImageUrl { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Agregamos una nueva clase con el nombre &lt;strong>AlumnoViewModel.cs&lt;/strong> y lo colocamos en la raiz del proyecto con el siguiente código:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">using CommunityToolkit.Mvvm.ComponentModel;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">namespace MauiMvvm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [INotifyPropertyChanged]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public partial class AlumnoViewModel
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [ObservableProperty]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public List&amp;lt;Alumno&amp;gt; alumnos = new List&amp;lt;Alumno&amp;gt;();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public AlumnoViewModel()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> alumnos.Add(new Alumno() { FirstName = &amp;#34;Eliseo&amp;#34;, LastName = &amp;#34;Ortega&amp;#34;, ImageUrl = &amp;#34;mugpy.jpg&amp;#34; });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> alumnos.Add(new Alumno() { FirstName = &amp;#34;Dulce&amp;#34;, LastName = &amp;#34;Barrios&amp;#34;, ImageUrl = &amp;#34;profile.jpg&amp;#34; });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> alumnos.Add(new Alumno() { FirstName = &amp;#34;Microsoft&amp;#34;, LastName = &amp;#34;DotNet&amp;#34;, ImageUrl = &amp;#34;dotnet_bot.png&amp;#34; });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> alumnos.Add(new Alumno() { FirstName = &amp;#34;Christian&amp;#34;, LastName = &amp;#34;Amado&amp;#34;, ImageUrl = &amp;#34;amado.jpg&amp;#34; });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>En la página principal &lt;strong>MainPage.xaml&lt;/strong> generamos una lista:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34; ?&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;ContentPage xmlns=&amp;#34;http://schemas.microsoft.com/dotnet/2021/maui&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2009/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Class=&amp;#34;MauiMvvm.MainPage&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ListView ItemsSource=&amp;#34;{Binding Alumnos}&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ListView.ItemTemplate&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;DataTemplate&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ViewCell&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid Padding=&amp;#34;10&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RowDefinition Height=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RowDefinition Height=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid.ColumnDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ColumnDefinition Width=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ColumnDefinition Width=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid.ColumnDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Image Grid.RowSpan=&amp;#34;2&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Source=&amp;#34;{Binding ImageUrl}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Aspect=&amp;#34;AspectFill&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HeightRequest=&amp;#34;60&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> WidthRequest=&amp;#34;60&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label Grid.Column=&amp;#34;1&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;{Binding FirstName}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FontAttributes=&amp;#34;Bold&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label Grid.Row=&amp;#34;1&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Grid.Column=&amp;#34;1&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;{Binding LastName}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FontAttributes=&amp;#34;Italic&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> VerticalOptions=&amp;#34;End&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/ViewCell&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/DataTemplate&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/ListView.ItemTemplate&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/ListView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/ContentPage&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>El código &lt;strong>C#&lt;/strong> que se encuentra en &lt;strong>MainPage.xaml.cs&lt;/strong> se encuentra aquí:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">namespace MauiMvvm;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">public partial class MainPage : ContentPage
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> int count = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public MainPage()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> InitializeComponent();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> BindingContext = new AlumnoViewModel();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>Ejecutamos el código con &lt;em>F5&lt;/em> y&amp;hellip;
&lt;img src="https://cmas.dev/img/posts/2022/09/28/1.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>De esta manera implementamos el modelo MVVM de manera muy rápida y sencilla gracias al paquete &lt;strong>MVVM Toolkit&lt;/strong>.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Data Binding en MAUI</title><link>https://cmas.dev/posts/2022-09-21-data-binding-in-maui/</link><pubDate>Wed, 21 Sep 2022 20:32:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-09-21-data-binding-in-maui/</guid><description>&lt;p>En este artículo mostraré cómo utilizar la técnica de &lt;em>Data Binding&lt;/em> en una aplicación &lt;strong>.NET MAUI&lt;/strong> sobre &lt;strong>Windows 11&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25206&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;em>Data binding&lt;/em> en &lt;strong>XAML&lt;/strong> es un mecanismo que permite vincular propiedades de dos objetos dentro de una página, o entre objetos visuales y datos subyacentes. Se declara usando una extensión de marcado llamada &lt;strong>Binding&lt;/strong>. La declaración de &lt;em>data binding&lt;/em> consiste en una serie de cláusulas que siguen la palabra clave &lt;strong>Binding&lt;/strong> y se separan por comas (,). Las cláusulas pueden estar en cualquier orden y existen muchas combinaciones posibles.&lt;/p>
&lt;h2 id="preparar-el-proyecto">Preparar el proyecto&lt;/h2>
&lt;p>Primeramente, debemos crear el proyecto &lt;strong>.NET MAUI&lt;/strong> y tenerlo listo para la plataforma &lt;strong>Windows 11&lt;/strong>:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Creamos el proyecto en Visual Studio 2022:
&lt;img src="https://cmas.dev/img/posts/2022/09/21/1.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Colocamos un nombre descriptivo al proyecto nuevo:
&lt;img src="https://cmas.dev/img/posts/2022/09/21/2.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Seleccionamos el .NET Core que deseamos utilizar:
&lt;img src="https://cmas.dev/img/posts/2022/09/21/3.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>En el archivo &lt;strong>MainPage.xaml&lt;/strong> verificamos el código &lt;strong>XAML&lt;/strong>:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34; ?&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;ContentPage xmlns=&amp;#34;http://schemas.microsoft.com/dotnet/2021/maui&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2009/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Class=&amp;#34;Maui_DataBinding.MainPage&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ScrollView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VerticalStackLayout
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Spacing=&amp;#34;25&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Padding=&amp;#34;30,0&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> VerticalOptions=&amp;#34;Center&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Image
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Source=&amp;#34;dotnet_bot.png&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.Description=&amp;#34;Cute dot net bot waving hi to you!&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HeightRequest=&amp;#34;200&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;Hello, World!&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.HeadingLevel=&amp;#34;Level1&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FontSize=&amp;#34;32&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;Welcome to .NET Multi-platform App UI&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.HeadingLevel=&amp;#34;Level2&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.Description=&amp;#34;Welcome to dot net Multi platform App U I&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FontSize=&amp;#34;18&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Button
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Name=&amp;#34;CounterBtn&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;Click me&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.Hint=&amp;#34;Counts the number of times you click&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Clicked=&amp;#34;OnCounterClicked&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VerticalStackLayout&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/ScrollView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/ContentPage&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>Prestemos atención al código del botón &lt;strong>XAML&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;Button
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Name=&amp;#34;CounterBtn&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;Click me&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.Hint=&amp;#34;Counts the number of times you click&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Clicked=&amp;#34;OnCounterClicked&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>También verifiquemos al código del botón &lt;strong>C#&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">namespace Maui_DataBinding;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">public partial class MainPage : ContentPage
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> int count = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public MainPage()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> InitializeComponent();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private void OnCounterClicked(object sender, EventArgs e)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> count++;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (count == 1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CounterBtn.Text = $&amp;#34;Clicked {count} time&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> else
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CounterBtn.Text = $&amp;#34;Clicked {count} times&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticScreenReader.Announce(CounterBtn.Text);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="7">
&lt;li>Ejecutamos el código con &lt;em>F5&lt;/em> y veremos la aplicación Windows:
&lt;img src="https://cmas.dev/img/posts/2022/09/21/4.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>Bien hasta aquí no hay nada extraño en ningún lado.&lt;/p>
&lt;h2 id="databinding-en-net-maui">DataBinding en .NET MAUI&lt;/h2>
&lt;p>&lt;strong>Data binding&lt;/strong> es una técnica que permite vincular dos propiedades entre dos objetos, al menos uno de los cuales suele ser un objeto de interfaz de usuario. Estos dos objetos se llaman el destino y la fuente. &lt;strong>Data binding&lt;/strong> facilita la actualización automática de los datos entre los objetos.&lt;/p>
&lt;p>Ahora vamos a adaptar nuestro código para que nuestra técnica funcione.&lt;/p>
&lt;ol>
&lt;li>En el constructor de la clase (en MainPage.xaml.cs) colocaremos el contexto de enlace:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">public MainPage()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> InitializeComponent();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> BindingContext = this;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Debemos crear una nueva propiedad (para hacer uso del atributo &lt;em>count&lt;/em>):&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">int count = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public int Count
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> get
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return count;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> set
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> count = value;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> OnPropertyChanged();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> OnPropertyChanged(&amp;#34;CounterBtnText&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Ahora, debemos colocar la lógica en una propiedad para que se produzca el cambio (en este caso la propeidad será &lt;strong>CounterBtnText&lt;/strong>):&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">public string CounterBtnText
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> get
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (Count == 0)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return &amp;#34;Click Here&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (Count == 1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return $&amp;#34;Clicked {Count} time&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return $&amp;#34;Clicked {Count} times&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Nuestro evento &lt;strong>Click&lt;/strong> del botón sufre modificaciones debido a que la lógica está en la nueva propiedad:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">private void OnCounterClicked(object sender, EventArgs e)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Count++;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>Por último modificamos nuestra definición del botón en el código &lt;strong>XAML&lt;/strong> dentro del archivo &lt;strong>MainPage.xaml&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;Button
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Name=&amp;#34;CounterBtn&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;{Binding CounterBtnText}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.Hint=&amp;#34;Counts the number of times you click&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Clicked=&amp;#34;OnCounterClicked&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>Ejecutamos la aplicación y nos queda así:
&lt;img src="https://cmas.dev/img/posts/2022/09/21/5.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Primeros pasos con XAML en MAUI</title><link>https://cmas.dev/posts/2022-09-14-first-step-xaml-in-maui/</link><pubDate>Wed, 14 Sep 2022 23:18:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-09-14-first-step-xaml-in-maui/</guid><description>&lt;p>En este artículo mostraré cómo iniciar los pasos con el lenguaje &lt;strong>XAML&lt;/strong> en &lt;strong>.NET MAUI&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25201&lt;/strong>&lt;/em>&lt;/p>
&lt;p>En este pequeño artículo vamos a utilizar controles de Telerik para &lt;strong>.NET MAUI&lt;/strong>. En un &lt;a href="">artículo anterior&lt;/a> vimos cómo crear una aplicación &lt;strong>.NET MAUI&lt;/strong> y aquí haremos otra basada en otra plantilla (&lt;a href="https://www.telerik.com/support/whats-new/maui-ui/release-history/telerik-ui-for-net-maui-%28version-3-0-0%29">Telerik&lt;/a>).
&lt;img src="https://cmas.dev/img/posts/2022/09/14/1.png" alt="">&lt;/p>
&lt;h2 id="telerik-sidedrawer">Telerik SideDrawer&lt;/h2>
&lt;p>Este control (conocido como Menú Hamburguesa) se utiliza para hacer la navegación muy amigable debido a que el menú queda al costado de nuestro diseño y permite una visualización completa del mismo. En Windows 11 se refiere a &lt;a href="https://learn.microsoft.com/en-us/windows/apps/design/controls/navigationview">NavigationView&lt;/a>.&lt;/p>
&lt;p>La definición del control, en lenguaje &lt;strong>XAML&lt;/strong>, sería:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;ContentPage xmlns=&amp;#34;http://schemas.microsoft.com/dotnet/2021/maui&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2009/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:telerik=&amp;#34;http://schemas.telerik.com/2022/xaml/maui&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Class=&amp;#34;TelerikMauiApp1.MainPage&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ScrollView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;telerik:RadSideDrawer x:Name=&amp;#34;drawer&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> DrawerLength=&amp;#34;200&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;telerik:RadSideDrawer.MainContent&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label Text=&amp;#34;Main content on CMASDEV BLOG&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/telerik:RadSideDrawer.MainContent&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;telerik:RadSideDrawer.DrawerContent&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VerticalStackLayout Spacing=&amp;#34;10&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Padding=&amp;#34;10, 10, 0, 0&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VerticalStackLayout.Resources&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Style x:Key=&amp;#34;DefaultButtonStyle&amp;#34; TargetType=&amp;#34;Button&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;WidthRequest&amp;#34; Value=&amp;#34;180&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;HeightRequest&amp;#34; Value=&amp;#34;40&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;BackgroundColor&amp;#34; Value=&amp;#34;#b1b1b1&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;TextColor&amp;#34; Value=&amp;#34;Black&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Style&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VerticalStackLayout.Resources&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Button Text=&amp;#34;Mail&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Style=&amp;#34;{StaticResource DefaultButtonStyle}&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Button Text=&amp;#34;Calendar&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Style=&amp;#34;{StaticResource DefaultButtonStyle}&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Button Text=&amp;#34;People&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Style=&amp;#34;{StaticResource DefaultButtonStyle}&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Button Text=&amp;#34;Tasks&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Style=&amp;#34;{StaticResource DefaultButtonStyle}&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VerticalStackLayout&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/telerik:RadSideDrawer.DrawerContent&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/telerik:RadSideDrawer&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/ScrollView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/ContentPage&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Con esta definición declarativa logramos que el control tenga todos los detalles necesarios para su funcionamiento.&lt;/p>
&lt;p>Visualmente, el resultado del código XAML es:
&lt;img src="https://cmas.dev/img/posts/2022/09/14/2.png" alt="">&lt;br>
&lt;img src="https://cmas.dev/img/posts/2022/09/14/3.png" alt="">&lt;/p>
&lt;p>Si realmente necesitas aprender &lt;strong>XAML&lt;/strong>, la documentación de Microsft &lt;a href="https://learn.microsoft.com/es-es/dotnet/maui/xaml/fundamentals/get-started?view=net-maui-7.0">aquí&lt;/a> está muy completa.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Mi primera aplicación con Windows App SDK</title><link>https://cmas.dev/posts/2022-09-07-first-windows-app-reactjs/</link><pubDate>Wed, 07 Sep 2022 19:14:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-09-07-first-windows-app-reactjs/</guid><description>&lt;p>En este artículo mostraré cómo crear una aplicación con &lt;strong>Windows App SDK&lt;/strong> en &lt;strong>React&lt;/strong>. &lt;em>Ojo&lt;/em>: Es mi primera prueba con React (nunca lo he usado).&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25188&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Existen algunas opciones válidas para crear aplicaciones para Windows 11, entre ellas, las siguientes:&lt;/p>
&lt;ul>
&lt;li>WinUI (más adelante entraremos en detalle en esto).&lt;/li>
&lt;li>.NET MAUI (que me agrada bastante)&lt;/li>
&lt;li>PWA (Progressive WEb Applications)&lt;/li>
&lt;li>React para Windows (que usaremos en este artículo)&lt;/li>
&lt;/ul>
&lt;p>Como es la primera vez que trabaremos con React, debemos preparar el entorno.&lt;/p>
&lt;h2 id="instalación-de-react-native-for-windows">Instalación de React Native for Windows&lt;/h2>
&lt;ol>
&lt;li>Creamos la carpeta en el directorio de preferencia.&lt;/li>
&lt;li>Accedemos a él desde Power Shell:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd C:\Users\chris\source\repos\LocalOnly\ReactNativeWin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npx react-native init TestApp --template react-native@^0.70.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>La instalación quedará algo así:
&lt;img src="https://cmas.dev/img/posts/2022/09/07/1.png" alt="">&lt;/li>
&lt;li>Ir a la carpeta creada:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd TestApp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>Instalar la extensión de Windows:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npx react-native-windows-init --overwrite
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>Creamos el enlace con las dependencias:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npx react-native autolink-windows
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="7">
&lt;li>Fin de la instalación&lt;/li>
&lt;/ol>
&lt;h2 id="creación-de-aplicación">Creación de aplicación&lt;/h2>
&lt;ol>
&lt;li>Abrir un proyecto existente desde Visual studoo 2022:
&lt;img src="https://cmas.dev/img/posts/2022/09/07/2.png" alt="">&lt;/li>
&lt;li>En Power Shell, escribir lo siguiente (para arrancar el servidorcillo):&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Ejecutamos la aplicación desde Visual Studio 2022 (la compilación demora un poco dependiendo de la capacidad del equipo de desarrollo):
&lt;img src="https://cmas.dev/img/posts/2022/09/07/3.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>Y con esto tenemos nuestra primera aplciación &lt;strong>Windows App SDK&lt;/strong> con &lt;strong>React&lt;/strong>.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Preparando entorno para desarrollo con Windows App SDK</title><link>https://cmas.dev/posts/2022-08-31-preparing-windows-app-sdk/</link><pubDate>Wed, 31 Aug 2022 22:36:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-08-31-preparing-windows-app-sdk/</guid><description>&lt;p>En este artículo mostraré cómo preparar el entorno para el desarrollo de aplicaciones con &lt;strong>Windows App SDK&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25188&lt;/strong>&lt;/em>&lt;/p>
&lt;p>La preparación del entorno es simple para este caso, sólo debemos instalar el SDK como tal y la extensión para Visual Studio 2022 (para C# en este caso).&lt;/p>
&lt;h2 id="pasos-para-la-instalación">Pasos para la instalación&lt;/h2>
&lt;p>Primeramente, debemos instalar el SDK desde el sitio oficial de Microsoft:&lt;/p>
&lt;ol>
&lt;li>Descargamos el SDK (la versión actual es 1.1.5) desde &lt;a href="https://aka.ms/windowsappsdk/1.1/1.1.5/windowsappruntimeinstall-x64.exe">aquí&lt;/a>&lt;/li>
&lt;li>Descargamos la extensión de C# para Visual Studio 2022 desde &lt;a href="https://aka.ms/windowsappsdk/1.1/1.1.5/WindowsAppSDK.Cs.Extension.Dev17.Standalone.vsix">aquí&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>Con estos pasos hemos cumplido el objetivo, pero para asegurarnos debemos ir al instalador de Visual Studio 2022 y verificar que esté seleccionada la opción de .NET Desktop Applications:
&lt;img src="https://cmas.dev/img/posts/2022/08/31/1.png" alt="">&lt;/p>
&lt;p>Con esta opción podemos empezar a desarrollar aplicaciones para Windows 11 (10 también pero ya es obsoleto jaja)&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Mi Primera Aplicación MAUI</title><link>https://cmas.dev/posts/2022-08-24-first-app-in-maui/</link><pubDate>Wed, 24 Aug 2022 21:04:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-08-24-first-app-in-maui/</guid><description>&lt;p>En este artículo mostraré cómo crear la primera aplicación &lt;strong>.NET MAUI&lt;/strong> preparada para Android y Windows 11.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25188&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Para crear un proyecto .NET MAUI no se necesitan demasiados pasos para lograr el objetivo, basta con seguir estos sencillos pasos que se muestran a continuación.&lt;/p>
&lt;ol>
&lt;li>Crear un nuevo proyecto:
&lt;img src="https://cmas.dev/img/posts/2022/08/24/1.png" alt="">&lt;/li>
&lt;li>Colocar un nombre descriptivo:
&lt;img src="https://cmas.dev/img/posts/2022/08/24/2.png" alt="">&lt;/li>
&lt;li>Seleccionar el Framework y creamos el proyecto:
&lt;img src="https://cmas.dev/img/posts/2022/08/24/3.png" alt="">&lt;/li>
&lt;li>Verificamos la estructura del proyecto y las plataformas habilitadas:
&lt;img src="https://cmas.dev/img/posts/2022/08/24/4.png" alt="">&lt;/li>
&lt;li>Ejecutamos la aplicación en Windows (usa Windows App SDK):
&lt;img src="https://cmas.dev/img/posts/2022/08/24/5.png" alt="">&lt;/li>
&lt;li>Cambiamos el escenario a un emulador Android:
&lt;img src="https://cmas.dev/img/posts/2022/08/24/6.png" alt="">&lt;/li>
&lt;li>Lo ejecutamos para probar:
&lt;img src="https://cmas.dev/img/posts/2022/08/24/7.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>¡Listo! Así hemos creado nuestro proyecto &lt;strong>.NET MAUI&lt;/strong> sin demasiado esfuerzo.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Estructura básica de un proyecto MAUI</title><link>https://cmas.dev/posts/2022-08-17-basic-struct-of-maui-project/</link><pubDate>Wed, 17 Aug 2022 18:07:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-08-17-basic-struct-of-maui-project/</guid><description>&lt;p>En este artículo mostraré cómo es la estructura básica de un proyecto &lt;strong>.NET MAUI&lt;/strong> .&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25179&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Primeramente, debemos conocer la estructura en sí de &lt;strong>.NET MAUI&lt;/strong> que se encuentra en el sitio oficial de Microsoft. La documentación oficial se encuentra &lt;a href="https://learn.microsoft.com/es-es/dotnet/maui/what-is-maui?view=net-maui-7.0">aquí&lt;/a>&lt;/p>
&lt;p>Funcionalmente, .NET MAUI opera de la siguiente manera:
&lt;img src="https://cmas.dev/img/posts/2022/08/17/1.png" alt="">&lt;/p>
&lt;h2 id="estructura-del-proyecto-net-maui">Estructura del proyecto .NET MAUI&lt;/h2>
&lt;p>El proyecto que se crea en &lt;strong>.NET MAUI&lt;/strong> posee la siguiente estructura:
&lt;img src="https://cmas.dev/img/posts/2022/08/17/2.png" alt="">&lt;/p>
&lt;h3 id="dependencias-dependencies">Dependencias (Dependencies)&lt;/h3>
&lt;p>Las dependencias son los paquetes (librerías) disponibles para cada plataforma soportada en &lt;strong>.NET MAUI&lt;/strong>.&lt;/p>
&lt;p>En este caso serían:&lt;/p>
&lt;ul>
&lt;li>Android.&lt;/li>
&lt;li>iOS.&lt;/li>
&lt;li>Mac Catalyst.&lt;/li>
&lt;li>Windows 10 (pues tiene en cuenta la versión mínima soportada).&lt;/li>
&lt;/ul>
&lt;h3 id="plataformas-platforms">Plataformas (Platforms)&lt;/h3>
&lt;p>Esta carpeta indica las configuraciones específicas de cada plataforma. Cada una de ellas posee su propia configuración dependiendo de las necesidades de la aplicación.&lt;/p>
&lt;h3 id="recursos-resources">Recursos (Resources)&lt;/h3>
&lt;p>Son los recursos compartidos entre las plataformas, de esta manera se pueden reutilizar elementos en todas las plataformas sin repetirlos.)&lt;/p>
&lt;p>Con esta estructura definida, creamos y desarrollamos las aplicaciones en &lt;strong>.NET MAUI&lt;/strong>&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Instalando .NET MAUI en Visual Studio 2022</title><link>https://cmas.dev/posts/2022-08-10-installing-maui-on-visual-studio-2022/</link><pubDate>Wed, 10 Aug 2022 19:19:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-08-10-installing-maui-on-visual-studio-2022/</guid><description>&lt;p>En este artículo mostraré cómo instalar los componentes necesarios para el desarrollo en &lt;strong>.NET MAUI&lt;/strong> para Windows 11 y Android.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25179&lt;/strong>&lt;/em>&lt;/p>
&lt;p>La instalación de componentes en Visual Studio siempre ha sido sencilla y esta no es la excepción.&lt;/p>
&lt;h2 id="desinstalar-visual-studio-2022-preview">Desinstalar Visual Studio 2022 Preview&lt;/h2>
&lt;p>Ya estuvimos probando .NET MAUI desde hace rato así que es tiempo de eliminar la versión Preview e instalar la versión oficial. Para ellos debemos realizar dos pasos sencillos:&lt;/p>
&lt;ol>
&lt;li>Ir a &lt;strong>Panel de control&lt;/strong> &amp;gt; &lt;strong>Desinstalar programas&lt;/strong>.&lt;/li>
&lt;li>Seleccionar &lt;strong>Microsoft Visual Studio 2022 Preview&lt;/strong> y listo.&lt;/li>
&lt;/ol>
&lt;h2 id="instalar-visual-studio-2022">Instalar Visual Studio 2022&lt;/h2>
&lt;p>Instalar Visual Studio 2022 es bien sencillo.&lt;/p>
&lt;ol>
&lt;li>Descargar el instalador nuevo &lt;a href="https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=Professional&amp;amp;channel=Release&amp;amp;version=VS2022&amp;amp;source=VSLandingPage&amp;amp;cid=2030&amp;amp;passive=false">aquí&lt;/a>&lt;/li>
&lt;li>Ejecutar el instalador y seguir los pasos en pantalla hasta la selección de componente, allí debemos seleccionar la opción correspondiente a &lt;strong>.NET MAUI&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/08/10/1.png" alt="">&lt;/li>
&lt;li>Aguardamos que finalice la instalación y listo.&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>.NET MAUI&lt;/strong> instalará la última API de Android disponible y preparará Windows 11 para que podamos ejecutar nuestra Applicación.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>MAUI ¿Qué? ¿Por qué? ¿Para qué?</title><link>https://cmas.dev/posts/2022-08-03-maui-some-questions/</link><pubDate>Wed, 03 Aug 2022 22:12:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-08-03-maui-some-questions/</guid><description>&lt;p>En este artículo intentaré explicar o dar a entender que es &lt;strong>.NET MAUI&lt;/strong> y otras cuestiones relacionada a esta plaforma que básicamente reemplaza al viejo conocido de &lt;strong>Xamarin.Forms&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25174&lt;/strong>&lt;/em>&lt;/p>
&lt;h2 id="qué-es-net-maui-flutter-es-mejor">¿Qué es .NET MAUI? Flutter es mejor&amp;hellip;&lt;/h2>
&lt;p>&lt;strong>.NET MAUI&lt;/strong> es un marco de trabajo multiplataforma para crear aplicaciones nativas móviles y de escritorio con C# y XAML. Con &lt;strong>.NET MAUI&lt;/strong>, se puede desarrollar aplicaciones que pueden ejecutarse en &lt;em>&lt;strong>Android&lt;/strong>&lt;/em>, &lt;em>&lt;strong>iOS&lt;/strong>&lt;/em>, &lt;em>&lt;strong>macOS&lt;/strong>&lt;/em> y &lt;em>&lt;strong>Windows&lt;/strong>&lt;/em> desde un solo código compartido. Es la evolución de &lt;em>Xamarin.Forms&lt;/em> que amplía las capacidades más allá de los dispositivos móviles.&lt;/p>
&lt;p>&lt;strong>.NET MAUI&lt;/strong> es para desarrolladores que quieren:&lt;/p>
&lt;ol>
&lt;li>Escribir aplicaciones multiplataforma en XAML y C#, desde un solo código compartido en Visual Studio.&lt;/li>
&lt;li>Compartir el diseño y la disposición de la interfaz de usuario entre plataformas.&lt;/li>
&lt;li>Compartir código, pruebas y lógica de negocio entre plataformas.&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>.NET MAUI&lt;/strong> proporciona una colección de controles que se pueden usar para mostrar datos, iniciar acciones, indicar actividad, mostrar colecciones, elegir datos y más. Además de una colección de controles, &lt;strong>.NET MAUI&lt;/strong> también ofrece: Un motor de diseño elaborado para diseñar páginas. Un proyecto único compartido que puede apuntar a &lt;em>&lt;strong>Android&lt;/strong>&lt;/em>, &lt;em>&lt;strong>iOS&lt;/strong>&lt;/em>, &lt;em>&lt;strong>macOS&lt;/strong>&lt;/em> y &lt;em>&lt;strong>Windows&lt;/strong>&lt;/em>. Una selección simplificada del objetivo de depuración para ejecutar las aplicaciones &lt;strong>.NET MAUI&lt;/strong>.&lt;/p>
&lt;p>Ya escuché comentarios sobre ¡&lt;em>Flutter&lt;/em> es mucho mejor!. Pero ¿Es realmente así?&lt;/p>
&lt;p>No hay una respuesta definitiva a esta pregunta, ya que depende de las preferencias y necesidades de cada desarrollador y proyecto. Sin embargo, se pueden mencionar algunas diferencias y ventajas de cada plataforma:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Flutter&lt;/strong> usa &lt;strong>Dart&lt;/strong>, un lenguaje desarrollado por &lt;em>Google&lt;/em>, mientras que &lt;strong>.NET MAUI&lt;/strong> usa &lt;strong>C#&lt;/strong>, un lenguaje ampliamente usado en el ecosistema &lt;strong>.NET&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Flutter&lt;/strong> ofrece una interfaz de usuario más rápida y fluida, gracias a su compilación anticipada que reduce el tamaño del código compilado. Además, &lt;strong>Flutter&lt;/strong> soporta &lt;em>Material Design&lt;/em> para &lt;em>&lt;strong>Android&lt;/strong>&lt;/em> y &lt;em>Cupertino&lt;/em> para &lt;em>&lt;strong>iOS&lt;/strong>&lt;/em>, lo que permite crear aplicaciones con aspecto nativo para cada plataforma.&lt;/li>
&lt;li>&lt;strong>.NET MAUI&lt;/strong> es una buena opción para los desarrolladores que ya están familiarizados con la plataforma &lt;strong>.NET&lt;/strong> y quieren crear aplicaciones multiplataforma usando &lt;strong>C#&lt;/strong>. También ofrece una mayor integración con &lt;em>Visual Studio&lt;/em> y otras herramientas de desarrollo.&lt;/li>
&lt;li>&lt;strong>Flutter&lt;/strong> soporta el desarrollo web y &lt;em>Linux&lt;/em>, mientras que &lt;strong>.NET MAUI&lt;/strong> no. Sin embargo, los desarrolladores de &lt;strong>.NET MAUI&lt;/strong> pueden utilizar el marco &lt;em>&lt;strong>Blazor&lt;/strong>&lt;/em> para proporcionar un puente para usar recursos de &lt;strong>MAUI&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;p>En conclusión, ambas plataformas tienen sus pros y contras, y la elección dependerá de factores como el lenguaje de programación preferido, el tipo de aplicación que se quiere crear, el público objetivo y el presupuesto disponible.&lt;/p>
&lt;h2 id="qué-puedo-hacer-con-esto">¿Qué puedo hacer con esto?&lt;/h2>
&lt;p>Con &lt;strong>.NET MAUI&lt;/strong> se puede desarrollar aplicaciones nativas para &lt;strong>Windows&lt;/strong>, &lt;em>macOS&lt;/em>, &lt;em>iOS&lt;/em> y &lt;strong>Android&lt;/strong>, usando un solo código compartido en &lt;strong>C#&lt;/strong> y &lt;strong>XAML&lt;/strong>. Se puede crear aplicaciones que se adapten al aspecto y la funcionalidad de cada plataforma, aprovechando las últimas tecnologías de desarrollo.&lt;/p>
&lt;p>Algunos ejemplos de tipos de aplicaciones que se pueden crear con &lt;strong>.NET MAUI&lt;/strong> son:&lt;/p>
&lt;ul>
&lt;li>Aplicaciones de productividad que permitan gestionar tareas, calendarios, correos electrónicos, etc.&lt;/li>
&lt;li>Aplicaciones de entretenimiento que ofrezcan juegos, música, vídeos, etc.&lt;/li>
&lt;li>Aplicaciones de educación que faciliten el aprendizaje interactivo y el acceso a recursos didácticos.&lt;/li>
&lt;li>Aplicaciones de negocios que integren servicios web, bases de datos, análisis de datos, etc.&lt;/li>
&lt;/ul>
&lt;h2 id="un-poco-de-código">Un poco de código&lt;/h2>
&lt;p>Primero, veamos el código &lt;strong>XAML&lt;/strong> que se utiliza para la visual:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;ContentPage xmlns=&amp;#34;http://schemas.microsoft.com/dotnet/2021/maui&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2009/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Class=&amp;#34;ButtonSample.MainPage&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;StackLayout&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Button Text=&amp;#34;Click Me!&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Clicked=&amp;#34;OnCounterClicked&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label x:Name=&amp;#34;CounterLabel&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;Welcome to .NET MAUI!&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> VerticalOptions=&amp;#34;CenterAndExpand&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/StackLayout&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/ContentPage&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Luego, vemos el código &lt;strong>C#&lt;/strong> para poder realizar las acciones necesarias:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">using Microsoft.Maui;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">using Microsoft.Maui.Controls;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">using Microsoft.Maui.Essentials;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">namespace ButtonSample
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public partial class MainPage : ContentPage
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> int count = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public MainPage()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> InitializeComponent();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> void OnCounterClicked(object sender, EventArgs e)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> count++;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CounterLabel.Text = $&amp;#34;Contador actual: {count}&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CounterLabel.FontSize = Device.GetNamedSize(NamedSize.Large, typeof(Label));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CounterLabel.TextColor = Color.FromHex(&amp;#34;#FF0000&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>&lt;strong>.NET MAUI&lt;/strong> es una plataforma multiplataforma que ofrece muchas ventajas para los desarrolladores que quieren crear aplicaciones nativas con un solo código compartido en &lt;strong>C#&lt;/strong> y &lt;strong>XAML&lt;/strong>. Sin embargo, también tiene algunos inconvenientes y limitaciones que se debe tener en cuenta.&lt;/p>
&lt;p>En este contexto, se recomienda &lt;strong>.NET MAUI&lt;/strong> si:&lt;/p>
&lt;ul>
&lt;li>Ya se tiene experiencia con la plataforma &lt;strong>.NET&lt;/strong> y el lenguaje &lt;strong>C#&lt;/strong>.&lt;/li>
&lt;li>Se quiere crear aplicaciones para &lt;strong>Windows&lt;/strong>, &lt;em>macOS&lt;/em>, &lt;em>iOS&lt;/em> y &lt;strong>Android&lt;/strong> con una interfaz de usuario consistente y personalizable.&lt;/li>
&lt;li>Se quiere aprovechar las herramientas de desarrollo de &lt;em>Visual Studio&lt;/em> y otras librerías del ecosistema &lt;strong>.NET&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>No se recomienda &lt;strong>.NET MAUI&lt;/strong> si:&lt;/p>
&lt;ul>
&lt;li>Se prefiere usar otro lenguaje de programación como &lt;em>Dart&lt;/em> o &lt;em>JavaScript&lt;/em>.&lt;/li>
&lt;li>Se quiere crear aplicaciones web o para &lt;em>Linux&lt;/em> sin usar &lt;strong>Blazor&lt;/strong>.&lt;/li>
&lt;li>Se quiere usar las últimas características y tecnologías de cada plataforma nativa.&lt;/li>
&lt;/ul>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>MAUI on WSA</title><link>https://cmas.dev/posts/2022-07-27-maui-in-wsa/</link><pubDate>Wed, 27 Jul 2022 19:16:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-07-27-maui-in-wsa/</guid><description>&lt;p>En este artículo mostraré cómo ejecutar una aplicación &lt;strong>.NET MAUI&lt;/strong> sobre &lt;strong>Windows Subsystem for Android&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25163&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Normalmente, utilizamos un emulador de Android para poder ejecutar y depurar nuestas aplicaciones para esta plataforma. En este caso, ejecutaremos nuestra aplicación en &lt;strong>WSA (Windows Subsystem for Android)&lt;/strong>.&lt;/p>
&lt;h2 id="preparar-el-proyecto">Preparar el proyecto&lt;/h2>
&lt;p>Primeramente, debemos crear el poryecto &lt;strong>.NET MAUI&lt;/strong> y tenerlo listo para la plataforma &lt;strong>Android&lt;/strong>:&lt;/p>
&lt;ol>
&lt;li>Creamos el proyecto en Visual Studio 2022:
&lt;img src="https://cmas.dev/img/posts/2022/07/27/1.png" alt="">&lt;/li>
&lt;li>Colocamos un nombre descriptivo al proyecto nuevo:
&lt;img src="https://cmas.dev/img/posts/2022/07/27/2.png" alt="">&lt;/li>
&lt;li>Seleccionamos el .NET Core que deseamos utilizar:
&lt;img src="https://cmas.dev/img/posts/2022/07/27/3.png" alt="">&lt;/li>
&lt;li>Verificamos las opciones habilitadas (nos interesa Android):
&lt;img src="https://cmas.dev/img/posts/2022/07/27/4.png" alt="">&lt;/li>
&lt;/ol>
&lt;h2 id="configurar-wsa">Configurar WSA&lt;/h2>
&lt;p>Procedemos a configurar la máquina virtual para poder utilizarla&lt;/p>
&lt;ol>
&lt;li>En la configuración de &lt;strong>WSA&lt;/strong>, verificamos la IP y puerto para conectarnos:
&lt;img src="https://cmas.dev/img/posts/2022/07/27/5.png" alt="">&lt;/li>
&lt;li>Ejecutamos la consola de Android desde Visual Studio:
&lt;img src="https://cmas.dev/img/posts/2022/07/27/6.png" alt="">&lt;/li>
&lt;li>Ejecutamos el siguiente comando:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">adb connect 127.0.0.1:58526
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Verificamos la conexión realizada:
&lt;img src="https://cmas.dev/img/posts/2022/07/27/7.png" alt="">&lt;/li>
&lt;li>En visual Studio, veremos el nuevo dispositivo:
&lt;img src="https://cmas.dev/img/posts/2022/07/27/8.png" alt="">&lt;/li>
&lt;li>Ejecutamos la aplicación y la veremos en &lt;strong>WSA&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/07/27/9.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Hospedar Web App en UWP</title><link>https://cmas.dev/posts/2022-07-20-host-web-app-in-uwp/</link><pubDate>Wed, 20 Jul 2022 23:01:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-07-20-host-web-app-in-uwp/</guid><description>&lt;p>En este artículo mostraré cómo hospedar/mostrar una aplicación &lt;strong>ASP.NET Core&lt;/strong> dentro de una aplicación &lt;strong>UWP&lt;/strong> en Windows.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25126&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Muchas veces ya tenemos una aplicación desarrollada utilizando todos los estándares posibles de su mundo (HTML, CSS, JavaScript, ASP.NET, etc.). Entonces, aquí veremos cómo reutilizar esto dentro de una app UWP (inclusive se podría publicar la app UWP con la URL publicada dentro).&lt;/p>
&lt;h2 id="aplicación-aspnet-core">Aplicación ASP.NET Core&lt;/h2>
&lt;p>Primeramente, crearemos la aplicación &lt;strong>ASP.NET Core&lt;/strong> básica y la ejecutaremos para verla en el navegador.&lt;/p>
&lt;ol>
&lt;li>Creamos un nuevo proyecto &lt;strong>ASP.NET Core&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/07/20/1.png" alt="">&lt;/li>
&lt;li>Colocamos un nombre al proyecto:
&lt;img src="https://cmas.dev/img/posts/2022/07/20/2.png" alt="">&lt;/li>
&lt;li>Seleccionamos el Framework que se ajusta a nuestras necesidades:
&lt;img src="https://cmas.dev/img/posts/2022/07/20/3.png" alt="">&lt;/li>
&lt;li>Ejecutamos la aplicación (presionando la tecla &lt;em>F5&lt;/em>), veremos el servidor y la web funcionando:
&lt;img src="https://cmas.dev/img/posts/2022/07/20/4.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>Listo, ya tenemos nuestra aplicación Web.&lt;/p>
&lt;h2 id="aplicación-uwp-univesal-windows-platform">Aplicación UWP (Univesal Windows Platform)&lt;/h2>
&lt;p>Crearemos la aplicación &lt;strong>UWP&lt;/strong> apuntando a &lt;strong>Windows 11&lt;/strong> como Sistema operativo.&lt;/p>
&lt;ol>
&lt;li>Creamos un nuevo proyecto &lt;strong>Universal Windows&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/07/20/5.png" alt="">&lt;/li>
&lt;li>Colocamos un nombre al proyecto:
&lt;img src="https://cmas.dev/img/posts/2022/07/20/6.png" alt="">&lt;/li>
&lt;li>Seleccionamos las versiones para Windows que estarán disponibles:
&lt;img src="https://cmas.dev/img/posts/2022/07/20/7.png" alt="">&lt;/li>
&lt;li>Escribimos el código necesario para que nuestra web app pueda verse:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;Page
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Class=&amp;#34;UWP_Emb.MainPage&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns=&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:local=&amp;#34;using:UWP_Emb&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:d=&amp;#34;http://schemas.microsoft.com/expression/blend/2008&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:mc=&amp;#34;http://schemas.openxmlformats.org/markup-compatibility/2006&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mc:Ignorable=&amp;#34;d&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Background=&amp;#34;{ThemeResource ApplicationPageBackgroundThemeBrush}&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;WebView Source=&amp;#34;https://localhost:7106/&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/Page&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>
&lt;p>Ejecutamos la aplicación (presionando la tecla &lt;em>F5&lt;/em>), veremos&amp;hellip; nada:
&lt;img src="https://cmas.dev/img/posts/2022/07/20/8.png" alt="">&lt;br>
Esto debido a que la librería no está soportada y necesita la nueva versión (acaba de ser lanzada &lt;a href="https://www.nuget.org/packages/Microsoft.UI.Xaml/2.8.0">aquí&lt;/a>).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Procedemos a cargar el nuevo paquete desde &lt;strong>Nuget&lt;/strong>, para ellos vamos a **** &amp;gt; &amp;gt; :
&lt;img src="https://cmas.dev/img/posts/2022/07/20/9.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Colocamos el código nuevo para que esto nos funcione:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;Page
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Class=&amp;#34;UWP_Emb.MainPage&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns=&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:local=&amp;#34;using:UWP_Emb&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:d=&amp;#34;http://schemas.microsoft.com/expression/blend/2008&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:mc=&amp;#34;http://schemas.openxmlformats.org/markup-compatibility/2006&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mc:Ignorable=&amp;#34;d&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:controls=&amp;#34;using:Microsoft.UI.Xaml.Controls&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Background=&amp;#34;{ThemeResource ApplicationPageBackgroundThemeBrush}&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;controls:WebView2 Source=&amp;#34;https://localhost:7106/&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/Page&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="7">
&lt;li>Ejecutamos la aplicación (presionando la tecla &lt;em>F5&lt;/em>), veremos nuestra web app funcionando:
&lt;img src="https://cmas.dev/img/posts/2022/07/20/10.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>Parece algo muy sencillo, pero me tomó algunos días poder encontrar que el problema estaba en la actualización de la librería &lt;strong>Microsoft.UI&lt;/strong>&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>¿Por qué elegir aplicaciones de escritorio en 2022?</title><link>https://cmas.dev/posts/2022-07-13-why-desktop-apps-in-2022/</link><pubDate>Wed, 13 Jul 2022 23:16:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-07-13-why-desktop-apps-in-2022/</guid><description>&lt;p>En este corto artículo intentaré convencerlos de por qué sigue siendo bueno y rentable crear aplicaciones de escritorio en 2022.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25158&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Pueden existir muchas razones por las cuales ya no es necesario desarrollar aplicaciones de escritorio en pleno siglo XXI, pero creo que es interesante por las siguientes razones:&lt;/p>
&lt;ol>
&lt;li>Las aplicaciones de escritorio interactúan mejor con el equipo del usuario.&lt;/li>
&lt;li>El rendimiento de las aplicaciones de escritorio para cálculos complejos es mucho mayor que el de las aplicaciones web.&lt;/li>
&lt;li>La ejecución de lógica personalizada en el lado cliente es posible, pero mucho más difícil, con una aplicación web.&lt;/li>
&lt;/ol>
&lt;p>Existen diferentes marcos y kits de herramientas para desarrollar aplicaciones de escritorio, dependiendo de tus preferencias y necesidades. Algunos de los más populares son:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Electronjs&lt;/strong>: un marco que usa &lt;strong>HTML&lt;/strong>, &lt;strong>JavaScript&lt;/strong> y &lt;strong>CSS&lt;/strong> para crear aplicaciones nativas multiplataforma.&lt;/li>
&lt;li>&lt;strong>Tauri&lt;/strong>: una opción ligera y segura que usa &lt;strong>Rust&lt;/strong> y webview para crear aplicaciones de escritorio para todos los principales sistemas operativos.&lt;/li>
&lt;li>&lt;strong>Windows Forms&lt;/strong>, &lt;strong>WPF&lt;/strong>, &lt;strong>UWP&lt;/strong> y &lt;strong>WinUI3&lt;/strong>: las tecnologías más populares para crear aplicaciones de escritorio de &lt;em>Windows&lt;/em> con &lt;strong>C#&lt;/strong> o &lt;strong>Visual Basic&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="qué-es-winui-3">¿Qué es WinUI 3?&lt;/h2>
&lt;p>&lt;strong>WinUI 3&lt;/strong> es la plataforma de interfaz de usuario nativa que se envía con el &lt;strong>Windows App SDK&lt;/strong>. &lt;strong>Windows App SDK&lt;/strong> proporciona un conjunto de &lt;strong>API&lt;/strong> y herramientas que se pueden usar para crear aplicaciones de escritorio que se ejecutan en &lt;em>Windows 10&lt;/em> o posterior. &lt;strong>WinUI 3&lt;/strong> ofrece un rendimiento óptimo, una larga duración de la batería y una interactividad receptiva.&lt;/p>
&lt;h2 id="cuál-debería-elegir">¿Cuál debería elegir?&lt;/h2>
&lt;p>Eso depende del público objetivo y de los requisitos de la aplicación. Si se desea crear una aplicación que funcione en diferentes sistemas operativos, se puede optar por &lt;strong>Electronjs&lt;/strong> o &lt;strong>Tauri&lt;/strong>. Si se quiere crear una aplicación que se integre con &lt;strong>Windows&lt;/strong> y se publique en &lt;strong>Microsoft Store&lt;/strong>, se puede optar por &lt;strong>UWP&lt;/strong> o &lt;strong>WinUI 3&lt;/strong>.&lt;/p>
&lt;p>En mi caso quiero desarrollar una aplicación de escritorio para Windows 11, entonces puedo usar las mismas tecnologías que en &lt;strong>Windows 10&lt;/strong>: &lt;strong>Windows Forms&lt;/strong>, &lt;strong>WPF&lt;/strong>, &lt;strong>UWP&lt;/strong> o &lt;strong>WinUI 3&lt;/strong>. Estas aplicaciones se pueden adaptar al nuevo diseño y funcionalidades de &lt;strong>Windows 11&lt;/strong>. También se pueden usar los escritorios virtuales para organizar tus aplicaciones en diferentes contextos (como con &lt;strong>WSL&lt;/strong>).&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Migración UWP a WinUI 3</title><link>https://cmas.dev/posts/2022-07-06-upgrade-uwp-to-winui3/</link><pubDate>Wed, 06 Jul 2022 00:12:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-07-06-upgrade-uwp-to-winui3/</guid><description>&lt;p>¡Feliz cumple para mí! Arranco mi día con un artículo (es día de festejo así que será complicado cumplir con la comunidad).&lt;/p>
&lt;p>En este artículo haré una migración de &lt;strong>UWP&lt;/strong> a &lt;strong>WinUI 3&lt;/strong> sin que se complique demasiado.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25151&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Microsoft ha anunciado oficialmente la depreciación de &lt;strong>UWP&lt;/strong> (Plataforma Universal de Windows) y que no se actualizaría en el nuevo sistema &lt;strong>Windows 11&lt;/strong>. Sin embargo, todavía hay algunas formas de usar &lt;strong>UWP&lt;/strong> en proyectos existentes o nuevos.&lt;/p>
&lt;blockquote>
&lt;p>Microsoft continues to baby-step around the obvious, but it has officially deprecated the Universal Windows Platform (UWP) as it pushes the desktop-focused Windows App SDK (formerly called Project Reunion) and WinUI 3 as the future of Windows application development.&lt;/p>
&lt;/blockquote>
&lt;p>Esto lo expresó Paul Thurrott en su blog (&lt;a href="https://www.thurrott.com/paul">quién es él&lt;/a>) donde nos lleva al enlace de &lt;strong>GitHub&lt;/strong> del proyecto &lt;strong>Windows App SDK&lt;/strong>. Aunque esta noticia no es nueva ahora, en este momento abandono &lt;strong>UWP&lt;/strong> antes que me ocurra lo mismo que con mis desarrollos &lt;strong>Windows Phone&lt;/strong> 🫶&lt;/p>
&lt;h2 id="cómo-proceder-con-la-migración">¿Cómo proceder con la migración?&lt;/h2>
&lt;p>Como la ansiedad me gana, abrí un proyecto de &lt;strong>UWP&lt;/strong> que tenía (no lo puedo exponer porque es de la empresa donde trabajaba) y decidí crear un nuevo proyecto de tipo &lt;strong>WinUI3&lt;/strong> para adelantarme a los hechos &amp;hellip;&lt;/p>
&lt;p>Me encontré con dos maneras de hacer la migración:&lt;/p>
&lt;h3 id="la-migración-manual">La migración &amp;ldquo;manual&amp;rdquo;&lt;/h3>
&lt;p>Al migrar, en la mayoría de los casos, el código de la interfaz de usuario solo necesita algunos cambios en el espacio de nombres. Gran parte del código de su plataforma seguirá siendo el mismo. Se tiene que modificar o cambiar algún código en función de las diferentes funcionalidades/disponibilidades de las aplicaciones de escritorio frente a las aplicaciones para &lt;strong>UWP&lt;/strong>.&lt;/p>
&lt;p>A nivel general se deben realizar estas tareas:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Crear un nuevo proyecto de escritorio empaquetado de &lt;strong>WinUI 3&lt;/strong> en la solución existente.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Copiar el código &lt;strong>XAML&lt;/strong> para la &lt;strong>UI&lt;/strong> (esto debido a cambios en los nombres de espacios de nombres).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Copiar el código lógico de la aplicación (clases diferentes y/o diferencias de APIs).&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Debemos seguir los pasos indicados &lt;a href="https://learn.microsoft.com/es-es/windows/apps/windows-app-sdk/migrate-to-windows-app-sdk/migrate-to-windows-app-sdk-ovw">aquí&lt;/a>&lt;/p>
&lt;h3 id="la-migración-con-una-herramienta">La migración con una herramienta&lt;/h3>
&lt;p>Para migrar una aplicación UWP a &lt;strong>WinUI 3&lt;/strong>, se puede usar el &lt;strong>.NET Upgrade Assistant&lt;/strong>, que es una herramienta que automatiza gran parte del proceso de migración. Antes de migrar, se recomienda revisar la siguiente lista de características que aún no son compatibles con &lt;strong>WinUI 3&lt;/strong>.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Característica de &lt;strong>UWP&lt;/strong>&lt;/th>
&lt;th>Estado de &lt;strong>WinUI 3&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Controles comunes de la interfaz de usuario&lt;/td>
&lt;td>✅ Soportado&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MSIX&lt;/td>
&lt;td>✅ Soportado&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Notificaciones del sistema&lt;/td>
&lt;td>✅ Soportado&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Iconos dinámicos (en Windows 10)&lt;/td>
&lt;td>✅ Soportado&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Distribución a través de la Tienda&lt;/td>
&lt;td>✅ Soportado&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Biblioteca MSAL&lt;/td>
&lt;td>✅ Soportado&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Visual Studio App Center&lt;/td>
&lt;td>✅ Soportado&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Creación de instancias únicas&lt;/td>
&lt;td>✅ Soportado&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tareas en segundo plano&lt;/td>
&lt;td>✅ Compatible con C++ ⚠️ Compatible parcialmente con C# (se admiten tareas en segundo plano de OOP)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CameraCaptureUI&lt;/td>
&lt;td>❌ No se admite en la versión 1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CoreTextServicesManager&lt;/td>
&lt;td>⚠️ Solo se admite en Windows 11&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>InkCanvas&lt;/td>
&lt;td>❌ No se admite en la versión 1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MapControl&lt;/td>
&lt;td>❌ No se admite en la versión 1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MediaElement&lt;/td>
&lt;td>❌ No se admite en la versión 1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PrintManager&lt;/td>
&lt;td>❌ No se admite en la versión 1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>WebAuthenticationBroker&lt;/td>
&lt;td>❌ No se admite en la versión 1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Acrílico en el fondo&lt;/td>
&lt;td>❌ No se admite en la versión 1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Quiosco de una sola aplicación&lt;/td>
&lt;td>❌ No se admite en la versión 1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TaskbarManager API&lt;/td>
&lt;td>❌ No se admite en la versión 1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Contenedorización completa de la aplicación&lt;/td>
&lt;td>❌ No se admite en la versión 1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Mejor velocidad y rendimiento de lanzamiento&lt;/td>
&lt;td>⚠️ Ligera desventaja, consulte consideraciones de rendimiento.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Más información sobre la migración, se encuentra en la documentación oficial de &lt;strong>Microsoft&lt;/strong> &lt;a href="https://learn.microsoft.com/es-es/windows/apps/windows-app-sdk/migrate-to-windows-app-sdk/upgrade-assistant">aquí&lt;/a>&lt;/p>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>En general, el proceso de migración es sencillo si se utiliza el &lt;strong>.NET Upgrade Assistant&lt;/strong>, que guía paso a paso y realiza los cambios necesarios en el código. Sin embargo, puede haber algunos casos en los que se tenga que hacer ajustes manuales o buscar alternativas a algunas características que no son compatibles con &lt;strong>WinUI 3&lt;/strong>.&lt;/p>
&lt;p>En líneas generales seguí &lt;a href="https://learn.microsoft.com/es-es/dotnet/core/porting/upgrade-assistant-uwp-framework">el ejemplo de la documentación de Microsoft&lt;/a> y logramos terminar la migración sin problemas en 2 días (14 horas en total).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">upgrade-assistant upgrade XX.sln
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>¡No modificamos nada!&lt;/p>
&lt;p>Es hora de ir a tomar un poco de tequila 😋&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Java con WSL parte 2</title><link>https://cmas.dev/posts/2022-06-29-java-with-wsl-part-2/</link><pubDate>Wed, 29 Jun 2022 20:47:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-06-29-java-with-wsl-part-2/</guid><description>&lt;p>En este artículo mostraré cómo desarrollar una pequeña aplicación web en &lt;strong>Java&lt;/strong> corriendo sobre &lt;strong>WSL (Windows Subsystem for Linux)&lt;/strong>. En el &lt;a href="https://cmas.dev/posts/2022-06-22-java-with-wsl-part-1/">artículo anterior&lt;/a> hemos visto como preparar &lt;strong>Visual Studio Code&lt;/strong> para &lt;strong>Java&lt;/strong> sobre &lt;strong>WSL (Windows Subsystem for Linux)&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25151&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Vamos a ponernos un poco creativos ahora y veremos cómo crear una aplicación web con Java. PAra ellos debemos utilizar el proyecto &lt;a href="https://maven.apache.org/">&lt;strong>Apache Maven&lt;/strong>&lt;/a> y lo utilizaremos desde &lt;strong>Visual Studio Code&lt;/strong> sobre la plataforma &lt;strong>WSL&lt;/strong>.&lt;/p>
&lt;h2 id="instalar-apache-maven">Instalar Apache Maven&lt;/h2>
&lt;ol>
&lt;li>Descargar el instalador:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">wget https://dlcdn.apache.org/maven/maven-3/3.9.0/binaries/apache-maven-3.9.0-bin.zip -P /tmp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Extraer los archivos a &lt;strong>/opt/gradle&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo unzip -d /opt/apache-maven /tmp/apache-maven-3.9.0-bin.zip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Configurar la variable de entorno creando &lt;strong>maven.sh&lt;/strong>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo vi /etc/profile.d/maven.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Agregamos lo siguiente a ese archivo:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># /etc/profile.d/maven.sh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">MAVEN_HOME&lt;/span>&lt;span class="o">=/&lt;/span>&lt;span class="n">opt&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">apache&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">maven&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">apache&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">maven&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mf">3.9&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">PATH&lt;/span>&lt;span class="o">=$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">MAVEN_HOME&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">bin&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">PATH&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>Convertir el archivo en ejecutable:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo chmod +x /etc/profile.d/maven.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>Cargamos la variable de entorno&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">source /etc/profile.d/maven.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="7">
&lt;li>Verificamos que todo esté bien:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">mvn -v
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://cmas.dev/img/posts/2022/06/29/1.png" alt="">&lt;/p>
&lt;h2 id="crear-un-proyecto-java-spring-boot">Crear un proyecto Java Spring Boot&lt;/h2>
&lt;p>No tenemos una plantilla como tal en Visual Studio Code, no es un IDE potente como otros que existen en el mercado para Java.&lt;/p>
&lt;p>Entonces procedemos con los siguientes pasos:&lt;/p>
&lt;ol>
&lt;li>Clonamos el repositorio de GitHub &lt;a href="https://github.com/spring-guides/gs-spring-boot.git">https://github.com/spring-guides/gs-spring-boot.git&lt;/a>
&lt;img src="https://cmas.dev/img/posts/2022/06/29/2.png" alt="">&lt;/li>
&lt;li>Ejecutamos la applicación y veremos el texto predeterminado:
&lt;img src="https://cmas.dev/img/posts/2022/06/29/3.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>Con todo esto tenemos una aplicación Web desarrollada en &lt;strong>Java&lt;/strong> con el servidor corriendo en &lt;strong>Ubuntu&lt;/strong> gracias a &lt;strong>WSL&lt;/strong> sin salis de nuestro sistema operativo &lt;strong>Windows&lt;/strong>.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Java con WSL parte 1</title><link>https://cmas.dev/posts/2022-06-22-java-with-wsl-part-1/</link><pubDate>Wed, 22 Jun 2022 18:19:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-06-22-java-with-wsl-part-1/</guid><description>&lt;p>En este artículo mostraré cómo instalar y preparar el entorno para el desarrollo de &lt;strong>Java&lt;/strong> sobre &lt;strong>Windows Subsystem for Linux (WSL)&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25145&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Personalmente no soy desarrollador Java, pero desde que lo estudié (obligado) en la Universidad siempre le seguí el rastro. El lenguaje, la plataforma en general, para mi gusto es lento y a veces frustrante. Pero esa es una opinión muy particular.&lt;/p>
&lt;p>El foco aquí es ver como instalar todo el paquete y sacar una pequeña web. Según la encuesta anual de StackOverflow Java se posiciona entre uno de los primeros lenguajes. &lt;a href="https://survey.stackoverflow.co/2022/#section-most-popular-technologies-programming-scripting-and-markup-languages">Aquí&lt;/a> se encuentra la encuesta para quien esté interesado.&lt;/p>
&lt;h2 id="instalar-java-desde-visual-studio-code-en-wsl">Instalar Java desde Visual Studio Code en WSL&lt;/h2>
&lt;p>Existe el proceso manual (para las personas que quieren isntalarlo asegurando todos los pasos). Cómo sólo estoy investigando (y publicando la investigación) iremos por el camino más corto.&lt;/p>
&lt;p>Para ello, haremos los siguientes pasos:&lt;/p>
&lt;ol>
&lt;li>En &lt;strong>WSL:Ubuntu&lt;/strong>, ingresaremos el comando:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">code
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://cmas.dev/img/posts/2022/06/22/1.png" alt="">&lt;br>
2. En Visual Studio Code (WSL) procedemos a instalar los objetos necesarios (esto debido a que toda la instalación estará en Ubuntu):
&lt;img src="https://cmas.dev/img/posts/2022/06/22/2.png" alt="">&lt;br>
3. Veamos que versión de Java tenemos&amp;hellip;
&lt;img src="https://cmas.dev/img/posts/2022/06/22/3.png" alt="">&lt;br>
4. Debemos instalar el &lt;strong>JVM (Java Virtual Machine)&lt;/strong> para que funcione:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt install default-jdk
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://cmas.dev/img/posts/2022/06/22/4.png" alt="">&lt;br>
5. Establecemos el &lt;strong>Java Home&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">vi&lt;/span> &lt;span class="o">~/.&lt;/span>&lt;span class="n">bashrc&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">export&lt;/span> &lt;span class="n">JAVA_HOME&lt;/span>&lt;span class="o">=/&lt;/span>&lt;span class="n">usr&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">jvm&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">java&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">openjdk&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">amd64&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>Verificamos la versión de &lt;strong>Java&lt;/strong>
&lt;img src="https://cmas.dev/img/posts/2022/06/22/5.png" alt="">&lt;/li>
&lt;/ol>
&lt;h2 id="instalar-gradle-para-los-proyectos-java">Instalar Gradle para los proyectos Java&lt;/h2>
&lt;ol>
&lt;li>Descargar Gradle a una carpeta temporal:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">wget https://services.gradle.org/distributions/gradle-7.3.3-bin.zip -P /tmp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Extraer los archivos a &lt;strong>/opt/gradle&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt install unzip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo unzip -d /opt/gradle /tmp/gradle-*.zip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Verificar los archivos:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ls /opt/gradle/gradle-7.3.3/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Configurar la variable de entorno creando &lt;strong>gradle.sh&lt;/strong>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo vi /etc/profile.d/gradle.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>Agregamos lo siguiente a ese archivo:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># /etc/profile.d/gradle.sh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">GRADLE_HOME&lt;/span>&lt;span class="o">=/&lt;/span>&lt;span class="n">opt&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">gradle&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">gradle&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mf">7.3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">PATH&lt;/span>&lt;span class="o">=$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">GRADLE_HOME&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">bin&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">PATH&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>Convertir el archivo en ejecutable:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo chmod +x /etc/profile.d/gradle.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="7">
&lt;li>Cargamos la variable de entorno&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">source /etc/profile.d/gradle.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="8">
&lt;li>Verificamos que todo esté bien:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">gradle -v
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://cmas.dev/img/posts/2022/06/22/6.png" alt="">&lt;br>
9. Instalar la extensión &lt;strong>Gradle for Java&lt;/strong>
&lt;img src="https://cmas.dev/img/posts/2022/06/22/7.png" alt="">&lt;/p>
&lt;h2 id="crear-un-proyecto-java">Crear un proyecto Java&lt;/h2>
&lt;ol>
&lt;li>Crear el proyecto Java:
&lt;img src="https://cmas.dev/img/posts/2022/06/22/8.png" alt="">&lt;/li>
&lt;li>Marcamos la opción de &amp;ldquo;No build tools&amp;rdquo;:
&lt;img src="https://cmas.dev/img/posts/2022/06/22/9.png" alt="">&lt;/li>
&lt;li>Seguimos las instrucciones en pantalla para la creación del proyecto.&lt;/li>
&lt;li>Modificamos el archivo &lt;strong>App.java&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">public class App {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public static void main(String[] args) throws Exception {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> System.out.println(&amp;#34;Hello, World from cmasdev!&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>Ejecutamos la aplicación con &lt;em>F5&lt;/em>:
&lt;img src="https://cmas.dev/img/posts/2022/06/22/10.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>ASP.NET Core en Ubuntu</title><link>https://cmas.dev/posts/2022-06-15-aspnet-core-on-ubuntu/</link><pubDate>Wed, 15 Jun 2022 12:08:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-06-15-aspnet-core-on-ubuntu/</guid><description>&lt;p>En este artículo mostraré cómo ejecutar una aplicación &lt;strong>ASP.NET Core&lt;/strong> sobre &lt;strong>Windows Subsystem for Linux&lt;/strong>, es decir, alojar un servidor web en Ubuntu para ejecutar nuestra aplicación web.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25140&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Se habla mucho respecto a que .NET Core puede ejecutar aplicaciones nativamente en Linux (Ubuntu, en este caso) y es hora de hacer la prueba. En este caso, alojaremos la aplicación en un &amp;ldquo;servidor&amp;rdquo; Ubuntu para verificar su funcionamiento.&lt;/p>
&lt;h2 id="preparar-el-proyecto">Preparar el proyecto&lt;/h2>
&lt;p>Primeramente, debemos crear el poryecto &lt;strong>ASP.NET Core&lt;/strong>:&lt;/p>
&lt;ol>
&lt;li>Creamos el proyecto en Visual Studio 2022:
&lt;img src="https://cmas.dev/img/posts/2022/06/15/1.png" alt="">&lt;/li>
&lt;li>Colocamos un nombre descriptivo al proyecto nuevo:
&lt;img src="https://cmas.dev/img/posts/2022/06/15/2.png" alt="">&lt;/li>
&lt;li>Seleccionamos el .NET Core que deseamos utilizar:
&lt;img src="https://cmas.dev/img/posts/2022/06/15/3.png" alt="">&lt;/li>
&lt;li>Verificamos las opciones habilitadas para la ejecución (nos interesa &lt;strong>WSL&lt;/strong>):
&lt;img src="https://cmas.dev/img/posts/2022/06/15/4.png" alt="">&lt;/li>
&lt;/ol>
&lt;h2 id="ejecución-para-wsl">Ejecución para WSL&lt;/h2>
&lt;p>Empezamos a realizar las tareas relacionadas con la ejecución&lt;/p>
&lt;ol>
&lt;li>Hacemos clic en el botón de ejecución o presionamos la tecla &lt;em>F5&lt;/em>, saldrá un mensaje de error como este (si es que no tenemos instalado el dotnet en WSL):
&lt;img src="https://cmas.dev/img/posts/2022/06/15/5.png" alt="">&lt;/li>
&lt;li>SEguimos los pasos en la consola de WSL (para que se instale el motor de ejecución) y en Visual Studio aceptamos el mensaje:
&lt;img src="https://cmas.dev/img/posts/2022/06/15/6.png" alt="">&lt;/li>
&lt;li>Volvemos a ejecutar la aplicación (en este punto funciona):
&lt;img src="https://cmas.dev/img/posts/2022/06/15/7.png" alt="">&lt;/li>
&lt;li>Debemos agregar un poco de código para identificar en qué plataforma estamos (en la página index.cshtml agregamos la siguiente línea de código):&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;h2&amp;gt;@Environment.OsVersion&amp;lt;/h2&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>Ejecutamos de nuevo la aplicación, pero seleccionamos la opción que tiene el nombre de nuestro proyecto, para poder usar el Web Server de Windows:
&lt;img src="https://cmas.dev/img/posts/2022/06/15/8.png" alt="">&lt;/li>
&lt;li>Cambiamos la configuración a &lt;strong>WSL&lt;/strong> nuevamente y ejecutamos para ver el cambio:
&lt;img src="https://cmas.dev/img/posts/2022/06/15/9.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>De esta manera hemos montado el servidor web directamente en &lt;strong>Ubuntu&lt;/strong> con &lt;strong>WSL&lt;/strong>.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Desarrollo de aplicaciones NodeJs en WSL</title><link>https://cmas.dev/posts/2022-06-08-app-nodejs-in-wsl/</link><pubDate>Wed, 08 Jun 2022 18:07:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-06-08-app-nodejs-in-wsl/</guid><description>&lt;p>En este artículo mostraré como instalar &lt;strong>Node.js&lt;/strong> en &lt;strong>WSL&lt;/strong>. También, veremos como escribir código, compilar y ejecutarlo en &lt;strong>WSL&lt;/strong> desde &lt;strong>Visual Studio Code&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25131&lt;/strong>&lt;/em>&lt;/p>
&lt;p>En Windows 11, especificamente gracias a &lt;strong>WSL - Windows Subssytem for Linux&lt;/strong> podemos instalar y ejecutar aplicaciones desarrolladas con &lt;strong>Node.js&lt;/strong> de manera bastante sencilla y rápida.&lt;/p>
&lt;h2 id="instalar-nodejs-en-wsl">Instalar Node.js en WSL&lt;/h2>
&lt;p>Preparamos WSL para la instalación de Node.js&lt;/p>
&lt;ol>
&lt;li>Verificamos las versiones de Node.js y NVM que tenemos instaladas (se supone que no las tenemos):
&lt;img src="https://cmas.dev/img/posts/2022/06/08/1.png" alt="">&lt;/li>
&lt;li>Procedemos a instalar NVM (Node Version Manager):&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Ahora, instalamos la última versión de Node.js:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">nvm install node
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Verificamos las versiones y listo:
&lt;img src="https://cmas.dev/img/posts/2022/06/08/2.png" alt="">&lt;/li>
&lt;/ol>
&lt;h2 id="aplicacion-en-visual-studio-code">Aplicacion en Visual Studio Code&lt;/h2>
&lt;p>Dentro del Visual Studio Code creamos la aplicación y procedemos a ejecutarla normalmente.&lt;/p>
&lt;ol>
&lt;li>Creamos un archivo &lt;strong>app.js&lt;/strong>&lt;/li>
&lt;li>Escribimos las siguientes líneas de código:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">http&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;http&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">createServer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">writeHead&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">200&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;Content-Type&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;text/plain&amp;#39;&lt;/span>&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Hola desde cmas.dev!&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">listen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8080&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Presionamos la tecla &lt;em>F5&lt;/em> y seleccionamos la opción &lt;strong>Node.js&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/06/08/4.png" alt="">&lt;/li>
&lt;li>Veremos los controles de depuración y en la consola veremos que ha creado la aplicación:
&lt;img src="https://cmas.dev/img/posts/2022/06/08/5.png" alt="">&lt;/li>
&lt;li>En el navegador de preferencia, colocamos la URL definida en el código y vermeos nuestro pequeña applicación:
&lt;img src="https://cmas.dev/img/posts/2022/06/08/6.png" alt="">&lt;/li>
&lt;/ol>
&lt;h2 id="aplicacion-en-visual-studio-code-con-wsl">Aplicacion en Visual Studio Code con WSL&lt;/h2>
&lt;p>Dentro del Visual Studio Code creamos la aplicación y procedemos a ejecutarla en WSL.&lt;/p>
&lt;ol>
&lt;li>Descargar la extensión para desarrollo remoto &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-wsl">aquí&lt;/a>&lt;/li>
&lt;li>Abrimos una nueva ventana de Visual Studio Code y hacemos clicn en el icono de acceso remoto:
&lt;img src="https://cmas.dev/img/posts/2022/06/08/7.png" alt="">&lt;/li>
&lt;li>Seleccionamos la opción de distro para WSL:
&lt;img src="https://cmas.dev/img/posts/2022/06/08/8.png" alt="">&lt;/li>
&lt;li>Marcamos la opción Ubuntu:
&lt;img src="https://cmas.dev/img/posts/2022/06/08/9.png" alt="">&lt;/li>
&lt;li>Abrimos la carpeta donde almacenaremos el proyecto (en Ubuntu):
&lt;img src="https://cmas.dev/img/posts/2022/06/08/10.png" alt="">&lt;/li>
&lt;li>Escribimos las siguientes líneas de código (con algunas diferencias del código anterior):&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">http&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;http&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">createServer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">writeHead&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">200&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;Content-Type&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;text/plain&amp;#39;&lt;/span>&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;¡Hola desde cmas.dev y WSL!&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">listen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8081&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="7">
&lt;li>Ejecutamos la aplicación desde la Terminal de &lt;strong>Ubuntu&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/06/08/12.png" alt="">&lt;/li>
&lt;li>Abrimos el navegador y colocamos la dirección que especificamos en el código:
&lt;img src="https://cmas.dev/img/posts/2022/06/08/13.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>De esta manera hemos realizado una aplicación NodeJs en &lt;strong>Windows&lt;/strong> directamente así como en &lt;strong>WSL&lt;/strong>. Ambas opciones son válidas, nada más depende de la elección del desarrollador.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>WSL: Ejecutar aplicaciones con GUI Linux</title><link>https://cmas.dev/posts/2022-06-01-wsl-run-apps-gui-ubuntu/</link><pubDate>Wed, 01 Jun 2022 18:32:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-06-01-wsl-run-apps-gui-ubuntu/</guid><description>&lt;p>En este artículo mostraré cómo utilizar aplicaciones Linux (con interfaz de usuario) gracias a &lt;strong>Windows Subsystem for Linux&lt;/strong> .&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22621&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Es cierto que &lt;strong>Windows&lt;/strong> posee muchas y muy buenas aplicaciones gráficas (de hecho está basado en eso), pero Ubuntu también tiene aplicaciones muy buenas y con performance mejorada.&lt;/p>
&lt;h2 id="instalar-vlc">Instalar VLC&lt;/h2>
&lt;p>En este caso instalaremos el reproductor multimedia VLC:&lt;/p>
&lt;ol>
&lt;li>Nos dirigimos a Ubuntu &lt;strong>Windows Subsystem for Linux&lt;/strong>
&lt;img src="https://cmas.dev/img/posts/2022/06/01/1.png" alt="">&lt;/li>
&lt;li>Colocamos el comando que instala la aplicación con &lt;strong>apt&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt install vlc -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Procede a instalar y nos arroja el resultado:
&lt;img src="https://cmas.dev/img/posts/2022/06/01/2.png" alt="">&lt;/li>
&lt;li>Colocamos el comando que ejecuta la aplicación y&amp;hellip;&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">vlc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>Veremos la aplicación ejecutada:
&lt;img src="https://cmas.dev/img/posts/2022/06/01/3.png" alt="">&lt;/li>
&lt;li>Si buscamos la App desde el Menú Inicio de &lt;strong>Windows&lt;/strong> la encontraremos:
&lt;img src="https://cmas.dev/img/posts/2022/06/01/4.png" alt="">&lt;/li>
&lt;li>La aplicación se ejecuta de manera nativa en &lt;strong>Windows&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/06/01/5.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Estructura básica de un proyecto con Windows App SDK</title><link>https://cmas.dev/posts/2022-05-25-basic-struct-of-windows-app-sdk-project/</link><pubDate>Wed, 25 May 2022 18:45:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-05-25-basic-struct-of-windows-app-sdk-project/</guid><description>&lt;p>En este artículo intentaré explicar lo que entiendo es la estructura básica de &lt;strong>Windows App SDK&lt;/strong>, pues resulta algo nuevo para mí (en el pasado desarrollaba con WPF y después con UWP en sus inicios). En un &lt;a href="https://cmas.dev/posts/2022-05-18-windows-app-sdk-development/">artículo anterior&lt;/a> hemos visto los primeros pasos en esta plataforma.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25126&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Según la definición tenemos que esta definición:&lt;/p>
&lt;blockquote>
&lt;p>Windows App SDK es un conjunto de nuevos componentes y herramientas para desarrolladores que representan la próxima evolución en la plataforma de desarrollo de aplicaciones de Windows. Windows App SDK proporciona un conjunto unificado de API y herramientas que se pueden usar de manera consistente por cualquier aplicación de escritorio en Windows 11 y versiones anteriores hasta Windows 10, versión 1809&lt;/p>
&lt;/blockquote>
&lt;p>Rápidamente podemos entender que su estructura básica se compone de:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Foundation&lt;/strong>: es la capa que ofrece las &lt;em>API&lt;/em> básicas para acceder a las características y servicios de &lt;em>Windows&lt;/em>, como la configuración del sistema, el almacenamiento de datos, la red y la seguridad.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>UI&lt;/strong>: es la capa que ofrece los controles y componentes de interfaz de usuario para crear aplicaciones modernas y atractivas en &lt;em>Windows&lt;/em>, como &lt;em>XAML Islands&lt;/em>, &lt;em>WinUI 3&lt;/em> y &lt;em>WebView2&lt;/em>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Frameworks&lt;/strong>: es la capa que ofrece los marcos de trabajo y patrones para facilitar el desarrollo de aplicaciones en &lt;em>Windows&lt;/em>, como &lt;em>App Lifecycle&lt;/em>, &lt;em>Push Notifications&lt;/em> y &lt;em>Reunion Windowing&lt;/em>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Tools&lt;/strong>: es la capa que ofrece las extensiones y plantillas para Visual Studio 2022 que permiten usar los componentes de &lt;strong>Windows App SDK&lt;/strong> en proyectos nuevos o existentes. También incluye un paquete &lt;em>NuGet&lt;/em> que contiene las bibliotecas de Windows App SDK.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="diferencias-entre-win32-apis-y-uwp-apis">Diferencias entre Win32 APIs y UWP APIs&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Win32 APIs&lt;/strong>: son las API de &lt;em>Windows&lt;/em> que se usan para crear aplicaciones de escritorio tradicionales en C++ o C#. Algunas de estas &lt;em>API&lt;/em> son: &lt;em>CreateWindowEx&lt;/em>, &lt;em>MessageBox&lt;/em>, &lt;em>ShellExecute&lt;/em>, etc.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>UWP APIs&lt;/strong>: son las API de &lt;em>Windows&lt;/em> que se usan para crear aplicaciones universales que pueden ejecutarse en diferentes dispositivos con &lt;strong>Windows 11&lt;/strong>. Algunas de estas API son: &lt;em>Windows.UI.Xaml.Controls&lt;/em>, &lt;em>Windows.Media.Capture&lt;/em>, &lt;em>Windows.Storage&lt;/em>, etc.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Windows App SDK&lt;/strong> permite usar ambas API en una misma aplicación, lo que ofrece más flexibilidad y compatibilidad a los desarrolladores1.&lt;/p>
&lt;p>Esta es una pequeña introducción (con sabor a trabajo práctico) sobre Windows App SDK. A partir de esto se vienen muchos artículos sobre este &lt;em>SDK&lt;/em>.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Desarrollo en Windows App SDK</title><link>https://cmas.dev/posts/2022-05-18-windows-app-sdk-development/</link><pubDate>Wed, 18 May 2022 21:56:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-05-18-windows-app-sdk-development/</guid><description>&lt;p>En este articulo, mostraré cómo empezar con el desarrollo con Windows App SDK especialmente diseñado para Widnows 11 y ciertas versiones de Windows 10 (superior a la versión 1809).&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22621&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Entresacando un poco las definiciones desde la &lt;a href="https://learn.microsoft.com/es-es/windows/apps/windows-app-sdk/">página oficial de Microsoft&lt;/a> encontramos este resumen:&lt;/p>
&lt;blockquote>
&lt;p>Windows App SDK es un conjunto de nuevas herramientas y componentes para desarrolladores que representa la próxima evolución en la plataforma de desarrollo de aplicaciones de Windows. Windows App SDK proporciona un conjunto unificado de API y herramientas que cualquier aplicación de escritorio puede usar de forma coherente en Windows 11 y niveles inferiores hasta Windows 10, versión 1809.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Windows App SDK complementa estas herramientas y tipos de aplicación existentes con un conjunto común de API que los desarrolladores pueden utilizar en estas plataformas.&lt;/p>
&lt;/blockquote>
&lt;p>Con todo esto podemos ver las &lt;a href="https://learn.microsoft.com/es-es/windows/apps/windows-app-sdk/#windows-app-sdk-features">&lt;strong>características de Windows App SDK&lt;/strong>&lt;/a>.&lt;/p>
&lt;h1 id="creación-de-un-proyecto-winui">Creación de un proyecto WinUI&lt;/h1>
&lt;p>Para empezar a utilizar Windows App SDK, debemos crear una interfaz de usuario y eso se explica en el sitio oficial de Microsoft:&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>WinUI 3&lt;/strong> es el componente de la plataforma de interfaz de usuario nativa que se incluye con el SDK de Aplicaciones para Windows (completamente desacoplado de los SDK de Windows). El SDK de Aplicaciones para Windows proporciona un conjunto unificado de API y herramientas que se pueden usar para crear aplicaciones de escritorio de producción destinadas a Windows 10 y versiones posteriores que se pueden publicar en Microsoft Store.&lt;/p>
&lt;/blockquote>
&lt;p>Para la creación del proyecto debemos realizar los siguientes pasos:&lt;/p>
&lt;ol>
&lt;li>Crear un proyecto de tipo &lt;strong>WinUI 3&lt;/strong>
&lt;img src="https://cmas.dev/img/posts/2022/05/18/1.png" alt="">&lt;/li>
&lt;li>Se coloca un nombre descriptivo para el proyecto:
&lt;img src="https://cmas.dev/img/posts/2022/05/18/2.png" alt="">&lt;/li>
&lt;li>Se crea el proyecto con los siguientes archivos:
&lt;img src="https://cmas.dev/img/posts/2022/05/18/3.png" alt="">&lt;/li>
&lt;li>Procedemos a ejecutar la aplicación (y se ejecutará en nuestro &lt;strong>Windows 11&lt;/strong> directamente):
&lt;img src="https://cmas.dev/img/posts/2022/05/18/4.png" alt="">&lt;/li>
&lt;li>Veremos la aplicación ejecutada:
&lt;img src="https://cmas.dev/img/posts/2022/05/18/5.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>Con esto logramos crear nuestra primera aplicación &lt;strong>WinUI 3&lt;/strong>.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>UWP en Windows 11</title><link>https://cmas.dev/posts/2022-05-11-uwp-in-windows-11/</link><pubDate>Wed, 11 May 2022 19:53:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-05-11-uwp-in-windows-11/</guid><description>&lt;p>En este artículo mostraré cómo crear una aplicación UWP (Universal Windows Platform) en Windows 11 (aunque ya debemos ir dejándola ;)).&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22621&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Los prerrequisitos para poder crear son:&lt;/p>
&lt;ol>
&lt;li>Visual Studio 2022.&lt;/li>
&lt;li>UWP habilitado para el desarrollo sobre Windows 11.&lt;/li>
&lt;li>Windows 11 ;)&lt;/li>
&lt;/ol>
&lt;h2 id="crear-una-aplicación-uwp">Crear una aplicación UWP&lt;/h2>
&lt;p>Para la creación del proyecto debemos seguir los siguientes pasos:&lt;/p>
&lt;ol>
&lt;li>Crear una nueva aplicación en Visual Studio:
&lt;img src="https://cmas.dev/img/posts/2022/05/11/1.png" alt="">&lt;/li>
&lt;li>Colocamos el nombre descriptivo para el nuevo proyecto:
&lt;img src="https://cmas.dev/img/posts/2022/05/11/2.png" alt="">&lt;/li>
&lt;li>Seleccionamos la versión del destino (En Windows 11):
&lt;img src="https://cmas.dev/img/posts/2022/05/11/3.png" alt="">&lt;/li>
&lt;li>Verificamos que el proyecto se haya creado correctamente:
&lt;img src="https://cmas.dev/img/posts/2022/05/11/4.png" alt="">&lt;/li>
&lt;li>Agregamos un control de prueba para poder ejecutarlo:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;Page
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Class=&amp;#34;UWP_Blog.MainPage&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns=&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:local=&amp;#34;using:UWP_Blog&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:d=&amp;#34;http://schemas.microsoft.com/expression/blend/2008&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:mc=&amp;#34;http://schemas.openxmlformats.org/markup-compatibility/2006&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mc:Ignorable=&amp;#34;d&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Background=&amp;#34;{ThemeResource ApplicationPageBackgroundThemeBrush}&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;TextBlock Text=&amp;#34;Hola mundo, desde UWP y el Blog de Christian&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/Page&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>Ejecutamos la aplicación:
&lt;img src="https://cmas.dev/img/posts/2022/05/11/5.png" alt="">&lt;/li>
&lt;li>Voilá, tenemos nuestra primera app UWP para Windows 11:
&lt;img src="https://cmas.dev/img/posts/2022/05/11/6.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>Si bien es cierto, se recomienda que las aplicaciones para Windows sean creadas con WinUI, aún es posible desarrollarlas con UWP (pero es recomendable hacer la migración correspondiente).&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Git y WSL</title><link>https://cmas.dev/posts/2022-05-04-git-and-wsl/</link><pubDate>Wed, 04 May 2022 13:48:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-05-04-git-and-wsl/</guid><description>&lt;p>En este artículo mostraré cómo instalar o actualizar git dentro de &lt;strong>Windows Subsystem for Linux&lt;/strong> de modo a poder clonar repositorio desde y hacia &lt;strong>GitHub&lt;/strong>. En un &lt;a href="https://cmas.dev/posts/2022-04-26-configuring-my-wsl-environment/">artículo anterior&lt;/a> hemos visto cómo habilitar la plataforma &lt;strong>Windows Subsystem for Linux&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22610&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Debemos seguir algunos pasos para poder isntalar/actualizar &lt;em>Git&lt;/em> dentro de &lt;strong>WSL&lt;/strong> en &lt;em>Windows 11&lt;/em>.&lt;/p>
&lt;h2 id="instalar-git-en-wsl">Instalar Git en WSL&lt;/h2>
&lt;p>Realmente, resulta muy complicado que &lt;strong>WSL&lt;/strong> no traiga instalado &lt;strong>Git&lt;/strong> (lo considera una herramienta indispensable para los desarrolladores), pero si es el caso debemos seguir estos pasos:&lt;/p>
&lt;ol>
&lt;li>Iniciar la aplicación &lt;strong>Windows Subsystem for Linux (Ubuntu)&lt;/strong>.&lt;/li>
&lt;li>Verificamos la versión de Git instalada:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">git --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Asumimos que no tenemos instalado &lt;strong>Git&lt;/strong> (aunque es difícil), entonces procedemos a instalarlo con el comenado &lt;strong>apt-get&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt install git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Veremos la versión actual instalada(Ojo: no es lo mismo Git en Windows que Git en WSL, pueden ser versiones distintas):
&lt;img src="https://cmas.dev/img/posts/2022/05/04/1.png" alt="">&lt;/li>
&lt;/ol>
&lt;h2 id="actualizar-git-en-wsl">Actualizar Git en WSL&lt;/h2>
&lt;p>Debemos seguir algunos pasos sencillos para lograrlos. Estos serían:&lt;/p>
&lt;ol>
&lt;li>Verificamos la versión de Git instalada:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">git --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Actualizamos Git utilizando el mismo comando de instalación:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt install git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Luego de actualizar tendremos la última versión disponible&lt;/li>
&lt;/ol>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>WSL sin internet</title><link>https://cmas.dev/posts/2022-04-27-wsl-no-internet/</link><pubDate>Wed, 27 Apr 2022 12:26:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-04-27-wsl-no-internet/</guid><description>&lt;p>En este artículo mostraré cómo conectar a internet en &lt;strong>Windows Subsystem for Linux&lt;/strong> para cualquier distro (pero aquí siempre con Ubuntu) utilizando &lt;strong>Windows Terminal&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22598&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Debemos seguir algunos pasos sencillos para poder habilitar internet de manera permanente en nuestra distro preferida.&lt;/p>
&lt;h2 id="conexión-a-internet-en-windows-subsystem-for-linux">Conexión a internet en Windows Subsystem for Linux&lt;/h2>
&lt;p>Primero, hacemos ping a algún DNS (que tenga salida a internet):
&lt;img src="https://cmas.dev/img/posts/2022/04/27/wsl1.png" alt="">&lt;/p>
&lt;p>Entonces, debemos abrirl el archivo &lt;strong>resolv.conf&lt;/strong> que se encuentra en nuestro distro WSL:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">nano /etc/resolv.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Abrirá el editor y procedemos a verificar el dato presente allí:
&lt;img src="https://cmas.dev/img/posts/2022/04/27/wsl3.png" alt="">&lt;/p>
&lt;p>Esa IP es privada. ¡Quítala de allí! y usemos el DNS de Google:
&lt;img src="https://cmas.dev/img/posts/2022/04/27/wsl4.png" alt="">&lt;/p>
&lt;p>Probemos nuestro comando &lt;strong>ping&lt;/strong> a ver que ocurre:
&lt;img src="https://cmas.dev/img/posts/2022/04/27/wsl5.png" alt="">&lt;/p>
&lt;h2 id="configuración-permanente-para-acceso-a-internet">Configuración permanente para acceso a Internet&lt;/h2>
&lt;p>Como paso de prueba podemos salir de Ubuntu (emular el apagado de equipo desde &lt;strong>Windows Terminal&lt;/strong>, no desde Ubuntu):
&lt;img src="https://cmas.dev/img/posts/2022/04/27/wsl6.png" alt="">&lt;/p>
&lt;p>Iniciamos Ubuntu nuevamente y probamos &lt;strong>ping&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/04/27/wsl1.png" alt="">&lt;/p>
&lt;p>¡BOOM!&lt;/p>
&lt;p>Corregimos esto al estilo Ubuntu, con &lt;strong>Terminal&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo bash -c &amp;#39;echo -e &amp;#34;[network]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">generateResolvConf = false&amp;#34; &amp;gt; /etc/wsl.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">echo -e &amp;#34;options timeout:1 attempts:1 rotate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nameserver 8.8.8.8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nameserver 8.8.4.4&amp;#34; &amp;gt; /etc/resolv.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chattr -f +i /etc/resolv.conf&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Con esto, logramos que todo funcione correctamente&amp;gt;
&lt;img src="https://cmas.dev/img/posts/2022/04/27/wsl5.png" alt="">&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Configurando mi ambiente WSL</title><link>https://cmas.dev/posts/2022-04-26-configuring-my-wsl-environment/</link><pubDate>Tue, 26 Apr 2022 20:41:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-04-26-configuring-my-wsl-environment/</guid><description>&lt;p>En este artículo mostraré cómo configurar un ambiente de desarrollo WSL (Windows Subsystem Linux) dentro de Windows para el desarrollo de aplicaciones en múltiples plataformas (que en el futuro iré asociando a este artículo). Para este artículo ya tenemos disponible la nueva distro de Ubuntu 22.04 (recientemente lanzada).&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22598&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Debemos seguir algunos pasos para poder habilitar el WSL (Windows Subsystem for Linux) en Windows 11. Es excelente esto para probar todo tipo de aplicaciones sin salir de Windows. Especialmente preparado para .NET Core :)&lt;/p>
&lt;h2 id="preparar-windows-subsystem-for-linux">Preparar Windows Subsystem for Linux&lt;/h2>
&lt;p>Para preparar la plataforma debemos seguir estos pasos:&lt;/p>
&lt;ol>
&lt;li>Nos dirigimos a &lt;strong>Panel de Control&lt;/strong> &amp;gt; &lt;strong>Programas&lt;/strong> &amp;gt; &lt;strong>Habilitar funcionalidades de Windows&lt;/strong>.&lt;/li>
&lt;li>Buscar la opción &lt;strong>Windows Subsystem for Linux&lt;/strong>, marcamos la opción y hacemos clic en &lt;strong>Aceptar&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/04/26/Wsl1.png" alt="">&lt;/li>
&lt;li>Cuando termine la instalación debemos reiniciar el sistema operativo y veremos este nuevo enlace en el &lt;strong>Explorador de archivos&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/04/26/Wsl2.png" alt="">&lt;/li>
&lt;/ol>
&lt;h2 id="instalamos-la-distro-de-preferencia">Instalamos la distro de preferencia&lt;/h2>
&lt;p>En mi caso selecciono Ubuntu, pero existen otras que se encuentran disponibles para su instalación. Aquí procedemos a instalar desde &lt;strong>Microsoft Store&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/04/26/Wsl3.png" alt="">&lt;/p>
&lt;p>Una vez que haya culminado la instalación, procedemos a abrir la nueva App (sí, se encuentra como una App):
&lt;img src="https://cmas.dev/img/posts/2022/04/26/Wsl4.png" alt="">&lt;/p>
&lt;h2 id="windows-terminal">Windows Terminal&lt;/h2>
&lt;p>Aquí es donde empezamos a disfrutar de nuestra distro de Linux favorita para empezar a jugar con ella.&lt;/p>
&lt;p>Creamos un usuario para nuestro sistema operativo Ubuntu (puede o no ser igual al usuario de Windows):
&lt;img src="https://cmas.dev/img/posts/2022/04/26/Wsl5.png" alt="">&lt;/p>
&lt;p>Por último, accedemos a la terminal de Ubuntu y realizamos las tareas que queramos dentro de Ubuntu, que está dentro de Windows 11.
&lt;img src="https://cmas.dev/img/posts/2022/04/26/Wsl6.png" alt="">&lt;/p>
&lt;p>Podemos verificar que distro estamos ejecutando:
&lt;img src="https://cmas.dev/img/posts/2022/04/26/Wsl7.png" alt="">&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Introducción a Windows Fluent Design System</title><link>https://cmas.dev/posts/2022-04-25-introduction-to-windows-fluent-system/</link><pubDate>Mon, 25 Apr 2022 19:22:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-04-25-introduction-to-windows-fluent-system/</guid><description>&lt;p>En este artículo intentaré enteder y explicar qué es &lt;strong>Windows Fluent Design System&lt;/strong>, por qué es Open Source, para qué se utiliza y que se puede lograr con esto.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22598&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Personalmente tengo muchas dudas y consultas sobre este punto. Hace un tiempo que veo esto pero no he tenido el tiempo para detenerme a investigar. Así que hagámos juntos el recorrido. Las consultas que me surgen son:&lt;/p>
&lt;ul>
&lt;li>¿Qué es?&lt;/li>
&lt;li>¿Para qué se utiliza?&lt;/li>
&lt;li>¿Por qué Microsoft apostó a este proyecto &lt;strong>Open Source&lt;/strong>?&lt;/li>
&lt;li>¿Qué beneficios tengo como desarrollador &lt;em>Windows&lt;/em>?&lt;/li>
&lt;li>¿Qué puedo lograr con esto?&lt;/li>
&lt;/ul>
&lt;h2 id="qué-es-windows-fluent-design-system">¿Qué es &lt;strong>Windows Fluent Design System&lt;/strong>?&lt;/h2>
&lt;p>&lt;strong>Fluent Design System&lt;/strong> es un sistema de diseño abierto y multiplataforma que ofrece a los diseñadores y desarrolladores los marcos que necesitan para crear experiencias de producto atractivas.&lt;/p>
&lt;p>&lt;strong>Fluent Design System&lt;/strong> es el sistema de diseño en evolución de Microsoft que se basa en cinco principios: &lt;strong>luz&lt;/strong>, &lt;strong>profundidad&lt;/strong>, &lt;strong>movimiento&lt;/strong>, &lt;strong>material&lt;/strong> y &lt;strong>escala&lt;/strong>. El objetivo es crear experiencias de usuario fluidas y adaptables a diferentes contextos y dispositivos.&lt;/p>
&lt;p>🤔&lt;/p>
&lt;h2 id="para-qué-windows-fluent-design-system">¿Para qué &lt;strong>Windows Fluent Design System&lt;/strong>?&lt;/h2>
&lt;p>Utilizaría &lt;strong>Fluent Design System&lt;/strong> para crear experiencias de producto atractivas y naturales en cada dispositivo. Algunos beneficios son:&lt;/p>
&lt;ol>
&lt;li>La accesibilidad se refiere a la capacidad de diseñar para todos los rangos de diversidad humana, reconociendo las exclusiones y usándolas como oportunidades para crear diseños inclusivos.&lt;/li>
&lt;li>La internacionalización se refiere a la capacidad de adaptar el diseño a diferentes idiomas, culturas y contextos.&lt;/li>
&lt;li>El rendimiento se refiere a la capacidad de optimizar el diseño para que funcione bien en diferentes dispositivos y plataformas.&lt;/li>
&lt;li>La coherencia entre los equipos de diseño y desarrollo se refiere a la capacidad de crear una fuente única de verdad entre todos los equipos de desarrollo de productos, trabajando con los mismos componentes y limitaciones.&lt;/li>
&lt;/ol>
&lt;p>Algunas posibles desventajas de usar &lt;strong>Fluent Design System&lt;/strong> son:&lt;/p>
&lt;ul>
&lt;li>Puede ser percibido como una copia de otros sistemas de diseño como &lt;em>iOS&lt;/em> o &lt;em>Material Design&lt;/em>.&lt;/li>
&lt;li>Puede ser incompleto y sin una fecha o hitos claros de lanzamiento.&lt;/li>
&lt;li>Puede requerir un aprendizaje y una adaptación constantes a medida que evoluciona.&lt;/li>
&lt;/ul>
&lt;h2 id="por-qué-microsoft-apostó-a-este-proyecto-open-source">¿Por qué Microsoft apostó a este proyecto &lt;strong>Open Source&lt;/strong>?&lt;/h2>
&lt;p>Microsoft posiblemente apostó a este proyecto &lt;strong>Open Source&lt;/strong> porque:&lt;/p>
&lt;ul>
&lt;li>Quería construir un sistema de diseño colectivo que aprovechara el impulso de las cosas geniales que ya estaban sucediendo en &lt;strong>Microsoft&lt;/strong>, sin pisar los pies a nadie.&lt;/li>
&lt;li>Quería celebrar a quienes contribuyen a lo que hace colectivamente la comunidad, sin importar en qué equipo trabajen.&lt;/li>
&lt;li>Quería crear experiencias de producto atractivas y adaptables a diferentes contextos y dispositivos.&lt;/li>
&lt;/ul>
&lt;h2 id="qué-beneficios-tengo-como-desarrollador-windows">¿Qué beneficios tengo como desarrollador &lt;em>Windows&lt;/em>?&lt;/h2>
&lt;p>Algunos beneficios que se tiene como desarrollador al usar &lt;strong>Fluent Design System&lt;/strong> son:&lt;/p>
&lt;ul>
&lt;li>Se puede crear aplicaciones hermosas y expresivas con el lenguaje de diseño &lt;strong>Fluent&lt;/strong>, con animaciones, desenfoque y fluidez.&lt;/li>
&lt;li>Se puede trabajar con los mismos componentes y limitaciones que los diseñadores, creando una fuente única de verdad entre todos los equipos de desarrollo de productos.&lt;/li>
&lt;li>Se puede aprovechar los marcos de trabajo que ofrece &lt;strong>Fluent&lt;/strong> para crear experiencias de producto atractivas e inclusivas en diferentes plataformas y dispositivos.&lt;/li>
&lt;/ul>
&lt;p>La relación entre &lt;strong>Fluent Design System&lt;/strong> y el desarrollador de software es la siguiente:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Fluent&lt;/strong> es un sistema de diseño abierto y multiplataforma que ofrece al desarrollador los marcos de trabajo necesarios para crear experiencias de producto atractivas e inclusivas en diferentes plataformas y dispositivos.&lt;/li>
&lt;li>&lt;strong>Fluent&lt;/strong> es independiente de cualquier tecnología de implementación particular, lo que permite al desarrollador elegir la que más convenga.&lt;/li>
&lt;li>&lt;strong>Fluent&lt;/strong> le proporciona al desarrollador una serie de componentes web, sistemas de diseño y aplicaciones que puede usar para crear sus propios proyectos.&lt;/li>
&lt;/ol>
&lt;h2 id="qué-puedo-lograr-con-esto">¿Qué puedo lograr con esto?&lt;/h2>
&lt;p>Con &lt;strong>Fluent&lt;/strong> se puede lograr lo siguiente:&lt;/p>
&lt;ul>
&lt;li>Crear experiencias de producto coherentes, de calidad y alineadas con la plataforma Microsoft.&lt;/li>
&lt;li>Extender y personalizar sus proyectos con una base sólida y flexible.&lt;/li>
&lt;li>Aplicar los principios de accesibilidad, internacionalización y rendimiento a sus diseños.&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Como conclusión podemos menciona que:&lt;/p>
&lt;ul>
&lt;li>Ayuda a crear experiencias naturales y productivas en cada dispositivo.&lt;/li>
&lt;li>Ofrece recursos para diseñar interfaces de usuario en &lt;strong>Windows&lt;/strong>, &lt;strong>Web&lt;/strong>, &lt;strong>Móvil&lt;/strong> y &lt;strong>Multiplataforma&lt;/strong>.&lt;/li>
&lt;li>Proporciona un sistema de diseño inclusivo y diverso que se adapta a las necesidades de los usuarios.&lt;/li>
&lt;li>Facilita el trabajo en equipo con una fuente única de verdad para los componentes y herramientas de diseño.&lt;/li>
&lt;/ul>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Integración de Azure DevOps con GitHub</title><link>https://cmas.dev/posts/2022-04-18-azure-devops-integration-with-github/</link><pubDate>Mon, 18 Apr 2022 23:24:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-04-18-azure-devops-integration-with-github/</guid><description>&lt;p>En este artículo mostraré cómo integrar un repositorio GitHub, que lo hemos visto en &lt;a href="https://cmas.dev/posts/2022-04-04-create-repository-github/">este artículo&lt;/a>, con Azure DevOps que lo hemos visto &lt;a href="https://cmas.dev/posts/2022-04-11-create-project-azure-devops/">aquí&lt;/a>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22598&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Primeramente, debemos ingresar a la configuración del proyecto:
&lt;img src="https://cmas.dev/img/posts/2022/04/18/1.png" alt="">&lt;/p>
&lt;p>Nos dirigmos a la sección &lt;strong>Boards&lt;/strong> &amp;gt; &lt;strong>GitHub connections&lt;/strong> y hacemos clic en el botón correspondiente:
&lt;img src="https://cmas.dev/img/posts/2022/04/18/2.png" alt="">&lt;/p>
&lt;p>Como toda aplicación tercerizada, debemos autorizar su uso:
&lt;img src="https://cmas.dev/img/posts/2022/04/18/3.png" alt="">&lt;/p>
&lt;p>Agregamos los repositorios necesarios:
&lt;img src="https://cmas.dev/img/posts/2022/04/18/4.png" alt="">&lt;/p>
&lt;p>Autorizamos a Azure Boards para el acceso a GitHub:
&lt;img src="https://cmas.dev/img/posts/2022/04/18/5.png" alt="">&lt;/p>
&lt;p>Verificamos que la conexión esté activa y funcional:
&lt;img src="https://cmas.dev/img/posts/2022/04/18/6.png" alt="">&lt;/p>
&lt;p>Tenemos lista la integración entre Azure DevOps y GitHub para proceder con la automatización de procesos. En artículos posteriores iremos avanzando con el CI/CD para sacarle el jugo a esta configuración.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Crear un proyecto en Azure DevOps</title><link>https://cmas.dev/posts/2022-04-11-create-project-azure-devops/</link><pubDate>Mon, 11 Apr 2022 18:01:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-04-11-create-project-azure-devops/</guid><description>&lt;p>En este artículo mostraré cómo crear un proyecto en Microsoft Azure DevOps para realizar todas las tareas relacionadas a CI/CD (Integración Contínua/Entrega Contíuna) con la plataforma Windows, sobre todo con UWP (Universal Windows Platform).&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22593&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Debemos ingresar a la plataforma de Azure DevOps &lt;a href="https://dev.azure.com/">aquí&lt;/a> y accederá al perfil (sino tienes una cuenta creada, es el momento de hacerlo).&lt;/p>
&lt;p>Procedemos a crear el proyecto:
&lt;img src="https://cmas.dev/img/posts/2022/04/11/1.png" alt="">&lt;/p>
&lt;p>Completamos los campos necesarios para la creación del proyecto y completamos las necesidades:
&lt;img src="https://cmas.dev/img/posts/2022/04/11/2.png" alt="">&lt;/p>
&lt;p>Una vez creado el proyecto veremos los accesos necesarios para la implementación de CI/CD:
&lt;img src="https://cmas.dev/img/posts/2022/04/11/3.png" alt="">&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Crear un repositorio en GitHub</title><link>https://cmas.dev/posts/2022-04-04-create-repository-github/</link><pubDate>Mon, 04 Apr 2022 22:13:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-04-04-create-repository-github/</guid><description>&lt;p>En este artículo mostraré cómo crear un repositorio en GitHub para poder integrarlo en el futuro con Azure DevOps.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22581&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Crear un repositorio en GitHub es un proceso muy sencillo. La documentación es muy completa y se encuentra &lt;a href="https://docs.github.com/es/repositories">aquí&lt;/a>. Este artículo sólo busca acortar el proceso de creación de un repositorio que lo utilizaremos las próximas semanas.&lt;/p>
&lt;h2 id="crear-nuevo-repositorio">Crear nuevo repositorio&lt;/h2>
&lt;p>Para crear el nuevo repositorio buscamos el menú &lt;strong>New&lt;/strong>
&lt;img src="https://cmas.dev/img/posts/2022/04/04/0.png" alt="">&lt;/p>
&lt;p>Luego, procedemos a cargar los datos necesarios para la creación del repositorio:
&lt;img src="https://cmas.dev/img/posts/2022/04/04/1.png" alt="">&lt;/p>
&lt;p>Por último, verificamos el repositorio creado:
&lt;img src="https://cmas.dev/img/posts/2022/04/04/2.png" alt="">&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>VS: Instalando Visual Studio 2022 Preview 1</title><link>https://cmas.dev/posts/2021-06-19-instalando-visual-studio-2022-preview/</link><pubDate>Sat, 19 Jun 2021 11:56:00 -0400</pubDate><guid>https://cmas.dev/posts/2021-06-19-instalando-visual-studio-2022-preview/</guid><description>&lt;p>El pasado 17 de junio, Microsoft ha lanzado la versión Preview del nuevo Visual Studio 2022, el cual posee muchas mejoras en cuanto a productividad se refiere. En este artículo mostraré el proceso de instalación de Visual Studio 2022 Preview 1.&lt;/p>
&lt;p>Para mayor detalle de las características del producto puedes ver &lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-preview-1-now-available/">aquí&lt;/a>&lt;/p>
&lt;h1 id="instalación-de-visual-studio-2022-preview-1">Instalación de Visual Studio 2022 Preview 1&lt;/h1>
&lt;p>Para la instalación del nuevo Visual Studio debemos realizar las siguientes tareas:
0. En mi caso, procedí a desinstalar todas las versiones de Visual Studio que tenía instaladas:&lt;br>
&lt;img src="https://cmas.dev/img/posts/visualstudio/visual-studio-2022-preview-1_1.png" alt="">&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Seleccionar la versión de Visual Studio que necesitamos (siempre elijo Professional):&lt;br>
&lt;img src="https://cmas.dev/img/posts/visualstudio/visual-studio-2022-preview-1_2.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Veremos la ventana principal del instalador y hacemos clic en &amp;ldquo;Continuar&amp;rdquo;:&lt;br>
&lt;img src="https://cmas.dev/img/posts/visualstudio/visual-studio-2022-preview-1_3.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Seleccionamos los componentes necesarios para los desarrollos que haremos (como mi foco es Windows y WSL seleccioné estos):&lt;br>
&lt;img src="https://cmas.dev/img/posts/visualstudio/visual-studio-2022-preview-1_4.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Leemos el &lt;a href="https://devblogs.microsoft.com/visualstudio/visual-studio-2022-preview-1-now-available/">blog&lt;/a> indicado más arriba mientras esperamos al instalador que termine su trabajo:&lt;br>
&lt;img src="https://cmas.dev/img/posts/visualstudio/visual-studio-2022-preview-1_5.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Listo. Estamos listos para la primera experiencia Visual Studio 2022 Preview 1:&lt;br>
&lt;img src="https://cmas.dev/img/posts/visualstudio/visual-studio-2022-preview-1_6.png" alt="">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h1 id="primera-vez-con-visual-studio-2022-preview-1">Primera vez con Visual Studio 2022 Preview 1&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>Una vez instalado procedemos a iniciar el nuevo programa instalado:&lt;br>
&lt;img src="https://cmas.dev/img/posts/visualstudio/visual-studio-2022-preview-1_7.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Pantalla principal del Visual Studio:&lt;br>
&lt;img src="https://cmas.dev/img/posts/visualstudio/visual-studio-2022-preview-1_8.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Creación de un nuevo proyecto:&lt;br>
&lt;img src="https://cmas.dev/img/posts/visualstudio/visual-studio-2022-preview-1_9.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Entorno de desarrollo UWP (Universal Windows Platform):&lt;br>
&lt;img src="https://cmas.dev/img/posts/visualstudio/visual-studio-2022-preview-1_10.png" alt="">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>De esta manera, hemos visto cómo instalar Visual Studio 2022 Preview 1 y hemos dado un vistazo general en su primer uso.&lt;/p>
&lt;p>Espero que lo puedan probar y dejen su feedback. ¡A disfrutarlo!&lt;/p></description></item></channel></rss>