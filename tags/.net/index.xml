<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>.NET on Christian Amado's Blog</title><link>https://cmas.dev/tags/.net/</link><description>Recent content in .NET on Christian Amado's Blog</description><generator>Hugo -- gohugo.io</generator><language>es</language><managingEditor>biz@cmas.dev (Christian Amado)</managingEditor><webMaster>biz@cmas.dev (Christian Amado)</webMaster><lastBuildDate>Wed, 17 Jul 2024 00:00:00 -0400</lastBuildDate><atom:link href="https://cmas.dev/tags/.net/index.xml" rel="self" type="application/rss+xml"/><item><title>.NET Web API con Proyecto IDX</title><link>https://cmas.dev/posts/2024-07-17-dotnet-project-idx/</link><pubDate>Wed, 17 Jul 2024 00:00:00 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2024-07-17-dotnet-project-idx/</guid><description>&lt;p>En este artículo veremos cómo crear una Web API básica con el nuevo &lt;strong>Proyecto IDX&lt;/strong> de &lt;strong>Google&lt;/strong>, totalmente desde el navegador sin la necesidad de instalar absolutamente nada en él.&lt;/p>
&lt;p>El &lt;strong>Proyecto IDX&lt;/strong>, según &lt;strong>Google&lt;/strong> es:&lt;/p>
&lt;blockquote>
&lt;p>Project IDX es un espacio de trabajo asistido por IA para el desarrollo de aplicaciones multiplataforma y de pila completa en la nube.
Con soporte para una amplia gama de marcos, lenguajes y servicios, además de integraciones con sus productos favoritos de Google, IDX optimiza su flujo de trabajo de desarrollo para que pueda crear y enviar aplicaciones entre plataformas con velocidad, facilidad y calidad.&lt;/p>
&lt;/blockquote>
&lt;p>Más info &lt;a href="https://idx.dev/">aquí&lt;/a>&lt;/p>
&lt;p>En este artículo veremos cómo crear una app backend con .NET, bien sencilla a modo de demostración. Para ello, seguiremos los siguientes pasos:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Ingresamos al IDE (web) &lt;a href="https://idx.google.com/?pli=1">aquí&lt;/a>. Se necesita iniciar sesión con una cuenta &lt;strong>Google&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Buscamos más plantillas (la idea es encontrar a .NET):
&lt;img src="https://i.ibb.co/ZWH4KVc/idx-1.png">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>En la sección &lt;strong>Backend&lt;/strong>, buscamos a &lt;strong>.NET&lt;/strong> y la seleccionamos:
&lt;img src="https://i.ibb.co/w0WTPFy/idx-2.png">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Colocamos un nombre descriptivo, seleccionamos el ambiente ideal y creamos el proyecto:
&lt;img src="https://i.ibb.co/WcJ8hx2/idx-3.png">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Nos mostrará el indicador de creación del proyecto:
&lt;img src="https://i.ibb.co/Stb8CYR/idx-4.png">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Nos abre el IDX (hasta ahora vi que es un Visual Studio Code en la nube, tal como GitHub Codespace) y miramos el código de ejemplo:
&lt;img src="https://i.ibb.co/zQjNKYp/idx-5.png">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Procedemos a ejecutar al aplicación en cuestión:
&lt;img src="https://i.ibb.co/r6CNSTQ/idx-6.png">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Nos ofrece opciones para abrir la web:
&lt;img src="https://i.ibb.co/yFQkkGD/idx-7.png">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>En una nueva pestaña, nos muestra la web App.
&lt;img src="https://i.ibb.co/ngHNgCv/idx-8.png">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Algo que noté es que la plantilla figura en &lt;strong>Backend&lt;/strong>, pero tranquilamente podemos crear una aplicación Full Stack con .NET de base para cubrir nuestras necesidades.&lt;/p>
&lt;p>Al momento de escribir este artículo noto que &lt;strong>Proyecto IDX&lt;/strong> = &lt;strong>GitHub Codespace&lt;/strong>. La base es Visual Studio Code.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Incrustar página web externa en Power Apps</title><link>https://cmas.dev/posts/2023-09-20-embed-external-page-in-power-apps/</link><pubDate>Wed, 20 Sep 2023 00:00:00 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2023-09-20-embed-external-page-in-power-apps/</guid><description>&lt;p>En este artículo veremos cómo incrustar oáginas web externas en &lt;strong>Microsoft Power Apps&lt;/strong> como si incluyeramos un IFrame dentro de nuestra App.&lt;/p>
&lt;p>Un cliente me ha solicitado hace poco que le incluya un sitio web dentro de su aplicación &lt;strong>Power Apps&lt;/strong> y no sabía cómo hacerlos, de hecho tenía entendido que no se podía hacerlo.&lt;/p>
&lt;p>Pero he encontrado una forma y el cliente quedó contento.&lt;/p>
&lt;h1 id="windows-y-powershell">Windows y PowerShell&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>Descargar los componentes de ejemplo desde aquí:
&lt;img src="https://i.ibb.co/3vjKfwD/external-web-pa-1.png">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Descargar el &lt;strong>Power Platform CLI&lt;/strong> desde &lt;a href="https://aka.ms/PowerAppsCLI">aquí&lt;/a> (en mi caso instalé la versión MSI).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Descomprimir el archivo descargado desde &lt;strong>GitHub&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>En &lt;strong>PowerShell&lt;/strong> empezar a jugar un poco con los comandos (siguiendo las instrucciones de &lt;a href="https://github.com/microsoft/PowerApps-Samples/blob/master/component-framework/README.md">aqui&lt;/a>):&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd C:\A\PowerApps-Samples-master\PowerApps-Samples-master\component-framework\IFrameControl\
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">mkdir IFrameSolution
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd C:\A\PowerApps-Samples-master\PowerApps-Samples-master\component-framework\IFrameControl\IFrameSolution
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pac solution init --publisher-name powerapps_samples --publisher-prefix sample
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pac solution add-reference --path ../../IFrameControl
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pac solution add-reference --path ../../IFrameControl/IFrameControl.pcfproj
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">msbuild /t:restore
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">msbuild /t:rebuild /restore /p:Configuration=Release
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">msbuild
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Con todo esto se debe crear un archivo &lt;strong>IFrameSolution.zip&lt;/strong> dentro de la carpeta &lt;em>bin/Release/&lt;/em>, el cual, llevaremos a &lt;strong>Power Apps&lt;/strong>.&lt;/p>
&lt;h1 id="power-apps">Power Apps&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>Procedemos a importar la solución generada en los pasos anteriores:
&lt;img src="https://i.ibb.co/gw2D1Pw/external-web-pa-2.png">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Verificamos si la importación fue correcta:
&lt;img src="https://i.ibb.co/RS07pgJ/external-web-pa-3.png">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Importamos el componente (en este caso, es un componente de tipo Código):
&lt;img src="https://i.ibb.co/D9TPFHL/external-web-pa-4.png">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Utilizamos el IFRAME&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Debemos tener en cuenta que el control de ejemplo sólo es un Mapa de Bing que permite latitud y longitud. Como en mi caso, se pueden agregar y/o modificar los parametros y volver a generar el control para cubrir nuestras necesidades.&lt;/p>
&lt;p>Se debe tener cuidado con ingresas &lt;strong>JavaScript&lt;/strong> pues el componente puede ser bloqueado por considerarse araque de &lt;strong>Cross-Site Scripting (XSS)&lt;/strong>.&lt;/p>
&lt;p>De esta manera, hemos visto como incrustar una página web dentro de &lt;strong>Microsoft Power Apps&lt;/strong>&lt;/p>
&lt;p>¡Espero resulte de utilidad!&lt;/p></description></item><item><title>Desarrollo en Windows App SDK</title><link>https://cmas.dev/posts/2022-05-18-windows-app-sdk-development/</link><pubDate>Wed, 18 May 2022 21:56:00 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2022-05-18-windows-app-sdk-development/</guid><description>&lt;p>En este articulo, mostraré cómo empezar con el desarrollo con Windows App SDK especialmente diseñado para Widnows 11 y ciertas versiones de Windows 10 (superior a la versión 1809).&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22621&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Entresacando un poco las definiciones desde la &lt;a href="https://learn.microsoft.com/es-es/windows/apps/windows-app-sdk/">página oficial de Microsoft&lt;/a> encontramos este resumen:&lt;/p>
&lt;blockquote>
&lt;p>Windows App SDK es un conjunto de nuevas herramientas y componentes para desarrolladores que representa la próxima evolución en la plataforma de desarrollo de aplicaciones de Windows. Windows App SDK proporciona un conjunto unificado de API y herramientas que cualquier aplicación de escritorio puede usar de forma coherente en Windows 11 y niveles inferiores hasta Windows 10, versión 1809.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Windows App SDK complementa estas herramientas y tipos de aplicación existentes con un conjunto común de API que los desarrolladores pueden utilizar en estas plataformas.&lt;/p>
&lt;/blockquote>
&lt;p>Con todo esto podemos ver las &lt;a href="https://learn.microsoft.com/es-es/windows/apps/windows-app-sdk/#windows-app-sdk-features">&lt;strong>características de Windows App SDK&lt;/strong>&lt;/a>.&lt;/p>
&lt;h1 id="creación-de-un-proyecto-winui">Creación de un proyecto WinUI&lt;/h1>
&lt;p>Para empezar a utilizar Windows App SDK, debemos crear una interfaz de usuario y eso se explica en el sitio oficial de Microsoft:&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>WinUI 3&lt;/strong> es el componente de la plataforma de interfaz de usuario nativa que se incluye con el SDK de Aplicaciones para Windows (completamente desacoplado de los SDK de Windows). El SDK de Aplicaciones para Windows proporciona un conjunto unificado de API y herramientas que se pueden usar para crear aplicaciones de escritorio de producción destinadas a Windows 10 y versiones posteriores que se pueden publicar en Microsoft Store.&lt;/p>
&lt;/blockquote>
&lt;p>Para la creación del proyecto debemos realizar los siguientes pasos:&lt;/p>
&lt;ol>
&lt;li>Crear un proyecto de tipo &lt;strong>WinUI 3&lt;/strong>
&lt;img src="https://cmas.dev/img/posts/2022/05/18/1.png">&lt;/li>
&lt;li>Se coloca un nombre descriptivo para el proyecto:
&lt;img src="https://cmas.dev/img/posts/2022/05/18/2.png">&lt;/li>
&lt;li>Se crea el proyecto con los siguientes archivos:
&lt;img src="https://cmas.dev/img/posts/2022/05/18/3.png">&lt;/li>
&lt;li>Procedemos a ejecutar la aplicación (y se ejecutará en nuestro &lt;strong>Windows 11&lt;/strong> directamente):
&lt;img src="https://cmas.dev/img/posts/2022/05/18/4.png">&lt;/li>
&lt;li>Veremos la aplicación ejecutada:
&lt;img src="https://cmas.dev/img/posts/2022/05/18/5.png">&lt;/li>
&lt;/ol>
&lt;p>Con esto logramos crear nuestra primera aplicación &lt;strong>WinUI 3&lt;/strong>.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item></channel></rss>