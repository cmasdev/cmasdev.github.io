<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AL on Blog de Christian Amado</title><link>https://cmas.dev/tags/al/</link><description>Recent content in AL on Blog de Christian Amado</description><generator>Hugo -- gohugo.io</generator><language>es</language><managingEditor>biz@cmas.dev (Christian Amado)</managingEditor><webMaster>biz@cmas.dev (Christian Amado)</webMaster><lastBuildDate>Wed, 16 Feb 2022 09:12:07 -0400</lastBuildDate><atom:link href="https://cmas.dev/tags/al/index.xml" rel="self" type="application/rss+xml"/><item><title>Business Central: Funciones recursivas en AL</title><link>https://cmas.dev/posts/2022-02-16-business-central-funciones-recursivas-en-al/</link><pubDate>Wed, 16 Feb 2022 09:12:07 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2022-02-16-business-central-funciones-recursivas-en-al/</guid><description>&lt;p>En este artículo mostraré cómo se realizan funciones recursivas dentro de Microsoft Dynamics 365 Business Central con el lenguaje de programación AL.&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2021 Wave 1 (KID: 5007779)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Como en cualquier lenguaje de programación tenemos funciones recursivas que pueden ser utilizadas dentro del lenguaje AL.&lt;/p>
&lt;p>En este ejemplo, haremos la &lt;a href="https://es.wikipedia.org/wiki/Sucesi%C3%B3n_de_Fibonacci">serie Fibonacci&lt;/a>, tan común en el mundo de la programación.&lt;/p>
&lt;p>En alguna página vamos a escribir el siguiente código:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pageextension 50102 CustomerListExt extends &amp;#34;Customer List&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> trigger OnOpenPage()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> var
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Contador: Integer;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Texto: Text;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Texto := &amp;#39;&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Contador := 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> while Contador &amp;lt; 10 do begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Texto += Format(Fibonacci(Contador)) + &amp;#39; &amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Contador += 1;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Message(Texto);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> procedure Fibonacci(numero: integer): integer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> var
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> resultado: integer;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if numero = 0 then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> exit(0)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> else
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if numero = 1 then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> exit(1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> else begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> exit(fibonacci(numero - 1) + fibonacci(numero - 2));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Para este ejemplo, la función Fibonacci es recursiva porque se llama a sí misma indefinidamente.&lt;/p>
&lt;p>El resultado queda de la siguiente manera en Microsoft Dynamics 365 Business Central.&lt;br>
&lt;img src="https://cmas.dev/img/posts/2022/02/16/Recursivo1.png" alt="">&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Business Central: Dependencia en extensiones</title><link>https://cmas.dev/posts/2022-01-19-business-central-dependencia-extensiones/</link><pubDate>Wed, 19 Jan 2022 17:21:04 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2022-01-19-business-central-dependencia-extensiones/</guid><description>&lt;p>En este artículo mostraré cómo indicar que un campo es requerido y realizar el control pertinente en Microsoft Dynamics 365 Business Central.&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2021 Wave 1 (KID: 5007779)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Básicamente, la idea aquí es demostrar cómo una extensión depende de otra para su funcionamiento. Esto se logra configurando el archivo &lt;strong>app.json&lt;/strong>.&lt;/p>
&lt;h2 id="base">Base&lt;/h2>
&lt;p>Primero, se desarrolla la extensión base. En este caso el archivo &lt;strong>app.json&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;id&amp;#34;: &amp;#34;a41c92fb-dc08-4252-be15-e1d693e9bbbf&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;name&amp;#34;: &amp;#34;Dependencia1&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;publisher&amp;#34;: &amp;#34;cmasdev&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;version&amp;#34;: &amp;#34;1.0.0.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;brief&amp;#34;: &amp;#34;Prueba dependencia&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;description&amp;#34;: &amp;#34; Solo es una prueba&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;privacyStatement&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;EULA&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;help&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;url&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;logo&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;dependencies&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;screenshots&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;platform&amp;#34;: &amp;#34;1.0.0.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;application&amp;#34;: &amp;#34;19.0.0.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;idRanges&amp;#34;: [
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;from&amp;#34;: 50100,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;to&amp;#34;: 50149
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;resourceExposurePolicy&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;allowDebugging&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;allowDownloadingSource&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;includeSourceInSymbolFile&amp;#34;: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;runtime&amp;#34;: &amp;#34;8.0&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Y la página de ejemplo se ve así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pageextension 50100 CustomerListExt extends &amp;#34;Customer List&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> trigger OnOpenPage();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Message(&amp;#39;Soy la dependencia base&amp;#39;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://cmas.dev/img/posts/2022/01/19/Dependencia1.png" alt="">&lt;/p>
&lt;h2 id="dependencia">Dependencia&lt;/h2>
&lt;p>Esta extensión depende de la otra para funcionar. Sin eso, no es posible el funcionamiento. En el archivo &lt;strong>app.json&lt;/strong> definimos la dependencia así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;id&amp;#34;: &amp;#34;8941379f-65d8-46c5-8f12-3931790d2f23&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;name&amp;#34;: &amp;#34;BC2021W1&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;publisher&amp;#34;: &amp;#34;cmasdev&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;version&amp;#34;: &amp;#34;1.0.0.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;brief&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;description&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;privacyStatement&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;EULA&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;help&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;url&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;logo&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;dependencies&amp;#34;:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;id&amp;#34;: &amp;#34;a41c92fb-dc08-4252-be15-e1d693e9bbbf&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;name&amp;#34;: &amp;#34;Dependencia1&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;publisher&amp;#34;: &amp;#34;cmasdev&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;version&amp;#34;: &amp;#34;1.0.0.0&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;screenshots&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;platform&amp;#34;: &amp;#34;1.0.0.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;application&amp;#34;: &amp;#34;19.0.0.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;idRanges&amp;#34;: [
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;from&amp;#34;: 50100,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;to&amp;#34;: 50149
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;resourceExposurePolicy&amp;#34;:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {&amp;#34;allowDebugging&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;allowDownloadingSource&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;includeSourceInSymbolFile&amp;#34;: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;runtime&amp;#34;: &amp;#34;8.0&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Si nos fijamos en la página que estamos creando y coinciden los números de elementos que creamos en la dependencia base, se produce un error:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2022/01/19/Dependencia2.png" alt="">&lt;/p>
&lt;p>De esta manera comprobamos que respeta los valores de la dependencia, pues debemos &lt;a href="https://cmas.dev/posts/2021-09-07-business-central-download-symbols-cloud">descargar los símbolos&lt;/a> para poder ejecutarlo y ahí se crea el enlace.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>BC Tips: Administrar tareas programadas</title><link>https://cmas.dev/posts/2022-01-13-business-central-administrar-tareas-programadas/</link><pubDate>Thu, 13 Jan 2022 18:43:21 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2022-01-13-business-central-administrar-tareas-programadas/</guid><description>&lt;p>En este artículo mostraré cómo gestionar tareas programadas que pueden ser llamadas a CodeUnits y/o reportes en Microsoft Dynamics 365 Business Central.&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2021 Wave 1 (KID: 5007779)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Primero, debemos acceder a la página en cuestión (&lt;strong>Movs. cola proyecto&lt;/strong>):&lt;br>
&lt;img src="https://cmas.dev/img/posts/2022/01/13/Tarea1.png" alt="">&lt;/p>
&lt;p>En la lista, seleccionamos el botón &lt;strong>nuevo&lt;/strong>:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2022/01/13/Tarea2.png" alt="">&lt;/p>
&lt;p>Empezamos a crear la tarea, marcando el objeto que necesitamos (sólo pueden ser reportes y CodeUnits):&lt;br>
&lt;img src="https://cmas.dev/img/posts/2022/01/13/Tarea3.png" alt="">&lt;/p>
&lt;p>En este caso, seleccionamos un reporte:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2022/01/13/Tarea4.png" alt="">&lt;/p>
&lt;p>Completamos los datos necesarios de la tarea:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2022/01/13/Tarea5.png" alt="">&lt;/p>
&lt;p>Si deseamos hacer que el reporte se genere con una cierta periodicidad, lo hacemos aquí:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2022/01/13/Tarea6.png" alt="">&lt;/p>
&lt;p>Veremos la lista de tareas que tenemos:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2022/01/13/Tarea6.png" alt="">&lt;/p>
&lt;p>De esta manera, hemos realizado una tarea programada que se ejecutará según los criterios que hayamos seleccionado en la configuración de la misma.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Business Central: Localización con archivos XLIFF</title><link>https://cmas.dev/posts/2021-12-22-business-central-localizacion-archivos-xliff/</link><pubDate>Wed, 22 Dec 2021 13:27:04 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-12-22-business-central-localizacion-archivos-xliff/</guid><description>&lt;p>En este artículo mostraré cómo gestionar las traducciones en un archivo de configuración dentro de Microsoft Dynamics 365 Business Central.&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2021 Wave 1 (KID: 5007779)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Primeramente, debemos establecer la propiedad &lt;strong>features&lt;/strong> en el archivo de configuración &lt;strong>app.json&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;id&amp;#34;: &amp;#34;8941379f-65d8-46c5-8f12-3931790d2f23&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;name&amp;#34;: &amp;#34;BC2021W1&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;publisher&amp;#34;: &amp;#34;cmasdev&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;version&amp;#34;: &amp;#34;1.0.0.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;brief&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;description&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;privacyStatement&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;EULA&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;help&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;url&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;logo&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;dependencies&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;screenshots&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;platform&amp;#34;: &amp;#34;1.0.0.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;application&amp;#34;: &amp;#34;19.0.0.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;idRanges&amp;#34;: [
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;from&amp;#34;: 50100,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;to&amp;#34;: 50149
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;features&amp;#34;: [ &amp;#34;TranslationFile&amp;#34; ],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;resourceExposurePolicy&amp;#34;:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {&amp;#34;allowDebugging&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;allowDownloadingSource&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;includeSourceInSymbolFile&amp;#34;: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;runtime&amp;#34;: &amp;#34;8.0&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Con la opcion &lt;strong>TranslationFile&lt;/strong> en &lt;strong>Features&lt;/strong> logramos habilitar el archivo &lt;strong>xliff&lt;/strong> que nos permite gestionar las traducciones.&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/12/22/Translate1.png" alt="">&lt;/p>
&lt;p>El archivo generado de manera automática queda de la siguiente manera:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;xliff version=&amp;#34;1.2&amp;#34; xmlns=&amp;#34;urn:oasis:names:tc:xliff:document:1.2&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;file datatype=&amp;#34;xml&amp;#34; source-language=&amp;#34;en-US&amp;#34; target-language=&amp;#34;en-US&amp;#34; original=&amp;#34;BC2021W1&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;body&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;group id=&amp;#34;body&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;trans-unit id=&amp;#34;PageExtension 1255613137 - Control 3732224266 - Property 2879900210&amp;#34; size-unit=&amp;#34;char&amp;#34; translate=&amp;#34;yes&amp;#34; xml:space=&amp;#34;preserve&amp;#34; al-object-target=&amp;#34;Page 2901867346&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;source&amp;gt;prueba&amp;lt;/source&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;note from=&amp;#34;Developer&amp;#34; annotates=&amp;#34;general&amp;#34; priority=&amp;#34;2&amp;#34;&amp;gt;&amp;lt;/note&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;note from=&amp;#34;Xliff Generator&amp;#34; annotates=&amp;#34;general&amp;#34; priority=&amp;#34;3&amp;#34;&amp;gt;PageExtension CustomerListExt - Control Test - Property Caption&amp;lt;/note&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/trans-unit&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/group&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/body&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/file&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/xliff&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ahora, veremos la opción en español del archivo con extensión &lt;strong>.xlf&lt;/strong> (copiamos y pegamos el archivo anterior y le agregamos es-MX.xlf al final):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;xliff version=&amp;#34;1.2&amp;#34; xmlns=&amp;#34;urn:oasis:names:tc:xliff:document:1.2&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;file datatype=&amp;#34;xml&amp;#34; source-language=&amp;#34;en-US&amp;#34; target-language=&amp;#34;es-MX&amp;#34; original=&amp;#34;BC2021W1&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;body&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;group id=&amp;#34;body&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;trans-unit id=&amp;#34;PageExtension 1255613137 - Control 3732224266 - Property 2879900210&amp;#34; size-unit=&amp;#34;char&amp;#34; translate=&amp;#34;yes&amp;#34; xml:space=&amp;#34;preserve&amp;#34; al-object-target=&amp;#34;Page 2901867346&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;source&amp;gt;prueba&amp;lt;/source&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;target&amp;gt;prueba&amp;lt;/target&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;note from=&amp;#34;Developer&amp;#34; annotates=&amp;#34;general&amp;#34; priority=&amp;#34;2&amp;#34;&amp;gt;&amp;lt;/note&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;note from=&amp;#34;Xliff Generator&amp;#34; annotates=&amp;#34;general&amp;#34; priority=&amp;#34;3&amp;#34;&amp;gt;PageExtension CustomerListExt - Control Test - Property Caption&amp;lt;/note&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/trans-unit&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/group&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/body&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/file&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/xliff&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ahora, veremos la opción en inglés del archivo con extensión &lt;strong>.xlf&lt;/strong> (copiamos y pegamos el archivo anterior y le agregamos en-US.xlf al final):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;xliff version=&amp;#34;1.2&amp;#34; xmlns=&amp;#34;urn:oasis:names:tc:xliff:document:1.2&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;file datatype=&amp;#34;xml&amp;#34; source-language=&amp;#34;en-US&amp;#34; target-language=&amp;#34;es-MX&amp;#34; original=&amp;#34;BC2021W1&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;body&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;group id=&amp;#34;body&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;trans-unit id=&amp;#34;PageExtension 1255613137 - Control 3732224266 - Property 2879900210&amp;#34; size-unit=&amp;#34;char&amp;#34; translate=&amp;#34;yes&amp;#34; xml:space=&amp;#34;preserve&amp;#34; al-object-target=&amp;#34;Page 2901867346&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;source&amp;gt;prueba&amp;lt;/source&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;target&amp;gt;test&amp;lt;/target&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;note from=&amp;#34;Developer&amp;#34; annotates=&amp;#34;general&amp;#34; priority=&amp;#34;2&amp;#34;&amp;gt;&amp;lt;/note&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;note from=&amp;#34;Xliff Generator&amp;#34; annotates=&amp;#34;general&amp;#34; priority=&amp;#34;3&amp;#34;&amp;gt;PageExtension CustomerListExt - Control Test - Property Caption&amp;lt;/note&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/trans-unit&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/group&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/body&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/file&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/xliff&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Vamos a compilar y ejecutar:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/12/22/Translate2.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2021/12/22/Translate3.png" alt="">&lt;/p>
&lt;p>Con estos pasos, logramos traducir los texto en los idiomas que necesitamos.&lt;/p>
&lt;p>Nuestro proyecto quedaría así:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/12/22/Translate4.png" alt="">&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>BC Tips: Gestionar redondeos</title><link>https://cmas.dev/posts/2021-11-23-business-central-gestionar-redondeos/</link><pubDate>Tue, 23 Nov 2021 21:41:08 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-11-23-business-central-gestionar-redondeos/</guid><description>&lt;p>En este artículo mostraré cómo se gestionan los redondeos en Microsoft Dynamics 365 Business Central.&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2021 Wave 1 (KID: 5007779)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>*Ojo: * Una vez configurado el tema de los redondeos no se puede cambiar al tener registrado un movimiento contable, logicámente porque ya se realizaron transacciones en el sistema.&lt;/p>
&lt;p>La advertencia inicial obedece a que en Paraguay, por ejemplo, no manejamos decimales entonces no tendría sentido hacerlo en el sistema. En ese caso, quitamos todos los valores.&lt;/p>
&lt;p>Los redondeos se configuran así:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/11/23/Redondeo1.png" alt="">&lt;/p>
&lt;p>Una vez en Configuración de contabilidad, cambiamos los valores necesarios:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/11/23/Redondeo2.png" alt="">&lt;/p>
&lt;p>En este ejemplo, intento poner todos los decimales en cero y redondear al valor más cercano:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/11/23/Redondeo3.png" alt="">&lt;/p>
&lt;p>Queda a criterio de la empresa y la contabilidad cómo dejará configurado el redondeo.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Business Central: Mis notificaciones</title><link>https://cmas.dev/posts/2021-10-20-business-central-mis-notificaciones/</link><pubDate>Wed, 20 Oct 2021 22:28:48 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-10-20-business-central-mis-notificaciones/</guid><description>&lt;p>En este artículo mostraré cómo enviar y mostrar notificaciones (la campana que aparece en ángulo superior derecho de la pantalla) en Microsoft Dynamics 365 Business Central.&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2021 Wave 1 (KID: 5004715)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>La ubicación de las notificaciones es esta:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/10/20/Notificacion1.png" alt="">&lt;/p>
&lt;p>En el código debemos agregar algo como esto:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pageextension 50100 CustomerListExt extends &amp;#34;Customer List&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> trigger OnOpenPage()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> var
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> MiNotificacion: Notification;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> MiNotificacion.Message := &amp;#39;Esta es una notificación&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> MiNotificacion.Send();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Con estas lineas estamos enviando una notificación al sistema para que se lancen las alertas necesarias. Por defecto, utiliza el ámbito.&lt;/p>
&lt;p>Veremos, el indicador de notificaciones de la siguiente manera:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/10/20/Notificacion2.png" alt="">&lt;/p>
&lt;p>Cambiamos el ámbito y nos sale el siguiente error en Microsoft Dynamics 365 Business Central:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/10/20/Notificacion3.png" alt="">&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Business Central: Mostrar números enteros como Requerido</title><link>https://cmas.dev/posts/2021-09-29-business-central-mostrar-numero-entero-requerido/</link><pubDate>Wed, 29 Sep 2021 23:53:10 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-09-29-business-central-mostrar-numero-entero-requerido/</guid><description>&lt;p>En este artículo mostraré cómo indicar que un campo es requerido y realizar el control pertinente en Microsoft Dynamics 365 Business Central.&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2021 Wave 1 (KID: 5004715)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Vamos a utilizar la página &lt;strong>Cliente&lt;/strong> para poder ver el cambio que deseamos ingresar. Teniendo en cuenta el siguiente código:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pageextension 50100 CustomerExt extends &amp;#34;Customer Card&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> layout
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> addafter(Blocked)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> field(Numero; numeroEntero)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Caption = &amp;#39;Cedula de Identidad&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ShowMandatory = true;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> var numeroEntero : Integer;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Con esto, logramos marcar el campo como requerido (es decir, coloca un * de color rojo en el campo en cuestión). Quedando así:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/09/29/Mandatory1.png" alt="">&lt;/p>
&lt;p>Pero, definitivamente necesitamos darle más forma y permitir controlarlo más profundamente:&lt;/p>
&lt;ol>
&lt;li>No permitir blancos.&lt;/li>
&lt;li>Poner rangos entre 1.000.000 y 6.000.000 por ejemplo.&lt;/li>
&lt;/ol>
&lt;p>De esta manera, nuestro código quedaría así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pageextension 50100 CustomerExt extends &amp;#34;Customer Card&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> layout
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> addafter(Blocked)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> field(Numero; numeroEntero)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Caption = &amp;#39;Cedula de Identidad&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ShowMandatory = true;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NotBlank = true;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> BlankZero = true;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> MinValue = 1000000;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> MaxValue = 6000000;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> var
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> numeroEntero: Integer;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Con este código veremos, primero la validación y luego el procesamiento correcto del mismo: &lt;img src="https://cmas.dev/img/posts/2021/09/29/Mandatory2.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2021/09/29/Mandatory3.png" alt="">&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Business Central: Crear reporte de tipo ProcessingOnly</title><link>https://cmas.dev/posts/2021-09-22-business-central-crear-reporte-tipo-processing-only/</link><pubDate>Wed, 22 Sep 2021 13:48:03 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-09-22-business-central-crear-reporte-tipo-processing-only/</guid><description>&lt;p>En este artículo mostraré cómo crear procesos dentro de Microsoft Dynamics 365 Business Central para poder realizar tareas de cualquier índole. Normalmente mente este tipo de procedimientos nos ayudar a realizar tareas masivas de algún tipo.&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2021 Wave 1 (KID: 5004715)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>En este artículo modificaremos datos de Movimientos de clientes. Inicialmente la grilla se ve asi:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/09/22/Process1.png" alt="">&lt;/p>
&lt;p>Agregamos el reporte con el siguiente código:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">report 50100 ReporteBlog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Caption = &amp;#39;Reporte de prueba&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> UsageCategory = Tasks;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ProcessingOnly = true;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Permissions = tabledata 21 = rimd;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dataset
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dataitem(MovimientoClientes; &amp;#34;Cust. Ledger Entry&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //Por cada elemento del dataitem
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> trigger OnAfterGetRecord()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //Modificamos el campo en cuestion
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> MovimientoClientes.&amp;#34;IC Partner Code&amp;#34; := &amp;#39;PRUEBA&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //Explicitamente llamamos al metodo modificar
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> MovimientoClientes.Modify();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> trigger OnPostDataItem()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //Preservamos los datos en la base de datos. Solo al final del reporte
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Commit();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Message(&amp;#39;Se procesó el cambio correctamente&amp;#39;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecutamos el reporte:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/09/22/Process2.png" alt="">&lt;/p>
&lt;p>Completamos algún filtro (en este caso, los movimientos pendientes del cliente):&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/09/22/Process3.png" alt="">&lt;/p>
&lt;p>Luego de completarse el código del reporte veremos el mensaje que colocamos:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/09/22/Process4.png" alt="">&lt;/p>
&lt;p>Al ejecutar el reporte se procesará el mismo, no va mostrar ningún reporte de manera visual, solo va procesar lo que dijimos que procese.&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/09/22/Process5.png" alt="">&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Business Central: Consumir servicios REST API con POSTMAN</title><link>https://cmas.dev/posts/2021-09-08-business-central-consumir-servicios-rest/</link><pubDate>Wed, 08 Sep 2021 20:04:39 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-09-08-business-central-consumir-servicios-rest/</guid><description>&lt;p>En este artículo mostraré cómo consumir servicios ODATA desde Microsoft Dynamics 365 Business Central en POSTMAN.&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2021 Wave 1 (KID: 5004715)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Primeramente, necesitamos descargar e instalar POSTMAN desde &lt;a href="https://dl.pstmn.io/download/latest/win64">aquí&lt;/a>.&lt;/p>
&lt;h2 id="habilitar-apis-en-bc">Habilitar APIs en BC&lt;/h2>
&lt;p>Ahora, debemos habilitar las APIs configurándolas en el sistema:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/09/08/API1.png" alt="">&lt;/p>
&lt;p>Hacemos clic en el botón &lt;strong>Integrar las APIS&lt;/strong>:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/09/08/API2.png" alt="">&lt;/p>
&lt;p>Aceptamos el mensaje:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/09/08/API3.png" alt="">&lt;/p>
&lt;p>En nuestro navegar podemos probar la API acceciendo a:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">https://&amp;lt;base URL&amp;gt;:&amp;lt;port&amp;gt;/&amp;lt;serverInstance&amp;gt;/api/&amp;lt;API version&amp;gt;/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//en mi caso
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">https://cmasdev:7048/BC180/api/v2.0/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://cmas.dev/img/posts/2021/09/08/API4.png" alt="">&lt;/p>
&lt;p>¡Listo!&lt;/p>
&lt;h2 id="llamar-al-servicio-desde-postman">Llamar al servicio desde POSTMAN&lt;/h2>
&lt;p>En POSTMAN, hacemos un Request del tipo GET y lo probamos:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/09/08/API5.png" alt="">&lt;/p>
&lt;p>Completamos los datos de la autorización:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/09/08/API6.png" alt="">&lt;/p>
&lt;p>EL resultado queda de la siguiente manera:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/09/08/API7.png" alt="">&lt;/p>
&lt;p>Y así tenemos funcionando nuestra API desde Microsoft Dynamics 365 Business Central.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Business Central: Descargar simbolos desde Sandbox</title><link>https://cmas.dev/posts/2021-09-07-business-central-download-symbols-cloud/</link><pubDate>Tue, 07 Sep 2021 23:55:00 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-09-07-business-central-download-symbols-cloud/</guid><description>&lt;p>El día de hoy intenté hacer la descarga de los símbolos de Microsoft Dynamics 365 Business Central pero me encontraba con errores y no lograba hacerlo funcionar. Primeramente, tuve errores para descargar los símbolos como tal y luego para poder depurar la aplicación.&lt;/p>
&lt;p>Para evitar que otras personas tengan ese problema, les comparto mi experiencia solucionando el inconveniente en este pequeño manual al estilo How To? que es mi costumbre escribir.&lt;/p>
&lt;p>Manos a la obra&amp;hellip;&lt;/p>
&lt;h2 id="cómo-descargo-los-símbolos">¿Cómo descargo los símbolos?&lt;/h2>
&lt;p>En Visual Studio, creamos un proyecto de tipo AL y luego procedemos a buscar el comando &lt;strong>AL: Download symbols&lt;/strong> y hacemos clic sobre él:&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2021/09/07/1.png" alt="">&lt;/p>
&lt;p>En Visual Studio Code, nos aparecerá el registro de dispositivo. Por lo tanto, hacemos clic en el botón:&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2021/09/07/2.png" alt="">&lt;/p>
&lt;p>Seguimos los pasos, que se encuentran en pantalla hasta que aparezca la siguiente pantalla:&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2021/09/07/3.png" alt="">&lt;/p>
&lt;p>Ahora, veremos el siguiente error cuando intentamos compilarlo:&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2021/09/07/4.png" alt="">&lt;/p>
&lt;p>Tenemos dos posibles salidas para solucionar esto. Uno de ellos radica en utilizar el usuario y contraseña del administrador global, pero tendremos un problema posterior (no podremos depurar si el administrador global no posee una licencia activa de Business Central).&lt;/p>
&lt;p>De esta manera, la mejor solución es dar los permisos necesarios a un usuario para realizar las pruebas (aprovechando que estamos en un ambiente aislado). Así que, ingresamos al &lt;a href="https://businesscentral.dynamics.com">Microsoft Dynamics 365 Business Central&lt;/a> y procedemos a ingresar las credenciales de un usuario con licencia &lt;strong>Full&lt;/strong>, nos dirigimos a Usuarios &amp;gt; Sección de Permisos:&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2021/09/07/5.png" alt="">&lt;/p>
&lt;p>En la primera sección agregamos el grupo &lt;strong>D365 Extension Management&lt;/strong> y quitamos toda relación con empresa:&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2021/09/07/6.png" alt="">&lt;/p>
&lt;p>Repetimos el proceso para la siguiente sección, y seleccionamos el conjunto de permisos &lt;strong>D365 Extension Management ADMIN&lt;/strong>:&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2021/09/07/7.png" alt="">&lt;/p>
&lt;p>De esta manera, volvemos a ejecutar el comando que debíamos ejecutar:&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2021/09/07/1.png" alt="">&lt;/p>
&lt;p>Ahora todo saldrá como esperamos:&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2021/09/07/8.png" alt="">&lt;/p>
&lt;p>Luego, podremos hacer F5 (Depurar) nuestra extensión y obtendremos, también, el resultado esperado:&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2021/09/07/9.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2021/09/07/10.png" alt="">&lt;/p>
&lt;p>De esta manera hemos logrado descargar los símbolos de Business Central Cloud ;)&lt;/p></description></item><item><title>Business Central: Depurar sin publicar</title><link>https://cmas.dev/posts/2021-09-01-business-central-depurar-sin-publicar/</link><pubDate>Wed, 01 Sep 2021 15:50:23 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-09-01-business-central-depurar-sin-publicar/</guid><description>&lt;p>En este artículo mostraré cómo depurar en Microsoft Dynamics 365 Business Central sin la necesidad de publicar la extensión en cuestión.&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2021 Wave 1 (KID: 5004715)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Esto es muy útil a la hora de hacer pruebas para no afectar a los usuarios conectados, sea el ambiente que sea. Debemos tener en cuenta que con esta opción de igual manera se depurará la última versión publicada.&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/09/01/Debug1.png" alt="">&lt;/p>
&lt;p>Para que esto funcione debemos tener esta propiedad en el archivo &lt;strong>launch.json&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;#34;breakOnError&amp;#34;: true,
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Y esta en el archivo &lt;strong>app.json&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;#34;showMyCode&amp;#34;: true,
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>De esta manera, lograremos depurar el código sin la necesidad de publicar.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Business Central: Exponer Servicios Web</title><link>https://cmas.dev/posts/2021-08-25-business-central-exponer-servicios-web/</link><pubDate>Wed, 25 Aug 2021 18:19:54 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-08-25-business-central-exponer-servicios-web/</guid><description>&lt;p>En este artículo mostraré cómo exponer servicios web para ser consumidos por otras aplicaciones desde Microsoft Dynamics 365 Business Central.&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2021 Wave 1 (KID: 5004715)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Para lograr esto, debemos verificar la configuración de OData, de SOAP Services estén habilitados (queda a criterior del administrador habilitar uno u otr servicio). Por compatibilidad, se pueden habilitar ambos, siempre con las medidas de seguridad necesarias.&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/08/25/WebService1.png" alt="">&lt;/p>
&lt;p>Luego, debemos dirigirnos al sistema y buscar la página &lt;strong>Servicios Web&lt;/strong>:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/08/25/WebService2.png" alt="">&lt;/p>
&lt;p>Verificamos que el servicio esté publicado:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/08/25/WebService3.png" alt="">&lt;/p>
&lt;p>Por último, hacemos la prueba del servicio haciendo clic en el enlace que corresponde a &lt;em>OData&lt;/em> o &lt;em>SOAP&lt;/em>:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/08/25/WebService4.png" alt="">&lt;/p>
&lt;p>En el navegador, veremos el resultado del servicio:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/08/25/WebService5.png" alt="">&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Business Central: Personalizar el encabezado de la página principal</title><link>https://cmas.dev/posts/2021-08-12-business-central-personalizar-encabezado-pagina-principal/</link><pubDate>Thu, 12 Aug 2021 12:25:36 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-08-12-business-central-personalizar-encabezado-pagina-principal/</guid><description>&lt;p>En este artículo mostraré cómo personalizar el título de la página principal dentro de Microsoft Dynamics 365 Business Central.&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2021 Wave 1 (KID: 5004715)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Esta funcionalidad, permite agregar cualquier elemento que necesitemos para dar una buena primera impresión en la página principal.&lt;/p>
&lt;p>El control que siempre está consiste en el saludo dependiendo de la hora del sistema.&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/08/12/Title1.png" alt="">&lt;/p>
&lt;p>Aquí agregaremos otro control con el siguiente código:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pageextension 50104 NuevoTitulo extends &amp;#34;Headline RC Business Manager&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> layout
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> addafter(Control2)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> field(nuevoTexto;texto)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> var
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> texto: Text;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> trigger OnOpenPage()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //Set Headline text
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> texto := &amp;#39;¡Soy el nuevo texto de la página principal!&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>El resultado queda así:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/08/12/Title2.png" alt="">&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Business Central: No alterar datos en el método OnAfterGetRecord</title><link>https://cmas.dev/posts/2021-08-04-business-central-no-alterar-datos-onaftergetrecord/</link><pubDate>Wed, 04 Aug 2021 08:19:05 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-08-04-business-central-no-alterar-datos-onaftergetrecord/</guid><description>&lt;p>En este artículo demuestro por qué no debemos alterar (insertar, modificar o eliminar) datos dentro del método de obtención de datos para una grilla en Microsoft Dynamics 365 Business Central.&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2021 Wave 1 (KID: 5004715)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Resulta que el trigger &lt;strong>OnAfterGetRecord&lt;/strong> se utiliza para obtener datos, además estos datos se van cargando a medida que el usuario navega a través de la grilla. Cuando hace scroll hacia arriba o hacia abajo los datos se van cargando. No necesariamente se cargan TODOS los datos de la tabla al momento de mostrar la grilla.&lt;/p>
&lt;p>La vista de Clientes se ve asi al comienzo:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/08/04/GetRecord1.png" alt="">&lt;/p>
&lt;p>Veamos el siguiente código:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">trigger OnAfterGetRecord()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Rec.&amp;#34;Responsibility Center&amp;#34; := &amp;#39;Test&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">end;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto no es recomendable porque asignamos un valor a un campo directo en la base de datos. Pero si le agregamos esto:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">trigger OnAfterGetRecord()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Rec.&amp;#34;Responsibility Center&amp;#34; := &amp;#39;Test&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Modify();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">end;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://cmas.dev/img/posts/2021/08/04/GetRecord2.png" alt="">
Aquí sí ya tenemos un grave problema, pues por cada registro hará un modificar innecesario.&lt;/p>
&lt;h2 id="solución">Solución&lt;/h2>
&lt;p>Básicamente, utilizar una variable local y asignar su valor a un nuevo campo.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pageextension 50100 CustomerListExt extends &amp;#34;Customer List&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> layout
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> addbefore(&amp;#34;Responsibility Center&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> field(responsabilidad; textoResponsabilidad)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Caption = &amp;#39;Centro de responsabilidad&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> trigger OnAfterGetRecord()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> textoResponsabilidad := &amp;#39;Test&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> var
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> textoResponsabilidad: Text;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>De esta manera logramos mostrar los datos necesarios sin afectarlos en la base de datos. Ahora, si queremos cambiar los datos se utilizan otras técnicas veremos más adelante en este Blog.&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/08/04/GetRecord3.png" alt="">&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Business Central: Locktable y Commit</title><link>https://cmas.dev/posts/2021-07-21-business-central-locktable-commit/</link><pubDate>Wed, 21 Jul 2021 07:29:48 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-07-21-business-central-locktable-commit/</guid><description>&lt;p>En este artículo mostraré la utilidad de dos métodos muy importantes a la hroa de transaccionar con base de datos pero dentro de Microsoft Dynamics 365 Business Central.&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2021 Wave 1 (KID: 5004715)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Primero, veamos qué hace cada método o función:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Locktable&lt;/strong>: Bloquea el registro en una tabla para protegerla de las transacciones de escritura que entran en conflicto entre sí.&lt;/li>
&lt;li>&lt;strong>Commit&lt;/strong>: Finaliza la transacción de escritura actual.&lt;/li>
&lt;/ol>
&lt;p>Un error muy común es utilizar el primero sin el segundo. ¿Qué problema causa esto? - Bloquea el servicio de Microsoft Dynamics 365 Business Central porque la base de datos queda esperando la confimación de una transacción.&lt;/p>
&lt;p>Vemos un ejemplo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">CustLedgEntry.Reset;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">CustLedgEntry.SetRange(&amp;#34;Document No.&amp;#34;, YOURNUMBER);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if CustLedgEntry.FindFirst() then begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CustLedgEntry.Locktable();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CustLedgEntry.SomeField := CHANGEDVALUE;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CustLedgEntry.Modify();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //Sin esta linea se bloquea todo el trabajo. Solucion: Reinicio de servicio BC.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> COMMIT;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">end;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Business Central: Transferencia de campos entre tablas</title><link>https://cmas.dev/posts/2021-07-14-business-central-transferencia-campos-entre-tablas/</link><pubDate>Wed, 14 Jul 2021 12:09:52 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-07-14-business-central-transferencia-campos-entre-tablas/</guid><description>&lt;p>En este artículo mostraré cómo se realiza la trasnferencia de información de una tabla a otra para facilitarnos las vida. Recordemos que este tipo de sistemas no tiene tablas normalizadas en base de datos. Es por eso que deben tener algún método de manejo de información y protección de los mismos.&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2021 Wave 1 (KID: 5004715)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Vamos a centrarnos en dos tablas:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Sales Header&lt;/strong>: Sería un Pedido de Venta.&lt;/li>
&lt;li>&lt;strong>Sales Invoice Header&lt;/strong>: Sería la factura de venta legal (posterior al registro del punto anterior).&lt;/li>
&lt;/ol>
&lt;p>Para que esto sea práctico, utilizaré el campo &lt;strong>Gen. Bus. Posting Group&lt;/strong> que tiene como definición:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">field(74; &amp;#34;Gen. Bus. Posting Group&amp;#34;; Code[20])
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Caption = &amp;#39;Gen. Bus. Posting Group&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> TableRelation = &amp;#34;Gen. Business Posting Group&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> trigger OnValidate()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> TestStatusOpen;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if xRec.&amp;#34;Gen. Bus. Posting Group&amp;#34; &amp;lt;&amp;gt; &amp;#34;Gen. Bus. Posting Group&amp;#34; then begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if GenBusPostingGrp.ValidateVatBusPostingGroup(GenBusPostingGrp, &amp;#34;Gen. Bus. Posting Group&amp;#34;) then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;VAT Bus. Posting Group&amp;#34; := GenBusPostingGrp.&amp;#34;Def. VAT Bus. Posting Group&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> RecreateSalesLines(FieldCaption(&amp;#34;Gen. Bus. Posting Group&amp;#34;));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Este es el código fuente de &lt;strong>Sales Header&lt;/strong> entonces significa que en la tabla &lt;strong>Sales Invoice Header&lt;/strong> también debe tener esa definición. Así que expondré aquí el código de la tabla nativa:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">field(74; &amp;#34;Gen. Bus. Posting Group&amp;#34;; Code[20])
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Caption = &amp;#39;Gen. Bus. Posting Group&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> TableRelation = &amp;#34;Gen. Business Posting Group&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>La única diferencia es que en la primera tabla posee validaciones y en la segunda no. Ahora bien, nótese que tienen el mismo nombre y el mismo número de campo. Eso es porque transfieren datos de una tabla a otra y esos detalles deben coincidir. No pueden tener número diferentes ni nomrbes distintos.&lt;/p>
&lt;p>Ahora, ¿dónde interviene la transferencia de datos? -Interviene en el CodeUnit 80: &lt;strong>Sales-Post&lt;/strong> específicamente en el siguiente procedimiento:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">local procedure InsertInvoiceHeader(var SalesHeader: Record &amp;#34;Sales Header&amp;#34;; var SalesInvHeader: Record &amp;#34;Sales Invoice Header&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">var
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SalesCommentLine: Record &amp;#34;Sales Comment Line&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> RecordLinkManagement: Codeunit &amp;#34;Record Link Management&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SegManagement: Codeunit SegManagement;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> EInvoiceMgt: Codeunit &amp;#34;E-Invoice Mgt.&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> IsHandled: Boolean;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> IsHandled := false;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> OnBeforeInsertInvoiceHeader(SalesHeader, SalesInvHeader, IsHandled);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if IsHandled then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> exit;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> with SalesHeader do begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SalesInvHeader.Init();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CalcFields(&amp;#34;Work Description&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SalesInvHeader.TransferFields(SalesHeader);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SalesInvHeader.&amp;#34;No.&amp;#34; := &amp;#34;Posting No.&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if &amp;#34;Document Type&amp;#34; = &amp;#34;Document Type&amp;#34;::Order then begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if SalesSetup.&amp;#34;Ext. Doc. No. Mandatory&amp;#34; then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> TestField(&amp;#34;External Document No.&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SalesInvHeader.&amp;#34;Pre-Assigned No. Series&amp;#34; := &amp;#39;&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SalesInvHeader.&amp;#34;Order No. Series&amp;#34; := &amp;#34;No. Series&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SalesInvHeader.&amp;#34;Order No.&amp;#34; := &amp;#34;No.&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end else begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if &amp;#34;Posting No.&amp;#34; = &amp;#39;&amp;#39; then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SalesInvHeader.&amp;#34;No.&amp;#34; := &amp;#34;No.&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SalesInvHeader.&amp;#34;Pre-Assigned No. Series&amp;#34; := &amp;#34;No. Series&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SalesInvHeader.&amp;#34;Pre-Assigned No.&amp;#34; := &amp;#34;No.&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if GuiAllowed and not HideProgressWindow then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Window.Update(1, StrSubstNo(InvoiceNoMsg, &amp;#34;Document Type&amp;#34;, &amp;#34;No.&amp;#34;, SalesInvHeader.&amp;#34;No.&amp;#34;));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SalesInvHeader.&amp;#34;Source Code&amp;#34; := SrcCode;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SalesInvHeader.&amp;#34;User ID&amp;#34; := UserId;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SalesInvHeader.&amp;#34;No. Printed&amp;#34; := 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if SalesHeader.&amp;#34;Document Type&amp;#34; = SalesHeader.&amp;#34;Document Type&amp;#34;::Invoice then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SalesInvHeader.&amp;#34;Draft Invoice SystemId&amp;#34; := SalesHeader.SystemId;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> OnInsertInvoiceHeaderOnBeforeSetPaymentInstructions(SalesHeader, SalesInvHeader);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SetPaymentInstructions(SalesHeader);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SalesInvHeaderInsert(SalesInvHeader, SalesHeader);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> UpdateWonOpportunities(SalesHeader);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SegManagement.CreateCampaignEntryOnSalesInvoicePosting(SalesInvHeader);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApprovalsMgmt.PostApprovalEntries(RecordId, SalesInvHeader.RecordId, SalesInvHeader.&amp;#34;No.&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if SalesSetup.&amp;#34;Copy Comments Order to Invoice&amp;#34; then begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SalesCommentLine.CopyComments(
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;Document Type&amp;#34;.AsInteger(), SalesCommentLine.&amp;#34;Document Type&amp;#34;::&amp;#34;Posted Invoice&amp;#34;.AsInteger(), &amp;#34;No.&amp;#34;, SalesInvHeader.&amp;#34;No.&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> RecordLinkManagement.CopyLinks(SalesHeader, SalesInvHeader);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> EInvoiceMgt.InsertSalesInvoiceCFDIRelations(SalesHeader, SalesInvHeader.&amp;#34;No.&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">end;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>La magia se produce en la línea que corresponde a:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">SalesInvHeader.TransferFields(SalesHeader);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>De esta manera se produce el intercambio de información de una tabla a otra.&lt;/p>
&lt;p>&lt;strong>Ojo:&lt;/strong> Todas las tablas que tienen la misma estructura que &lt;strong>Sales Header&lt;/strong> deben tener los mismos campos cons su numeración y su nombre.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Business Central: Consumir API externa para integración</title><link>https://cmas.dev/posts/2021-06-23-business-central-consumir-api-externa/</link><pubDate>Wed, 23 Jun 2021 23:02:42 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-06-23-business-central-consumir-api-externa/</guid><description>&lt;p>En este artículo muestro cómo consumir una API REST desde cualquier servicio hacia Microsoft Dynamics 365 Business Central con muy pocas líneas de código. Hagamos la prueba&amp;hellip;&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2020 Wave 2 (KID: 5001735)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Lo primero que debemos hacer es tener una API REST funcional. Para este caso utilizo &lt;a href="https://reqbin.com/req/nfilsyk5/get-request-example">esta prueba&lt;/a> que es pública. Así que intentaremos obtener el mismo resultado en un cuadro de mensaje en una página de Microsoft Dynamics 365 Business Central.&lt;/p>
&lt;p>Ahora, debemos escribir el siguiente código, en un botón de la página por ejemplo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">trigger OnAction()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">var
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> clienteHttp: HttpClient;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> respuesta: HttpResponseMessage;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> resultado: Text;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> funciona: Boolean;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> clienteHttp.Get(&amp;#39;https://reqbin.com/echo&amp;#39;, respuesta);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //Leer el contenido de la respuesta desde la URL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> funciona := respuesta.Content().ReadAs(resultado);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if not funciona then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Error(&amp;#39;No funciona la API&amp;#39;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //Imprimimos el resultado si todo funciona correctamente
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Message(FORMAT(resultado));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">end;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>De esta manera, nuestro código final en la página quedaría:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">page 50101 SimpleCustomerCard
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CaptionML = ENU = &amp;#39;Blog page&amp;#39;, ESP = &amp;#39;Página de Blog&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PageType = Card;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SourceTable = Customer;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> UsageCategory = Documents;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> AdditionalSearchTerms = &amp;#39;cmasdev,blog&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> layout
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> area(content)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> group(General)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> field(&amp;#34;No.&amp;#34;; &amp;#34;No.&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CaptionML = ENU = &amp;#39;Code&amp;#39;, ESP = &amp;#39;Código&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> trigger OnValidate()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if &amp;#34;No.&amp;#34; &amp;lt; &amp;#39;&amp;#39; then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Message(&amp;#39;Invalido&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> field(Name; Name)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> field(Address; Address)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> actions
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> area(Navigation)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> action(NewAction)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Caption = &amp;#39;Probar API&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> trigger OnAction()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> var
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> clienteHttp: HttpClient;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> respuesta: HttpResponseMessage;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> resultado: Text;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> funciona: Boolean;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> clienteHttp.Get(&amp;#39;https://reqbin.com/echo&amp;#39;, respuesta);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //Leer el contenido de la respuesta desde la URL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> funciona := respuesta.Content().ReadAs(resultado);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if not funciona then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Error(&amp;#39;No funciona la API&amp;#39;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //Imprimimos el resultado si todo funciona correctamente
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Message(FORMAT(resultado));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Seguimos los siguientes pasos para la prueba:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Clic en &lt;em>Relacionado&lt;/em> &amp;gt; &lt;em>Probar API&lt;/em>&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/06/23/Api1.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Esperamos el resultado y&amp;hellip;&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/06/23/Api2.png" alt="">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>De esta manera hemos consumido un REST API con el método predeterminado GET.&lt;/p>
&lt;p>¡Espero les resulte útil!&lt;/p></description></item><item><title>Business Central: Añadir código JavaScript en una página</title><link>https://cmas.dev/posts/2021-06-09-business-central-anadir-codigo-javascript-en-una-pagina/</link><pubDate>Wed, 09 Jun 2021 15:12:00 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-06-09-business-central-anadir-codigo-javascript-en-una-pagina/</guid><description>&lt;p>La &lt;a href="https://cmas.dev/posts/2021-06-02-business-central-anadir-html-en-una-pagina/">semana pasada vimos&lt;/a> como inyectar HTML en una página dentro de Microsoft Dynamics 365 Business Central. Hoy veremos cómo agregar código Javascript que muestre una ventana de confirmación y luego muestre una alerta. Ya dá para empezar&amp;hellip;&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2020 Wave 2 (KID: 5001735)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Vamos a retomar el código que escribimos en el archivo &lt;strong>js/script.js&lt;/strong> para poder realizar la acción allí:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">function ClickMe()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> let nombre = prompt(&amp;#34;Por favor, ingresa tu nombre&amp;#34;, &amp;#34;&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> alert(&amp;#39;Tu nombre es: &amp;#39;+ nombre);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>En la página de Microsoft Dynamics 365 Business Central haremos la llamada al script en cuestión:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">usercontrol(html; Html)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> trigger HacerAlgo()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> var
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> htmlText: Text;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> htmlText := &amp;#39;&amp;lt;button type=&amp;#34;button&amp;#34; onclick=&amp;#34;ClickMe()&amp;#34;&amp;gt;Click Me!&amp;lt;/button&amp;gt;&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CurrPage.html.Render(htmlText);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>De esta manera veremos el resultado según los siguientes pasos:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/06/09/JS1.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2021/06/09/JS2.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2021/06/09/JS3.png" alt="">&lt;/p>
&lt;p>Así logramos realizar acciones con JavaScript desde una página en Microsoft Dynamics 365 Business Central. También podemos realizar tareas complejas como llamadas a APIs, AJAX, etc.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Business Central: Añadir HTML en una página</title><link>https://cmas.dev/posts/2021-06-02-business-central-anadir-html-en-una-pagina/</link><pubDate>Wed, 02 Jun 2021 18:17:00 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-06-02-business-central-anadir-html-en-una-pagina/</guid><description>&lt;p>En este artículo deseo mostrar cómo inyectar HTML en una página dentro de Microsoft Dynamics 365 Business Central. No es muy complejo realizar la tarea necesaria pero debemos entender su utilidad y qué podemos lograr haciéndolo. Así que espero lo disfruten&amp;hellip;&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2020 Wave 2 (KID: 5001735)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Veremos a continuación que necesitamos una serie de pasos para poder generar un HTML. Para enteder esto debemos tener en claro que inyectar HTML en una página es idéntico a introducir un IFRAME dentro de cualquier sitio HTML.&lt;/p>
&lt;p>Dicho esto, procedemos a realizar los pasos para la inserción de HTML dentro de una página en Microsoft Dynamics 365 Business Central.&lt;/p>
&lt;ol>
&lt;li>Debemos crear un objeto de tipo &lt;em>ControlAddIn&lt;/em> en nuestro proyecto AL:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">usercontrol(html; Html)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> trigger HacerAlgo()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> var
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> htmlText: Text;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //Cargamos los elementos HTML
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> htmlText := &amp;#39;&amp;lt;b&amp;gt;Soy un elemento HTML&amp;lt;/b&amp;gt; ¿No me crees? &amp;lt;br/&amp;gt;&amp;#39; +
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;&amp;lt;img alt=&amp;#34;&amp;#34; src=&amp;#34;https://pbs.twimg.com/profile_images/1177530173245317122/PVFFrjO9_400x400.png&amp;#34; /&amp;gt;&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //Llamamos al procedimiento para inyectar el codigo HTML
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CurrPage.html.Render(htmlText);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>
&lt;p>Es obligatorio introducir 2 archivos JavaScript en nuestro proyecto AL, los cuales son:&lt;/p>
&lt;p>2.1 &lt;strong>StartupScript&lt;/strong>: Especifica el script que se invoca cuando se carga la página web con el complemento de control.&lt;br>
&lt;strong>Archivo js/startup.js&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Contenedor = document.getElementById(&amp;#39;controlAddIn&amp;#39;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Microsoft.Dynamics.NAV.InvokeExtensibilityMethod(&amp;#39;HacerAlgo&amp;#39;, [])
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>2.2 &lt;strong>Script&lt;/strong>: Especifica la lista de scripts que se van a incluir en el complemento de control. Los scripts pueden ser archivos locales en el paquete o referencias a archivos externos utilizando el protocolo http o https. Los valores pueden ir separados por comas.&lt;br>
&lt;strong>Archivo js/script.js&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">function Render(html)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Contenedor.insertAdjacentHTML(&amp;#39;beforeend&amp;#39;,html);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>El código del ControlAddIn quedaría de la siguiente manera:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">controladdin Html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> StartupScript = &amp;#39;js/startup.js&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Scripts = &amp;#39;js/script.js&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalStretch = true;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> VerticalStretch = true;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> RequestedHeight = 400;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> event HacerAlgo();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> procedure Render(TextHtml: Text);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>El código completo de la página se vería así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">page 50101 SimpleCustomerCard
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CaptionML = ENU = &amp;#39;Blog page&amp;#39;, ESP = &amp;#39;Página de Blog&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PageType = Card;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SourceTable = Customer;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> UsageCategory = Documents;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> AdditionalSearchTerms = &amp;#39;cmasdev,blog&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> layout
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> area(content)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> group(General)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> field(&amp;#34;No.&amp;#34;; &amp;#34;No.&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CaptionML = ENU = &amp;#39;Code&amp;#39;, ESP = &amp;#39;Código&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> trigger OnValidate()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if &amp;#34;No.&amp;#34; &amp;lt; &amp;#39;&amp;#39; then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Message(&amp;#39;Invalido&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> field(Name; Name)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> field(Address; Address)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> group(HTMLGroup)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Caption = &amp;#39;Elementos HTML&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> usercontrol(html; Html)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> trigger HacerAlgo()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> var
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> htmlText: Text;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //Cargamos los elementos HTML
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> htmlText := &amp;#39;&amp;lt;b&amp;gt;Soy un elemento HTML&amp;lt;/b&amp;gt; ¿No me crees? &amp;lt;br/&amp;gt;&amp;#39; +
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;&amp;lt;img alt=&amp;#34;&amp;#34; src=&amp;#34;https://pbs.twimg.com/profile_images/1177530173245317122/PVFFrjO9_400x400.png&amp;#34; /&amp;gt;&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //Llamamos al procedimiento para inyectar el codigo HTML
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CurrPage.html.Render(htmlText);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>El resultado del codigo sería el siguiente:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/06/02/Html2.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>Con esto logramos inyectar HTML dentro de una página Microsoft Dynamics 365 Business Central.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>BC Tip: Deshabilitar servicios de desarrollo</title><link>https://cmas.dev/posts/2021-05-26-business-central-deshabilitar-servicios-de-desarrollo/</link><pubDate>Wed, 26 May 2021 12:54:00 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-05-26-business-central-deshabilitar-servicios-de-desarrollo/</guid><description>&lt;p>En este sencillo artículo explico cómo deshabilitar los servicios de desarrollo, normalmente en un ambiente &lt;strong>PROD&lt;/strong> o &lt;strong>QA&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2020 Wave 2 (KID: 5001735)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Para poder realizar esta tarea debemos abrir la consola de administración de Microsoft Dynamics 365 Business Central:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/05/26/DevService1.png" alt="">&lt;/p>
&lt;p>Nos dirigimos a la sección de &lt;strong>Development&lt;/strong> y procedemos a deshabilitar la opción:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/05/26/DevService2.png" alt="">&lt;/p>
&lt;p>Reiniciamos el servicio y se habrá deshabilitado el servicio de desarrollo evitando cualquier cambio en la estructura de nuestro ERP.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Business Central: Mostrar página en el buscador</title><link>https://cmas.dev/posts/2021-05-20-business-central-mostrar-pagina-en-buscador/</link><pubDate>Thu, 20 May 2021 20:07:00 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-05-20-business-central-mostrar-pagina-en-buscador/</guid><description>&lt;p>En esta ocasion quisiera mostrar cómo agregar una página en el buscador para que sea más sencillo encontrarlo. En un &lt;a href="https://cmas.dev/posts/2021-04-28-business-central-mostrar-reporte-en-buscador/">artículo anterior&lt;/a> vimos cómo mostrar un reporte en dicho buscador.&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2020 Wave 2 (KID: 5001735)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Aplicamos la definición de la página de la siguiente manera:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">page 50101 PaginaCustomerCard
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Caption = &amp;#39;Página de Blog&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PageType = Card;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SourceTable = Customer;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> layout
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> area(content)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> group(General)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> field(&amp;#34;No.&amp;#34;; &amp;#34;No.&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Caption = &amp;#39;Hello&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> trigger OnValidate()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if &amp;#34;No.&amp;#34; &amp;lt; &amp;#39;&amp;#39; then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Message(&amp;#39;Invalido&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> field(Name; Name)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> field(Address; Address)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Compilamos y ejecutamos la aplicación y tratamos de buscar &amp;ldquo;Página de Blog&amp;rdquo;, veremos el buscador de la siguiente manera:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/05/20/PageSearch1.png" alt="">&lt;/p>
&lt;p>Modificamos la definición de la página y nos quedaría de la siguiente manera:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Caption = &amp;#39;Página de Blog&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PageType = Card;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">SourceTable = Customer;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">UsageCategory = Documents;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">AdditionalSearchTerms = &amp;#39;cmasdev,blog&amp;#39;;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Volvemos a compilar y ejecutar. Buscamos por la palabra &amp;ldquo;blog&amp;rdquo; o &amp;ldquo;cmasdev&amp;rdquo; o &amp;ldquo;página de blog&amp;rdquo; y obtendremos el resultado deseado:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/05/20/PageSearch2.png" alt="">&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/05/20/PageSearch3.png" alt="">&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/05/20/PageSearch4.png" alt="">&lt;/p>
&lt;p>De esta manera logramos colocar en el buscador la página con denominaciones distintas para facilitar la búsqueda.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Business Central: Localización de Columnas</title><link>https://cmas.dev/posts/2021-05-12-business-central-localizacion-de-columnas/</link><pubDate>Wed, 12 May 2021 09:34:00 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-05-12-business-central-localizacion-de-columnas/</guid><description>&lt;p>En este artículo quiero mostrar como aplicar traducciones de textos en los títulos, en este caso, utilizaremos la página que ya hemos visto anteriormente con el buscador. Resumiendo, localizaremos el término de búsqueda y el título de la página.&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2020 Wave 2 (KID: 5001735)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Normalmente los textos enlazados a las columnas ya se encuentran localizados en la Tabla, pues eso facilita la reutilización en todos los lugares donde hacemos la llamada a la columna de la tabla.&lt;/p>
&lt;p>Aquí mostraré, el detalle de la página que ya utilizamos:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">page 50101 SimpleCustomerCard
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Caption = &amp;#39;Página de Blog&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PageType = Card;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SourceTable = Customer;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> UsageCategory = Documents;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> AdditionalSearchTerms = &amp;#39;cmasdev,blog&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> layout
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> area(content)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> group(General)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> field(&amp;#34;No.&amp;#34;; &amp;#34;No.&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Caption = &amp;#39;Hello&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> trigger OnValidate()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if &amp;#34;No.&amp;#34; &amp;lt; &amp;#39;&amp;#39; then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Message(&amp;#39;Invalido&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> field(Name; Name)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> field(Address; Address)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Para este ejemplo, traduciremos el título de la página y la columna &amp;ldquo;No.&amp;rdquo;. Al hacer cambio de idioma en el ERP se ajustarán todos los títulos.&lt;/p>
&lt;p>En el caso del título quedaría de la siguiente manera:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">CaptionML = ENU=&amp;#39;Blog page&amp;#39;,ESP=&amp;#39;Página de Blog&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PageType = Card;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">SourceTable = Customer;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">UsageCategory = Documents;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">AdditionalSearchTerms = &amp;#39;cmasdev,blog&amp;#39;;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Mientras que en la columna quedaría así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">field(&amp;#34;No.&amp;#34;; &amp;#34;No.&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ApplicationArea = All;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CaptionML = ENU=&amp;#39;Code&amp;#39;,ESP=&amp;#39;Código&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> trigger OnValidate()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if &amp;#34;No.&amp;#34; &amp;lt; &amp;#39;&amp;#39; then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Message(&amp;#39;Invalido&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Compilamos y ejecutamos, vemos que está en el idioma de configuración de Microsoft 365 Business Central:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/05/12/Translator1.png" alt="">&lt;/p>
&lt;p>Cambiamos a &lt;strong>English (United States)&lt;/strong> y vemos de la siguiente manera:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/05/12/Translator2.png" alt="">&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Business Central: Mostrar reporte en el buscador</title><link>https://cmas.dev/posts/2021-04-28-business-central-mostrar-reporte-en-buscador/</link><pubDate>Wed, 28 Apr 2021 14:15:00 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-04-28-business-central-mostrar-reporte-en-buscador/</guid><description>&lt;p>En esta ocasion quisiera mostrar cómo agregar un reporte en el buscador para que sea más sencillo encontrarlo. En un &lt;a href="https://cmas.dev/posts/2019-02-20-bcdev-tips-crear-un-reporte-nuevo">artículo anterior&lt;/a> vimos cómo crear un reporte nuevo (se me ocurre trabajar sobre ese mismo reporte).&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2020 Wave 2 (KID: 5001735)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Aplicamos la definición del reporte de la siguiente manera:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">report 50100 D365ReporteNuevo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Caption = &amp;#39;Reporte Nuevo Blog&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> DefaultLayout = RDLC;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> RDLCLayout = &amp;#39;ReporteNuevo.rdl&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dataset
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dataitem(SalesInvoiceHeader; &amp;#34;Sales Invoice Header&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> column(Cliente; &amp;#34;Bill-to Customer No.&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> column(Numero; &amp;#34;No.&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> column(MontoTotal; &amp;#34;Amount Including VAT&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Compilamos y ejecutamos la aplicación y tratamos de buscar &amp;ldquo;Reporte Nuevo Blog&amp;rdquo;, veremos el buscador de la siguiente manera:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/04/28/Reporte1.png" alt="">&lt;/p>
&lt;p>Modificamos la definición del reporte y nos quedaría de la siguiente manera:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Caption = &amp;#39;Reporte Nuevo Blog&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DefaultLayout = RDLC;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">RDLCLayout = &amp;#39;ReporteNuevo.rdl&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">UsageCategory = ReportsAndAnalysis;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">AdditionalSearchTerms = &amp;#39;cmasdev, blog&amp;#39;;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Volvemos a compilar y ejecutar. Buscamos por la palabra &amp;ldquo;blog&amp;rdquo; o &amp;ldquo;cmasdev&amp;rdquo; o &amp;ldquo;reporte nuevo blog&amp;rdquo; y obtendremos el resultado deseado:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/04/28/Reporte2.png" alt="">&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/04/28/Reporte3.png" alt="">&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/04/28/Reporte4.png" alt="">&lt;/p>
&lt;p>De esta manera logramos colocar en el buscador el reporte con denominaciones distintas para facilitar la búsqueda.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Business Central: Cargar licencia en servidor productivo</title><link>https://cmas.dev/posts/2021-04-21-business-central-carga-licencia-servidor-productivo/</link><pubDate>Wed, 21 Apr 2021 16:03:00 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-04-21-business-central-carga-licencia-servidor-productivo/</guid><description>&lt;p>Este proceso es sencillo y necesitamos la línea de comandos para poder ejecutarla. Una vez realizado procedemos a reiniciar el servicio de Microsoft Dynamics 365 Business Central.&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2020 Wave 2 (KID: 5001735)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Primeramente, descargamos el archivo de licencias proveído por nuestro partner. Debe tener la extensión &lt;strong>.flf&lt;/strong> y procedemos a cargarla en el servidor.&lt;/p>
&lt;p>Nos dirigimos a la línea de comando pero ingresando a &lt;strong>Business Central Administration Shell&lt;/strong> como Administrador y ejecutamos la sigueinte línea (con los parámetros que necesitamos):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Import-NAVServerLicense -ServerInstance &amp;lt;server instance&amp;gt; -LicenseFile &amp;#34;&amp;lt;path to the license&amp;gt;&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>En mi caso, lo hice así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Import-NAVServerLicense -ServerInstance BC170 -LicenseFile &amp;#34;C:\Users\chris\Evoxys.flf&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>Evoxys es la empresa donde trabajo ;)&lt;/em>&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/04/21/License2.png" alt="">&lt;/p>
&lt;p>De esta forma, luego de reiniciar el servicio de Microsoft Dynamics 365 Business Central, veremos la nueva licencia:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Export-NAVServerLicenseInformation BC170
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://cmas.dev/img/posts/2021/04/21/License3.png" alt="">&lt;/p>
&lt;p>Listo, ya tenemos nuestra licencia procesada y funcionando como debe ser.&lt;/p></description></item><item><title>Business Central: Tablas según licencias</title><link>https://cmas.dev/posts/2021-04-14-business-central-tablas-segun-licencias/</link><pubDate>Wed, 14 Apr 2021 17:14:00 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-04-14-business-central-tablas-segun-licencias/</guid><description>&lt;p>Este es un caso muy particular, porque se dá en Microsoft Dynamics 365 Business Central en su modalidad On-Premise (quiere decir en un servidor local no en la nube) porque en dicha opción tenemos limitadas cantidades de tablas.&lt;/p>
&lt;p>Esto es un tema de licenciamiento para versiones On-Premise.&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2020 Wave 2 (KID: 5001735)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>En este artículo veremos cómo se definen las tablas. Básicamente todos los partners de Microsoft Dynamics tenemos acceso a un portal que se denomina &lt;a href="https://businesscenter.mbs.microsoft.com/">partnersource&lt;/a> donde accedemos a los datos de nuestros clientes.&lt;/p>
&lt;p>Dicho eso, procedo a mostrar en dicho portal la asignación de tablas de uno de ellos:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/04/14/LicenseTable1.png" alt="">&lt;/p>
&lt;p>En la parte de arriba nos indica que cantidad de tablas compradas y asignadas tenemos. En la parte de abajo nos indica los rangos que podemos utilizar, que aquí se especifican del 50000 al 50009.&lt;/p>
&lt;p>Entonces, dentro del Visual Studio code debemos definir ese tango dentro del archivo &lt;strong>app.json&lt;/strong> en la sección correspondiente:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;#34;idRanges&amp;#34;: [
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;from&amp;#34;: 50000,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;to&amp;#34;: 50009
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;target&amp;#34;: &amp;#34;OnPrem&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;runtime&amp;#34;: &amp;#34;6.0&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lo que expresamos aqui es lo que la licencia nos permite. Por lo tanto, no se pueden crear 11 tablas, no se puede usar otra numeración que la expuesta.&lt;/p>
&lt;p>&lt;strong>Tip:&lt;/strong> Si tenemos por ejemplo páginas del 50000 al 500099 debemos colocar en el archivo de configuración dentro de idRanges la numeración de las páginas. Solo debemos tener en cuenta la limitación que existe dentro de cada objeto, como está expresado en la tabla más arriba.&lt;/p>
&lt;p>La configuración final quedaría así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;id&amp;#34;: &amp;#34;66ae3477-c77e-4e15-8118-2c5c60edb3a5&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;name&amp;#34;: &amp;#34;VersionesExtensiones&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;publisher&amp;#34;: &amp;#34;Christian Amado&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;version&amp;#34;: &amp;#34;1.0.1.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;brief&amp;#34;: &amp;#34;Prueba de versiones&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;description&amp;#34;: &amp;#34;Versionado de extensiones&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;privacyStatement&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;EULA&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;help&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;url&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;logo&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;dependencies&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;screenshots&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;platform&amp;#34;: &amp;#34;1.0.0.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;application&amp;#34;: &amp;#34;17.0.0.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;idRanges&amp;#34;: [
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;from&amp;#34;: 50000,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;to&amp;#34;: 50009
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;target&amp;#34;: &amp;#34;OnPrem&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;runtime&amp;#34;: &amp;#34;6.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;showMyCode&amp;#34;: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Business Central: Tipos de sincronización en extensiones</title><link>https://cmas.dev/posts/2021-04-07-business-central-tipos-sincronizacion-extensiones/</link><pubDate>Wed, 07 Apr 2021 22:47:00 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-04-07-business-central-tipos-sincronizacion-extensiones/</guid><description>&lt;p>Este artículo lo escribo porque en mi equipo de trabajo surgieron dudas en cuanto a esto debido a que se han borrado datos de un cliente (obviamente en su espacio Sandbox) pero esto consume tiempo y el motivo es muy sencillo.&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2020 Wave 2 (KID: 5001735)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Básicamente existen tres tipos de sincronización en Microsoft Dynamics 365 Business Central (similares a Microsoft Dynamics NAV) los cuales son:&lt;/p>
&lt;ol>
&lt;li>Syncronize.&lt;/li>
&lt;li>Recreate.&lt;/li>
&lt;li>ForceSync.&lt;/li>
&lt;/ol>
&lt;p>Estas configuraciones se realizan en el archivo &lt;strong>launch.json&lt;/strong> de nuestor proyecto AL dentro del Visual Studio Code. Las opciones se ven así: &lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/04/07/SyncType1.png" alt="">&lt;/p>
&lt;h2 id="syncronize">Syncronize&lt;/h2>
&lt;p>Esta opción agrega todas las nuevas funcionalidades y mantiene los datos entre compilaciones, permitiendo construir las nuevas funcionalidades sobre datos existentes.&lt;/p>
&lt;h2 id="recreate">Recreate&lt;/h2>
&lt;p>Exactamente lo opuesto al anterior. Esta opción permite agregar las nuevas funcionalidades pero todos los datos de la extensión en cuestión se eliminan sin dejar rastros. Como su nombre indica elimina los objetos y luego los vuelve a crear.&lt;/p>
&lt;h2 id="forcesync">ForceSync&lt;/h2>
&lt;p>Es el primer caso pero mejorado. Siempre intentará mantener la estructura inicial con sus datos pero si tenemos una nueva clave primaria, modificación de campos o renombramiento de columnas en una tabla, TODO (lo referente a esos campos) se borrarán. El resto de los campos no afectados se mantendrá sin problemas.&lt;/p>
&lt;p>Con mi equipo siempre utilizamos la opción &lt;strong>ForceSync&lt;/strong> para desarrollo contra un Sandbox.&lt;/p>
&lt;p>Toda la información se encuentra en el sitio oficial de Microsoft &lt;a href="https://docs.microsoft.com/es-es/dynamics365/business-central/dev-itpro/developer/devenv-retaining-data-after-publishing">aquí&lt;/a>&lt;/p></description></item><item><title>Business Central: Obtener versión de extensión</title><link>https://cmas.dev/posts/2021-04-02-business-central-obtener-version-extension/</link><pubDate>Fri, 02 Apr 2021 10:28:14 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-04-02-business-central-obtener-version-extension/</guid><description>&lt;p>En este artículo explico cómo se puede obtener la versión de la extensión que desarrollamos de manera a poder mostrarlo en algún lugar.&lt;/p>
&lt;p>El código es muy simple (y no es mío)&amp;hellip;&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2020 Wave 2 (KID: 5001735)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Básicamente escribimos la siguiente función:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">local procedure ObtenerVersion(): Text
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> var
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> infoModule: ModuleInfo;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> appVersion: Version;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NavApp.GetCurrentModuleInfo(infoModule);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> appVersion := infoModule.AppVersion();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> exit(Format(appVersion));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Y nos quedaría así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pageextension 50100 CustomerListExt extends &amp;#34;Customer List&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> trigger OnOpenPage();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Message(&amp;#39;Hola soy la version&amp;#39; + ObtenerVersion());
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> local procedure ObtenerVersion(): Text
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> var
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> infoModule: ModuleInfo;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> appVersion: Version;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NavApp.GetCurrentModuleInfo(infoModule);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> appVersion := infoModule.AppVersion();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> exit(Format(appVersion));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>De esta manera, obtenemos la version de la extensión que se está ejecutando (la versión se coloca en el archivo &lt;strong>app.json&lt;/strong>).&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/04/02/VersionExtension1.png" alt="">&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Código creado por &lt;a href="https://community.dynamics.com/members/teddyh" title="Teddy Herryanto">Teddy H&lt;/a>&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p></description></item><item><title>Business Central: Revertir versiones de extensiones</title><link>https://cmas.dev/posts/2021-04-03-business-central-revertir-versiones-extensiones/</link><pubDate>Thu, 01 Apr 2021 16:38:12 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-04-03-business-central-revertir-versiones-extensiones/</guid><description>&lt;p>En este articulo deseo mostrar cómo revertir las versiones de las extensiones que creamos y cómo poder utilizarlas sin afectar las siguientes. Resulta que BC almacena todas las versiones, es decir, deshabilita las versiones anteriores pero no las elimina. eso permite volver a utilizarlas, aunque no es un proceso común.&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2020 Wave 2 (KID: 5001735)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Para que se entienda un poco, primero mostraré el archivo de configuración donde se establece la última versión:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;id&amp;#34;: &amp;#34;66ae3477-c77e-4e15-8118-2c5c60edb3a5&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;name&amp;#34;: &amp;#34;VersionesExtensiones&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;publisher&amp;#34;: &amp;#34;Christian Amado&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;version&amp;#34;: &amp;#34;1.0.1.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;brief&amp;#34;: &amp;#34;Prueba de versiones&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;description&amp;#34;: &amp;#34;Versionado de extensiones&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;privacyStatement&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;EULA&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;help&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;url&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;logo&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;dependencies&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;screenshots&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;platform&amp;#34;: &amp;#34;1.0.0.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;application&amp;#34;: &amp;#34;17.0.0.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;idRanges&amp;#34;: [
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;from&amp;#34;: 50100,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;to&amp;#34;: 50149
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;showMyCode&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;runtime&amp;#34;: &amp;#34;6.0&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Con el correr de las ejecuciones y el tiempo de desarrollo estas versiones van mejorando o actualizándose. Por ejemplo, creamos la versión 1.0.0.1 y luego la versión 1.0.1.0. Para entender más sobre versionado puedes leer &lt;a href="https://docs.microsoft.com/es-es/dotnet/standard/library-guidance/versioning#assembly-version" title="Versión de ensamblado">este artículo&lt;/a>&lt;/p>
&lt;p>Entonces, en la página &lt;em>Extensiones&lt;/em> dentro de nuestro sistema encontraremos algo así:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/04/03/VersionExtension1.png" alt="">&lt;/p>
&lt;p>Para que se entienda estamos necesitando la versión 1.0.0.1, así que debemos desinstalar y deshabilitar la extensión actual (1.0.1.0):&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/04/03/VersionExtension2.png" alt="">&lt;/p>
&lt;p>Aquí debemos seleccionar la opción de &lt;strong>Eliminar datos de extensión&lt;/strong> según sea nuestra intención:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/04/03/VersionExtension3.png" alt="">&lt;/p>
&lt;p>Entonces, esto nos queda así luego de la desinstalación. Todos esperamos que pueda volver automáticamente a la versión anterior, pero de momento eso no es posible.&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/04/03/VersionExtension4.png" alt="">&lt;/p>
&lt;p>Con eso podemos volver a compilar y ejecutar la extensión anterior que teníamos. De momento, no hay una forma de hacer downgrade de versiones en extensiones.&lt;/p>
&lt;p>&lt;strong>Recomendación:&lt;/strong> Si tienen control de código fuente puedes crear una rama (branch) con el número de versión utilizada, de manera a volver a publicar esa versión según la necesidad.&lt;/p></description></item><item><title>Business Central: Error descargando símbolos</title><link>https://cmas.dev/posts/2021-04-01-business-central-error-descargando-simbolos/</link><pubDate>Thu, 01 Apr 2021 15:15:35 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2021-04-01-business-central-error-descargando-simbolos/</guid><description>&lt;p>Procedí a instalar un nuevo CU (Cumulative Update) para Microsoft Dynamics 365 Business Central 2020 Wave 2 y al crear un nuevo proyecto AL lanzó un error de descarga de símbolos. Es un problema muy común pero la solución muchas veces es simple.&lt;/p>
&lt;p>En este caso, debemos cambiar algo en el archivo de configuración y listo.&lt;/p>
&lt;p>&lt;em>&lt;!-- raw HTML omitted -->Versión: 2020 Wave 2 (KID: 5001735)&lt;!-- raw HTML omitted -->&lt;/em>&lt;/p>
&lt;p>Creamos el proyecto AL de manera estándar, el Visual Studio Code nos realiza las preguntas de rigor (para armar el archivo launch.json) y luego todo está listo para empezar a trabajar.&lt;/p>
&lt;p>El primer paso consiste en descargar los símbolos (básicamente descar todos los ejecutables nativos del sistema) pero en este caso nos lanza un error.&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/04/01/SymbolsProblems1.png" alt="">&lt;/p>
&lt;p>Verificamos que en la administración de la instancia de Business Central esté marcada la opción de &lt;strong>Servicios de desarrollo&lt;/strong>&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/04/01/SymbolsProblems2.png" alt="">&lt;/p>
&lt;p>La corrección se realiza agregando el puerto que corresponde a los servicios de desarrollo (&lt;strong>predeterminado: 7049&lt;/strong>) y con eso se soluciona el problema.&lt;br>
&lt;img src="https://cmas.dev/img/posts/2021/04/01/SymbolsProblems3.png" alt="">&lt;/p>
&lt;p>De esta manera, pudimos descargar los símbolos y podemos seguir con nuestro trabajo.&lt;/p></description></item><item><title>Business Central: Manejo de versiones publicadas</title><link>https://cmas.dev/posts/2020-04-30-business-central-manejo-de-versiones-publicadas/</link><pubDate>Thu, 30 Apr 2020 20:31:00 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2020-04-30-business-central-manejo-de-versiones-publicadas/</guid><description>&lt;p>En versiones anteriores de Microsoft Dynamics, NAV específicamente se hacía complicado el versionado. De hecho no lo tenía, pero ahora el manejo de versiones publicadas en Business Central permite tener varias y utilizar la que estamos necesitando.&lt;/p>
&lt;p>En este punto estoy hablando de versiones en cuanto a extensiones, no a control de código fuente y sus beneficios. Eso es tema para otro artículo.&lt;/p>
&lt;h2 id="cómo-gestiono-las-versiones-de-mis-extensiones">¿Cómo gestiono las versiones de mis extensiones?&lt;/h2>
&lt;p>Primero, debemos tener en cuenta que debemos aumentar la versión que estamos usando en nuestro archivo &lt;strong>app.json&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;id&amp;#34;: &amp;#34;7c3c1ec4-addf-6fcf-b254-be50656e1bca&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;name&amp;#34;: &amp;#34;CMASDEV&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;publisher&amp;#34;: &amp;#34;Christian Amado&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> **&amp;#34;version&amp;#34;: &amp;#34;1.0.0.1&amp;#34;,**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;brief&amp;#34;: &amp;#34;Prueba de versiones&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;description&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;privacyStatement&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;EULA&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;help&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;url&amp;#34;: &amp;#34;https://cmas.dev&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;logo&amp;#34;: &amp;#34;./res/logo.png&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;dependencies&amp;#34;: [
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;appId&amp;#34;: &amp;#34;63ca2fa4-4f03-4f2b-a480-172fef340d3f&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;publisher&amp;#34;: &amp;#34;Microsoft&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;name&amp;#34;: &amp;#34;System Application&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;version&amp;#34;: &amp;#34;1.0.0.0&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;appId&amp;#34;: &amp;#34;437dbf0e-84ff-417a-965d-ed2bb9650972&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;publisher&amp;#34;: &amp;#34;Microsoft&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;name&amp;#34;: &amp;#34;Base Application&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;version&amp;#34;: &amp;#34;15.0.0.0&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;screenshots&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;platform&amp;#34;: &amp;#34;15.0.0.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;idRanges&amp;#34;: [
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;from&amp;#34;: 50000,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;to&amp;#34;: 50099
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;contextSensitiveHelpUrl&amp;#34;: &amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;showMyCode&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;runtime&amp;#34;: &amp;#34;4.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;target&amp;#34;: &amp;#34;OnPrem&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Para nuestro ejemplo la versión es 1.0.0.1, pero ya tenemos instalada la versión 1.0.0.0 en nuestro Business Central. Entonces, ¿Qué ventaja tengo? Pues la ventaja es que puedo hacer pruebas y utilizar la versión que me convenga en ese momento para realizar comparaciones de funcionalidades. Únicamente necesitamos los permisos para administrar las &lt;strong>Extensiones&lt;/strong> dentro de Business Central.&lt;/p></description></item><item><title>Business Central: Sustituir reportes</title><link>https://cmas.dev/posts/2020-04-28-business-central-sustituir-reportes/</link><pubDate>Tue, 28 Apr 2020 22:53:00 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2020-04-28-business-central-sustituir-reportes/</guid><description>&lt;p>En el &lt;a href="http://cmas.dev/2020/04/business-central-utilizar-manejador-de-eventos-en-reportes/">artículo anterior&lt;/a>, vimos cómo suscribirnos a eventos de un reporte sin poder modificar diseño. En este artículo, veremos cómo sustituir reportes en Business Central.&lt;/p>
&lt;p>Por ejemplo, necesitamos hacer cambios en el diseño del reporte y también en la funcionalidad para satisfacer las necesidades que pueda tener nuestro cliente. Entonces, procedemos a sustituir el reporte nativo por el reporte personalizado. Lo hacemos suscribiéndonos al evento &lt;strong>OnAfterSubstituteReport&lt;/strong> del CodeUnit &lt;strong>ReportManagement&lt;/strong>.&lt;/p>
&lt;p>Es importante aclarar que TODOS los reportes llaman a este método indefectiblemente. Eso hace que podamos cambiar el reporte y procesarlo según la necesidad.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[EventSubscriber(ObjectType::Codeunit, Codeunit::ReportManagement, &amp;#39;OnAfterSubstituteReport&amp;#39;, &amp;#39;&amp;#39;, false, false)]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">local procedure OnSubstituteReport(ReportId: Integer; var NewReportId: Integer)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //Reporte Cheque
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if ReportId = Report::Check then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NewReportId := Report::ChequePY;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">end;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>En el ejemplo de arriba vemos que buscamos el reporte que corresponde al cheque nativo del Business Central y ahora lo debemos cambiar por el cheque estándar que se utiliza en Paraguay.&lt;/p>
&lt;p>De esta manera, logramos sustituir reportes en Business Central utilizando este suscriptor de eventos.&lt;/p></description></item><item><title>Business Central: Utilizar manejador de eventos en reportes</title><link>https://cmas.dev/posts/2020-04-23-business-central-utilizar-manejador-de-eventos-en-reportes/</link><pubDate>Thu, 23 Apr 2020 21:12:00 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2020-04-23-business-central-utilizar-manejador-de-eventos-en-reportes/</guid><description>&lt;p>En el &lt;a href="http://cmas.dev/2020/04/business-central-utilizar-manejador-de-eventos/">artículo anterior&lt;/a>, hemos visto los conceptos relacionados a eventos dentro del Business Central. En esta ocasión veremos cómo utilizar manejador de eventos en reportes en Business Central. Este artículo es más rápido que el anterior porque sólo se deben tener en cuenta ciertas cosas.&lt;/p>
&lt;p>Hemos visto en una &lt;a href="http://cmas.dev/2019/02/bc-dev-tips-crear-extension-de-reporte-con-visual-studio-code/">entrada anterior&lt;/a>, que los reportes no pueden ser extendidos. De esta manera quedamos limitados a la hora de generar reportes dentro del Business Central. Pero debemos tener en cuenta algunos puntos:&lt;/p>
&lt;ul>
&lt;li>Si el diseño del reporte no cambia, podemos utilizar el manejador de eventos del reporte para cambiar alguna lógica dentro del mismo.&lt;/li>
&lt;li>Si el diseño del reporte cambia, debemos crear una copia del reporte y hacer la llamada a éste.&lt;/li>
&lt;/ul>
&lt;p>Leído lo anterior vamos a proceder a ver cómo realizaríamos la solución al primer punto mencionado arriba. Así que aquí vamos:&lt;/p>
&lt;p>Buscamos el reporte en cuestión y verificamos que &lt;strong>DataItem&lt;/strong> tiene asignados. Esto resulta necesario porque debemos saber exactamente a qué evento debemos suscribirnos para cambiar la lógica.&lt;/p>
&lt;p>En este caso utilizaremos el reporte &lt;strong>&amp;ldquo;Calculate Depreciation&amp;rdquo;&lt;/strong>. Dicho reporte tiene un publicador de eventos que se denomina &lt;strong>OnAfterCalculateDepreciation&lt;/strong> y es a éste evento que debemos suscribirnos.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[EventSubscriber(ObjectType::Report, Report::&amp;#34;Calculate Depreciation&amp;#34;, &amp;#39;OnAfterCalculateDepreciation&amp;#39;, &amp;#39;&amp;#39;, true, true)]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">local procedure CalculateDepreciation_OnAfterCalculateDepreciation(FANo: Code[20]; var TempGenJournalLine: Record &amp;#34;Gen. Journal Line&amp;#34;; var TempFAJournalLine: Record &amp;#34;FA Journal Line&amp;#34;; var DeprAmount: Decimal; var NumberOfDays: Integer; DeprBookCode: Code[10]; DeprUntilDate: Date; EntryAmounts: array[4] of Decimal; DaysInPeriod: Integer)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //Aqui realizamos la acción necesaria sobre cualquiera de las variables que se recibe como parámetro.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">end;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>De esta manera hemos visto cómo utilizar manejador de eventos en reportes en Business Central siempre y cuando no involucre un cambio en el diseño del mismo.&lt;/p></description></item><item><title>Business Central: Utilizar manejador de eventos</title><link>https://cmas.dev/posts/2020-04-21-business-central-utilizar-manejador-de-eventos/</link><pubDate>Tue, 21 Apr 2020 20:13:00 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2020-04-21-business-central-utilizar-manejador-de-eventos/</guid><description>&lt;p>En Microsoft Business Central también encontraremos algo básico a la hora de programar y/o usar un sistema que consiste en los eventos, de hecho, los eventos están presentes durante la ejecución de cualquier programa informático sea Web, escritorio y/o móvil. Un evento básicamente se produce cuando realizamos una acción en particular dentro de dicho programa. Por ejemplo, hacer clic en un botón.&lt;/p>
&lt;p>La información se encuentra disponible en la documentación de Business Central y se puede encontrar &lt;a href="https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-events-in-al?source=docs">aquí&lt;/a>.&lt;/p>
&lt;p>En esta ocasión haré una introducción copiando la información del sitio mencionado en el párrafo anterior (de modo a hacer una ontroducción y que el documento no está en español). Permiso Microsoft ;)&lt;/p>
&lt;h2 id="eventos-en-al-business-central">Eventos en AL (Business Central)&lt;/h2>
&lt;p>El uso de eventos es un concepto de programación probado y establecido que puede facilitar la actualización de la aplicación y limitar o incluso eliminar la necesidad de modificaciones de código en aplicaciones personalizadas debido a los cambios en la plataforma de aplicaciones.&lt;/p>
&lt;p>Puede usar eventos para diseñar la aplicación para reaccionar a acciones o comportamientos específicos que se producen. Los eventos permiten separar la funcionalidad personalizada de la lógica empresarial de la aplicación. Mediante el uso de eventos en la aplicación donde normalmente se realizan personalizaciones, puede reducir el costo de las modificaciones de código y las actualizaciones a la aplicación original.&lt;/p>
&lt;ul>
&lt;li>Las modificaciones de código a la funcionalidad personalizada se pueden realizar sin tener que modificar la aplicación original.&lt;/li>
&lt;li>Los cambios en el código de aplicación original se pueden realizar con un impacto mínimo en las personalizaciones.&lt;/li>
&lt;/ul>
&lt;p>En la tabla siguiente se describen todos los tipos de eventos diferentes:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Tipos de eventos&lt;/th>
&lt;th>Descripción&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>BusinessEvent&lt;/td>
&lt;td>Especifica el método que se va a tratar como publicador de eventos de tipo de negocio.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IntegrationEvent&lt;/td>
&lt;td>Especifica el método que se va a usar el publicador de eventos de tipo de integración.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>InternalEvent&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Global&lt;/td>
&lt;td>Especifica el método para que sea un publicador de eventos interno.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Trigger&lt;/td>
&lt;td>El tiempo de ejecución publica los eventos de desencadenador.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>El proceso para implementar estos eventos es ligeramente diferente. Para obtener más información sobre los diferentes tipos, consulte Tipos de eventos.&lt;/p>
&lt;h2 id="cómo-funcionan-los-eventos">Cómo funcionan los eventos&lt;/h2>
&lt;p>El principio básico es que se programan eventos en la aplicación para ejecutar un comportamiento personalizado cuando se producen. Los eventos de AL se modelan después de Microsoft .NET Framework. Hay tres participantes importantes involucrados en eventos: el evento, un editor y un suscriptor.&lt;/p>
&lt;ul>
&lt;li>Un &lt;strong>evento&lt;/strong> es la declaración de la ocurrencia o cambio en la aplicación. Un evento se declara mediante un método AL, que se conoce como una función de publicador de eventos. Un método de publicador de eventos se compone únicamente de una firma y no ejecuta ningún código.&lt;/li>
&lt;li>Un &lt;strong>publicador&lt;/strong> es el objeto que contiene el método de publicador de eventos que declara el evento. El editor expone un evento en la aplicación a los suscriptores, esencialmente proporcionándoles un punto de conexión en la aplicación.&lt;/li>
&lt;/ul>
&lt;p>La publicación de un evento no hace nada en la aplicación, aparte de hacer que el evento esté disponible para la suscripción. El evento debe generarse para que los suscriptores respondan. Un evento se genera agregando lógica a la aplicación que llama al publicador para invocar el evento (el método de publicador de eventos).&lt;/p>
&lt;ul>
&lt;li>Un &lt;strong>suscriptor&lt;/strong> escucha y controla un evento publicado. Un suscriptor es un método AL que se suscribe a un método de publicador de eventos específico e incluye la lógica para controlar el evento. Cuando se genera un evento, se llama al método de suscriptor y se ejecuta su código. Un suscriptor permite a los socios conectarse a la funcionalidad principal de la aplicación sin tener que realizar modificaciones de código tradicionales. Cualquier proveedor de soluciones de Dynamics 365, que también incluye Microsoft, puede usar suscriptores de eventos.&lt;/li>
&lt;/ul>
&lt;p>Pueden hacerlo varios suscriptores a un único método de publicador de eventos. Sin embargo, un editor no tiene conocimiento de los suscriptores, si los hay. Los suscriptores pueden residir en diferentes partes de la aplicación que los editores.&lt;/p>
&lt;h2 id="cómo-implementar-un-integrationevent">¿Cómo implementar un &lt;strong>IntegrationEvent&lt;/strong>?&lt;/h2>
&lt;p>Debemos tener en cuenta que en Business Central no se puede tocar (modificar) el código nativo, tal como se hacía en Microsoft Dynamics NAV. En Business Central, únicamente se pueden suscribirse a eventos y manejarlos desde algún CodeUnit personalizado. Para este ejemplo crearé un CodeUnit que se llama &lt;em>CmasDevCU&lt;/em>.&lt;/p>
&lt;ol>
&lt;li>Primeramente debemos crear un CodeUnit en nuestro Visual Studio Code:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">codeunit 50000 CmasDevCU
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //Aquí colocaremos los detalles de la suscripción
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Vemos la ubicación del publicador de eventos, en este caso, &lt;strong>Codeunit::&amp;ldquo;Sales-Post&amp;rdquo;&lt;/strong> (que corresponde al CodeUnit 80)&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">codeunit 50000 CmasDevCU
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [EventSubscriber(ObjectType::Codeunit, Codeunit::&amp;#34;Sales-Post&amp;#34;, &amp;#39;OnBeforeSalesInvHeaderInsert&amp;#39;, &amp;#39;&amp;#39;, true, true)]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> local procedure SalesPost_OnBeforeSalesInvHeaderInsert
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> (
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> var SalesInvHeader: Record &amp;#34;Sales Invoice Header&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SalesHeader: Record &amp;#34;Sales Header&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CommitIsSuppressed: Boolean
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> )
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> var CompanyInfo: Record &amp;#34;Company Information&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CompanyInfo.Get();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if CompanyInfo.EvxHabilitarCambios then begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SalesInvHeader.CampoExtra := SalesHeader.CampoExtra;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end else
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Error(&amp;#39;No está habilitado para hacer cambios.&amp;#39;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>En el ejemplo, muestro como nos suscribimos al evento que fue publicado en &lt;strong>Codeunit::&amp;ldquo;Sales-Post&amp;rdquo;&lt;/strong> y se llama &lt;strong>OnBeforeSalesInvHeaderInsert&lt;/strong>, utilizamos un procedimiento local y le ponemos el nombre que nos venga a la mente en ese momento, en este caso: &lt;strong>SalesPost_OnBeforeSalesInvHeaderInsert&lt;/strong> .&lt;/p>
&lt;p>De esta manera, he intentado explicar (usando documentación de Microsoft) los conceptos de eventos. Y al mismo tiempo hemos visto un ejemplo. Prácticamente todos los objetos dentro de Business Central poseen su publicador de eventos para realizar las diferentes acciones necesarias para cumplir con los objetivos que nuestros clientes esperan.&lt;/p></description></item><item><title>Business Central: Utilizar formatos de fechas no predeterminados</title><link>https://cmas.dev/posts/2020-04-16-business-central-utilizar-formatos-de-fechas-no-predeterminados/</link><pubDate>Thu, 16 Apr 2020 19:43:00 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2020-04-16-business-central-utilizar-formatos-de-fechas-no-predeterminados/</guid><description>&lt;p>En cualquier lenguaje de programación el tipo de dato más complejo es justamente la fecha. ¿Por qué? Porque las configuraciones regionales hacen que varíe el formato y ahí se presten a confusiones o errores. En este artículo veremos cómo utilizar formatos de fechas no predeterminados.&lt;/p>
&lt;h2 id="formatos-de-fechas-predeterminados">Formatos de fechas predeterminados&lt;/h2>
&lt;p>En la tabla siguiente se muestran los formatos de fecha estándar con el
entorno regional de un país o región europeo.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Fecha de Europa&lt;/th>
&lt;th>Formato&lt;/th>
&lt;th>Ejemplo&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;!-- raw HTML omitted -->&amp;lt;Day,2&amp;gt;-&amp;lt;Month,2&amp;gt;-&lt;!-- raw HTML omitted -->&lt;/td>
&lt;td>0&lt;/td>
&lt;td>05-04-03&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;!-- raw HTML omitted -->&amp;lt;Day,2&amp;gt;-&amp;lt;Month,2&amp;gt;-&lt;!-- raw HTML omitted -->&lt;/td>
&lt;td>1&lt;/td>
&lt;td>05-04-03&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;lt;Day,2&amp;gt;&amp;lt;Month,2&amp;gt;&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->D&lt;/td>
&lt;td>2&lt;/td>
&lt;td>050403D&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->-&amp;lt;Month,2&amp;gt;-&amp;lt;Day,2&amp;gt;&lt;/td>
&lt;td>3&lt;/td>
&lt;td>03-04-05&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->. &lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->&lt;/td>
&lt;td>4&lt;/td>
&lt;td>5. April 2003&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;!-- raw HTML omitted -->&amp;lt;Day,2&amp;gt;&amp;lt;Month,2&amp;gt;&lt;!-- raw HTML omitted -->&lt;/td>
&lt;td>5&lt;/td>
&lt;td>050403&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&amp;lt;Month,2&amp;gt;&amp;lt;Day,2&amp;gt;&lt;/td>
&lt;td>6&lt;/td>
&lt;td>030405&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;lt;Day,2&amp;gt;&amp;lt;Filler Character, &amp;gt;. &amp;lt;Month Text,3&amp;gt; &lt;!-- raw HTML omitted -->&lt;/td>
&lt;td>7&lt;/td>
&lt;td>5. Apr 2003&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>XML format&lt;/td>
&lt;td>9&lt;/td>
&lt;td>2003-04-05&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>En la tabla siguiente se muestran los formatos de fecha estándar con la
configuración regional de inglés (EE. UU.).&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Fecha de EE.UU.&lt;/th>
&lt;th>Formato&lt;/th>
&lt;th>Ejemplo&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;!-- raw HTML omitted -->&amp;lt;Month,2&amp;gt;/&amp;lt;Day,2&amp;gt;/&lt;!-- raw HTML omitted -->&lt;/td>
&lt;td>0&lt;/td>
&lt;td>04/05/03&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;!-- raw HTML omitted -->&amp;lt;Month,2&amp;gt;/&amp;lt;Day,2&amp;gt;/&lt;!-- raw HTML omitted -->&lt;/td>
&lt;td>1&lt;/td>
&lt;td>04/05/03&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;lt;Month,2&amp;gt;&amp;lt;Day,2&amp;gt;&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->D&lt;/td>
&lt;td>2&lt;/td>
&lt;td>040503D&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->/&amp;lt;Month,2&amp;gt;/&amp;lt;Day,2&amp;gt;&lt;/td>
&lt;td>3&lt;/td>
&lt;td>03/04/05&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->, &lt;!-- raw HTML omitted -->&lt;/td>
&lt;td>4&lt;/td>
&lt;td>April 5, 2003&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;!-- raw HTML omitted -->&amp;lt;Month,2&amp;gt;&amp;lt;Day,2&amp;gt;&lt;!-- raw HTML omitted -->&lt;/td>
&lt;td>5&lt;/td>
&lt;td>040503&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&amp;lt;Month,2&amp;gt;&amp;lt;Day,2&amp;gt;&lt;/td>
&lt;td>6&lt;/td>
&lt;td>030405&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;lt;Day,2&amp;gt;&amp;lt;Filler Character, &amp;gt;. &amp;lt;Month Text,3&amp;gt; &lt;!-- raw HTML omitted -->&lt;/td>
&lt;td>7&lt;/td>
&lt;td>5. Apr 2003&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>XML format&lt;/td>
&lt;td>9&lt;/td>
&lt;td>2003-04-05&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Utilizando código AL tendríamos los siguientes ejemplos:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">//Opción 1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">FORMAT(Fecha, 0,1); //Esto imprimirá **04/14/2020** que leeríamos 14 de Abril de 2020 (mi configuración regional es USA.)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//Opción 2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">FORMAT(Fecha, &amp;#39;&amp;lt;closing&amp;gt;&amp;lt;month,2&amp;gt;/&amp;lt;day,2&amp;gt;/&amp;lt;year&amp;gt;&amp;#39;); //Esto imprimirá **04/14/2020** que leeríamos 14 de Abril de 2020 (mi configuración regional es USA.)&amp;lt;/year&amp;gt; &amp;lt;/day,2&amp;gt;&amp;lt;/month,2&amp;gt;&amp;lt;/closing&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Recordemos que el formato a ser utilizado será el que tengamos en la configuración regional del sistema operativo.&lt;/p>
&lt;h2 id="formatos-de-fecha-no-predeterminados">Formatos de fecha NO predeterminados&lt;/h2>
&lt;p>Aquí podemos entrar en detalle utilizando los distintos valores expuestos en los valores predeterminados y modificarlo a placer según la necesidad. En el ejemplo, queremos obtener el formato 14-Abril-2020&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">FORMAT(Fecha, &amp;#39;&amp;lt;Closing&amp;gt;&amp;lt;Day,2&amp;gt;-&amp;lt;Month Text&amp;gt;-&amp;lt;Year4&amp;gt;&amp;#39;); //De esta manera damos el formato necesario.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>De esta manera mostré cómo podemos utilizar un formato de fecha que no está predeterminado para el uso dentro de Microsoft Dynamics Business Central.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Business Central: Deshabilitar descarga de código fuente en Extensiones</title><link>https://cmas.dev/posts/2020-04-14-deshabilitar-descarga-origen-extensiones/</link><pubDate>Tue, 14 Apr 2020 19:06:00 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2020-04-14-deshabilitar-descarga-origen-extensiones/</guid><description>&lt;p>Mi equipo y yo nos encontramos desarrollando algunas funcionalidades extra para el &lt;strong>Microsoft Dynamics 365 Business Central&lt;/strong>, luego de realizar las pruebas nos dirigimos a Extensiones y vimos que se podía descargar el código fuente de todo el proyecto (código AL, reportes, etc).&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Accedemos al menú de &amp;ldquo;Extensiones&amp;rdquo; dentro del &lt;strong>Microsoft Dynamics 365 Business Central&lt;/strong>:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/04/bc_disable_download_source_1.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Hacemos clic en el mini menú de la extensión en cuestión y hacemos clic en &amp;ldquo;Descarga origen&amp;rdquo;:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/04/bc_disable_download_source_2.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Verificamos la descarga (es un .zip), lo descomprimimos y veremos todo nuestro trabajo:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/04/bc_disable_download_source_3.png" alt="">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="cómo-hacemos-para-no-permitir-la-descarga">¿Cómo hacemos para no permitir la descarga?&lt;/h2>
&lt;p>No hay mucho secreto, es muy sencillo y lo explico a continuación:&lt;/p>
&lt;ol>
&lt;li>En el archivo app.json (dentro de &lt;strong>Visual Studio Code&lt;/strong>, agregamos o modificamos el valor de la propiedad &amp;ldquo;ShowMyCode&amp;rdquo;):&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;#34;showMyCode&amp;#34;: false, //&amp;#34;showMyCode&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;runtime&amp;#34;: &amp;#34;4.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;#34;target&amp;#34;: &amp;#34;OnPrem&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Volvemos al paso 1 y 2 del punto anterior; veremos un cambio en el menú contextual:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/04/bc_disable_download_source_4.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>De esta manera, hemos bloqueado la descarga del código fuente de nuestra extensión.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Business Central: Wave 2 Txt2AL no existe</title><link>https://cmas.dev/posts/2020-04-08-business-central-wave-2-txt2al-no-existe/</link><pubDate>Wed, 08 Apr 2020 17:06:00 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2020-04-08-business-central-wave-2-txt2al-no-existe/</guid><description>&lt;p>En la &lt;a href="https://cmas.dev/2020/04/business-central-convertir-c-side-a-codigo-al/">entrada anterior&lt;/a> hemos visto cómo convertir código &lt;strong>C/SIDE&lt;/strong> y código &lt;strong>AL&lt;/strong>. Ahora veremos cómo disponibilizar esta herramienta en &lt;strong>Dynamics 365 Business Central Wave 2&lt;/strong>, pues ya no está disponible directamente como antes.&lt;/p>
&lt;p>Primeramente necesitamos tener a mano la carpeta desde donde se instala el software Dynamics 365 Business Central y copiar archivos de un lugar a otro: &lt;img src="https://cmas.dev/img/posts/migrated/2020/04/bc_fix_txt2al_1.png" alt="">&lt;/p>
&lt;p>Procedemos a &lt;strong>Pegar&lt;/strong> los archivos en la ubicación donde tenemos instalado Dynamics 365 Business Central: &lt;img src="https://cmas.dev/img/posts/migrated/2020/04/bc_fix_txt2al_2.png" alt="">&lt;/p>
&lt;p>No olvidemos de marcar la opción &amp;ldquo;Omitir estos archivos&amp;rdquo;, caso contrario, dañaremos nuestra instalación (la idea es agregar los archivos que faltan únicamente): &lt;img src="https://cmas.dev/img/posts/migrated/2020/04/bc_fix_txt2al_3.png" alt="">&lt;/p>
&lt;p>De esta manera, tenemos el problema resuelto.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Business Central: Convertir C/SIDE a código AL</title><link>https://cmas.dev/posts/2020-04-07-business-central-convertir-c-side-a-codigo-al/</link><pubDate>Tue, 07 Apr 2020 12:24:00 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2020-04-07-business-central-convertir-c-side-a-codigo-al/</guid><description>&lt;p>La semana pasada me tocó realizar migración de Dynamics NAV 2018 a Dynamics 365 Business Central Wave 2 y me encontré con que debía hacerlo tabla por tabla. Va ser un proceso muy largo, cuanto más objetos tengas más código escribiremos. Es por eso que el propio &lt;strong>Dynamics 365 Business Central&lt;/strong> trae una herramienta que hace ese trabajo por nosotros. Se llama &lt;strong>Txt2AL.exe&lt;/strong> y es muy útil.&lt;/p>
&lt;p>Primeramente, debemos crear dos carpetas:&lt;/p>
&lt;ol>
&lt;li>&lt;em>NAV&lt;/em>: Una carpeta donde colocaremos las exportaciones de Dynamics NAV. Todos como archivos .txt. En ese caso tengo en &amp;ldquo;&lt;strong>C:\NAV&lt;/strong>&amp;rdquo;&lt;/li>
&lt;li>&lt;em>Business Central&lt;/em>: Una carpeta donde recibiremos el código AL generado desde la carpeta anterior. En ese caso tengo en &amp;ldquo;&lt;strong>C:\BC&lt;/strong>&amp;rdquo;&lt;/li>
&lt;/ol>
&lt;p>Ahora debemos ir al &lt;strong>Símbolo del sistema&lt;/strong> (&lt;strong>cmd&lt;/strong>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd C:\\Program Files (x86)\\Microsoft Dynamics 365 Business Central\\150\\RoleTailored Client
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Txt2al --Source=&amp;#34;C:\\NAV&amp;#34; --Target=&amp;#34;C:\\BC&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>De esta manera logramos hacer la migración del código &lt;strong>C/SIDE&lt;/strong> a código &lt;strong>AL&lt;/strong>: &lt;img src="https://cmas.dev/img/posts/businesscentral/bc_nav_to_bc.png" alt="">&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>BCDEV Tips: AL Extension Pack para Visual Studio Code</title><link>https://cmas.dev/posts/2020-03-29-bcdev-tips-al-extension-pack-para-visual-studio-code/</link><pubDate>Sun, 29 Mar 2020 16:03:22 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2020-03-29-bcdev-tips-al-extension-pack-para-visual-studio-code/</guid><description>&lt;p>El desarrollo de Dynmaics 365 Business Central sigue avanzando, las herramientas aún están en fase de desarrollo y es por eso que depende en gran medida de la comunidad de desarrolladores.&lt;/p>
&lt;p>En esta ocasión les traigo una extensión para Visual Studio Code que me resulta demasiado útil. Se llama AL Extension Pack y básicamente es un conjunto de extensiones que se relacionan entre sí para ayudar al desarrollador AL a ser más productivo y rápido. Está más orientado a &lt;strong>Cloud&lt;/strong> que a &lt;strong>On Premise&lt;/strong> pero es demasiado útil.&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/1-8.png" alt="">&lt;/p>
&lt;p>De esa manera mi Visual Studio Code se llenó de extensiones muy útil para el desarrollo sobre Dynamics 365 Business Central.&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/2-8.png" alt="">&lt;/p>
&lt;p>&lt;a href="https://marketplace.visualstudio.com/items?itemName=waldo.al-extension-pack">Aquí&lt;/a> están los detalles de la extensión.&lt;/p>
&lt;p>Y &lt;a href="https://marketplace.visualstudio.com/publishers/waldo">aquí&lt;/a> el perfil del desarrollador que lo hizo. ¡Gracias waldo!&lt;/p>
&lt;p>¡A investigar!&lt;/p></description></item><item><title>BCDEV Tips: Modificar campos y disparadores</title><link>https://cmas.dev/posts/2020-03-28-bcdev-tips-modificar-campos-y-disparadores/</link><pubDate>Sat, 28 Mar 2020 14:54:57 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2020-03-28-bcdev-tips-modificar-campos-y-disparadores/</guid><description>&lt;p>Dynamics 365 Business Central trajo consigo muchos cambios novedosos. En la empresa donde trabajo estamos implementando uno y nos encontramos con un tema no menor: ¡No podemos modificar el trigger de una tabla!&lt;/p>
&lt;p>Es decir, no podemos modificar el código nativo de un objeto en Dynamics 365 Business Central ¿Por qué? Porque Microsoft quiere que utilicemos extensiones, no que modifiquemos el código nativo a placer poniendo en riesgo la seguridad y/o integridad del producto.&lt;/p>
&lt;p>Primeramente debemos crear una extensión de tabla (por ejemplo, extensión de la tabla &lt;strong>CompanyInformation&lt;/strong>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">tableextension 50100 &amp;#34;Company Information Ext.&amp;#34; extends &amp;#34;Company Information&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fields
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Luego agregamos las siguientes líneas de código:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">tableextension 50100 &amp;#34;Company Information Ext.&amp;#34; extends &amp;#34;Company Information&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fields
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> modify(&amp;#34;VAT Registration No.&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Caption = &amp;#39;RUC&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Y ahora, agregaremos el trigger de validación del campo (debe ser antes o despues) en cuestión para hacerlo oblgatorio:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">tableextension 50100 &amp;#34;Company Information Ext.&amp;#34; extends &amp;#34;Company Information&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fields
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> modify(&amp;#34;VAT Registration No.&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Caption=&amp;#39;RUC&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> trigger OnAfterValidate()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //Si queremos realizar una acción después de la validación escribimos código aquí
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if &amp;#34;VAT Registration No.&amp;#34; = &amp;#39;&amp;#39; then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ERROR(&amp;#39;Debe ingresar el RUC de la empresa&amp;#39;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> trigger OnBeforValidate()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //Si queremos realizar una acción antes de la validación escribimos código aquí
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>¡Espero que resulte útil!&lt;/p></description></item><item><title>BCDEV Tips: Modificar funciones base</title><link>https://cmas.dev/posts/2020-03-27-bcdev-tips-modificar-funciones-base/</link><pubDate>Fri, 27 Mar 2020 19:49:50 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2020-03-27-bcdev-tips-modificar-funciones-base/</guid><description>&lt;p>Supongamos que deseamos validar que un cheque no pueda ser anulado por algún motivo. Nativamente Business Central no tiene esta funcionalidad, entonces lo más lógico es agregar código al CodeUnit 367 &amp;ldquo;Check Management&amp;rdquo; para agregar toda la funcionalidad requerido.&lt;/p>
&lt;h2 id="el-problema">¿El problema?&lt;/h2>
&lt;p>En Dynamics 365 Business Central no se pueden modificar los CodeUnits de la aplicación base ni se pueden crear extensiones de CodeUnits.&lt;/p>
&lt;p>¿La solución? Se deben utilizar los eventos disponibles en los CodeUnits para poder realizar acciones que son necesarias en la lógica de nuestra aplicación. Mas información &lt;a href="https://docs.microsoft.com/es-es/dynamics365/business-central/dev-itpro/developer/devenv-events-in-al">aquí&lt;/a> (en inglés).&lt;/p>
&lt;p>Como ya vimos en una entrada anterior, debemos hacer uso de la extensión de Visual Studio Code que se llama &lt;strong>AL Object Designer&lt;/strong> y buscar el codeunit necesario:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/1-4.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/2-4.png" alt="">&lt;/p>
&lt;p>Buscamos el lugar donde deberíamos ingresar nuestro código personalizado: Encontramos la línea 151 en adelante&amp;hellip; Pero código no se puede escribir. Es ahí donde encontramos el publicador de eventos &lt;strong>OnBeforeFinancialVoidCheck(CheckLedgEntry);&lt;/strong> y debemos suscribirnos a él.&lt;/p>
&lt;p>Utilizaremos un codeunit creado por nosotros (donde irían todas las suscripciones de eventos) para luego ser utilizado:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">codeunit 50000 CmasDev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [EventSubscriber(ObjectType::Codeunit, Codeunit::CheckManagement, &amp;#39;OnBeforeFinancialVoidCheck&amp;#39;, &amp;#39;&amp;#39;, true, true)]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> procedure ValidarAnulacionCheque(var CheckLedgerEntry: Record &amp;#34;Check Ledger Entry&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if CheckLedgerEntry.&amp;#34;Check No.&amp;#34; = &amp;#39;&amp;#39; then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Error(&amp;#39;Debe tener un número de cheque&amp;#39;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Por último lanzamos el evento donde sea necesario utilizando el código:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">begin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> codeun.ValidarAnulacionCheque(CheckLedgeEntry);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">end;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">var codeun : Codeunit CmasDev;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>BCDEV Tips: Configurar entorno de desarrollo - Parte 3</title><link>https://cmas.dev/posts/2020-03-25-bcdev-tips-configurar-entorno-de-desarrollo-parte-3/</link><pubDate>Wed, 25 Mar 2020 20:44:03 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2020-03-25-bcdev-tips-configurar-entorno-de-desarrollo-parte-3/</guid><description>&lt;p>En esta última parte del artículo veremos cómo clonar el repositorio y unirlo con Visual Studio Code. Por último publicaremos la extensión en Dynamics 365 Business Central Wave 2.&lt;/p>
&lt;p>Para ello, debemos ubicarnos en la sección de repositorios del Visual Studio Code y clonar el repositorio:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/1-7.png" alt="">&lt;/p>
&lt;p>Obtenemos la URL del reporitorio de archivos ubicado en Azure DevOps Services:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/2-7.png" alt="">&lt;/p>
&lt;p>Seleccionamos la carpeta donde se colocará localmente el proyecto:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/3-6.png" alt="">&lt;/p>
&lt;p>Debemos autenticarnos al servicio y listo:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/4-6.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/5-5.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/6-5.png" alt="">&lt;/p>
&lt;p>Ahora, debemos autenticarnos al repositorio para ver/editar los cambios:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/7-4.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/8-3.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/9-3.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/10-3.png" alt="">&lt;/p>
&lt;p>Una vez terminado este paso nos lleva de nuevo al Visual Studio Code y seguimos&amp;hellip;&lt;/p>
&lt;p>Verificamos que estén sincronizados los repositorios:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/11-2.png" alt="">&lt;/p>
&lt;p>Creamos el proyecto AL, dentro del mismo proyecto del repositorio y nos vamos al control de código fuente:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/12-2.png" alt="">&lt;/p>
&lt;p>Escribimos un mensaje relacionado y le damos &lt;strong>Commit&lt;/strong>:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/13-1.png" alt="">&lt;/p>
&lt;p>Aceptamos la sugerencia:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/14-1.png" alt="">&lt;/p>
&lt;p>Procedemos a Sincronizar los cambios para que se refleje en el servidor:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/15.png" alt="">&lt;/p>
&lt;p>En Azure DevOps Services, verificamos si está todo correcto:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/16.png" alt="">&lt;/p>
&lt;p>De esta manera, tenemos configurado y lsito nuestro entorno de desarrollo &lt;strong>Dynamics 365 Business Central Wave 2&lt;/strong> con &lt;strong>Azure DevOps Services&lt;/strong>.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>BCDEV Tips: Configurar entorno de desarrollo - Parte 2</title><link>https://cmas.dev/posts/2020-03-24-bcdev-tips-configurar-entorno-de-desarrollo-parte-2/</link><pubDate>Tue, 24 Mar 2020 12:41:47 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2020-03-24-bcdev-tips-configurar-entorno-de-desarrollo-parte-2/</guid><description>&lt;p>En la &lt;a href="https://cmas.dev/2020/03/bcdev-tips-configurar-entorno-de-desarrollo-parte-1/">entrada anterior&lt;/a>, vimos cómo crear un repositorio con Azure DevOps Services y cómo instalar Git en nuestro Windows.&lt;/p>
&lt;p>Ahora procederemos a instalar Visual Studio Code en nuestro Windows.&lt;/p>
&lt;p>&lt;a href="https://cmas.dev/2018/12/business-central-entorno-de-desarrollo-con-visual-studio-code/">Aquí&lt;/a> tenemos como instalar. Debemos descargarlo desde aquí, ejecutarlo y seguir las instrucciones en pantalla para su instalación. Una vez instalado lo abrimos:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/1-6.png" alt="">&lt;/p>
&lt;p>Nos dirigimos a las extensiones y empezamos a agregarlas:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/2-6.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/3-5.png" alt="">&lt;/p>
&lt;p>En mi caso tengo agregadas sólo estas para el desarrollo de mis extensiones dentro Dynamics 365 Business Central.&lt;/p>
&lt;h2 id="cómo-crear-un-nuevo-proyecto-de-tipo-al">¿Cómo crear un nuevo proyecto de tipo AL?&lt;/h2>
&lt;p>Presionamos las teclas &lt;strong>Ctrl + Shift + P&lt;/strong> y colocamos la frase &amp;ldquo;&lt;strong>AL: Go!&lt;/strong>&amp;rdquo;&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/4-5.png" alt="">&lt;/p>
&lt;p>Completamos el campo con la ubicación del proyecto:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/5-4.png" alt="">&lt;/p>
&lt;p>Seleccionamos la versión de Business Central que utilizaremos:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/6-4.png" alt="">&lt;/p>
&lt;p>(En Paraguay, no tenemos disponible aún la versión Cloud) elegimos el servidor propio:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/7-3.png" alt="">&lt;/p>
&lt;p>El proyecto creado se ve de la siguiente manera:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/8-2.png" alt="">&lt;/p>
&lt;p>Descargamos la aplicación base con este coando:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/9-2.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/10-2.png" alt="">&lt;/p>
&lt;p>En cuanto a la extensión &lt;strong>AL Object Designer&lt;/strong> se utiliza para ver todos objetos que existen dentro de la aplicación base de &lt;strong>Dynamics 365 Business Central&lt;/strong>:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/11-1.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/12-1.png" alt="">&lt;/p>
&lt;p>Esto nos permite visualizar de manera porecisa los objetos ya existentes dentro de Dynamics 365 Business Central Wave 2.&lt;/p>
&lt;p>¡No te piedas la última parte de este artículo!&lt;/p></description></item><item><title>BCDEV Tips: Configurar entorno de desarrollo - Parte 1</title><link>https://cmas.dev/posts/2020-03-22-bcdev-tips-configurar-entorno-de-desarrollo-parte-1/</link><pubDate>Sun, 22 Mar 2020 10:39:53 -0400</pubDate><author>biz@cmas.dev (Christian Amado)</author><guid>https://cmas.dev/posts/2020-03-22-bcdev-tips-configurar-entorno-de-desarrollo-parte-1/</guid><description>&lt;p>En esta serie de entradas quisiera detallar el proceso de configuración del entorno de desarrollo Visual Studio Code para Dynamics 365 Business Central. Las tres partes de esta serie contemplan:&lt;/p>
&lt;ol>
&lt;li>Parte 1 - Configuración de Azure DevOps e instalación de Git: Como estos proyectos involucran a muchas personas es ideal tener un repositorio de archivos con control de código fuente para fácil manejo y adminsitración de los mismos.&lt;/li>
&lt;li>Parte 2 - Instalación de Visual Studio Code y extensiones básicas para AL: Esta entrada se refiere más a recomendaciones que doy para la instalación y para las extensiones más básicas para el trabajo en equipo.&lt;/li>
&lt;li>Parte 3 - Configuración de Azure Repos y publicación de una extensión: Aquí explicaré cómo terminar de configurar el entorno y dejarlo listo para la primera publicación de nuestra extensión de prueba.&lt;/li>
&lt;/ol>
&lt;p>Empecemos con las configuraciones generales.&lt;/p>
&lt;p>Primero, debemos crear una cuenta de Azure DevOps (es gratuita) y creamos una organización (CmasBlog):&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/1-5.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/2-5.png" alt="">&lt;/p>
&lt;p>Una vez cumplidos los pasos anteriores, debemos crear un proyecto que llamaremos Blog_Test:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/3-4.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/4-4.png" alt="">&lt;br>
Hay que tener en cuenta que en la opción &lt;strong>Version control&lt;/strong> debe estar en &lt;strong>Git&lt;/strong>.&lt;/p>
&lt;p>Nos dirigimos a la sección &lt;strong>Repos&lt;/strong> &amp;gt; &lt;strong>Files&lt;/strong> e inicializamos con el archivo &lt;strong>README&lt;/strong>:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/5-3.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/6-3.png" alt="">&lt;/p>
&lt;p>De esa manera, hemos terminado de configurar el Azure DevOps Services para que sea nuestro repositorio de datos.&lt;/p>
&lt;p>En vista de que Visual Studio Code no administra ni gestiona herramientas debemos instalar Visual Studio 2019, por lo menos en su versión &lt;strong>Community&lt;/strong> (lo puedes descargar &lt;a href="https://visualstudio.microsoft.com/es/thank-you-downloading-visual-studio/?sku=Community&amp;amp;rel=16">aquí&lt;/a>) para poder utilizar la herramienta &lt;strong>TF.exe&lt;/strong>, este archivo es el ejecutable que manipula los controles de versión en Visual Studio y será utilizado por Visual Studio Code para hacer la misma tarea. Por favor, instala lo mínimo de Visual Studio (por ejemplo, .NET Desktop y listo).&lt;/p>
&lt;p>Una vez realizada la instalación de Visual Studio, nos dirigimos a la ubicación &amp;ldquo;&lt;strong>C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\TeamFoundation\Team Explorer&lt;/strong>&amp;rdquo; y realiza dos tareas:&lt;/p>
&lt;ol>
&lt;li>Renombra la carpeta &lt;strong>es&lt;/strong> a &lt;strong>_es&lt;/strong>.&lt;/li>
&lt;li>Copia la dirección completa porque la utilizaremos en la Parte 3 de este artículo.&lt;/li>
&lt;/ol>
&lt;p>Se deben instalar dos herramientas de Git y terminaremos esta parte.&lt;/p>
&lt;p>Descargamos Git desde &lt;a href="https://git-scm.com/download/win">aquí&lt;/a>, luego ejecutamos el instalador y seguimos las indicaciones en pantalla.&lt;/p>
&lt;p>Una vez terminado el proceso nos dirigimos al &lt;strong>cmd.exe&lt;/strong> de Windows (buscar Símbolo de sistema en Windows), escribimos &lt;strong>git&lt;/strong> y presionamos &lt;strong>Enter&lt;/strong>:&lt;br>
&lt;img src="https://cmas.dev/img/posts/migrated/2020/03/7-2.png" alt="">&lt;/p>
&lt;p>Por último debemos instalar una extensión de Git para el manejo de credenciales que se llama &amp;ldquo;&lt;strong>Microsoft Git Credential Manager for Windows&lt;/strong>&amp;rdquo; y lo puedes descargar desde &lt;a href="https://github.com/Microsoft/Git-Credential-Manager-for-Windows/releases/latest">aquí&lt;/a>.&lt;/p>
&lt;p>Luego de ejecutarlo e instalarlo el sistema estará listo para utilizar Git sin inconvenientes.&lt;/p>
&lt;p>¡No te piedas la Parte 2 de este artículo!&lt;/p></description></item></channel></rss>