<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Web Development on Christian Amado's Blog</title><link>https://cmas.dev/tags/web-development/</link><description>Recent content in Web Development on Christian Amado's Blog</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Tue, 24 Dec 2024 00:00:00 -0400</lastBuildDate><atom:link href="https://cmas.dev/tags/web-development/index.xml" rel="self" type="application/rss+xml"/><item><title>Usando Blazor para crear Progressive Web Apps (PWA)</title><link>https://cmas.dev/posts/2024-12-24-blazor-pwa/</link><pubDate>Tue, 24 Dec 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-12-24-blazor-pwa/</guid><description>&lt;p>&lt;strong>Blazor&lt;/strong>, el framework moderno basado en &lt;strong>.NET&lt;/strong>, ha demostrado ser una herramienta poderosa para el desarrollo de aplicaciones web interactivas. Combinado con las capacidades de &lt;strong>Progressive Web Apps (PWA)&lt;/strong>, ofrece una forma innovadora de construir aplicaciones que funcionan offline. Se pueden instalar en dispositivos y ofrecen una experiencia similar a las aplicaciones nativas. En este artículo, exploraremos cómo usar &lt;strong>Blazor&lt;/strong> para crear &lt;strong>PWAs&lt;/strong>, centrándonos en las nuevas capacidades introducidas con &lt;strong>.NET 9&lt;/strong>, buenas prácticas y ejemplos detallados.&lt;/p>
&lt;h2 id="qué-es-una-progressive-web-app-pwa">¿Qué es una Progressive Web App (PWA)?&lt;/h2>
&lt;p>Las &lt;strong>PWAs&lt;/strong> son aplicaciones web que combinan las mejores características de las aplicaciones web y las nativas. Algunas de sus características clave incluyen:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Capacidad offline&lt;/strong>: Funcionan sin conexión a internet mediante el uso de &lt;em>Service Workers&lt;/em>.&lt;/li>
&lt;li>&lt;strong>Instalables&lt;/strong>: Se pueden agregar a la pantalla de inicio de un dispositivo.&lt;/li>
&lt;li>&lt;strong>Rápidas y responsivas&lt;/strong>: Optimizadas para ofrecer un rendimiento similar al de las aplicaciones nativas.&lt;/li>
&lt;li>&lt;strong>Seguras&lt;/strong>: Utilizan &lt;em>HTTPS&lt;/em> para garantizar conexiones seguras.&lt;/li>
&lt;/ol>
&lt;h2 id="por-qué-usar-blazor-para-pwas">¿Por qué usar Blazor para PWAs?&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Reutilización de código&lt;/strong>: Con &lt;strong>Blazor&lt;/strong>, puedes usar &lt;strong>C#&lt;/strong> y &lt;strong>.NET&lt;/strong> tanto en el cliente como en el servidor.&lt;/li>
&lt;li>&lt;strong>Ecosistema robusto&lt;/strong>: Accede a las bibliotecas de .&lt;strong>NET&lt;/strong> y herramientas modernas.&lt;/li>
&lt;li>&lt;strong>Soporte para WebAssembly&lt;/strong>: &lt;strong>Blazor WebAssembly&lt;/strong> permite ejecutar aplicaciones completas en el navegador.&lt;/li>
&lt;li>&lt;strong>Integración nativa de PWA&lt;/strong>: Con configuraciones simples, &lt;strong>Blazor&lt;/strong> puede transformar una aplicación en una &lt;strong>PWA&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;h2 id="configuración-inicial">Configuración inicial&lt;/h2>
&lt;h3 id="requisitos-previos">Requisitos previos&lt;/h3>
&lt;ol>
&lt;li>Tener instalado &lt;strong>.NET 9 SDK&lt;/strong>:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Editor de código, como &lt;strong>Visual Studio 2022&lt;/strong> o &lt;strong>Visual Studio Code&lt;/strong>.&lt;/li>
&lt;li>Navegador moderno compatible con &lt;strong>PWAs&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;h3 id="crear-un-proyecto-blazor-webassembly">Crear un proyecto Blazor WebAssembly&lt;/h3>
&lt;ol>
&lt;li>Ejecutar el comando para crear un proyecto &lt;strong>PWA&lt;/strong>:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet new blazorwasm -o BlazorPwaApp --pwa
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Navegar al directorio del proyecto:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd BlazorPwaApp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Ejecutar la aplicación:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>Al usar la opción &lt;code>--pwa&lt;/code>, el proyecto incluye configuraciones predeterminadas para convertirlo en una &lt;strong>PWA&lt;/strong>.&lt;/p>
&lt;h2 id="entender-los-archivos-clave-de-una-pwa">Entender los archivos clave de una PWA&lt;/h2>
&lt;h3 id="manifestjson">&lt;code>manifest.json&lt;/code>&lt;/h3>
&lt;p>El archivo &lt;code>manifest.json&lt;/code> proporciona metadatos sobre la aplicación, como el nombre, íconos y configuraciones de inicio.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;short_name&amp;#34;: &amp;#34;BlazorPWA&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;name&amp;#34;: &amp;#34;Blazor Progressive Web App&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;start_url&amp;#34;: &amp;#34;/&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;display&amp;#34;: &amp;#34;standalone&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;background_color&amp;#34;: &amp;#34;#ffffff&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;theme_color&amp;#34;: &amp;#34;#0078D7&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;icons&amp;#34;: [
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;src&amp;#34;: &amp;#34;icons/icon-192.png&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;sizes&amp;#34;: &amp;#34;192x192&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;type&amp;#34;: &amp;#34;image/png&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;src&amp;#34;: &amp;#34;icons/icon-512.png&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;sizes&amp;#34;: &amp;#34;512x512&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;type&amp;#34;: &amp;#34;image/png&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="service-worker">Service Worker&lt;/h3>
&lt;p>El &lt;em>Service Worker&lt;/em> gestiona el almacenamiento en caché y las funcionalidades offline. En &lt;strong>Blazor&lt;/strong>, el archivo predeterminado es &lt;code>service-worker.published.js&lt;/code>.&lt;/p>
&lt;h4 id="ejemplo-de-manejo-de-caché">Ejemplo de manejo de caché&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">self.addEventListener(&amp;#39;install&amp;#39;, event =&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> event.waitUntil(
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> caches.open(&amp;#39;blazor-cache&amp;#39;).then(cache =&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return cache.addAll([
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;/&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;index.html&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;manifest.json&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;_framework/blazor.webassembly.js&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ]);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> })
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> );
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">});
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">self.addEventListener(&amp;#39;fetch&amp;#39;, event =&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> event.respondWith(
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> caches.match(event.request).then(response =&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return response || fetch(event.request);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> })
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> );
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="crear-una-experiencia-offline">Crear una experiencia offline&lt;/h2>
&lt;h3 id="habilitar-funcionalidad-offline">Habilitar funcionalidad offline&lt;/h3>
&lt;ol>
&lt;li>Actualizar el &lt;em>Service Worker&lt;/em> para gestionar recursos adicionales.&lt;/li>
&lt;li>Configurar rutas en &lt;code>manifest.json&lt;/code> y asegurarse de incluir recursos clave.&lt;/li>
&lt;/ol>
&lt;h4 id="ejemplo">Ejemplo&lt;/h4>
&lt;p>Agrega un mensaje personalizado para los usuarios sin conexión:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@if (isOffline)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;p&amp;gt;No tienes conexión a internet. Algunas funcionalidades pueden no estar disponibles.&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private bool isOffline;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> protected override void OnInitialized()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> isOffline = !navigator.onLine;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> window.addEventListener(&amp;#39;online&amp;#39;, () =&amp;gt; isOffline = false);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> window.addEventListener(&amp;#39;offline&amp;#39;, () =&amp;gt; isOffline = true);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="buenas-prácticas-para-pwas-con-blazor">Buenas prácticas para PWAs con Blazor&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Optimizar recursos&lt;/strong>:
&lt;ul>
&lt;li>Usa herramientas como &lt;code>dotnet publish&lt;/code> con opciones para reducir el tamaño de los archivos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Usar HTTPS&lt;/strong>:
&lt;ul>
&lt;li>Las &lt;strong>PWAs&lt;/strong> requieren &lt;em>HTTPS&lt;/em> para funcionar correctamente.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Pruebas regulares&lt;/strong>:
&lt;ul>
&lt;li>Prueba la aplicación en diferentes navegadores y dispositivos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Actualizar el Service Worker&lt;/strong>:
&lt;ul>
&lt;li>Implementa una estrategia para actualizar el &lt;em>Service Worker&lt;/em> cuando haya cambios significativos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Diseño responsivo&lt;/strong>:
&lt;ul>
&lt;li>Asegúrate de que la interfaz funcione en diferentes tamaños de pantalla.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="ventajas-y-limitaciones-de-blazor-para-pwas">Ventajas y limitaciones de Blazor para PWAs&lt;/h2>
&lt;h3 id="ventajas">Ventajas&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Reutilización de código&lt;/strong> entre plataformas.&lt;/li>
&lt;li>&lt;strong>Integración nativa con .NET&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Compatibilidad con WebAssembly&lt;/strong> para un rendimiento eficiente en el cliente.&lt;/li>
&lt;/ol>
&lt;h3 id="limitaciones">Limitaciones&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Tamaño inicial&lt;/strong> alto en &lt;strong>Blazor WebAssembly&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Dependencia del ecosistema .NET&lt;/strong> para ciertos escenarios.&lt;/li>
&lt;li>&lt;strong>Curva de aprendizaje&lt;/strong> para desarrolladores nuevos en &lt;strong>.NET&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Combinar las capacidades de &lt;strong>Blazor&lt;/strong> y &lt;strong>PWAs&lt;/strong> permite a los desarrolladores crear aplicaciones modernas y escalables que funcionan offline, se pueden instalar y ofrecen una experiencia de usuario mejorada. Aunque existen algunas limitaciones, las ventajas de usar &lt;strong>Blazor&lt;/strong> con &lt;strong>PWA&lt;/strong> superan ampliamente los desafíos, especialmente para equipos que ya utilizan &lt;strong>.NET&lt;/strong> en su flujo de desarrollo. ¡Explora las posibilidades de &lt;strong>Blazor&lt;/strong> para &lt;strong>PWAs&lt;/strong> y lleva tus aplicaciones web al siguiente nivel!&lt;/p></description></item><item><title>.NET Web API con Proyecto IDX</title><link>https://cmas.dev/posts/2024-07-17-dotnet-project-idx/</link><pubDate>Wed, 17 Jul 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-07-17-dotnet-project-idx/</guid><description>&lt;p>En este artículo veremos cómo crear una Web API básica con el nuevo &lt;strong>Proyecto IDX&lt;/strong> de &lt;strong>Google&lt;/strong>, totalmente desde el navegador sin la necesidad de instalar absolutamente nada en él.&lt;/p>
&lt;p>El &lt;strong>Proyecto IDX&lt;/strong>, según &lt;strong>Google&lt;/strong> es:&lt;/p>
&lt;blockquote>
&lt;p>Project IDX es un espacio de trabajo asistido por IA para el desarrollo de aplicaciones multiplataforma y de pila completa en la nube.
Con soporte para una amplia gama de marcos, lenguajes y servicios, además de integraciones con sus productos favoritos de Google, IDX optimiza su flujo de trabajo de desarrollo para que pueda crear y enviar aplicaciones entre plataformas con velocidad, facilidad y calidad.&lt;/p>
&lt;/blockquote>
&lt;p>Más info &lt;a href="https://idx.dev/">aquí&lt;/a>&lt;/p>
&lt;p>En este artículo veremos cómo crear una app backend con .NET, bien sencilla a modo de demostración. Para ello, seguiremos los siguientes pasos:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Ingresamos al IDE (web) &lt;a href="https://idx.google.com/?pli=1">aquí&lt;/a>. Se necesita iniciar sesión con una cuenta &lt;strong>Google&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Buscamos más plantillas (la idea es encontrar a .NET):
&lt;img src="https://i.ibb.co/ZWH4KVc/idx-1.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>En la sección &lt;strong>Backend&lt;/strong>, buscamos a &lt;strong>.NET&lt;/strong> y la seleccionamos:
&lt;img src="https://i.ibb.co/w0WTPFy/idx-2.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Colocamos un nombre descriptivo, seleccionamos el ambiente ideal y creamos el proyecto:
&lt;img src="https://i.ibb.co/WcJ8hx2/idx-3.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Nos mostrará el indicador de creación del proyecto:
&lt;img src="https://i.ibb.co/Stb8CYR/idx-4.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Nos abre el IDX (hasta ahora vi que es un Visual Studio Code en la nube, tal como GitHub Codespace) y miramos el código de ejemplo:
&lt;img src="https://i.ibb.co/zQjNKYp/idx-5.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Procedemos a ejecutar al aplicación en cuestión:
&lt;img src="https://i.ibb.co/r6CNSTQ/idx-6.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Nos ofrece opciones para abrir la web:
&lt;img src="https://i.ibb.co/yFQkkGD/idx-7.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>En una nueva pestaña, nos muestra la web App.
&lt;img src="https://i.ibb.co/ngHNgCv/idx-8.png" alt="">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Algo que noté es que la plantilla figura en &lt;strong>Backend&lt;/strong>, pero tranquilamente podemos crear una aplicación Full Stack con .NET de base para cubrir nuestras necesidades.&lt;/p>
&lt;p>Al momento de escribir este artículo noto que &lt;strong>Proyecto IDX&lt;/strong> = &lt;strong>GitHub Codespace&lt;/strong>. La base es Visual Studio Code.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Creación de componentes reutilizables en Blazor para aplicaciones escalables</title><link>https://cmas.dev/posts/2024-07-03-components-blazor/</link><pubDate>Wed, 03 Jul 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-07-03-components-blazor/</guid><description>&lt;p>&lt;strong>Blazor&lt;/strong> es un framework poderoso que permite a los desarrolladores construir aplicaciones web modernas utilizando &lt;strong>C#&lt;/strong>. Una de sus características clave es la capacidad de crear componentes reutilizables que promueven la modularidad, escalabilidad y mantenibilidad de las aplicaciones. En este artículo, exploraremos cómo diseñar y desarrollar componentes reutilizables en Blazor, acompañado de ejemplos prácticos y mejores prácticas.&lt;/p>
&lt;h2 id="qué-son-los-componentes-en-blazor">¿Qué son los componentes en Blazor?&lt;/h2>
&lt;p>Los componentes en Blazor son unidades reutilizables de la interfaz de usuario que combinan lógica y presentación. Cada componente se define en un archivo &lt;code>.razor&lt;/code> y puede incluir código C#, HTML y CSS.&lt;/p>
&lt;h3 id="características-principales">Características principales&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Encapsulación&lt;/strong>: Los componentes encapsulan la lógica y el diseño, promoviendo la reutilización.&lt;/li>
&lt;li>&lt;strong>Reactividad&lt;/strong>: Pueden responder a eventos y actualizarse dinámicamente.&lt;/li>
&lt;li>&lt;strong>Comunicación entre componentes&lt;/strong>: Soportan la transferencia de datos a través de propiedades y eventos.&lt;/li>
&lt;li>&lt;strong>Renderizado eficiente&lt;/strong>: Blazor optimiza el renderizado para minimizar los cambios en el DOM.&lt;/li>
&lt;/ol>
&lt;h2 id="crear-un-componente-básico">Crear un componente básico&lt;/h2>
&lt;h3 id="ejemplo-componente-de-botón">Ejemplo: Componente de Botón&lt;/h3>
&lt;p>Archivo: &lt;code>ButtonComponent.razor&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;button class=&amp;#34;btn btn-primary&amp;#34; @onclick=&amp;#34;OnClick&amp;#34;&amp;gt;@Label&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Parameter]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public string Label { get; set; } = &amp;#34;Click Me&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Parameter]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public EventCallback OnClick { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="uso-del-componente">Uso del componente&lt;/h4>
&lt;p>Archivo: &lt;code>MainLayout.razor&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;ButtonComponent Label=&amp;#34;Guardar&amp;#34; OnClick=&amp;#34;SaveData&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private void SaveData()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Console.WriteLine(&amp;#34;Datos guardados correctamente.&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="componentes-parametrizables">Componentes parametrizables&lt;/h2>
&lt;h3 id="paso-1-definir-propiedades-con-parameter">Paso 1: Definir propiedades con &lt;code>[Parameter]&lt;/code>&lt;/h3>
&lt;p>Las propiedades con el atributo &lt;code>[Parameter]&lt;/code> permiten a los componentes recibir datos externos.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;h3&amp;gt;@Title&amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;p&amp;gt;@Description&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Parameter]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public string Title { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Parameter]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public string Description { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-2-render-fragment">Paso 2: Render Fragment&lt;/h3>
&lt;p>Render Fragment permite pasar bloques de contenido al componente.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;div class=&amp;#34;card&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;div class=&amp;#34;card-header&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> @Header
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/div&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;div class=&amp;#34;card-body&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> @Body
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/div&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/div&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Parameter]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public RenderFragment Header { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Parameter]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public RenderFragment Body { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="ejemplo-de-uso">Ejemplo de uso&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;CardComponent&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Header&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;h3&amp;gt;Mi Título&amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Header&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Body&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;p&amp;gt;Este es el contenido del cuerpo.&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Body&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/CardComponent&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="mejores-prácticas-para-componentes-reutilizables">Mejores prácticas para componentes reutilizables&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Evitar lógica compleja&lt;/strong>:
&lt;ul>
&lt;li>Divide la funcionalidad compleja en varios componentes más simples.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Documentar parámetros&lt;/strong>:
&lt;ul>
&lt;li>Proporciona descripciones claras de los parámetros y su uso.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Usar estilos modulares&lt;/strong>:
&lt;ul>
&lt;li>Utiliza CSS aislado para evitar conflictos de estilos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Validar entradas&lt;/strong>:
&lt;ul>
&lt;li>Asegúrate de validar los datos recibidos a través de los parámetros.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Seguir el principio DRY (Don&amp;rsquo;t Repeat Yourself)&lt;/strong>:
&lt;ul>
&lt;li>Reutiliza componentes siempre que sea posible.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="componentes-avanzados">Componentes avanzados&lt;/h2>
&lt;h3 id="componentes-genéricos">Componentes genéricos&lt;/h3>
&lt;p>Blazor soporta componentes genéricos que permiten trabajar con diferentes tipos de datos.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">foreach&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">var&lt;/span> &lt;span class="n">item&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">Items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">code&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">Parameter&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">IEnumerable&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">Items&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="uso-del-componente-genérico">Uso del componente genérico&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;GenericComponent Items=&amp;#34;new List&amp;lt;int&amp;gt; { 1, 2, 3 }&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="componentes-dinámicos">Componentes dinámicos&lt;/h3>
&lt;p>Permiten renderizar diferentes componentes basados en datos o estados.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">foreach&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">var&lt;/span> &lt;span class="n">component&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">Components&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">DynamicComponent&lt;/span> &lt;span class="n">Type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;component&amp;#34;&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">code&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">Parameter&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Type&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">Components&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Type&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nb">typeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ButtonComponent&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">typeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CardComponent&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="pruebas-de-componentes">Pruebas de componentes&lt;/h2>
&lt;h3 id="framework-recomendado-bunit">Framework recomendado: &lt;code>bUnit&lt;/code>&lt;/h3>
&lt;h4 id="configurar-bunit">Configurar &lt;code>bUnit&lt;/code>&lt;/h4>
&lt;ol>
&lt;li>Instalar la biblioteca:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">dotnet&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="kn">package&lt;/span> &lt;span class="nx">Bunit&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Escribir pruebas:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">Fact&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">ButtonComponent_DisplaysCorrectLabel&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">using&lt;/span> &lt;span class="k">var&lt;/span> &lt;span class="n">ctx&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">TestContext&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">cut&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">RenderComponent&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">ButtonComponent&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">parameters&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">parameters&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Label&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Test Button&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Assert&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Test Button&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cut&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Markup&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>La creación de componentes reutilizables en &lt;strong>Blazor&lt;/strong> es clave para construir aplicaciones escalables y mantenibles. Siguiendo las buenas prácticas y aprovechando las características avanzadas del framework, los desarrolladores pueden maximizar la productividad y garantizar la calidad de sus aplicaciones. ¡Empieza a diseñar tus propios componentes reutilizables hoy mismo y lleva tus habilidades de desarrollo web al siguiente nivel!&lt;/p></description></item><item><title>Introducción a Blazor: Cambiando el paradigma del desarrollo web</title><link>https://cmas.dev/posts/2024-06-26-intro-blazor/</link><pubDate>Wed, 26 Jun 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-06-26-intro-blazor/</guid><description>&lt;p>&lt;strong>Blazor&lt;/strong> es una tecnología desarrollada por &lt;strong>Microsoft&lt;/strong> que está transformando la forma en que se crean aplicaciones web modernas. Basado en &lt;strong>.NET&lt;/strong>, &lt;strong>Blazor&lt;/strong> permite a los desarrolladores escribir aplicaciones web interactivas utilizando &lt;strong>C#&lt;/strong> en lugar de &lt;strong>JavaScript&lt;/strong>, ofreciendo una solución innovadora para quienes buscan aprovechar las ventajas del ecosistema &lt;strong>.NET&lt;/strong> en el desarrollo web. En este artículo, exploraremos las bases de Blazor, sus ventajas, desventajas y cómo empezar a utilizarlo, acompañado de ejemplos y buenas prácticas.&lt;/p>
&lt;h2 id="qué-es-blazor">¿Qué es Blazor?&lt;/h2>
&lt;p>Blazor es un framework de desarrollo web que permite construir aplicaciones interactivas del lado del cliente y del servidor utilizando C#. Se basa en WebAssembly para ejecutar código .NET directamente en el navegador, eliminando la necesidad de JavaScript para muchas funcionalidades.&lt;/p>
&lt;h3 id="tipos-de-blazor">Tipos de Blazor&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Blazor Server&lt;/strong>: La aplicación se ejecuta en el servidor y utiliza SignalR para comunicarse con el cliente. Ideal para aplicaciones con requisitos de tiempo real o cuando se desea un inicio rápido.&lt;/li>
&lt;li>&lt;strong>Blazor WebAssembly&lt;/strong>: Ejecuta el código directamente en el navegador utilizando WebAssembly. Ofrece una experiencia completamente del lado del cliente.&lt;/li>
&lt;li>&lt;strong>Blazor Hybrid&lt;/strong>: Integra Blazor con plataformas como MAUI para crear aplicaciones multiplataforma.&lt;/li>
&lt;/ol>
&lt;h2 id="ventajas-de-blazor">Ventajas de Blazor&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Reutilización de código&lt;/strong>: Usa el mismo lenguaje, C#, tanto para el cliente como para el servidor.&lt;/li>
&lt;li>&lt;strong>Ecosistema unificado&lt;/strong>: Aprovecha las herramientas y bibliotecas de .NET.&lt;/li>
&lt;li>&lt;strong>Soporte a largo plazo&lt;/strong>: Microsoft ofrece soporte continuo para Blazor como parte del ecosistema .NET.&lt;/li>
&lt;li>&lt;strong>Sin JavaScript adicional&lt;/strong>: Aunque puedes integrarlo, no es necesario para funciones comunes.&lt;/li>
&lt;li>&lt;strong>Componentes reutilizables&lt;/strong>: Facilita la modularidad y la organización del código.&lt;/li>
&lt;/ol>
&lt;h2 id="desventajas-de-blazor">Desventajas de Blazor&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Tamaño inicial&lt;/strong>: En Blazor WebAssembly, el tamaño de descarga inicial puede ser considerable.&lt;/li>
&lt;li>&lt;strong>Soporte limitado en navegadores antiguos&lt;/strong>: Requiere navegadores modernos con soporte para WebAssembly.&lt;/li>
&lt;li>&lt;strong>Latencia en Blazor Server&lt;/strong>: La comunicación constante con el servidor puede introducir latencia.&lt;/li>
&lt;li>&lt;strong>Curva de aprendizaje&lt;/strong>: Aunque es similar a .NET, puede ser desafiante para desarrolladores sin experiencia previa en el ecosistema.&lt;/li>
&lt;/ol>
&lt;h2 id="configuración-inicial">Configuración inicial&lt;/h2>
&lt;h3 id="requisitos-previos">Requisitos previos&lt;/h3>
&lt;ol>
&lt;li>Tener instalado .NET SDK:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Instalar un editor de código, como Visual Studio o Visual Studio Code.&lt;/li>
&lt;/ol>
&lt;h3 id="crear-un-proyecto-blazor-server">Crear un proyecto Blazor Server&lt;/h3>
&lt;ol>
&lt;li>Ejecutar el comando para crear un proyecto:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet new blazorserver -o BlazorServerApp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Navegar al directorio del proyecto:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd BlazorServerApp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Ejecutar la aplicación:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="crear-un-proyecto-blazor-webassembly">Crear un proyecto Blazor WebAssembly&lt;/h3>
&lt;ol>
&lt;li>Crear un proyecto WebAssembly:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet new blazorwasm -o BlazorWebAssemblyApp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Navegar al directorio del proyecto y ejecutarlo:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd BlazorWebAssemblyApp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dotnet run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="conceptos-fundamentales">Conceptos fundamentales&lt;/h2>
&lt;h3 id="componentes">Componentes&lt;/h3>
&lt;p>Los componentes son la unidad básica en Blazor. Se crean utilizando archivos &lt;code>.razor&lt;/code> y combinan C# con HTML.&lt;/p>
&lt;h4 id="ejemplo-básico">Ejemplo básico&lt;/h4>
&lt;p>Archivo: &lt;code>Counter.razor&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@page &amp;#34;/counter&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;h3&amp;gt;Contador&amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;p&amp;gt;Valor actual: @currentCount&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;button @onclick=&amp;#34;IncrementCount&amp;#34;&amp;gt;Incrementar&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private int currentCount = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private void IncrementCount()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> currentCount++;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="inyección-de-dependencias">Inyección de dependencias&lt;/h3>
&lt;p>Blazor soporta inyección de dependencias a través del contenedor de servicios.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@inject WeatherService WeatherService
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;h3&amp;gt;Clima actual&amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;p&amp;gt;@WeatherService.GetCurrentWeather()&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Organización del proyecto&lt;/strong>: Divide la aplicación en módulos y componentes reutilizables.&lt;/li>
&lt;li>&lt;strong>Manejo de estado&lt;/strong>: Usa librerías como &lt;code>Fluxor&lt;/code> o servicios para manejar el estado de la aplicación.&lt;/li>
&lt;li>&lt;strong>Optimizar el tamaño&lt;/strong>: Para Blazor WebAssembly, minimiza los recursos y activa la compresión.&lt;/li>
&lt;li>&lt;strong>Seguridad&lt;/strong>: Implementa protección contra ataques XSS y valida todas las entradas de usuario.&lt;/li>
&lt;li>&lt;strong>Pruebas&lt;/strong>: Usa frameworks como &lt;code>bUnit&lt;/code> para pruebas unitarias de componentes.&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>&lt;strong>Blazor&lt;/strong> representa un cambio significativo en el desarrollo web al permitir que los desarrolladores utilicen C# para crear aplicaciones interactivas. Su capacidad para aprovechar el ecosistema de .NET lo hace una opción atractiva para equipos que ya trabajan con esta tecnología. Aunque tiene limitaciones, las ventajas que ofrece son significativas, especialmente en proyectos donde la reutilización de código y la integración con .NET son esenciales. ¡Explora Blazor y lleva tus habilidades de desarrollo web al siguiente nivel!&lt;/p></description></item><item><title>Creación de librerías compartidas en TypeScript</title><link>https://cmas.dev/posts/2024-06-19-share-libraries-typescript/</link><pubDate>Wed, 19 Jun 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-06-19-share-libraries-typescript/</guid><description>&lt;p>La creación de librerías compartidas en &lt;strong>TypeScript&lt;/strong> permite a los desarrolladores encapsular funcionalidad reutilizable y mejorar la mantenibilidad del código. Este artículo explorará el proceso completo de desarrollo de librerías en &lt;strong>TypeScript&lt;/strong>, desde la configuración inicial hasta el despliegue, con un enfoque moderno, ejemplos prácticos y consideraciones de seguridad.&lt;/p>
&lt;h2 id="por-qué-crear-librerías-compartidas-en-typescript">¿Por qué crear librerías compartidas en TypeScript?&lt;/h2>
&lt;h3 id="beneficios-principales">Beneficios principales&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Reutilización de código&lt;/strong>: Evita la duplicación en diferentes proyectos.&lt;/li>
&lt;li>&lt;strong>Mantenibilidad&lt;/strong>: Centraliza la gestión de funcionalidades comunes.&lt;/li>
&lt;li>&lt;strong>Escalabilidad&lt;/strong>: Facilita la integración con nuevos proyectos.&lt;/li>
&lt;li>&lt;strong>Colaboración&lt;/strong>: Permite a los equipos trabajar en conjunto sobre componentes centrales.&lt;/li>
&lt;/ol>
&lt;h2 id="configuración-inicial">Configuración inicial&lt;/h2>
&lt;h3 id="requisitos-previos">Requisitos previos&lt;/h3>
&lt;ul>
&lt;li>Tener Node.js y npm instalados.&lt;/li>
&lt;li>Familiaridad con TypeScript.&lt;/li>
&lt;/ul>
&lt;h3 id="crear-un-nuevo-proyecto-de-librería">Crear un nuevo proyecto de librería&lt;/h3>
&lt;ol>
&lt;li>Crea un directorio para la librería:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">mkdir my-shared-library
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd my-shared-library
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Inicializa un proyecto Node.js:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm init -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Instala TypeScript y otras dependencias necesarias:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install typescript --save-dev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm install tslib
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Crea una configuración base de TypeScript:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npx tsc --init
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="configurar-tsconfigjson">Configurar &lt;code>tsconfig.json&lt;/code>&lt;/h3>
&lt;p>Configura el archivo para soportar módulos comunes y optimizar la compilación:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;compilerOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;outDir&amp;#34;: &amp;#34;dist&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;rootDir&amp;#34;: &amp;#34;src&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;target&amp;#34;: &amp;#34;ES2020&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;module&amp;#34;: &amp;#34;CommonJS&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;declaration&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;sourceMap&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;strict&amp;#34;: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;include&amp;#34;: [&amp;#34;src/**/*&amp;#34;],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;exclude&amp;#34;: [&amp;#34;node_modules&amp;#34;, &amp;#34;dist&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="estructura-del-proyecto">Estructura del proyecto&lt;/h2>
&lt;p>Organiza los archivos de tu proyecto:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">my-shared-library/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── src/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── index.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── utils/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ └── math.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── dist/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── package.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── tsconfig.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── README.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="desarrollo-de-la-librería">Desarrollo de la librería&lt;/h2>
&lt;h3 id="crear-funcionalidades">Crear funcionalidades&lt;/h3>
&lt;h4 id="ejemplo-operaciones-matemáticas">Ejemplo: Operaciones matemáticas&lt;/h4>
&lt;p>Archivo: &lt;code>src/utils/math.ts&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">number&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">number&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">number&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">subtract&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">number&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">number&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">number&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="archivo-de-entrada-principal">Archivo de entrada principal&lt;/h4>
&lt;p>Archivo: &lt;code>src/index.ts&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./utils/math&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="compilación-de-la-librería">Compilación de la librería&lt;/h2>
&lt;ol>
&lt;li>Compila el código:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npx tsc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Verifica que los archivos se generaron en el directorio &lt;code>dist/&lt;/code>.&lt;/li>
&lt;/ol>
&lt;h2 id="publicación-de-la-librería">Publicación de la librería&lt;/h2>
&lt;h3 id="configurar-packagejson">Configurar &lt;code>package.json&lt;/code>&lt;/h3>
&lt;p>Asegúrate de incluir los campos necesarios para npm:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;name&amp;#34;: &amp;#34;my-shared-library&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;version&amp;#34;: &amp;#34;1.0.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;main&amp;#34;: &amp;#34;dist/index.js&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;types&amp;#34;: &amp;#34;dist/index.d.ts&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;files&amp;#34;: [&amp;#34;dist&amp;#34;],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;scripts&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;build&amp;#34;: &amp;#34;tsc&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;prepublishOnly&amp;#34;: &amp;#34;npm run build&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;dependencies&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;tslib&amp;#34;: &amp;#34;^2.0.0&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;devDependencies&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;typescript&amp;#34;: &amp;#34;^4.0.0&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="publicar-en-npm">Publicar en npm&lt;/h3>
&lt;ol>
&lt;li>Inicia sesión en npm:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm login
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Publica la librería:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm publish
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="uso-de-la-librería-en-otros-proyectos">Uso de la librería en otros proyectos&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Instala la librería:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install my-shared-library
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Usa las funciones en tu código:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">import { add, subtract } from &amp;#39;my-shared-library&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">console.log(add(2, 3)); // 5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">console.log(subtract(5, 2)); // 3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Documentación&lt;/strong>:
&lt;ul>
&lt;li>Usa &lt;code>README.md&lt;/code> para describir la instalación, uso y ejemplos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Pruebas unitarias&lt;/strong>:
&lt;ul>
&lt;li>Configura un framework como Jest para validar el comportamiento de la librería.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Versionado semántico&lt;/strong>:
&lt;ul>
&lt;li>Sigue el esquema &lt;code>MAJOR.MINOR.PATCH&lt;/code> para gestionar cambios.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Optimizar el tamaño&lt;/strong>:
&lt;ul>
&lt;li>Excluye archivos innecesarios en el campo &lt;code>files&lt;/code> de &lt;code>package.json&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Seguridad&lt;/strong>:
&lt;ul>
&lt;li>Actualiza dependencias regularmente y realiza auditorías con:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm audit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Crear librerías compartidas en TypeScript es una estrategia efectiva para mejorar la reutilización de código y aumentar la productividad del equipo. Siguiendo las mejores prácticas y adoptando herramientas modernas, puedes garantizar que tus librerías sean seguras, eficientes y fáciles de usar. ¡Empieza a construir tu próxima librería hoy mismo!&lt;/p></description></item><item><title>Testing avanzado en Angular con Jest: Mejores prácticas</title><link>https://cmas.dev/posts/2024-06-12-testing-angular-jest/</link><pubDate>Wed, 12 Jun 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-06-12-testing-angular-jest/</guid><description>&lt;p>Las pruebas en aplicaciones &lt;strong>Angular&lt;/strong> son esenciales para garantizar la calidad, confiabilidad y mantenibilidad del código. En este artículo, exploraremos el uso avanzado de &lt;strong>Jest&lt;/strong> como framework de pruebas en &lt;strong>Angular&lt;/strong>, cubriendo configuración inicial, estrategias de pruebas unitarias y de integración, así como buenas prácticas para lograr un enfoque moderno, eficiente y seguro.&lt;/p>
&lt;h2 id="por-qué-usar-jest-en-angular">¿Por qué usar Jest en Angular?&lt;/h2>
&lt;h3 id="ventajas-de-jest">Ventajas de Jest&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Rápido y eficiente&lt;/strong>: Jest paraleliza la ejecución de pruebas, lo que mejora significativamente los tiempos.&lt;/li>
&lt;li>&lt;strong>API intuitiva&lt;/strong>: Proporciona una sintaxis clara y fácil de aprender.&lt;/li>
&lt;li>&lt;strong>Mocks y espías integrados&lt;/strong>: Simplifica la simulación de dependencias.&lt;/li>
&lt;li>&lt;strong>Informes detallados&lt;/strong>: Ofrece feedback claro sobre las pruebas fallidas.&lt;/li>
&lt;li>&lt;strong>Snapshot testing&lt;/strong>: Permite capturar estados de componentes para detectar cambios inesperados.&lt;/li>
&lt;/ol>
&lt;h2 id="configuración-inicial-de-jest-en-un-proyecto-angular">Configuración inicial de Jest en un proyecto Angular&lt;/h2>
&lt;h3 id="requisitos-previos">Requisitos previos&lt;/h3>
&lt;ol>
&lt;li>Tener Angular CLI instalado:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install -g @angular/cli
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Crear un nuevo proyecto Angular o usar uno existente:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng new angular-jest-demo --routing --style css
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="instalar-jest-y-dependencias">Instalar Jest y dependencias&lt;/h3>
&lt;p>Reemplaza el entorno de pruebas predeterminado de Angular (Karma) con Jest:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install jest @types/jest jest-preset-angular --save-dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="configurar-jest">Configurar Jest&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Agrega un archivo de configuración &lt;code>jest.config.js&lt;/code> en la raíz del proyecto:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">module&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">exports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">preset&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;jest-preset-angular&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">setupFilesAfterEnv&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;rootDir&amp;gt;/setup-jest.ts&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">testEnvironment&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;jsdom&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">testMatch&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;**/+(*.)+(spec).+(ts|js)&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">transform&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;^.+\.(ts|html)$&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;jest-preset-angular&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">moduleFileExtensions&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;ts&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;html&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;js&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;json&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">collectCoverage&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="bp">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">coverageReporters&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;html&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;text&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">coverageDirectory&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;coverage/jest&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Crea el archivo &lt;code>setup-jest.ts&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">import &amp;#39;jest-preset-angular/setup-jest&amp;#39;;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Modifica &lt;code>tsconfig.spec.json&lt;/code> para incluir Jest:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;compilerOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;types&amp;#34;: [&amp;#34;jest&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Actualiza los scripts de &lt;code>package.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;scripts&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;test&amp;#34;: &amp;#34;jest&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;test:watch&amp;#34;: &amp;#34;jest --watch&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="escribir-pruebas-unitarias-avanzadas">Escribir pruebas unitarias avanzadas&lt;/h2>
&lt;h3 id="pruebas-de-componentes">Pruebas de componentes&lt;/h3>
&lt;h4 id="configurar-pruebas-básicas">Configurar pruebas básicas&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">ComponentFixture&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">TestBed&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core/testing&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">MyComponent&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./my.component&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">describe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;MyComponent&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">let&lt;/span> &lt;span class="n">component&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">MyComponent&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">let&lt;/span> &lt;span class="n">fixture&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ComponentFixture&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">MyComponent&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">beforeEach&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">TestBed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">configureTestingModule&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">declarations&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">MyComponent&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">compileComponents&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fixture&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TestBed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">createComponent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MyComponent&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">component&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fixture&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">componentInstance&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fixture&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">detectChanges&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">it&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;debería crear el componente&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">component&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toBeTruthy&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">it&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;debería renderizar el título&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">compiled&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fixture&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nativeElement&lt;/span> &lt;span class="n">as&lt;/span> &lt;span class="n">HTMLElement&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">compiled&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">querySelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;h1&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">?&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">textContent&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toContain&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Bienvenido a MyComponent!&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="pruebas-de-servicios">Pruebas de servicios&lt;/h3>
&lt;h4 id="mocking-de-dependencias">Mocking de dependencias&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">TestBed&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core/testing&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">HttpClientTestingModule&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">HttpTestingController&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/common/http/testing&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">MyService&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./my.service&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">describe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;MyService&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">let&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">MyService&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">let&lt;/span> &lt;span class="n">httpMock&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">HttpTestingController&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">beforeEach&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">TestBed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">configureTestingModule&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">imports&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">HttpClientTestingModule&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">providers&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">MyService&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">service&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TestBed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">inject&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MyService&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">httpMock&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TestBed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">inject&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">HttpTestingController&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">afterEach&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">httpMock&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">verify&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">it&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;debería obtener datos correctamente&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">mockData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;Test&amp;#39;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getData&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subscribe&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toEqual&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mockData&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">req&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">httpMock&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">expectOne&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/api/data&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">req&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">method&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toBe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;GET&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">req&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">flush&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mockData&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="snapshot-testing-en-angular">Snapshot Testing en Angular&lt;/h2>
&lt;p>Los snapshots permiten capturar el estado de un componente y compararlo con versiones futuras para detectar cambios inesperados.&lt;/p>
&lt;h3 id="crear-un-snapshot">Crear un snapshot&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">render&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@testing-library/angular&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">MyComponent&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./my.component&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">describe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;MyComponent&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">it&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;debería coincidir con el snapshot&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">container&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">render&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MyComponent&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">container&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toMatchSnapshot&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="actualizar-snapshots">Actualizar snapshots&lt;/h3>
&lt;p>Si los cambios son intencionales, actualiza los snapshots:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">jest --updateSnapshot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="buenas-prácticas-para-pruebas-avanzadas">Buenas prácticas para pruebas avanzadas&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Configurar CI/CD&lt;/strong>: Automatiza las pruebas en plataformas como GitHub Actions o Azure DevOps.&lt;/li>
&lt;li>&lt;strong>Cobertura de código&lt;/strong>: Asegúrate de alcanzar al menos el 80% de cobertura.&lt;/li>
&lt;li>&lt;strong>Separar pruebas unitarias e integradas&lt;/strong>: Mantén un enfoque claro entre las pruebas locales y las de sistema.&lt;/li>
&lt;li>&lt;strong>Mocking eficiente&lt;/strong>: Usa herramientas como &lt;code>jest.mock&lt;/code> para simular dependencias externas.&lt;/li>
&lt;li>&lt;strong>Documentar las pruebas&lt;/strong>: Incluye descripciones claras sobre los objetivos de cada caso de prueba.&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Implementar pruebas avanzadas con &lt;strong>Jest&lt;/strong> en &lt;strong>Angular&lt;/strong> mejora la calidad del software y reduce riesgos en el desarrollo. Al seguir buenas prácticas y adoptar herramientas modernas, los equipos pueden garantizar que sus aplicaciones sean robustas, seguras y fáciles de mantener. ¡Empieza hoy mismo a implementar Jest en tus proyectos &lt;strong>Angular&lt;/strong>!&lt;/p></description></item><item><title>Integración de Angular con Azure Static Web Apps: Un caso práctico</title><link>https://cmas.dev/posts/2024-06-05-angular-integration-azure-static-web/</link><pubDate>Wed, 05 Jun 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-06-05-angular-integration-azure-static-web/</guid><description>&lt;p>En la era moderna del desarrollo web, la combinación de frameworks frontend como &lt;strong>Angular&lt;/strong> y servicios en la nube como &lt;strong>Azure Static Web Apps&lt;/strong> proporciona una solución eficiente y escalable para crear y desplegar aplicaciones. Este artículo explora cómo integrar &lt;strong>Angular&lt;/strong> con &lt;strong>Azure Static Web Apps&lt;/strong>, mostrando ejemplos prácticos, buenas prácticas y enfoques modernos y seguros para garantizar el éxito en tus proyectos.&lt;/p>
&lt;h2 id="por-qué-elegir-angular-y-azure-static-web-apps">¿Por qué elegir Angular y Azure Static Web Apps?&lt;/h2>
&lt;h3 id="ventajas-de-angular">Ventajas de Angular&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Ecosistema robusto&lt;/strong>: Angular es un framework completo con herramientas integradas para el desarrollo de aplicaciones escalables.&lt;/li>
&lt;li>&lt;strong>TypeScript nativo&lt;/strong>: Mejora la calidad del código y la experiencia del desarrollador.&lt;/li>
&lt;li>&lt;strong>Componentes reusables&lt;/strong>: Facilitan la organización y el mantenimiento del código.&lt;/li>
&lt;/ol>
&lt;h3 id="beneficios-de-azure-static-web-apps">Beneficios de Azure Static Web Apps&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Despliegue sencillo&lt;/strong>: Automatiza el despliegue directo desde repositorios como GitHub.&lt;/li>
&lt;li>&lt;strong>Distribución global&lt;/strong>: Servidores edge para un rendimiento óptimo.&lt;/li>
&lt;li>&lt;strong>Soporte para APIs&lt;/strong>: Integración con Azure Functions para lógica backend.&lt;/li>
&lt;li>&lt;strong>Certificados SSL automáticos&lt;/strong>: Garantiza conexiones seguras sin configuraciones adicionales.&lt;/li>
&lt;/ol>
&lt;h2 id="configuración-inicial">Configuración inicial&lt;/h2>
&lt;h3 id="requisitos-previos">Requisitos previos&lt;/h3>
&lt;ul>
&lt;li>Node.js y Angular CLI instalados:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install -g @angular/cli
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Cuenta de Azure activa.&lt;/li>
&lt;li>Repositorio en GitHub (opcional pero recomendado).&lt;/li>
&lt;/ul>
&lt;h3 id="crear-una-aplicación-angular">Crear una aplicación Angular&lt;/h3>
&lt;ol>
&lt;li>Generar un nuevo proyecto:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng new angular-azure-demo --routing --style css
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Navegar al directorio del proyecto:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd angular-azure-demo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Ejecutar el servidor de desarrollo:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng serve
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="preparar-la-aplicación-para-despliegue">Preparar la aplicación para despliegue&lt;/h2>
&lt;h3 id="generar-los-archivos-de-producción">Generar los archivos de producción&lt;/h3>
&lt;ol>
&lt;li>Ejecutar el comando de construcción:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng build --prod
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Los archivos generados se encontrarán en el directorio &lt;code>dist/angular-azure-demo&lt;/code>.&lt;/li>
&lt;/ol>
&lt;h3 id="configurar-un-archivo-staticwebappconfigjson">Configurar un archivo &lt;code>staticwebapp.config.json&lt;/code>&lt;/h3>
&lt;p>Este archivo define rutas y configuraciones personalizadas para Azure Static Web Apps:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;routes&amp;#34;: [
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;route&amp;#34;: &amp;#34;/api/*&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;method&amp;#34;: &amp;#34;GET&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;allowedRoles&amp;#34;: [&amp;#34;anonymous&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;route&amp;#34;: &amp;#34;/*&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;rewrite&amp;#34;: &amp;#34;/index.html&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Guarda este archivo en el directorio &lt;code>dist/angular-azure-demo&lt;/code>.&lt;/p>
&lt;h2 id="crear-y-configurar-azure-static-web-app">Crear y configurar Azure Static Web App&lt;/h2>
&lt;h3 id="paso-1-crear-un-recurso-en-azure">Paso 1: Crear un recurso en Azure&lt;/h3>
&lt;ol>
&lt;li>Inicia sesión en el &lt;a href="https://portal.azure.com">portal de Azure&lt;/a>.&lt;/li>
&lt;li>Selecciona &lt;strong>Crear un recurso&lt;/strong> y busca &lt;strong>Static Web Apps&lt;/strong>.&lt;/li>
&lt;li>Completa los detalles del recurso:
&lt;ul>
&lt;li>&lt;strong>Nombre&lt;/strong>: &lt;code>angular-static-web&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Plan&lt;/strong>: Gratis (Free).&lt;/li>
&lt;li>&lt;strong>Región&lt;/strong>: Elige la más cercana a tus usuarios.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="paso-2-vincular-el-repositorio">Paso 2: Vincular el repositorio&lt;/h3>
&lt;ol>
&lt;li>Conecta el recurso con tu repositorio de GitHub.&lt;/li>
&lt;li>Selecciona la rama principal y el directorio de la aplicación (&lt;code>/dist/angular-azure-demo&lt;/code>).&lt;/li>
&lt;/ol>
&lt;h3 id="paso-3-despliegue-automático">Paso 3: Despliegue automático&lt;/h3>
&lt;p>Cada vez que actualices la rama principal, Azure redeployará la aplicación automáticamente.&lt;/p>
&lt;h2 id="integrar-una-api-con-azure-functions">Integrar una API con Azure Functions&lt;/h2>
&lt;h3 id="crear-una-azure-function">Crear una Azure Function&lt;/h3>
&lt;ol>
&lt;li>Instalar las herramientas necesarias:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">npm&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">g&lt;/span> &lt;span class="n">azure&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">functions&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">tools&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="mi">4&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">unsafe&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">perm&lt;/span> &lt;span class="bp">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Crear un proyecto de funciones:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">func&lt;/span> &lt;span class="n">init&lt;/span> &lt;span class="n">api&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">typescript&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Crear una nueva función HTTP:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cd&lt;/span> &lt;span class="n">api&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">func&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">template&lt;/span> &lt;span class="s2">&amp;#34;HTTP trigger&amp;#34;&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="n">GetMessage&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="conectar-la-api-con-la-aplicación-angular">Conectar la API con la aplicación Angular&lt;/h3>
&lt;ol>
&lt;li>Modificar el código de la función:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">req&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">HttpRequest&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Promise&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">void&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">body&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Hola desde Azure Functions&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Agregar un servicio Angular para consumir la API:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">HttpClient&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/common/http&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Injectable&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Injectable&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">providedIn&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">ApiService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">HttpClient&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">getMessage&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/api/GetMessage&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Usar el servicio en un componente:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Component&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">OnInit&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">ApiService&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./api.service&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">selector&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;app-root&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">template&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="err">`&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">h1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="n">message&lt;/span> &lt;span class="p">}}&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">h1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="err">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">AppComponent&lt;/span> &lt;span class="n">implements&lt;/span> &lt;span class="n">OnInit&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">api&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ApiService&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ngOnInit&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">api&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getMessage&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subscribe&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">any&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Usar HTTPS&lt;/strong>: Siempre habilita HTTPS en el entorno de producción.&lt;/li>
&lt;li>&lt;strong>Monitorear el rendimiento&lt;/strong>: Utiliza Azure Monitor para detectar cuellos de botella.&lt;/li>
&lt;li>&lt;strong>Validar entradas&lt;/strong>: Implementa validaciones en la API para evitar vulnerabilidades como inyecciones.&lt;/li>
&lt;li>&lt;strong>Minimizar y optimizar recursos&lt;/strong>: Usa herramientas como &lt;code>ng build --prod&lt;/code> para reducir el tamaño de los archivos.&lt;/li>
&lt;li>&lt;strong>Seguridad&lt;/strong>: Configura roles y permisos en el archivo &lt;code>staticwebapp.config.json&lt;/code> para proteger rutas sensibles.&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>La integración de Angular con &lt;strong>Azure Static Web Apps&lt;/strong> ofrece una solución moderna, escalable y eficiente para desplegar aplicaciones web. Siguiendo las mejores prácticas y aprovechando herramientas como Azure Functions, puedes construir sistemas completos y seguros que se adapten a las necesidades de tus usuarios. ¡Empieza hoy mismo a aprovechar estas tecnologías y lleva tus proyectos al siguiente nivel!&lt;/p></description></item><item><title>API RESTful con TypeScript y Deno: Guía completa</title><link>https://cmas.dev/posts/2024-05-29-api-restful-typescript-deno/</link><pubDate>Wed, 29 May 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-05-29-api-restful-typescript-deno/</guid><description>&lt;p>Deno, el moderno entorno de ejecución para JavaScript y TypeScript creado por Ryan Dahl, está transformando la manera en que se desarrollan aplicaciones backend. A diferencia de Node.js, Deno se centra en la seguridad, el rendimiento y una experiencia de desarrollo simplificada. En este artículo, exploraremos cómo construir una API RESTful utilizando &lt;strong>TypeScript&lt;/strong> y &lt;strong>Deno&lt;/strong> desde cero, cubriendo todas las operaciones CRUD (&lt;strong>POST, GET, PUT, DELETE&lt;/strong>) junto con buenas prácticas, seguridad y optimización&amp;hellip;&lt;/p>
&lt;h2 id="qué-es-deno-y-por-qué-usarlo">¿Qué es Deno y por qué usarlo?&lt;/h2>
&lt;p>Deno es un entorno de ejecución seguro para JavaScript y TypeScript que se ejecuta en el motor V8 de Google. Fue diseñado para abordar algunas limitaciones de Node.js y proporcionar:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Seguridad por defecto&lt;/strong>: No se permite acceso al sistema de archivos, red o variables de entorno sin permisos explícitos.&lt;/li>
&lt;li>&lt;strong>Soporte nativo para TypeScript&lt;/strong>: No es necesario usar compilers externos como &lt;code>tsc&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Manejo de módulos con URL&lt;/strong>: No hay &lt;code>node_modules&lt;/code>, los módulos se cargan desde URLs.&lt;/li>
&lt;li>&lt;strong>Ecosistema moderno&lt;/strong>: Incluye un test runner, formateador y otras herramientas integradas.&lt;/li>
&lt;/ol>
&lt;h2 id="configuración-inicial-del-entorno-de-desarrollo">Configuración inicial del entorno de desarrollo&lt;/h2>
&lt;h3 id="instalación-de-deno">Instalación de Deno&lt;/h3>
&lt;p>Primero, instala Deno en tu sistema operativo siguiendo los comandos oficiales:&lt;/p>
&lt;p>&lt;strong>Windows (PowerShell):&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">iwr https://deno.land/x/install/install.ps1 -useb | iex
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>macOS/Linux:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">curl -fsSL https://deno.land/x/install/install.sh | sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verifica la instalación:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">deno --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="creación-de-la-estructura-del-proyecto">Creación de la estructura del proyecto&lt;/h3>
&lt;p>Crea un directorio para tu API y estructura el proyecto de la siguiente manera:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">api-restful-deno/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── controllers/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── models/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── routes/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── server.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── deps.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── utils/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-1-configurar-el-servidor-http-con-deno">Paso 1: Configurar el servidor HTTP con Deno&lt;/h2>
&lt;p>Deno utiliza bibliotecas como &lt;code>oak&lt;/code> para manejar solicitudes HTTP. Agrega las dependencias en un archivo &lt;code>deps.ts&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">deps&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Router&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Context&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/oak/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">v4&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/std@0.197.0/uuid/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ahora, configura el servidor en &lt;code>server.ts&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">server&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Router&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;./deps.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="n">router&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;./routes/index.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">port&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">8000&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Middleware&lt;/span> &lt;span class="n">para&lt;/span> &lt;span class="n">registrar&lt;/span> &lt;span class="n">las&lt;/span> &lt;span class="n">solicitudes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">next&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">method&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">next&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Rutas&lt;/span> &lt;span class="n">principales&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">allowedMethods&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="n">Servidor&lt;/span> &lt;span class="n">escuchando&lt;/span> &lt;span class="n">en&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">localhost&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">port&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">await&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">listen&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">port&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecuta el servidor:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">deno run --allow-net server.ts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-2-crear-rutas-y-controladores">Paso 2: Crear rutas y controladores&lt;/h2>
&lt;h3 id="crear-rutas-base">Crear rutas base&lt;/h3>
&lt;p>Crea un archivo &lt;code>routes/index.ts&lt;/code> para definir las rutas principales de la API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">routes&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Router&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../deps.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">getAllUsers&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">getUserById&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">createUser&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">updateUser&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">deleteUser&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../controllers/userController.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">router&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Router&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">router&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/api/users&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">getAllUsers&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/api/users/:id&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">getUserById&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">post&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/api/users&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">createUser&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">put&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/api/users/:id&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">updateUser&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">delete&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/api/users/:id&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">deleteUser&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">default&lt;/span> &lt;span class="n">router&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="crear-controladores-crud">Crear controladores CRUD&lt;/h3>
&lt;p>En &lt;code>controllers/userController.ts&lt;/code>, define la lógica para cada operación CRUD:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">controllers&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">userController&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Context&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../deps.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">v4&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../deps.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">interface&lt;/span> &lt;span class="n">User&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">email&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">let&lt;/span> &lt;span class="n">users&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">User&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Obtener&lt;/span> &lt;span class="n">todos&lt;/span> &lt;span class="n">los&lt;/span> &lt;span class="n">usuarios&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">getAllUsers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">users&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Obtener&lt;/span> &lt;span class="n">un&lt;/span> &lt;span class="n">usuario&lt;/span> &lt;span class="n">por&lt;/span> &lt;span class="n">ID&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">getUserById&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">params&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">users&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">u&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">404&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Usuario no encontrado&amp;#34;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Crear&lt;/span> &lt;span class="n">un&lt;/span> &lt;span class="n">nuevo&lt;/span> &lt;span class="n">usuario&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">createUser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">email&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">type&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;json&amp;#34;&lt;/span> &lt;span class="p">})&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">newUser&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">User&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">v4&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">generate&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">email&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">users&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">newUser&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">201&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">newUser&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Actualizar&lt;/span> &lt;span class="n">un&lt;/span> &lt;span class="n">usuario&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">updateUser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">params&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">email&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">type&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;json&amp;#34;&lt;/span> &lt;span class="p">})&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">users&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">u&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">email&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">email&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">email&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">404&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Usuario no encontrado&amp;#34;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Eliminar&lt;/span> &lt;span class="n">un&lt;/span> &lt;span class="n">usuario&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">deleteUser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">params&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">users&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">findIndex&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">u&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">index&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">users&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">splice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">204&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">404&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Usuario no encontrado&amp;#34;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Construir una API RESTful con TypeScript y Deno no solo es sencillo, sino que ofrece ventajas en términos de seguridad y rendimiento. Siguiendo las buenas prácticas y utilizando las herramientas modernas que Deno proporciona, puedes crear APIs escalables y fáciles de mantener.&lt;/p></description></item><item><title>Introducción a los Signals en Angular: Casos prácticos</title><link>https://cmas.dev/posts/2024-05-22-intro-signals-angular/</link><pubDate>Wed, 22 May 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-05-22-intro-signals-angular/</guid><description>&lt;p>Angular es un framework robusto y evolutivo que continuamente introduce nuevas características para mejorar el desarrollo de aplicaciones web modernas. Una de estas innovaciones son los &lt;strong>Signals&lt;/strong>, una herramienta que permite manejar cambios de estado de manera reactiva, clara y eficiente. Este artículo ofrece una introducción detallada a los Signals en Angular, explicando cómo utilizarlos, sus ventajas comparativas frente a otras soluciones reactivas y sus aplicaciones en el desarrollo real, acompañado de casos prácticos ampliados, buenas prácticas y un enfoque moderno en seguridad.&lt;/p>
&lt;h2 id="qué-son-los-signals-en-angular">¿Qué son los Signals en Angular?&lt;/h2>
&lt;p>Los Signals son una forma reactiva de manejar cambios de estado dentro de una aplicación Angular. A diferencia de las propiedades tradicionales o las soluciones basadas en &lt;em>Observables&lt;/em> de &lt;em>RxJS&lt;/em>, los Signals proporcionan un enfoque más directo para gestionar actualizaciones en la interfaz de usuario. Esta simplicidad es particularmente útil para escenarios donde se necesita un manejo del estado local claro y eficiente, reduciendo la complejidad general del código.&lt;/p>
&lt;h3 id="características-clave-de-los-signals">Características clave de los Signals&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Reactividad Automática&lt;/strong>: Los Signals reaccionan automáticamente a los cambios en su estado, actualizando los componentes afectados. Esto elimina la necesidad de invocar manualmente procesos de actualización de la interfaz.&lt;/li>
&lt;li>&lt;strong>Simplicidad&lt;/strong>: Reducir la necesidad de suscribirse y manejar manualmente flujos de datos, mejorando la legibilidad del código.&lt;/li>
&lt;li>&lt;strong>Integración nativa&lt;/strong>: Diseñar para integrarse de manera fluida con Angular, los Signals pueden ser utilizados junto con otras herramientas del framework.&lt;/li>
&lt;/ol>
&lt;h2 id="configuración-de-signals-en-angular">Configuración de Signals en Angular&lt;/h2>
&lt;h3 id="paso-1-configurar-un-proyecto-angular">Paso 1: Configurar un proyecto Angular&lt;/h3>
&lt;p>Primero, crear un nuevo proyecto Angular utilizando Angular CLI. Este proceso genera una estructura base para la aplicación.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ng&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">signals&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">demo&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">routing&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">style&lt;/span> &lt;span class="n">css&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-2-instalar-las-dependencias-necesarias">Paso 2: Instalar las dependencias necesarias&lt;/h3>
&lt;p>Si los Signals no están incluidos en tu versión de Angular, se debe asegurar de actualizar a la última versión. Esto garantiza que se tenga acceso a las funcionalidades más recientes y al soporte técnico oficial.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng update @angular/core @angular/cli
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="usando-signals-en-angular">Usando Signals en Angular&lt;/h2>
&lt;h3 id="declaración-de-un-signal">Declaración de un Signal&lt;/h3>
&lt;p>Poder declarar un Signal utilizando el método &lt;code>signal&lt;/code> del paquete Angular. Este método permitir definir estados reactivos que pueden actualizarse y observarse de manera eficiente.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">signal&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">AppComponent&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">signal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">increment&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="uso-en-plantillas">Uso en plantillas&lt;/h3>
&lt;p>Los Signals se integran perfectamente con las plantillas de Angular. Se puede enlazarlos directamente, lo que simplifica la gestión del estado en la interfaz de usuario.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;div&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;p&amp;gt;Contador: {{ count() }}&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;button (click)=&amp;#34;increment()&amp;#34;&amp;gt;Incrementar&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/div&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="reactividad-con-computed-signals">Reactividad con Computed Signals&lt;/h3>
&lt;p>Los &lt;em>Computed Signals&lt;/em> permiten derivar valores basados en otros Signals. Esto es útil para evitar cálculos repetitivos o duplicados en la aplicación.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">signal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">computed&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">AppComponent&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">signal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">doubleCount&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">computed&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">increment&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>En la plantilla:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;div&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;p&amp;gt;Doble del contador: {{ doubleCount() }}&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;button (click)=&amp;#34;increment()&amp;#34;&amp;gt;Incrementar&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/div&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="casos-prácticos">Casos Prácticos&lt;/h2>
&lt;h3 id="1-manejo-de-estados-globales">1. Manejo de Estados Globales&lt;/h3>
&lt;p>Los Signals son útiles para gestionar estados compartidos en una aplicación. Un ejemplo clásico es la administración del estado de autenticación.&lt;/p>
&lt;h4 id="ejemplo">Ejemplo&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Injectable&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">signal&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Injectable&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">providedIn&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">AuthService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">_isLoggedIn&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">signal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">false&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">isLoggedIn&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_isLoggedIn&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">asReadonly&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">login&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_isLoggedIn&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">true&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logout&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_isLoggedIn&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">false&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-formularios-reactivos-con-signals">2. Formularios Reactivos con Signals&lt;/h3>
&lt;p>Los Signals pueden simplificar la reactividad en formularios, mejorando la claridad del código y reduciendo la dependencia de estados auxiliares.&lt;/p>
&lt;h4 id="ejemplo-1">Ejemplo&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Component&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">FormBuilder&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">FormGroup&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Validators&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/forms&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">signal&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">selector&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;app-login&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">templateUrl&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;./login.component.html&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">LoginComponent&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">loginForm&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">FormGroup&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">isSubmitting&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">signal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">false&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">fb&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">FormBuilder&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">loginForm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fb&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">group&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">username&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Validators&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">required&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Validators&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">required&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">submit&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">loginForm&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">valid&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">isSubmitting&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">true&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Simular&lt;/span> &lt;span class="n">una&lt;/span> &lt;span class="n">petición&lt;/span> &lt;span class="n">de&lt;/span> &lt;span class="n">login&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">setTimeout&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">isSubmitting&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">false&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span> &lt;span class="mi">2000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Plantilla:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;form [formGroup]=&amp;#34;loginForm&amp;#34; (ngSubmit)=&amp;#34;submit()&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;input formControlName=&amp;#34;username&amp;#34; placeholder=&amp;#34;Usuario&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;input formControlName=&amp;#34;password&amp;#34; type=&amp;#34;password&amp;#34; placeholder=&amp;#34;Contraseña&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;button type=&amp;#34;submit&amp;#34; [disabled]=&amp;#34;isSubmitting()&amp;#34;&amp;gt;Iniciar Sesión&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/form&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="buenas-prácticas-con-signals">Buenas Prácticas con Signals&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Mantener la simplicidad&lt;/strong>: Usar Signals para estados locales y Observables para flujos de datos complejos o asíncronos.&lt;/li>
&lt;li>&lt;strong>Usar Signals derivados&lt;/strong>: Preferir &lt;code>computed&lt;/code> para evitar código duplicado y mejorar la eficiencia.&lt;/li>
&lt;li>&lt;strong>Proteger los Signals&lt;/strong>: Utilizar &lt;code>asReadonly&lt;/code> para evitar modificaciones accidentales en estados que no deben cambiarse directamente.&lt;/li>
&lt;li>&lt;strong>Combinar Signals y Observables&lt;/strong>: En aplicaciones grandes, considerar usar Signals para estados locales y Observables para comunicaciones con servicios remotos.&lt;/li>
&lt;/ol>
&lt;h2 id="seguridad-con-signals">Seguridad con Signals&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Validar datos&lt;/strong>: Siempre validar los datos antes de actualizarlos en un Signal. Esto es especialmente importante en escenarios donde los datos provienen de entradas de usuario.&lt;/li>
&lt;li>&lt;strong>Evitar manipulaciones directas&lt;/strong>: Encapsular los Signals en servicios para proteger su integridad y evitar accesos no autorizados.&lt;/li>
&lt;li>&lt;strong>Auditar&lt;/strong>: Implementar logs para registrar cambios en Signals sensibles. Esto permite rastrear modificaciones inesperadas y detectar posibles problemas de seguridad.&lt;/li>
&lt;li>&lt;strong>Evitar exponerse a cambios externos&lt;/strong>: Cuando se trabaja con aplicaciones multiusuario, considerar estrategias de sincronización seguras para evitar conflictos.&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Los Signals representan un avance significativo en el manejo del estado reactivo en Angular. Su simplicidad y eficiencia los convierten en una herramienta esencial para aplicaciones modernas. Al adoptar buenas prácticas y aprovechar sus características avanzadas, como los Computed Signals, los desarrolladores pueden construir experiencias de usuario más fluidas, escalables y seguras. ¡Empezá a explorar los Signals hoy mismo y transforma la manera en que diseñas aplicaciones con Angular! Además, considerar su combinación con otras herramientas reactivas para maximizar su impacto en proyectos complejos.&lt;/p></description></item><item><title>Lazy Loading en Angular: Mejora el rendimiento de tus aplicaciones</title><link>https://cmas.dev/posts/2024-05-15-lazy-loading-angular/</link><pubDate>Wed, 15 May 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-05-15-lazy-loading-angular/</guid><description>&lt;p>El rendimiento es un factor crítico en las aplicaciones web modernas. Angular, como uno de los frameworks más populares para construir aplicaciones, ofrece herramientas avanzadas para optimizar la carga y el uso de recursos. Una de estas herramientas es el &lt;strong>Lazy Loading&lt;/strong> (carga diferida), que permite cargar módulos de la aplicación sólo cuando son necesarios. Este artículo explora cómo implementar Lazy Loading en Angular, sus beneficios y las mejores prácticas para maximizar su eficacia.&lt;/p>
&lt;h2 id="qué-es-lazy-loading">¿Qué es Lazy Loading?&lt;/h2>
&lt;p>Lazy Loading es una técnica que retrasa la carga de recursos o módulos hasta que sean realmente necesarios. En el contexto de Angular, esto implica cargar partes específicas de la aplicación (como módulos) sólo cuando el usuario las solicita. Esto mejora significativamente el tiempo de carga inicial de la aplicación y reduce el uso de recursos del navegador.&lt;/p>
&lt;h3 id="beneficios-de-lazy-loading">Beneficios de Lazy Loading&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Tiempo de carga inicial reducido&lt;/strong>: Solo se cargan los recursos necesarios para la vista inicial.&lt;/li>
&lt;li>&lt;strong>Uso eficiente de recursos&lt;/strong>: Reduce la cantidad de código que el navegador necesita procesar al inicio.&lt;/li>
&lt;li>&lt;strong>Mejora en la experiencia del usuario&lt;/strong>: La aplicación responde más rápido a las interacciones iniciales.&lt;/li>
&lt;li>&lt;strong>Soporte para escalabilidad&lt;/strong>: Ideal para aplicaciones grandes con múltiples módulos y rutas.&lt;/li>
&lt;/ol>
&lt;h2 id="configuración-básica-de-lazy-loading-en-angular">Configuración básica de Lazy Loading en Angular&lt;/h2>
&lt;h3 id="paso-1-crear-un-módulo-con-rutas-independientes">Paso 1: Crear un módulo con rutas independientes&lt;/h3>
&lt;p>Primero, generar un nuevo módulo utilizando Angular CLI:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng generate module feature --route feature --module app.module
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Este comando genera un módulo llamado &lt;code>FeatureModule&lt;/code> y configura la ruta correspondiente en el &lt;code>AppRoutingModule&lt;/code>.&lt;/p>
&lt;h3 id="paso-2-configurar-rutas-con-lazy-loading">Paso 2: Configurar rutas con Lazy Loading&lt;/h3>
&lt;p>El archivo &lt;code>app-routing.module.ts&lt;/code> debería verse así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">NgModule&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">RouterModule&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Routes&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/router&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">routes&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Routes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;feature&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">loadChildren&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">import&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./feature/feature.module&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">FeatureModule&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">NgModule&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">imports&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">RouterModule&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">forRoot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="p">)],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">exports&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">RouterModule&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">AppRoutingModule&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-3-crear-componentes-dentro-del-módulo-cargado-de-forma-diferida">Paso 3: Crear componentes dentro del módulo cargado de forma diferida&lt;/h3>
&lt;p>Dentro del &lt;code>FeatureModule&lt;/code>, genera un componente:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng generate component feature/feature-home
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Asegúrate de declarar este componente en el &lt;code>FeatureModule&lt;/code> y configurarlo en el archivo &lt;code>feature-routing.module.ts&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">NgModule&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">RouterModule&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Routes&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/router&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">FeatureHomeComponent&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./feature-home/feature-home.component&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">routes&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Routes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">component&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">FeatureHomeComponent&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">NgModule&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">imports&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">RouterModule&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">forChild&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="p">)],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">exports&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">RouterModule&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">FeatureRoutingModule&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="mejores-prácticas-para-lazy-loading">Mejores prácticas para Lazy Loading&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Organización modular&lt;/strong>: Divide la aplicación en módulos coherentes y significativos.&lt;/li>
&lt;li>&lt;strong>Prefetching&lt;/strong>: Carga anticipada de módulos con alta probabilidad de ser usados.&lt;/li>
&lt;li>&lt;strong>Rutas protegidas&lt;/strong>: Implementa Lazy Loading junto con guardias de ruta (route guards) para asegurar recursos sensibles.&lt;/li>
&lt;li>&lt;strong>Análisis de rendimiento&lt;/strong>: Usa herramientas como Lighthouse para identificar oportunidades de mejora.&lt;/li>
&lt;/ol>
&lt;h3 id="ejemplo-implementación-de-prefetching">Ejemplo: Implementación de prefetching&lt;/h3>
&lt;p>El prefetching anticipa y carga módulos en segundo plano mientras el usuario interactúa con la aplicación.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">NgModule&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">RouterModule&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">Routes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">PreloadAllModules&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/router&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">routes&lt;/span>: &lt;span class="kt">Routes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;feature&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">loadChildren&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="kr">import&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./feature/feature.module&amp;#39;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">m&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="nx">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">FeatureModule&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">@NgModule&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">imports&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">RouterModule&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">forRoot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">routes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">preloadingStrategy&lt;/span>: &lt;span class="kt">PreloadAllModules&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">exports&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">RouterModule&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">export&lt;/span> &lt;span class="kr">class&lt;/span> &lt;span class="nx">AppRoutingModule&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="seguridad-en-lazy-loading">Seguridad en Lazy Loading&lt;/h2>
&lt;p>Lazy Loading también puede usarse para proteger rutas sensibles de forma eficiente. Algunos enfoques incluyen:&lt;/p>
&lt;h3 id="uso-de-route-guards">Uso de Route Guards&lt;/h3>
&lt;p>Los Route Guards controlan el acceso a rutas específicas. Implementa un guardia básico:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Injectable&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">CanActivate&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Router&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/router&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Injectable&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">providedIn&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">AuthGuard&lt;/span> &lt;span class="n">implements&lt;/span> &lt;span class="n">CanActivate&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">router&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Router&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">canActivate&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">boolean&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">isAuthenticated&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">!!&lt;/span>&lt;span class="n">localStorage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;token&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">isAuthenticated&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">navigate&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s1">&amp;#39;/login&amp;#39;&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Configura el guardia en la ruta:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">routes&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Routes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;feature&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">loadChildren&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">import&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./feature/feature.module&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">FeatureModule&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">canActivate&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">AuthGuard&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="validación-de-datos-en-el-servidor">Validación de datos en el servidor&lt;/h3>
&lt;p>Siempre valida los datos del lado del servidor para evitar accesos no autorizados, incluso si se usan guardias del lado del cliente.&lt;/p>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Lazy Loading es una técnica poderosa para optimizar aplicaciones Angular, mejorando tanto el rendimiento como la experiencia del usuario. Al combinar Lazy Loading con buenas prácticas de seguridad y prefetching, puedes construir aplicaciones escalables, rápidas y seguras. Mantén tu aplicación organizada y realiza pruebas de rendimiento periódicas para garantizar su eficacia.&lt;/p></description></item><item><title>Seguridad en aplicaciones Deno: Autenticación y autorización</title><link>https://cmas.dev/posts/2024-05-08-deno-apps-security/</link><pubDate>Wed, 08 May 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-05-08-deno-apps-security/</guid><description>&lt;p>&lt;strong>Deno&lt;/strong>, como entorno de ejecución moderno para &lt;strong>JavaScript&lt;/strong> y &lt;strong>TypeScript&lt;/strong>, ofrece varias ventajas en términos de seguridad. Su enfoque en la seguridad por diseño incluye la gestión de permisos granular y un runtime sin acceso implícito al sistema. Sin embargo, la seguridad en aplicaciones Deno no solo depende del entorno, sino también de cómo se implementan funcionalidades clave como la autenticación y autorización. Este artículo explora cómo construir aplicaciones seguras en Deno con ejemplos prácticos y buenas prácticas.&lt;/p>
&lt;h2 id="introducción-a-la-seguridad-en-deno">Introducción a la seguridad en Deno&lt;/h2>
&lt;h3 id="ventajas-de-deno-en-términos-de-seguridad">Ventajas de Deno en términos de seguridad&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Sistema de permisos&lt;/strong>: Deno requiere permisos explícitos para acceder a archivos, red y entorno.&lt;/li>
&lt;li>&lt;strong>Tipado estático&lt;/strong>: TypeScript mejora la robustez del código.&lt;/li>
&lt;li>&lt;strong>Integración nativa con WebAssembly (WASM)&lt;/strong>: Reduce vulnerabilidades por código nativo inseguro.&lt;/li>
&lt;/ol>
&lt;p>A pesar de estas ventajas, los desarrolladores deben implementar medidas adicionales para proteger sus aplicaciones, especialmente en lo relacionado con la autenticación y autorización.&lt;/p>
&lt;h2 id="autenticación-en-deno">Autenticación en Deno&lt;/h2>
&lt;p>La autenticación verifica la identidad de los usuarios. Una implementación segura considera:&lt;/p>
&lt;ol>
&lt;li>Uso de protocolos modernos como &lt;em>OAuth 2.0&lt;/em> o &lt;em>OpenID Connect (OIDC)&lt;/em>.&lt;/li>
&lt;li>Encriptación de contraseñas con algoritmos seguros (&lt;em>bcrypt&lt;/em>, &lt;em>Argon2&lt;/em>).&lt;/li>
&lt;li>Tokens seguros (&lt;em>JWT&lt;/em> con &lt;em>HS256&lt;/em> o &lt;em>RS256&lt;/em>).&lt;/li>
&lt;/ol>
&lt;h3 id="ejemplo-práctico-autenticación-basada-en-jwt">Ejemplo práctico: Autenticación basada en JWT&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">create&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">verify&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/djwt/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">secretKey&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;your-secret-key&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Generar&lt;/span> &lt;span class="n">un&lt;/span> &lt;span class="n">token&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">async&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">generateToken&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">payload&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Record&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">unknown&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">jwt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">create&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">alg&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;HS256&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">typ&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;JWT&amp;#34;&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="n">payload&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">secretKey&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">jwt&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Verificar&lt;/span> &lt;span class="n">un&lt;/span> &lt;span class="n">token&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">async&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">verifyToken&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">payload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">verify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">secretKey&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;HS256&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">payload&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="n">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">throw&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Token inválido&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Ejemplo&lt;/span> &lt;span class="n">de&lt;/span> &lt;span class="n">uso&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">token&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">generateToken&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">role&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;admin&amp;#34;&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Token generado:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">token&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">payload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">verifyToken&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Payload verificado:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">payload&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="buenas-prácticas-para-la-autenticación">Buenas prácticas para la autenticación&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Usar HTTPS&lt;/strong>: Protege los tokens en tránsito.&lt;/li>
&lt;li>&lt;strong>Implementar expiración de tokens&lt;/strong>: Minimiza riesgos en caso de compromiso.&lt;/li>
&lt;li>&lt;strong>Almacenar contraseñas de forma segura&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nb">hash&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">compare&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/bcrypt/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">password&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;securepassword&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">hashedPassword&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="nb">hash&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Contraseña hasheada:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hashedPassword&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">isValid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">compare&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hashedPassword&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Contraseña válida:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">isValid&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="autorización-en-deno">Autorización en Deno&lt;/h2>
&lt;p>La autorización determina qué recursos puede acceder un usuario autenticado.&lt;/p>
&lt;h3 id="ejemplo-práctico-middleware-para-roles">Ejemplo práctico: Middleware para roles&lt;/h3>
&lt;p>Un &lt;em>middleware&lt;/em> puede garantizar que solo ciertos roles accedan a rutas específicas:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Context&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/oak/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">async&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">roleMiddleware&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">next&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">Promise&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">unknown&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">allowedRoles&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">[])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">token&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">headers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Authorization&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">?&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Bearer &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">401&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Token no proporcionado&amp;#34;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">payload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">verifyToken&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">allowedRoles&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">includes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">payload&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">role&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">403&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Acceso denegado&amp;#34;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">next&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="n">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">401&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Token inválido&amp;#34;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Ejemplo&lt;/span> &lt;span class="n">de&lt;/span> &lt;span class="n">uso&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;/admin&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">next&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">roleMiddleware&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">next&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;admin&amp;#34;&lt;/span>&lt;span class="p">]),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Bienvenido, admin&amp;#34;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="buenas-prácticas-para-la-autorización">Buenas prácticas para la autorización&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Principio de menor privilegio&lt;/strong>: Limitar accesos a lo estrictamente necesario.&lt;/li>
&lt;li>&lt;strong>Políticas basadas en roles (RBAC)&lt;/strong>: Simplifican la gestión de permisos.&lt;/li>
&lt;li>&lt;strong>Registro de eventos de acceso&lt;/strong>: Proporciona trazabilidad.&lt;/li>
&lt;/ol>
&lt;h2 id="medidas-adicionales-de-seguridad">Medidas adicionales de seguridad&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>CORS&lt;/strong>: Configurar correctamente para evitar accesos no autorizados.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">import { oakCors } from &amp;#34;https://deno.land/x/cors/mod.ts&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">app.use(oakCors({
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> origin: &amp;#34;https://example.com&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>&lt;strong>Validación de datos&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">z&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/zod/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">userSchema&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">z&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">object&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">username&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">z&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">z&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">userData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">userSchema&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;test&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;secure&amp;#34;&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Datos válidos:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">userData&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span> &lt;span class="n">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Error de validación:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>&lt;strong>Monitoreo y auditoría&lt;/strong>: Implementar registros de eventos sensibles.&lt;/li>
&lt;li>&lt;strong>Uso de secretos seguros&lt;/strong>: Gestionar claves de API y configuraciones sensibles mediante herramientas como Deno Deploy Secrets.&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>La seguridad en aplicaciones Deno va más allá de las capacidades intrínsecas del entorno. Una implementación adecuada de autenticación y autorización, junto con medidas complementarias, garantiza aplicaciones robustas y protegidas contra amenazas modernas. Aplicar las mejores prácticas descritas y mantenerse actualizado con las últimas vulnerabilidades es esencial para mantener la confianza y la integridad de tus aplicaciones.&lt;/p></description></item><item><title>¿Cómo configurar un proyecto TypeScript moderno con Deno?</title><link>https://cmas.dev/posts/2024-05-01-typescript-project-with-deno/</link><pubDate>Wed, 01 May 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-05-01-typescript-project-with-deno/</guid><description>&lt;h2 id="introducción">Introducción&lt;/h2>
&lt;p>Configurar un proyecto moderno en &lt;strong>TypeScript&lt;/strong> con &lt;strong>Deno&lt;/strong> permitirá aprovechar un entorno de desarrollo optimizado, seguro y compatible con los estándares más recientes, como &lt;strong>ES2024&lt;/strong>. Este artículo mostrará cómo realizar esta configuración tanto en &lt;strong>Visual Studio Code&lt;/strong> como en &lt;strong>JetBrains Rider&lt;/strong>, destacando buenas prácticas, incluyendo &lt;strong>testing&lt;/strong> con TypeScript, y proporcionando ejemplos prácticos de código.&lt;/p>
&lt;h2 id="prerrequisitos">Prerrequisitos&lt;/h2>
&lt;ul>
&lt;li>Instalar &lt;strong>Deno&lt;/strong> desde &lt;a href="https://deno.land">https://deno.land&lt;/a>:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> curl -fsSL https://deno.land/x/install/install.sh | sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Tener instalado &lt;strong>Visual Studio Code&lt;/strong> o &lt;strong>JetBrains Rider&lt;/strong>.&lt;/li>
&lt;li>Conocer los fundamentos de &lt;strong>TypeScript&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="crear-la-configuración-del-proyecto">Crear la configuración del proyecto&lt;/h2>
&lt;h3 id="1-crear-un-directorio-base">1. Crear un directorio base&lt;/h3>
&lt;p>Crear un directorio para el proyecto:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">mkdir modern-typescript-deno
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd modern-typescript-deno
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-configurar-el-archivo-denojson">2. Configurar el archivo deno.json&lt;/h3>
&lt;p>Crear un archivo &lt;em>deno.json&lt;/em> con configuraciones básicas para &lt;strong>ES2024&lt;/strong> y definir tareas útiles:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;compilerOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;target&amp;#34;: &amp;#34;ES2024&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;strict&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;lib&amp;#34;: [&amp;#34;deno.ns&amp;#34;, &amp;#34;deno.unstable&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;tasks&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;start&amp;#34;: &amp;#34;deno run --allow-net --allow-read src/index.ts&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;test&amp;#34;: &amp;#34;deno test&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;importMap&amp;#34;: &amp;#34;./import_map.json&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto permite:&lt;/p>
&lt;ul>
&lt;li>Establecer &lt;strong>ES2024&lt;/strong> como objetivo del compilador.&lt;/li>
&lt;li>Definir tareas como &lt;em>start&lt;/em> y &lt;em>test&lt;/em>.&lt;/li>
&lt;li>Utilizar un archivo &lt;em>import_map.json&lt;/em> para gestionar rutas.&lt;/li>
&lt;/ul>
&lt;h2 id="configuración-en-visual-studio-code">Configuración en Visual Studio Code&lt;/h2>
&lt;h3 id="instalar-la-extensión-de-deno">Instalar la extensión de Deno&lt;/h3>
&lt;ul>
&lt;li>Abrir Visual Studio Code.&lt;/li>
&lt;li>Buscar e instalar la extensión &lt;strong>Deno&lt;/strong> desarrollada por Justjavac.&lt;/li>
&lt;/ul>
&lt;h3 id="configurar-deno-en-el-entorno">Configurar Deno en el entorno&lt;/h3>
&lt;p>Crear un archivo &lt;strong>.vscode/settings.json&lt;/strong> para habilitar Deno:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;deno.enable&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;deno.unstable&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;editor.defaultFormatter&amp;#34;: &amp;#34;denoland.vscode-deno&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;[typescript]&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;editor.defaultFormatter&amp;#34;: &amp;#34;denoland.vscode-deno&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configuración-en-jetbrains-rider">Configuración en JetBrains Rider&lt;/h2>
&lt;h3 id="instalar-el-plugin-de-deno">Instalar el plugin de Deno&lt;/h3>
&lt;ol>
&lt;li>Abrir &lt;strong>JetBrains Rider&lt;/strong> e ir a &lt;em>File&lt;/em> &amp;gt; &lt;em>Settings&lt;/em> &amp;gt; &lt;em>Plugins&lt;/em>.&lt;/li>
&lt;li>Busca e instala el plugin llamado &lt;strong>Deno&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;h3 id="configurar-deno-en-el-proyecto">Configurar Deno en el proyecto&lt;/h3>
&lt;ol>
&lt;li>Ir a &lt;em>File&lt;/em> &amp;gt; &lt;em>Settings&lt;/em> &amp;gt; &lt;em>Languages &amp;amp; Frameworks&lt;/em> &amp;gt; &lt;em>Deno&lt;/em>.&lt;/li>
&lt;li>Activar la opción &lt;em>Enable Deno for this project&lt;/em>.&lt;/li>
&lt;li>Especificar la ruta al binario de Deno (se puede encontrar con &lt;em>which deno&lt;/em> en Linux/macOS o &lt;em>where deno&lt;/em> en Windows).&lt;/li>
&lt;/ol>
&lt;h3 id="crear-una-configuración-de-ejecución">Crear una configuración de ejecución&lt;/h3>
&lt;ol>
&lt;li>Ir a &lt;em>Run&lt;/em> &amp;gt; &lt;em>Edit Configurations&lt;/em>.&lt;/li>
&lt;li>Crear una nueva configuración del tipo Deno:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Nombre: &lt;em>Run Deno Server&lt;/em>.&lt;/li>
&lt;li>Archivo: &lt;em>src/index.ts&lt;/em>.&lt;/li>
&lt;li>Argumentos: &lt;em>&amp;ndash;allow-net&lt;/em>.&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>Guardar la configuración y hacer clic en &lt;em>Run&lt;/em> para ejecutar el servidor.&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Configurar un proyecto &lt;strong>TypeScript&lt;/strong> moderno con &lt;strong>Deno&lt;/strong> utilizando &lt;strong>ES2024&lt;/strong> ofrece un entorno potente y seguro. Tanto &lt;strong>Visual Studio Code&lt;/strong> como &lt;strong>JetBrains Rider&lt;/strong> proporcionan herramientas avanzadas para aprovechar las capacidades de Deno al máximo. Implementar estas configuraciones, buenas prácticas y pruebas garantiza un desarrollo eficiente y confiable.&lt;/p></description></item><item><title>Introducción a Angular 17: Características clave y mejoras</title><link>https://cmas.dev/posts/2024-04-24-angular-17-characteristics/</link><pubDate>Tue, 23 Apr 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-04-24-angular-17-characteristics/</guid><description>&lt;p>Angular 17, la última versión del popular framework de desarrollo web, introduce mejoras significativas para desarrolladores y equipos técnicos. Con un enfoque en el rendimiento, herramientas optimizadas y simplificación de procesos, esta actualización trae nuevas características como las Signals API, mejoras en el manejo de estados y optimizaciones para el desarrollo y pruebas. En este artículo, exploramos las características clave de Angular 17, su impacto en el desarrollo de aplicaciones modernas y cómo empezar a usar estas innovaciones en tus proyectos. Descubre cómo esta versión refuerza la posición de Angular como un pilar en el ecosistema de desarrollo web.&lt;/p>
&lt;h2 id="introducción">Introducción&lt;/h2>
&lt;p>Angular es uno de los frameworks de desarrollo web más populares, y su última versión, &lt;strong>Angular 17&lt;/strong>, continúa evolucionando para satisfacer las demandas de los desarrolladores modernos. Con mejoras enfocadas en el rendimiento, herramientas simplificadas y nuevas funcionalidades, Angular 17 consolida su posición como una solución robusta para aplicaciones de todos los tamaños.&lt;/p>
&lt;p>En este artículo, exploraremos las &lt;strong>características clave y mejoras&lt;/strong> de Angular 17, destacando cómo estas actualizaciones impactan en el flujo de trabajo de los desarrolladores y cómo puedes aprovecharlas para optimizar tus proyectos.&lt;/p>
&lt;hr>
&lt;h2 id="novedades-principales-en-angular-17">Novedades principales en Angular 17&lt;/h2>
&lt;h3 id="1-signals-api-un-nuevo-enfoque-para-el-manejo-de-estados">1. &lt;strong>Signals API: Un nuevo enfoque para el manejo de estados&lt;/strong>&lt;/h3>
&lt;p>La introducción de las &lt;strong>Signals API&lt;/strong> marca un cambio importante en Angular. Este sistema proporciona una forma más eficiente y reactiva de gestionar estados dentro de las aplicaciones, eliminando la necesidad de bibliotecas adicionales como NgRx en casos simples.&lt;/p>
&lt;p>&lt;strong>Ejemplo básico de Signals API:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">signal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">computed&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">effect&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Crear un signal para el estado
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">contador&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">signal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Computar un valor basado en el estado
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">doble&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">computed&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="nx">contador&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Efecto que reacciona a cambios en el estado
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">effect&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`El contador ahora es &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">contador&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb"> y el doble es &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">doble&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Actualizar el estado
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">contador&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="kr">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="beneficios">Beneficios:&lt;/h3>
&lt;ul>
&lt;li>Mejor rendimiento al actualizar solo las partes necesarias de la UI.&lt;/li>
&lt;li>Reducción en la complejidad del manejo de estados.&lt;/li>
&lt;li>Compatibilidad nativa con el ecosistema Angular.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="2-mejoras-en-la-compilación-y-el-rendimiento">2. &lt;strong>Mejoras en la compilación y el rendimiento&lt;/strong>&lt;/h3>
&lt;p>Angular 17 introduce optimizaciones en el &lt;strong>motor de compilación&lt;/strong> (Ivy), reduciendo significativamente los tiempos de construcción y carga. Esto es especialmente útil en aplicaciones grandes con múltiples módulos.&lt;/p>
&lt;h4 id="cambios-destacados">Cambios destacados:&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>Incremental Builds&lt;/strong> más rápidos: Solo recompila los módulos afectados por los cambios.&lt;/li>
&lt;li>Reducción en el tamaño de los bundles generados.&lt;/li>
&lt;li>Mejoras en el árbol de dependencias para eliminar código no utilizado.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="3-mejoras-en-angular-cli">3. &lt;strong>Mejoras en Angular CLI&lt;/strong>&lt;/h3>
&lt;p>La &lt;strong>CLI de Angular&lt;/strong> en esta versión ha sido mejorada para ofrecer una experiencia más fluida. Algunas de las nuevas funcionalidades incluyen:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Comandos simplificados&lt;/strong>:
&lt;ul>
&lt;li>&lt;code>ng update&lt;/code>: Detecta automáticamente dependencias obsoletas y las actualiza.&lt;/li>
&lt;li>&lt;code>ng serve&lt;/code>: Más rápido con menos uso de recursos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Soporte para configuraciones avanzadas de Webpack&lt;/strong> sin necesidad de extender los archivos de configuración.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Ejemplo: Uso de &lt;code>ng add&lt;/code> para integrar Signals API fácilmente:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ng add @angular/signals
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="4-mejor-experiencia-de-desarrollo">4. &lt;strong>Mejor experiencia de desarrollo&lt;/strong>&lt;/h3>
&lt;p>Angular 17 introduce herramientas que hacen que el desarrollo sea más eficiente:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Depuración mejorada con Angular DevTools&lt;/strong>: Compatible con las nuevas Signals API y el motor Ivy.&lt;/li>
&lt;li>&lt;strong>Soporte para Tailwind CSS mejorado&lt;/strong>: Simplificación de la configuración inicial para estilos modernos.&lt;/li>
&lt;li>&lt;strong>Documentación interactiva&lt;/strong>: Ejemplos más claros y herramientas para probar código en línea.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="5-soporte-extendido-para-typescript-5">5. &lt;strong>Soporte extendido para TypeScript 5&lt;/strong>&lt;/h3>
&lt;p>Angular 17 es completamente compatible con &lt;strong>TypeScript 5&lt;/strong>, lo que permite aprovechar características avanzadas como:&lt;/p>
&lt;ul>
&lt;li>Modificadores &lt;code>satisfies&lt;/code> para validaciones más estrictas.&lt;/li>
&lt;li>Optimizaciones en la inferencia de tipos.&lt;/li>
&lt;li>Mejoras en la interoperabilidad con bibliotecas externas.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Ejemplo práctico:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">type&lt;/span> &lt;span class="nx">Usuario&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">nombre&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">edad&lt;/span>: &lt;span class="kt">number&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">usuario&lt;/span>: &lt;span class="kt">Usuario&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">nombre&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Juan&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">edad&lt;/span>: &lt;span class="kt">30&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span> &lt;span class="nx">satisfies&lt;/span> &lt;span class="nx">Usuario&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="cómo-empezar-con-angular-17">¿Cómo empezar con Angular 17?&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Actualizar tu proyecto existente&lt;/strong>:
Usa el comando &lt;code>ng update&lt;/code> para migrar tu aplicación a Angular 17.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ng update @angular/core@17 @angular/cli@17
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Crear un nuevo proyecto&lt;/strong>:
Si deseas comenzar desde cero, ejecuta:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ng new mi-proyecto-angular17
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Explora las Signals API&lt;/strong>:
Asegúrate de instalar el paquete &lt;code>@angular/signals&lt;/code> y experimenta con la nueva forma de manejar estados.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Angular 17 trae un conjunto robusto de herramientas y mejoras que hacen que el desarrollo web sea más eficiente y escalable. Con características como las Signals API, optimizaciones en la compilación y soporte mejorado para TypeScript 5, esta versión está diseñada para facilitar tanto el desarrollo como el mantenimiento de aplicaciones modernas. Si aún no has probado Angular 17, ahora es el momento perfecto para actualizar y aprovechar estas innovaciones.&lt;/p>
&lt;hr></description></item><item><title>Despliegue de aplicaciones Blazor en Azure App Services</title><link>https://cmas.dev/posts/2024-04-17-deploy-blazor-apps-azure/</link><pubDate>Wed, 17 Apr 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-04-17-deploy-blazor-apps-azure/</guid><description>&lt;p>El despliegue de aplicaciones Blazor en Azure App Services ofrece una forma rápida y eficiente de llevar tus proyectos al entorno de producción. Azure proporciona escalabilidad, seguridad y opciones flexibles para automatizar el flujo de trabajo de despliegue. En este artículo, exploramos tres métodos clave: usando Visual Studio, la CLI de Azure, y GitHub Actions, con pasos prácticos y ejemplos detallados. Con las mejoras de .NET 8, las aplicaciones Blazor ahora son más rápidas y optimizadas para la nube, lo que facilita la entrega de soluciones web escalables y modernas.&lt;/p>
&lt;h2 id="introducción">Introducción&lt;/h2>
&lt;p>Desplegar aplicaciones Blazor en &lt;strong>Azure App Services&lt;/strong> es una solución sencilla y eficiente para llevar tus aplicaciones web al entorno de producción. Azure proporciona escalabilidad, seguridad y herramientas integradas para un despliegue rápido. En este artículo, exploraremos cómo configurar y desplegar una aplicación Blazor, incluyendo pasos prácticos y ejemplos detallados. Con &lt;strong>.NET 8&lt;/strong>, el rendimiento y la optimización de aplicaciones Blazor han mejorado significativamente, facilitando el despliegue en la nube.&lt;/p>
&lt;hr>
&lt;h2 id="prerrequisitos">Prerrequisitos&lt;/h2>
&lt;p>Antes de comenzar, asegúrate de contar con lo siguiente:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>.NET SDK 8&lt;/strong> instalado en tu máquina.&lt;/li>
&lt;li>Una cuenta de &lt;strong>Azure&lt;/strong>.&lt;/li>
&lt;li>Azure CLI instalada y configurada.&lt;/li>
&lt;li>Una aplicación Blazor lista para ser desplegada.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="paso-1-crear-una-aplicación-blazor">Paso 1: Crear una aplicación Blazor&lt;/h2>
&lt;p>Primero, crea una aplicación Blazor WebAssembly básica si no tienes una ya:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">dotnet new blazorwasm -o BlazorApp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> BlazorApp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dotnet build
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecuta el proyecto para verificar que funciona correctamente:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">dotnet run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Accede a &lt;code>http://localhost:5000&lt;/code> para comprobar que la aplicación se ejecuta correctamente.&lt;/p>
&lt;hr>
&lt;h2 id="paso-2-configurar-azure-app-service">Paso 2: Configurar Azure App Service&lt;/h2>
&lt;h3 id="21-acceder-al-portal-de-azure">&lt;strong>2.1 Acceder al portal de Azure&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>Ve al &lt;a href="https://portal.azure.com">Portal de Azure&lt;/a> e inicia sesión con tu cuenta.&lt;/li>
&lt;li>En la barra de búsqueda superior, escribe &amp;ldquo;App Services&amp;rdquo; y selecciona la opción &lt;strong>App Services&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;h3 id="22-crear-un-nuevo-app-service">&lt;strong>2.2 Crear un nuevo App Service&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Haz clic en el botón &lt;strong>Crear&lt;/strong> en la parte superior.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Aparecerá un formulario de configuración donde debes proporcionar la siguiente información:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Suscripción&lt;/strong>: Selecciona tu suscripción activa.&lt;/li>
&lt;li>&lt;strong>Grupo de recursos&lt;/strong>: Crea uno nuevo o elige un grupo existente.&lt;/li>
&lt;li>&lt;strong>Nombre de la aplicación&lt;/strong>: Introduce un nombre único, por ejemplo, &lt;code>blazor-app-deploy&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Publicación&lt;/strong>: Selecciona &lt;strong>Código&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Pila de ejecución&lt;/strong>: Elige &lt;strong>.NET 8&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Sistema operativo&lt;/strong>: Selecciona &lt;strong>Windows&lt;/strong> o &lt;strong>Linux&lt;/strong> según tu preferencia.&lt;/li>
&lt;li>&lt;strong>Plan de App Service&lt;/strong>: Crea uno nuevo o selecciona un plan existente.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Haz clic en &lt;strong>Revisar + Crear&lt;/strong> y luego en &lt;strong>Crear&lt;/strong> para iniciar la implementación del App Service.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="23-validar-la-creación-del-app-service">&lt;strong>2.3 Validar la creación del App Service&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>Una vez creada, verás un mensaje de confirmación en la parte superior del portal.&lt;/li>
&lt;li>Haz clic en &lt;strong>Ir al recurso&lt;/strong> para acceder al panel del App Service.&lt;/li>
&lt;/ol>
&lt;h3 id="24-configurar-las-opciones-del-app-service">&lt;strong>2.4 Configurar las opciones del App Service&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>En el panel del App Service, selecciona &lt;strong>Configuración&lt;/strong> en el menú lateral.&lt;/li>
&lt;li>Verifica que la versión de .NET sea la correcta (&lt;strong>.NET 8&lt;/strong>).&lt;/li>
&lt;li>Configura las variables de entorno necesarias para tu aplicación (si aplica) en la pestaña &lt;strong>Configuración de aplicaciones&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;h3 id="25-obtener-la-url-del-app-service">&lt;strong>2.5 Obtener la URL del App Service&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>En el panel principal del App Service, encuentra el enlace de &lt;strong>URL predeterminada&lt;/strong>.&lt;/li>
&lt;li>Esta será la dirección donde se alojará tu aplicación una vez desplegada.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="paso-3-publicar-la-aplicación-desde-visual-studio">Paso 3: Publicar la aplicación desde Visual Studio&lt;/h2>
&lt;ol>
&lt;li>Abre tu proyecto Blazor en &lt;strong>Visual Studio&lt;/strong>.&lt;/li>
&lt;li>Haz clic derecho en el proyecto y selecciona &lt;strong>Publicar&lt;/strong>.&lt;/li>
&lt;li>Selecciona &lt;strong>App Service (Windows)&lt;/strong> o &lt;strong>App Service (Linux)&lt;/strong> según tu configuración.&lt;/li>
&lt;li>Inicia sesión en tu cuenta de Azure.&lt;/li>
&lt;li>Selecciona el App Service creado previamente.&lt;/li>
&lt;li>Haz clic en &lt;strong>Publicar&lt;/strong> y espera a que finalice el proceso.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="paso-4-usar-azure-cli-para-el-despliegue">Paso 4: Usar Azure CLI para el despliegue&lt;/h2>
&lt;p>Si prefieres usar la CLI, sigue estos pasos:&lt;/p>
&lt;ol>
&lt;li>Publica la aplicación localmente:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">dotnet publish -c Release
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Crea un recurso de App Service en Azure si aún no lo has hecho:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">az webapp create --name blazor-app-deploy --resource-group &amp;lt;tu-grupo&amp;gt; --plan &amp;lt;tu-plan&amp;gt; --runtime &lt;span class="s2">&amp;#34;DOTNET-8.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Despliega la aplicación:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">az webapp deploy --resource-group &amp;lt;tu-grupo&amp;gt; --name blazor-app-deploy --src-path ./bin/Release/net8.0/publish
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Accede a la URL proporcionada por Azure para ver tu aplicación.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="paso-5-configurar-cicd-con-github-actions">Paso 5: Configurar CI/CD con GitHub Actions&lt;/h2>
&lt;p>Automatiza el despliegue utilizando GitHub Actions:&lt;/p>
&lt;ol>
&lt;li>Crea un archivo llamado &lt;code>.github/workflows/azure-webapp.yml&lt;/code> en tu repositorio.&lt;/li>
&lt;li>Añade la siguiente configuración:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy Blazor App to Azure&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">main&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">build-and-deploy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Setup .NET&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/setup-dotnet@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">dotnet-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;8.0&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build Project&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dotnet build --configuration Release&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy to Azure&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">azure/webapps-deploy@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app-name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">blazor-app-deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">slot-name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">production&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">publish-profile&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Configura el secreto &lt;code>AZURE_WEBAPP_PUBLISH_PROFILE&lt;/code> en los ajustes de tu repositorio.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Desplegar aplicaciones Blazor en Azure App Services es un proceso flexible y eficiente. Ya sea utilizando Visual Studio, la CLI de Azure o GitHub Actions, Azure ofrece las herramientas necesarias para simplificar el flujo de trabajo de desarrollo y despliegue. Con las mejoras de &lt;strong>.NET 8&lt;/strong>, tus aplicaciones serán más rápidas y escalables que nunca. ¡Empieza hoy mismo a aprovechar el poder de Blazor en la nube!&lt;/p></description></item><item><title>Creación de componentes reutilizables en Blazor para aplicaciones escalables</title><link>https://cmas.dev/posts/2024-04-10-blazor-reusable-components/</link><pubDate>Wed, 10 Apr 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-04-10-blazor-reusable-components/</guid><description>&lt;p>Los componentes reutilizables son esenciales para construir aplicaciones Blazor escalables y mantenibles. Este artículo explora cómo aprovechar las capacidades de .NET 8 para crear componentes modulares que mejoren la eficiencia y la reutilización en proyectos de cualquier tamaño. Además, aprenderás las mejores prácticas y técnicas clave para optimizar la construcción de interfaces dinámicas con Blazor.&lt;/p>
&lt;h2 id="introducción">Introducción&lt;/h2>
&lt;p>Blazor permite a los desarrolladores de .NET construir aplicaciones web interactivas con componentes reutilizables, un enfoque que no solo mejora la eficiencia del desarrollo, sino que también facilita la escalabilidad de las aplicaciones. Con &lt;strong>.NET 8&lt;/strong>, Blazor incluye mejoras significativas en el rendimiento y capacidades avanzadas para la creación de componentes, lo que lo convierte en una herramienta ideal para construir aplicaciones mantenibles y modulares.&lt;/p>
&lt;p>En este artículo, exploraremos cómo crear componentes reutilizables en Blazor y cómo organizarlos de manera eficiente para aplicaciones escalables.&lt;/p>
&lt;hr>
&lt;h2 id="qué-son-los-componentes-en-blazor">¿Qué son los componentes en Blazor?&lt;/h2>
&lt;p>Un componente en Blazor es una unidad modular de interfaz de usuario (UI) que encapsula lógica, datos y presentación. Los componentes son la base de cualquier aplicación Blazor y permiten construir UI dinámicas de forma sencilla.&lt;/p>
&lt;p>Un componente puede incluir:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>HTML y Razor&lt;/strong>: Para definir la estructura y el diseño.&lt;/li>
&lt;li>&lt;strong>C#&lt;/strong>: Para la lógica y el manejo de eventos.&lt;/li>
&lt;li>&lt;strong>CSS&lt;/strong>: Para el estilo.&lt;/li>
&lt;/ul>
&lt;p>Estos componentes son reutilizables, lo que significa que pueden ser compartidos en diferentes partes de la aplicación o incluso entre diferentes proyectos.&lt;/p>
&lt;hr>
&lt;h2 id="beneficios-de-los-componentes-reutilizables">Beneficios de los componentes reutilizables&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Eficiencia en el desarrollo&lt;/strong>:&lt;br>
Reduce la duplicación de código al centralizar funcionalidades comunes en un único componente.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Facilidad de mantenimiento&lt;/strong>:&lt;br>
Los cambios realizados en un componente se reflejan automáticamente donde sea utilizado.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Escalabilidad&lt;/strong>:&lt;br>
Una arquitectura basada en componentes facilita la expansión de la aplicación.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Reutilización entre proyectos&lt;/strong>:&lt;br>
Los componentes pueden empaquetarse como bibliotecas para su uso en múltiples aplicaciones.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="creación-de-un-componente-reutilizable-ejemplo-práctico">Creación de un componente reutilizable: Ejemplo práctico&lt;/h2>
&lt;h3 id="escenario-botón-genérico-reutilizable">&lt;strong>Escenario: Botón genérico reutilizable&lt;/strong>&lt;/h3>
&lt;p>Vamos a crear un botón genérico que se pueda reutilizar en diferentes partes de la aplicación. Este botón incluirá propiedades configurables para el texto, el estilo y la acción que ejecuta al ser clicado.&lt;/p>
&lt;h3 id="paso-1-crear-el-componente">Paso 1: Crear el componente&lt;/h3>
&lt;p>Crea un archivo llamado &lt;code>ReusableButton.razor&lt;/code> en tu proyecto Blazor:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;button class=&amp;#34;@ButtonClass&amp;#34; @onclick=&amp;#34;HandleClick&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> @ButtonText
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Parameter]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public string ButtonText { get; set; } = &amp;#34;Click me&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Parameter]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public string ButtonClass { get; set; } = &amp;#34;btn btn-primary&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Parameter]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public EventCallback OnClick { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private async Task HandleClick()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (OnClick.HasDelegate)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> await OnClick.InvokeAsync();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-2-explicación-del-código">Paso 2: Explicación del código&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>[Parameter]&lt;/strong>:&lt;br>
Los parámetros permiten que las propiedades del componente sean configurables desde su punto de uso.&lt;/p>
&lt;ul>
&lt;li>&lt;code>ButtonText&lt;/code>: El texto que aparecerá en el botón.&lt;/li>
&lt;li>&lt;code>ButtonClass&lt;/code>: Las clases CSS para personalizar el estilo.&lt;/li>
&lt;li>&lt;code>OnClick&lt;/code>: Un delegado para manejar la acción al hacer clic en el botón.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>EventCallback&lt;/strong>:&lt;br>
Es la forma recomendada en Blazor para manejar eventos como clics de botón.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="paso-3-uso-del-componente">Paso 3: Uso del componente&lt;/h3>
&lt;p>Ahora puedes utilizar este componente en cualquier parte de tu aplicación:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;ReusableButton
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ButtonText=&amp;#34;Guardar&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ButtonClass=&amp;#34;btn btn-success&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> OnClick=&amp;#34;GuardarCambios&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;ReusableButton
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ButtonText=&amp;#34;Eliminar&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ButtonClass=&amp;#34;btn btn-danger&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> OnClick=&amp;#34;EliminarRegistro&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private void GuardarCambios()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Console.WriteLine(&amp;#34;Cambios guardados&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private void EliminarRegistro()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Console.WriteLine(&amp;#34;Registro eliminado&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="resultado">Resultado&lt;/h3>
&lt;p>Los dos botones tendrán textos y estilos diferentes, pero comparten la misma lógica de interacción encapsulada en el componente &lt;code>ReusableButton&lt;/code>.&lt;/p>
&lt;hr>
&lt;h2 id="buenas-prácticas-para-componentes-reutilizables">Buenas prácticas para componentes reutilizables&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Modularidad&lt;/strong>:&lt;br>
Divide los componentes en unidades pequeñas y específicas que puedan ser fácilmente combinadas.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Evita la lógica excesiva&lt;/strong>:&lt;br>
Mantén los componentes centrados en la UI y delega la lógica compleja a servicios o clases separadas.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Uso de bibliotecas compartidas&lt;/strong>:&lt;br>
Empaqueta componentes comunes en una &lt;strong>librería Razor Class Library (RCL)&lt;/strong> para su reutilización entre proyectos.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Documentación clara&lt;/strong>:&lt;br>
Proporciona ejemplos de uso y documentación para que otros desarrolladores puedan integrarlos fácilmente.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="blazor-en-net-8-mejoras-para-componentes">Blazor en .NET 8: Mejoras para componentes&lt;/h2>
&lt;p>Con &lt;strong>.NET 8&lt;/strong>, Blazor introduce mejoras clave para el desarrollo basado en componentes:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Renderización condicional optimizada&lt;/strong>:&lt;br>
Reduce el impacto de cambios frecuentes en la UI.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Soporte para componentes híbridos (Blazor United)&lt;/strong>:&lt;br>
Combina los beneficios de Blazor Server y WebAssembly, facilitando la creación de componentes reutilizables en cualquier modelo.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Mejoras en la interoperabilidad con JavaScript&lt;/strong>:&lt;br>
Permite integrar bibliotecas externas en componentes Blazor de manera más eficiente.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Los componentes reutilizables son fundamentales para construir aplicaciones Blazor escalables y mantenibles. Al encapsular la lógica y la presentación en módulos independientes, puedes reducir la duplicación de código, mejorar la eficiencia y facilitar la expansión de tu aplicación.&lt;/p>
&lt;p>Con las mejoras introducidas en &lt;strong>.NET 8&lt;/strong>, crear componentes en Blazor es más poderoso que nunca. Ya sea que estés desarrollando una aplicación pequeña o un sistema complejo, el enfoque modular de Blazor te ayudará a mantener tu proyecto organizado y fácil de escalar.&lt;/p></description></item><item><title>Introducción a Blazor: Cambiando el paradigma del desarrollo web</title><link>https://cmas.dev/posts/2024-04-03-intro-blazor/</link><pubDate>Wed, 03 Apr 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-04-03-intro-blazor/</guid><description>&lt;p>El framework de Microsoft, está transformando el desarrollo web al permitir crear aplicaciones interactivas con C# y .NET, eliminando la necesidad de JavaScript. Con las mejoras de .NET 8, ofrece mayor rendimiento y flexibilidad, facilitando la creación de aplicaciones tanto en el cliente como en el servidor. Este artículo explora cómo Blazor redefine el desarrollo web y muestra cómo empezar a usarlo.&lt;/p>
&lt;h2 id="qué-es-blazor">¿Qué es Blazor?&lt;/h2>
&lt;p>Blazor es un framework de desarrollo web de &lt;strong>Microsoft&lt;/strong> que permite construir aplicaciones web interactivas utilizando &lt;strong>C# y .NET&lt;/strong> en lugar de depender exclusivamente de &lt;strong>JavaScript&lt;/strong>. Lanzado inicialmente como una alternativa a frameworks como Angular o React, Blazor ha evolucionado significativamente, y con la llegada de &lt;strong>.NET 8&lt;/strong>, sus capacidades y rendimiento han alcanzado nuevos niveles.&lt;/p>
&lt;h3 id="por-qué-blazor-es-revolucionario">¿Por qué Blazor es revolucionario?&lt;/h3>
&lt;p>Blazor introduce un cambio importante al permitir que los desarrolladores trabajen en aplicaciones web sin salir del ecosistema .NET. Esto reduce la necesidad de manejar múltiples lenguajes y frameworks en un solo proyecto. Además, Blazor está diseñado para cubrir diversos escenarios:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Blazor Server:&lt;/strong> Renderiza componentes en el servidor y envía actualizaciones al cliente a través de SignalR.&lt;/li>
&lt;li>&lt;strong>Blazor WebAssembly (WASM):&lt;/strong> Ejecuta la aplicación directamente en el navegador, utilizando WebAssembly para una experiencia completamente client-side.&lt;/li>
&lt;li>&lt;strong>Blazor en .NET MAUI:&lt;/strong> Permite usar Blazor para construir aplicaciones de escritorio y móviles.&lt;/li>
&lt;/ul>
&lt;p>Con &lt;strong>.NET 8&lt;/strong>, estas capacidades han sido optimizadas para ofrecer un mejor rendimiento y una experiencia de desarrollo más fluida.&lt;/p>
&lt;hr>
&lt;h2 id="ventajas-de-usar-blazor-en-net-8">Ventajas de usar Blazor en .NET 8&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Un único lenguaje para todo:&lt;/strong>&lt;br>
Con Blazor, puedes desarrollar aplicaciones completas utilizando &lt;strong>C#&lt;/strong>, eliminando la necesidad de escribir código en JavaScript para el frontend.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Rendimiento mejorado en WebAssembly:&lt;/strong>&lt;br>
La llegada de .NET 8 ha reducido los tiempos de carga inicial en Blazor WebAssembly, gracias a la optimización de su tamaño y mejor manejo de caché.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Integración con el ecosistema .NET:&lt;/strong>&lt;br>
Blazor se integra perfectamente con APIs .NET, Entity Framework, Azure, y bibliotecas de terceros.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Componentes reutilizables:&lt;/strong>&lt;br>
Blazor permite crear componentes UI que son reutilizables en distintas partes de una aplicación, similar a otros frameworks modernos como React.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Compatibilidad con JavaScript:&lt;/strong>&lt;br>
Aunque elimina la dependencia de JavaScript, Blazor permite interactuar con librerías JavaScript cuando sea necesario.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="blazor-en-acción-un-ejemplo-práctico">Blazor en acción: Un ejemplo práctico&lt;/h2>
&lt;h3 id="paso-1-creación-de-un-proyecto-blazor">Paso 1: Creación de un proyecto Blazor&lt;/h3>
&lt;p>Primero, asegúrate de tener instalada la última versión de .NET 8. Luego, crea un nuevo proyecto Blazor WebAssembly desde la CLI de .NET:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">dotnet new blazorwasm -o BlazorApp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> BlazorApp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dotnet run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Este comando genera una aplicación Blazor básica. Accede a &lt;code>http://localhost:5000&lt;/code> para verla en funcionamiento.&lt;/p>
&lt;h3 id="paso-2-crear-un-componente-de-contador">Paso 2: Crear un componente de contador&lt;/h3>
&lt;p>Edita el archivo &lt;code>Counter.razor&lt;/code> para personalizar el contador:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@page &amp;#34;/counter&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;h3&amp;gt;Contador&amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;p&amp;gt;Contador actual: @count&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;button class=&amp;#34;btn btn-primary&amp;#34; @onclick=&amp;#34;IncrementarContador&amp;#34;&amp;gt;Incrementar&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private int count = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private void IncrementarContador()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> count++;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-3-agregar-estilos-personalizados">Paso 3: Agregar estilos personalizados&lt;/h3>
&lt;p>Puedes personalizar los estilos en el archivo &lt;code>wwwroot/css/app.css&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">button&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">font-size&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">1.2&lt;/span>&lt;span class="kt">rem&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">padding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">margin-top&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Este simple ejemplo muestra cómo Blazor permite crear componentes interactivos utilizando únicamente C#.&lt;/p>
&lt;hr>
&lt;h2 id="blazor-y-el-futuro-del-desarrollo-web">Blazor y el futuro del desarrollo web&lt;/h2>
&lt;p>Con la llegada de &lt;strong>.NET 8&lt;/strong>, Microsoft ha reforzado su compromiso con Blazor como una herramienta clave para el desarrollo web. Algunas de las mejoras que destacan en esta versión incluyen:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Mejoras en el soporte de WebAssembly:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Reducción del tiempo de carga inicial.&lt;/li>
&lt;li>Implementación de AOT (Ahead-of-Time Compilation) para optimizar el rendimiento.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Blazor United:&lt;/strong>&lt;br>
Introducción de un enfoque híbrido que combina las ventajas de Blazor Server y WebAssembly, permitiendo cambiar dinámicamente entre ambos modelos según las necesidades de la aplicación.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Integración con .NET MAUI:&lt;/strong>&lt;br>
Blazor ahora puede usarse para desarrollar aplicaciones de escritorio y móviles con un solo código base.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="cuándo-elegir-blazor-para-tu-proyecto">Cuándo elegir Blazor para tu proyecto&lt;/h2>
&lt;p>Blazor es una excelente opción si:&lt;/p>
&lt;ol>
&lt;li>Tu equipo ya está familiarizado con el ecosistema .NET.&lt;/li>
&lt;li>Necesitas desarrollar aplicaciones web rápidamente sin aprender un nuevo lenguaje como JavaScript.&lt;/li>
&lt;li>Quieres aprovechar las capacidades de WebAssembly para mejorar la experiencia del cliente.&lt;/li>
&lt;li>Planeas integrar tu aplicación con otros servicios en Azure o APIs basadas en .NET.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Blazor está cambiando el paradigma del desarrollo web al eliminar la necesidad de separar el frontend y backend en lenguajes diferentes. Gracias a .NET 8, las aplicaciones Blazor son más rápidas, ligeras y fáciles de desarrollar que nunca.&lt;/p>
&lt;p>Si todavía no has probado Blazor, ahora es el momento perfecto para sumergirte en esta tecnología y descubrir cómo puede transformar tus proyectos web. Con un lenguaje unificado y un ecosistema robusto, Blazor está listo para liderar el futuro del desarrollo web.&lt;/p></description></item></channel></rss>