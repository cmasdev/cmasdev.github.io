<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Web Development on Christian Amado's Blog</title><link>https://cmas.dev/tags/web-development/</link><description>Recent content in Web Development on Christian Amado's Blog</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Wed, 29 Jan 2025 00:00:00 -0400</lastBuildDate><atom:link href="https://cmas.dev/tags/web-development/index.xml" rel="self" type="application/rss+xml"/><item><title>Cómo estructurar grandes proyectos en TypeScript</title><link>https://cmas.dev/posts/2025-01-29-how-to-structure-big-projects/</link><pubDate>Wed, 29 Jan 2025 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2025-01-29-how-to-structure-big-projects/</guid><description>&lt;p>El desarrollo de grandes aplicaciones en &lt;strong>TypeScript&lt;/strong> requiere una estructura de proyecto bien definida para mantener la escalabilidad, mantenibilidad y eficiencia del código. Una mala organización puede llevar a problemas de acoplamiento, dificultades en la depuración y una curva de aprendizaje elevada para nuevos desarrolladores en el equipo.&lt;/p>
&lt;p>En este artículo, exploraremos cómo organizar un proyecto grande en TypeScript utilizando &lt;strong>buenas prácticas, patrones de diseño y herramientas avanzadas&lt;/strong>.&lt;/p>
&lt;h2 id="1-configuración-inicial-del-proyecto">1. Configuración Inicial del Proyecto&lt;/h2>
&lt;p>Antes de estructurar el código, debemos preparar un entorno robusto en &lt;strong>TypeScript&lt;/strong>.&lt;/p>
&lt;h3 id="11-crear-un-proyecto-typescript">&lt;strong>1.1 Crear un Proyecto TypeScript&lt;/strong>&lt;/h3>
&lt;p>Ejecuta el siguiente comando para inicializar un nuevo proyecto:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">mkdir my-large-ts-project &amp;amp;&amp;amp; cd my-large-ts-project
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm init -y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm install typescript --save-dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="12-configuración-de-tsconfigjson">&lt;strong>1.2 Configuración de &lt;code>tsconfig.json&lt;/code>&lt;/strong>&lt;/h3>
&lt;p>Generamos un archivo de configuración:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npx tsc --init
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Modificamos el archivo &lt;code>tsconfig.json&lt;/code> con las siguientes opciones recomendadas:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;compilerOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;target&amp;#34;: &amp;#34;ES2020&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;module&amp;#34;: &amp;#34;CommonJS&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;outDir&amp;#34;: &amp;#34;dist&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;rootDir&amp;#34;: &amp;#34;src&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;strict&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;esModuleInterop&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;forceConsistentCasingInFileNames&amp;#34;: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;include&amp;#34;: [&amp;#34;src&amp;#34;],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;exclude&amp;#34;: [&amp;#34;node_modules&amp;#34;, &amp;#34;dist&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="2-estructura-de-carpetas-para-grandes-proyectos">2. Estructura de Carpetas para Grandes Proyectos&lt;/h2>
&lt;p>Una estructura bien definida facilita la escalabilidad del proyecto. Un modelo recomendado es:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">/my-large-ts-project
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│── /src
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── /config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ ├── appConfig.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ ├── dbConfig.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── /models
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ ├── userModel.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ ├── orderModel.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── /services
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ ├── userService.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ ├── orderService.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── /controllers
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ ├── userController.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ ├── orderController.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── /routes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ ├── userRoutes.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ ├── orderRoutes.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── /middlewares
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ ├── authMiddleware.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── /utils
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ ├── logger.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── /tests
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ ├── userService.test.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── app.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│── /dist
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│── package.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│── tsconfig.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│── README.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="descripción-de-las-carpetas">&lt;strong>Descripción de las Carpetas&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>&lt;code>/config&lt;/code>&lt;/strong>: Configuración de base de datos, variables de entorno y opciones globales.&lt;/li>
&lt;li>&lt;strong>&lt;code>/models&lt;/code>&lt;/strong>: Definiciones de modelos y entidades.&lt;/li>
&lt;li>&lt;strong>&lt;code>/services&lt;/code>&lt;/strong>: Lógica de negocio (capa intermedia entre controladores y base de datos).&lt;/li>
&lt;li>&lt;strong>&lt;code>/controllers&lt;/code>&lt;/strong>: Manejo de solicitudes HTTP.&lt;/li>
&lt;li>&lt;strong>&lt;code>/routes&lt;/code>&lt;/strong>: Definición de rutas para cada entidad.&lt;/li>
&lt;li>&lt;strong>&lt;code>/middlewares&lt;/code>&lt;/strong>: Middleware para autenticación, validaciones, etc.&lt;/li>
&lt;li>&lt;strong>&lt;code>/utils&lt;/code>&lt;/strong>: Funciones auxiliares reutilizables.&lt;/li>
&lt;li>&lt;strong>&lt;code>/tests&lt;/code>&lt;/strong>: Pruebas unitarias y de integración.&lt;/li>
&lt;/ul>
&lt;h2 id="3-modularización-y-separación-de-responsabilidades">3. Modularización y Separación de Responsabilidades&lt;/h2>
&lt;p>Dividir el código en &lt;strong>módulos independientes&lt;/strong> mejora la reutilización y el mantenimiento.&lt;/p>
&lt;h3 id="ejemplo-modelo-de-usuario-modelsusermodelts">&lt;strong>Ejemplo: Modelo de Usuario (&lt;code>models/userModel.ts&lt;/code>)&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">interface&lt;/span> &lt;span class="n">User&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">email&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ejemplo-servicio-de-usuario-servicesuserservicets">&lt;strong>Ejemplo: Servicio de Usuario (&lt;code>services/userService.ts&lt;/code>)&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">User&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../models/userModel&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">users&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">User&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">UserService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">static&lt;/span> &lt;span class="n">getAllUsers&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">User&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">users&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">static&lt;/span> &lt;span class="n">addUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">User&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">users&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ejemplo-controlador-de-usuario-controllersusercontrollerts">&lt;strong>Ejemplo: Controlador de Usuario (&lt;code>controllers/userController.ts&lt;/code>)&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Request&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Response&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;express&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">UserService&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../services/userService&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">getUsers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">req&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Request&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Response&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">json&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UserService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getAllUsers&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">addUser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">req&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Request&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Response&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">req&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">UserService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">addUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">201&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">json&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="4-uso-de-typescript-con-expressjs">4. Uso de TypeScript con Express.js&lt;/h2>
&lt;h3 id="41-instalar-express-y-tipos">&lt;strong>4.1 Instalar Express y Tipos&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install express
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm install @types/express --save-dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="42-definir-las-rutas-routesuserroutests">&lt;strong>4.2 Definir las Rutas (&lt;code>routes/userRoutes.ts&lt;/code>)&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Router&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;express&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">getUsers&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">addUser&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../controllers/userController&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">router&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Router&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/users&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">getUsers&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">post&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/users&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">addUser&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">default&lt;/span> &lt;span class="n">router&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="43-configurar-el-servidor-appts">&lt;strong>4.3 Configurar el Servidor (&lt;code>app.ts&lt;/code>)&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="n">express&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;express&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="n">userRoutes&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;./routes/userRoutes&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">express&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">express&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">json&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/api&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">userRoutes&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">listen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Servidor corriendo en http://localhost:3000&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="5-implementación-de-pruebas-con-jest">5. Implementación de Pruebas con Jest&lt;/h2>
&lt;p>Las pruebas garantizan la estabilidad del código en proyectos grandes.&lt;/p>
&lt;h3 id="51-instalar-jest">&lt;strong>5.1 Instalar Jest&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install --save-dev jest ts-jest @types/jest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="52-configurar-jest-en-packagejson">&lt;strong>5.2 Configurar Jest en &lt;code>package.json&lt;/code>&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;#34;scripts&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;test&amp;#34;: &amp;#34;jest --config jest.config.js&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="53-ejemplo-de-prueba-testsuserservicetestts">&lt;strong>5.3 Ejemplo de Prueba (&lt;code>tests/userService.test.ts&lt;/code>)&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">import { UserService } from &amp;#34;../services/userService&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">test(&amp;#34;Agregar un usuario&amp;#34;, () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> UserService.addUser({ id: &amp;#34;1&amp;#34;, name: &amp;#34;Juan&amp;#34;, email: &amp;#34;juan@example.com&amp;#34; });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> expect(UserService.getAllUsers().length).toBe(1);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Estructurar grandes proyectos en &lt;strong>TypeScript&lt;/strong> requiere una organización clara y modular. Al seguir estas prácticas, logramos:&lt;/p>
&lt;p>✅ &lt;strong>Código mantenible y escalable&lt;/strong>.
✅ &lt;strong>Separación clara de responsabilidades&lt;/strong>.
✅ &lt;strong>Reutilización y modularidad del código&lt;/strong>.
✅ &lt;strong>Facilidad para pruebas unitarias e integración&lt;/strong>.&lt;/p></description></item><item><title>Angular Signals para flujos complejos: Ejemplos prácticos</title><link>https://cmas.dev/posts/2025-01-22-angular-signals/</link><pubDate>Wed, 22 Jan 2025 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2025-01-22-angular-signals/</guid><description>&lt;p>&lt;strong>Angular Signals&lt;/strong> es una de las características más recientes del ecosistema de Angular, diseñada para mejorar la reactividad y la eficiencia en la gestión de estado. En aplicaciones con flujos complejos, la correcta implementación de signals permite una arquitectura más predecible, reduciendo renders innecesarios y mejorando el rendimiento.&lt;/p>
&lt;p>En este artículo exploraremos cómo usar &lt;strong>Angular Signals&lt;/strong> en escenarios avanzados, incluyendo su aplicación en &lt;strong>gestión de estado, comunicación entre componentes y sincronización de datos asíncronos&lt;/strong>.&lt;/p>
&lt;h2 id="qué-son-los-signals-en-angular">¿Qué son los Signals en Angular?&lt;/h2>
&lt;p>Los Signals en Angular proporcionan una forma declarativa y eficiente de manejar datos reactivos. A diferencia de &lt;code>RxJS&lt;/code>, los signals permiten una actualización automática y determinista del estado sin necesidad de suscripciones explícitas.&lt;/p>
&lt;h3 id="ventajas-de-signals-en-angular">&lt;strong>Ventajas de Signals en Angular&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>✅ &lt;strong>Actualización automática&lt;/strong>: Reactualizan valores cuando su dependencia cambia.&lt;/li>
&lt;li>✅ &lt;strong>Menor complejidad&lt;/strong>: No requieren suscripciones manuales.&lt;/li>
&lt;li>✅ &lt;strong>Rendimiento optimizado&lt;/strong>: Reducen renders innecesarios.&lt;/li>
&lt;li>✅ &lt;strong>Compatibles con computación derivada&lt;/strong>: Se pueden encadenar para formar estructuras reactivas más complejas.&lt;/li>
&lt;/ul>
&lt;p>Ejemplo básico de un &lt;strong>Signal&lt;/strong> en Angular:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">signal&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">ContadorComponent&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">contador&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">signal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">incrementar&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">contador&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">contador&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="1-gestión-de-estado-global-con-signals">1. Gestión de Estado Global con Signals&lt;/h2>
&lt;p>En aplicaciones con flujos complejos, es fundamental manejar el estado de manera centralizada y eficiente. Los &lt;strong>Signals&lt;/strong> permiten crear una solución sencilla para compartir estado entre múltiples componentes.&lt;/p>
&lt;h3 id="implementación-de-un-store-con-signals">&lt;strong>Implementación de un Store con Signals&lt;/strong>&lt;/h3>
&lt;p>Creamos un servicio global para gestionar el estado de un carrito de compras.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Injectable&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">signal&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Injectable&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">providedIn&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">CarritoService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">productos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">signal&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="p">{&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">number&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nombre&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cantidad&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">number&lt;/span> &lt;span class="p">}[]&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">([]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">agregarProducto&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">producto&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">number&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nombre&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="p">})&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">productos&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">productos&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">...&lt;/span>&lt;span class="n">producto&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cantidad&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">}]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">obtenerCarrito&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">productos&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>En un componente, podemos suscribirnos al estado de esta forma:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Component&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">inject&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">CarritoService&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./carrito.service&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">selector&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;app-carrito&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">template&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="err">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">ul&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">li&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ngFor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;let item of carrito()&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="n">item&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nombre&lt;/span> &lt;span class="p">}}&lt;/span> &lt;span class="p">({{&lt;/span> &lt;span class="n">item&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cantidad&lt;/span> &lt;span class="p">}})&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">li&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">ul&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">CarritoComponent&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">carrito&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">inject&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CarritoService&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">obtenerCarrito&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>✅ &lt;strong>Beneficio:&lt;/strong> No es necesario usar &lt;code>RxJS&lt;/code> ni &lt;code>BehaviorSubject&lt;/code>, reduciendo la complejidad.&lt;/p>
&lt;h2 id="2-comunicación-entre-componentes-con-signals">2. Comunicación entre Componentes con Signals&lt;/h2>
&lt;p>En aplicaciones modulares, los Signals facilitan la comunicación eficiente entre componentes sin necesidad de &lt;code>@Input()&lt;/code> y &lt;code>@Output()&lt;/code>.&lt;/p>
&lt;h3 id="ejemplo-estado-compartido-entre-componentes-hermanos">&lt;strong>Ejemplo: Estado Compartido entre Componentes Hermanos&lt;/strong>&lt;/h3>
&lt;p>1️⃣ &lt;strong>Servicio Compartido&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Injectable&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">signal&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Injectable&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">providedIn&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">EstadoService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">contador&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">signal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>2️⃣ &lt;strong>Componente que Modifica el Estado&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Component&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">inject&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">EstadoService&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./estado.service&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">selector&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;app-incrementador&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">template&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="err">`&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">button&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">click&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;incrementar()&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Incrementar&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">button&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="err">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">IncrementadorComponent&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">estadoService&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">inject&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">EstadoService&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">incrementar&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">estadoService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">contador&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">estadoService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">contador&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>3️⃣ &lt;strong>Componente que Muestra el Estado&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Component&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">inject&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">EstadoService&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./estado.service&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">selector&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;app-contador&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">template&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="err">`&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Contador&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{{&lt;/span> &lt;span class="n">contador&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">}}&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="err">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">ContadorComponent&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">contador&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">inject&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">EstadoService&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">contador&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>✅ &lt;strong>Beneficio:&lt;/strong> Los componentes comparten estado sin necesidad de &lt;strong>event bindings&lt;/strong> manuales.&lt;/p>
&lt;h2 id="3-manejo-de-datos-asíncronos-con-signals">3. Manejo de Datos Asíncronos con Signals&lt;/h2>
&lt;p>Los Signals pueden manejar llamadas HTTP y actualizar automáticamente la UI.&lt;/p>
&lt;h3 id="ejemplo-llamada-a-una-api-con-signals">&lt;strong>Ejemplo: Llamada a una API con Signals&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Component&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">inject&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">signal&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">HttpClient&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/common/http&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">selector&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;app-usuarios&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">template&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="err">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">ul&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">li&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ngFor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;let usuario of usuarios()&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="n">usuario&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="p">}}&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">li&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">ul&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">UsuariosComponent&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">http&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">inject&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">HttpClient&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">usuarios&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">signal&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="p">{&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="p">}[]&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">([]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="p">{&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="p">}[]&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;https://jsonplaceholder.typicode.com/users&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">subscribe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">usuarios&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>✅ &lt;strong>Beneficio:&lt;/strong> Se eliminan suscripciones manuales y &lt;code>async pipe&lt;/code>, mejorando la simplicidad.&lt;/p>
&lt;h2 id="4-optimización-del-renderizado-con-signals">4. Optimización del Renderizado con Signals&lt;/h2>
&lt;p>Signals minimizan renders innecesarios. En comparación con &lt;code>@Input()&lt;/code>, los Signals permiten actualizar solo la parte del estado que cambia.&lt;/p>
&lt;h3 id="ejemplo-renderización-optimizada">&lt;strong>Ejemplo: Renderización Optimizada&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Component&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ne">Input&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">signal&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">selector&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;app-producto&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">template&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="err">`&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="n">producto&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nombre&lt;/span> &lt;span class="p">}}&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="p">{{&lt;/span> &lt;span class="n">producto&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">precio&lt;/span> &lt;span class="p">}}&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="err">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">ProductoComponent&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="ne">Input&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="n">producto&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">signal&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">nombre&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">precio&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>✅ &lt;strong>Beneficio:&lt;/strong> Solo se renderiza la parte del estado que cambia, mejorando la eficiencia.&lt;/p>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Los &lt;strong>Signals en Angular&lt;/strong> proporcionan un mecanismo moderno y eficiente para manejar flujos de datos complejos. Su integración con la arquitectura de Angular mejora la legibilidad, el rendimiento y la mantenibilidad del código.&lt;/p></description></item><item><title>Diseño de APIs escalables con Deno y TypeScript</title><link>https://cmas.dev/posts/2025-01-15-scalable-design-apis/</link><pubDate>Wed, 15 Jan 2025 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2025-01-15-scalable-design-apis/</guid><description>&lt;p>El desarrollo de APIs escalables es un aspecto clave en la construcción de aplicaciones modernas. &lt;strong>Deno&lt;/strong>, un runtime moderno para JavaScript y TypeScript, ofrece una serie de características que lo convierten en una excelente alternativa para la creación de APIs seguras y eficientes. En este artículo, exploraremos cómo diseñar una API REST escalable utilizando &lt;strong>Deno y TypeScript&lt;/strong>, aplicando las mejores prácticas y optimizaciones.&lt;/p>
&lt;h2 id="1-introducción-a-deno-y-sus-ventajas">1. Introducción a Deno y sus Ventajas&lt;/h2>
&lt;h3 id="qué-es-deno">&lt;strong>¿Qué es Deno?&lt;/strong>&lt;/h3>
&lt;p>Deno es un runtime para JavaScript y TypeScript creado por &lt;strong>Ryan Dahl&lt;/strong>, el mismo creador de Node.js. Se diseñó para corregir deficiencias de Node.js y proporcionar un entorno más seguro y moderno.&lt;/p>
&lt;h3 id="ventajas-de-deno-sobre-nodejs">&lt;strong>Ventajas de Deno sobre Node.js&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Seguridad integrada&lt;/strong>: Requiere permisos explícitos para acceder a archivos, red y variables de entorno.&lt;/li>
&lt;li>&lt;strong>Soporte nativo para TypeScript&lt;/strong>: No necesita configuración adicional.&lt;/li>
&lt;li>&lt;strong>Gestión de dependencias sin &lt;code>node_modules&lt;/code>&lt;/strong>: Usa importaciones desde URLs.&lt;/li>
&lt;li>&lt;strong>Servidor HTTP eficiente&lt;/strong>: Basado en el estándar &lt;code>fetch&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h2 id="2-configuración-del-entorno-de-desarrollo">2. Configuración del Entorno de Desarrollo&lt;/h2>
&lt;h3 id="instalar-deno">&lt;strong>Instalar Deno&lt;/strong>&lt;/h3>
&lt;p>Para instalar Deno, ejecuta el siguiente comando en tu terminal:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">curl -fsSL https://deno.land/x/install/install.sh | sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verifica la instalación:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">deno --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="3-creación-de-una-api-rest-con-deno">3. Creación de una API REST con Deno&lt;/h2>
&lt;h3 id="31-estructura-del-proyecto">&lt;strong>3.1 Estructura del Proyecto&lt;/strong>&lt;/h3>
&lt;p>Organizaremos el código de nuestra API de la siguiente manera:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">/deno-api
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│── /controllers
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── userController.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│── /models
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── userModel.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│── /routes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── userRoutes.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│── /middlewares
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── authMiddleware.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│── server.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│── deps.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│── config.ts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="32-definir-dependencias-depsts">&lt;strong>3.2 Definir Dependencias (&lt;code>deps.ts&lt;/code>)&lt;/strong>&lt;/h3>
&lt;p>Deno no utiliza &lt;code>package.json&lt;/code>, por lo que centralizamos las dependencias en un archivo &lt;code>deps.ts&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Router&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Context&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/oak/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">v4&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/std@0.194.0/uuid/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">config&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/dotenv/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="33-configurar-el-servidor-serverts">&lt;strong>3.3 Configurar el Servidor (&lt;code>server.ts&lt;/code>)&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Application&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;./deps.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="n">router&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;./routes/userRoutes.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">allowedMethods&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Servidor corriendo en http://localhost:8080&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">await&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">listen&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8080&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="34-definir-el-modelo-de-usuario-modelsusermodelts">&lt;strong>3.4 Definir el Modelo de Usuario (&lt;code>models/userModel.ts&lt;/code>)&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">interface&lt;/span> &lt;span class="n">User&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">email&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="35-crear-el-controlador-controllersusercontrollerts">&lt;strong>3.5 Crear el Controlador (&lt;code>controllers/userController.ts&lt;/code>)&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v4&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../deps.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">User&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../models/userModel.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">let&lt;/span> &lt;span class="n">users&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">User&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">getUsers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">users&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">createUser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">email&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">newUser&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">User&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">v4&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">generate&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">email&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">users&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">newUser&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">201&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">newUser&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="36-definir-las-rutas-routesuserroutests">&lt;strong>3.6 Definir las Rutas (&lt;code>routes/userRoutes.ts&lt;/code>)&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Router&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../deps.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">getUsers&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">createUser&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../controllers/userController.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">router&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Router&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/users&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">getUsers&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">post&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/users&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">createUser&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">default&lt;/span> &lt;span class="n">router&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="4-implementación-de-seguridad-con-middleware">4. Implementación de Seguridad con Middleware&lt;/h2>
&lt;h3 id="41-middleware-de-autenticación-middlewaresauthmiddlewarets">&lt;strong>4.1 Middleware de Autenticación (&lt;code>middlewares/authMiddleware.ts&lt;/code>)&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Context&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../deps.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">authMiddleware&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">next&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Function&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">authHeader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">headers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Authorization&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">authHeader&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">authHeader&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">startsWith&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Bearer &amp;#34;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">401&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Acceso no autorizado&amp;#34;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">next&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="42-aplicación-del-middleware-en-las-rutas">&lt;strong>4.2 Aplicación del Middleware en las Rutas&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">import { authMiddleware } from &amp;#34;../middlewares/authMiddleware.ts&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">router.get(&amp;#34;/users&amp;#34;, authMiddleware, getUsers);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">router.post(&amp;#34;/users&amp;#34;, authMiddleware, createUser);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="5-optimización-y-escalabilidad">5. Optimización y Escalabilidad&lt;/h2>
&lt;h3 id="51-uso-de-caching">&lt;strong>5.1 Uso de Caching&lt;/strong>&lt;/h3>
&lt;p>Deno permite usar Redis para mejorar el rendimiento:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">connect&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/redis/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">redis&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">connect&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">hostname&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;127.0.0.1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">6379&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="52-uso-de-websockets">&lt;strong>5.2 Uso de WebSockets&lt;/strong>&lt;/h3>
&lt;p>Para mejorar la escalabilidad, podemos utilizar WebSockets:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">listener&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Deno&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">listen&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8080&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="n">conn&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">listener&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">handleConn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">conn&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="6-despliegue-de-la-api">6. Despliegue de la API&lt;/h2>
&lt;h3 id="61-uso-de-deno-deploy">&lt;strong>6.1 Uso de Deno Deploy&lt;/strong>&lt;/h3>
&lt;p>Deno ofrece un servicio de despliegue en la nube llamado &lt;strong>Deno Deploy&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">deno deploy --project my-deno-api server.ts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="62-despliegue-en-docker">&lt;strong>6.2 Despliegue en Docker&lt;/strong>&lt;/h3>
&lt;p>Podemos usar Docker para desplegar nuestra API:&lt;/p>
&lt;p>&lt;strong>Dockerfile:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">FROM denoland/deno:latest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WORKDIR /app
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">COPY . .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">CMD [&amp;#34;run&amp;#34;, &amp;#34;--allow-net&amp;#34;, &amp;#34;server.ts&amp;#34;]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Ejecutar el contenedor:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">docker build -t deno-api .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run -p 8080:8080 deno-api
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="7-conclusión">7. Conclusión&lt;/h2>
&lt;p>Diseñar una API escalable con &lt;strong>Deno y TypeScript&lt;/strong> proporciona seguridad, rendimiento y facilidad de despliegue. &lt;strong>Deno&lt;/strong> ofrece un entorno moderno con ventajas significativas sobre Node.js, como la seguridad integrada y el soporte nativo para TypeScript.&lt;/p></description></item><item><title>Angular Universal y SEO: Estrategias avanzadas</title><link>https://cmas.dev/posts/2025-01-08-angular-universal-seo/</link><pubDate>Wed, 08 Jan 2025 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2025-01-08-angular-universal-seo/</guid><description>&lt;p>&lt;strong>Angular Universal&lt;/strong> es una herramienta que permite renderizar aplicaciones &lt;strong>Angular&lt;/strong> en el servidor antes de enviarlas al cliente. Este enfoque mejora notablemente la experiencia del usuario al reducir los tiempos de carga y proporciona a los motores de búsqueda &lt;strong>HTML&lt;/strong> estático para indexar correctamente.&lt;/p>
&lt;h2 id="1-introducción-a-angular-universal">1. Introducción a Angular Universal&lt;/h2>
&lt;h3 id="características-principales-de-angular-universal">Características principales de Angular Universal&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Renderizado del lado del servidor (SSR):&lt;/strong> Convierte aplicaciones Angular en HTML estático renderizado en el servidor.&lt;/li>
&lt;li>&lt;strong>Soporte para prerenderizado:&lt;/strong> Genera HTML estático de páginas seleccionadas para una entrega rápida.&lt;/li>
&lt;li>&lt;strong>Compatibilidad con herramientas modernas de SEO.&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2 id="2-beneficios-de-angular-universal-para-seo">2. Beneficios de Angular Universal para SEO&lt;/h2>
&lt;h3 id="mejora-del-tiempo-hasta-el-primer-byte-ttfb">Mejora del tiempo hasta el primer byte (TTFB)&lt;/h3>
&lt;p>Con Angular Universal, el HTML pre-renderizado se entrega rápidamente al navegador, reduciendo significativamente el tiempo de carga inicial.&lt;/p>
&lt;h3 id="mejor-indexación-por-motores-de-búsqueda">Mejor indexación por motores de búsqueda&lt;/h3>
&lt;p>Los bots de motores de búsqueda pueden procesar directamente el contenido HTML, eliminando los problemas asociados con JavaScript.&lt;/p>
&lt;h3 id="aumento-en-el-rendimiento-de-la-aplicación">Aumento en el rendimiento de la aplicación&lt;/h3>
&lt;p>Angular Universal reduce la carga inicial del navegador, mejorando el rendimiento percibido por los usuarios.&lt;/p>
&lt;h2 id="3-configuración-de-angular-universal">3. Configuración de Angular Universal&lt;/h2>
&lt;h3 id="instalación-y-configuración-inicial">Instalación y configuración inicial&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Instala Angular Universal en tu proyecto:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng add @nguniversal/express-engine
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Angular CLI actualizará los archivos necesarios, incluyendo:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>server.ts:&lt;/strong> Archivo principal para la configuración del servidor.&lt;/li>
&lt;li>&lt;strong>app.server.module.ts:&lt;/strong> Módulo para renderizado del lado del servidor.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Agrega un comando de compilación y ejecución al archivo &lt;code>package.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;#34;scripts&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;build:ssr&amp;#34;: &amp;#34;ng build &amp;amp;&amp;amp; ng run project-name:server&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;serve:ssr&amp;#34;: &amp;#34;node dist/project-name/server/main.js&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="prueba-del-servidor">Prueba del servidor&lt;/h3>
&lt;p>Ejecuta tu aplicación con SSR:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm run serve:ssr
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="4-optimizaciones-avanzadas-de-seo">4. Optimizaciones avanzadas de SEO&lt;/h2>
&lt;h3 id="uso-de-metaetiquetas-dinámicas">Uso de metaetiquetas dinámicas&lt;/h3>
&lt;p>Angular Universal permite actualizar metadatos como el título, la descripción y las etiquetas Open Graph.&lt;/p>
&lt;p>&lt;strong>Ejemplo de implementación:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Component&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">OnInit&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Meta&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Title&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/platform-browser&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">selector&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;app-home&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">templateUrl&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;./home.component.html&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">HomeComponent&lt;/span> &lt;span class="n">implements&lt;/span> &lt;span class="n">OnInit&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">meta&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Meta&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">private&lt;/span> &lt;span class="n">title&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Title&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ngOnInit&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">setTitle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Inicio | Mi Aplicación&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">meta&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">addTags&lt;/span>&lt;span class="p">([&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;description&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">content&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;Bienvenido a nuestra aplicación web&amp;#39;&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">property&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;og:title&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">content&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;Inicio | Mi Aplicación&amp;#39;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="generación-de-sitemaps-automáticos">Generación de sitemaps automáticos&lt;/h3>
&lt;p>Un sitemap ayuda a los motores de búsqueda a navegar por tu sitio web.&lt;/p>
&lt;p>&lt;strong>Ejemplo con Node.js:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">writeFile&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;fs&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">urls&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;/about&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;/products&amp;#39;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">sitemap&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">urls&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="err">`&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="o">&amp;gt;&amp;lt;&lt;/span>&lt;span class="n">loc&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">mi&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">sitio&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">loc&lt;/span>&lt;span class="o">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">writeFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;dist/browser/sitemap.xml&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">`&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">urlset&lt;/span>&lt;span class="o">&amp;gt;$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">sitemap&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">urlset&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">err&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">err&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Error generando sitemap:&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">err&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="manejo-de-enlaces-canónicos">Manejo de enlaces canónicos&lt;/h3>
&lt;p>Evita contenido duplicado configurando enlaces canónicos.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">DOCUMENT&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/common&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Inject&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">Inject&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">DOCUMENT&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">private&lt;/span> &lt;span class="n">doc&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Document&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ngOnInit&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">link&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">HTMLLinkElement&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">doc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">createElement&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;link&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">link&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">setAttribute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;rel&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;canonical&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">link&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">setAttribute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;href&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;https://mi-sitio.com&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">doc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">appendChild&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">link&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="5-estrategias-de-contenido">5. Estrategias de contenido&lt;/h2>
&lt;h3 id="optimización-de-contenido-por-idioma">Optimización de contenido por idioma&lt;/h3>
&lt;p>Configura el soporte multiidioma en Angular usando &lt;code>ngx-translate&lt;/code> o &lt;code>i18n&lt;/code>.&lt;/p>
&lt;h3 id="incorporación-de-microdatos-y-datos-estructurados">Incorporación de microdatos y datos estructurados&lt;/h3>
&lt;p>Usa JSON-LD para mejorar la comprensión de tu contenido por motores de búsqueda:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;script type=&amp;#34;application/ld+json&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;@context&amp;#34;: &amp;#34;https://schema.org&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;@type&amp;#34;: &amp;#34;WebSite&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;url&amp;#34;: &amp;#34;https://mi-sitio.com&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;name&amp;#34;: &amp;#34;Mi Sitio Web&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;potentialAction&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;@type&amp;#34;: &amp;#34;SearchAction&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;target&amp;#34;: &amp;#34;https://mi-sitio.com/buscar?q={search_term_string}&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;query-input&amp;#34;: &amp;#34;required name=search_term_string&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/script&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="6-medición-del-rendimiento-seo">6. Medición del rendimiento SEO&lt;/h2>
&lt;h3 id="herramientas">Herramientas&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Google Lighthouse:&lt;/strong> Evalúa el rendimiento y accesibilidad de tu sitio.&lt;/li>
&lt;li>&lt;strong>Google Search Console:&lt;/strong> Supervisa la indexación y detecta errores.&lt;/li>
&lt;/ul>
&lt;h3 id="seguimiento-de-bots-y-crawlers">Seguimiento de bots y crawlers&lt;/h3>
&lt;p>Configura Google Analytics para registrar actividad de bots:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">if (navigator.userAgent.includes(&amp;#39;Googlebot&amp;#39;)) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.log(&amp;#39;Visita de Googlebot detectada&amp;#39;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="7-casos-prácticos-aplicación-de-una-tienda-en-línea">7. Casos prácticos: Aplicación de una tienda en línea&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Renderizado inicial rápido:&lt;/strong> Implementa Angular Universal para entregar contenido pre-renderizado.&lt;/li>
&lt;li>&lt;strong>Metaetiquetas específicas por producto:&lt;/strong> Actualiza títulos y descripciones en cada página de producto.&lt;/li>
&lt;li>&lt;strong>Sitemap para categorías:&lt;/strong> Genera sitemaps por categorías para facilitar la navegación.&lt;/li>
&lt;/ol>
&lt;h2 id="8-conclusión-y-buenas-prácticas">8. Conclusión y buenas prácticas&lt;/h2>
&lt;p>&lt;strong>Angular Universal&lt;/strong> es una herramienta esencial para optimizar el &lt;strong>SEO&lt;/strong> de aplicaciones &lt;strong>Angular&lt;/strong>. Con estrategias avanzadas como metaetiquetas dinámicas, sitemaps automatizados y datos estructurados, puedes mejorar significativamente tu posicionamiento en motores de búsqueda. Asegúrate de combinar estas técnicas con pruebas constantes para maximizar los resultados.&lt;/p></description></item><item><title>Optimización de rendimiento en Blazor WebAssembly</title><link>https://cmas.dev/posts/2025-01-06-performance-optimization-blazor-webassembly/</link><pubDate>Mon, 06 Jan 2025 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2025-01-06-performance-optimization-blazor-webassembly/</guid><description>&lt;p>&lt;strong>Blazor WebAssembly&lt;/strong> es una tecnología poderosa que permite a los desarrolladores crear aplicaciones web interactivas utilizando &lt;strong>C#&lt;/strong> y &lt;strong>.NET&lt;/strong> en lugar de &lt;strong>JavaScript&lt;/strong>. Sin embargo, debido a las características inherentes de su arquitectura, la optimización del rendimiento puede ser un desafío crítico. En este artículo, exploraremos técnicas, estrategias y mejores prácticas para optimizar el rendimiento en aplicaciones &lt;strong>Blazor WebAssembly&lt;/strong>.&lt;/p>
&lt;h2 id="1-introducción-a-blazor-webassembly">1. Introducción a Blazor WebAssembly&lt;/h2>
&lt;p>&lt;strong>Blazor WebAssembly&lt;/strong> es un modelo de alojamiento de &lt;strong>Blazor&lt;/strong> que ejecuta aplicaciones directamente en el navegador utilizando &lt;strong>WebAssembly&lt;/strong>. Esto permite que las aplicaciones sean ejecutadas en un entorno completamente independiente del servidor, lo que habilita experiencias sin interrupciones.&lt;/p>
&lt;h3 id="ventajas-de-blazor-webassembly">Ventajas de Blazor WebAssembly&lt;/h3>
&lt;ul>
&lt;li>Ejecución en el cliente, reduciendo la carga en el servidor.&lt;/li>
&lt;li>Uso del ecosistema de .NET para compartir lógica entre el cliente y el servidor.&lt;/li>
&lt;li>Potencial de desarrollo sin dependencias directas de JavaScript.&lt;/li>
&lt;/ul>
&lt;h3 id="limitaciones-de-rendimiento">Limitaciones de rendimiento&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Tamaño inicial grande:&lt;/strong> Los archivos necesarios para ejecutar aplicaciones &lt;strong>Blazor WebAssembly&lt;/strong> pueden ser significativamente grandes.&lt;/li>
&lt;li>&lt;strong>Capacidad de cómputo:&lt;/strong> La velocidad de ejecución está limitada por el rendimiento del navegador.&lt;/li>
&lt;li>&lt;strong>Latencia de red:&lt;/strong> Aunque el código se ejecuta en el cliente, el acceso a datos externos sigue dependiendo de la red.&lt;/li>
&lt;/ul>
&lt;h2 id="2-entendiendo-los-problemas-comunes-de-rendimiento">2. Entendiendo los problemas comunes de rendimiento&lt;/h2>
&lt;h3 id="tamaño-del-payload-inicial">Tamaño del payload inicial&lt;/h3>
&lt;p>El tamaño de la aplicación &lt;strong>Blazor WebAssembly&lt;/strong> afecta directamente el tiempo de carga inicial, ya que los navegadores necesitan descargar los binarios de &lt;strong>WebAssembly&lt;/strong> antes de ejecutar la aplicación.&lt;/p>
&lt;h3 id="manejo-de-estado">Manejo de estado&lt;/h3>
&lt;p>Mantener estados complejos puede consumir recursos significativos de memoria y tiempo de procesamiento.&lt;/p>
&lt;h3 id="renderizado-innecesario">Renderizado innecesario&lt;/h3>
&lt;p>El renderizado excesivo de componentes afecta negativamente el rendimiento debido a operaciones DOM innecesarias.&lt;/p>
&lt;h2 id="3-estrategias-generales-de-optimización">3. Estrategias generales de optimización&lt;/h2>
&lt;h3 id="reducción-del-tamaño-de-la-carga-inicial">Reducción del tamaño de la carga inicial&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Habilitar la compresión Brotli:&lt;/strong> Los navegadores modernos admiten &lt;strong>Brotli&lt;/strong>, un algoritmo de compresión que reduce drásticamente el tamaño de los archivos.&lt;/p>
&lt;p>&lt;strong>Configuración en ASP.NET Core:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">app.UseResponseCompression();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Eliminar dependencias innecesarias:&lt;/strong> Revisa y elimina bibliotecas que no estén en uso.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Lazy loading de ensamblados:&lt;/strong> Utiliza la carga diferida para ensamblados específicos.&lt;/p>
&lt;p>&lt;strong>Ejemplo:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@if (assemblyLoaded)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Component /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="uso-eficiente-de-memoria">Uso eficiente de memoria&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Liberar recursos no utilizados:&lt;/strong> Implementa &lt;code>IDisposable&lt;/code> en componentes que utilizan recursos pesados.&lt;/li>
&lt;li>&lt;strong>Evitar grandes objetos en memoria:&lt;/strong> Descompone datos grandes en fragmentos más pequeños.&lt;/li>
&lt;/ol>
&lt;h3 id="minimizar-la-cantidad-de-renderizados">Minimizar la cantidad de renderizados&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Evita operaciones innecesarias en el DOM:&lt;/strong> Utiliza &lt;code>ShouldRender&lt;/code> para controlar el renderizado de componentes.&lt;/p>
&lt;p>&lt;strong>Ejemplo:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">protected override bool ShouldRender()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return StateHasChanged;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Optimiza el enlace de datos:&lt;/strong> Evita vincular propiedades que cambian frecuentemente a componentes de renderizado intensivo.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="4-optimización-del-ciclo-de-vida-de-los-componentes">4. Optimización del ciclo de vida de los componentes&lt;/h2>
&lt;p>El ciclo de vida de los componentes de &lt;strong>Blazor&lt;/strong> ofrece varios puntos para optimizar:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>OnInitializedAsync:&lt;/strong> Carga datos de forma diferida para evitar bloqueos iniciales.&lt;/p>
&lt;p>&lt;strong>Ejemplo:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">protected override async Task OnInitializedAsync()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Data = await LoadDataAsync();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Dispose:&lt;/strong> Libera recursos o desconecta eventos para evitar fugas de memoria.&lt;/p>
&lt;p>&lt;strong>Ejemplo:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">public void Dispose()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> MyEvent -= EventHandler;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="5-optimizar-las-dependencias-externas">5. Optimizar las dependencias externas&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Interoperabilidad con JavaScript:&lt;/strong> Minimiza las llamadas JSInterop y agrúpalas cuando sea posible.&lt;/p>
&lt;p>&lt;strong>Ejemplo:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">function batchedOperation(data) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // Procesa múltiples operaciones en una sola llamada
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Uso de bibliotecas ligeras:&lt;/strong> Prioriza bibliotecas específicamente diseñadas para &lt;strong>WebAssembly&lt;/strong>.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="6-uso-de-almacenamiento-en-caché-y-almacenamiento-local">6. Uso de almacenamiento en caché y almacenamiento local&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Persistencia en el cliente:&lt;/strong> Aprovecha el almacenamiento local para datos que no necesitan ser recargados frecuentemente.&lt;/p>
&lt;p>&lt;strong>Ejemplo:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">localStorage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SetItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;key&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">localStorage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;key&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Service Workers:&lt;/strong> Implementa &lt;strong>PWA&lt;/strong> para optimizar la caché y reducir la dependencia de la red.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="7-ejemplos-prácticos-y-patrones-de-código">7. Ejemplos prácticos y patrones de código&lt;/h2>
&lt;h3 id="ejemplo-1-lazy-loading">Ejemplo 1: Lazy Loading&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private bool assemblyLoaded;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> protected override async Task OnAfterRenderAsync(bool firstRender)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (firstRender)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> assemblyLoaded = await LoadAssemblyAsync(&amp;#34;Library.dll&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> StateHasChanged();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ejemplo-2-optimizar-renderizado-condicional">Ejemplo 2: Optimizar Renderizado Condicional&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private bool isVisible;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> protected override bool ShouldRender()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return isVisible;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="8-herramientas-para-medir-el-rendimiento">8. Herramientas para medir el rendimiento&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Browser Developer Tools:&lt;/strong> Analiza las solicitudes de red y tiempos de renderizado.&lt;/li>
&lt;li>&lt;strong>dotnet-trace:&lt;/strong> Herramienta para trazar el rendimiento de las aplicaciones &lt;strong>.NET&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Blazor Performance Analyzer:&lt;/strong> Un complemento para inspeccionar cuellos de botella en aplicaciones &lt;strong>Blazor&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;h2 id="9-conclusión">9. Conclusión&lt;/h2>
&lt;p>Optimizar el rendimiento en &lt;strong>Blazor WebAssembly&lt;/strong> requiere un enfoque integral que combine estrategias de reducción de tamaño, uso eficiente de recursos y configuraciones inteligentes. Al implementar las técnicas descritas, puedes garantizar que tus aplicaciones sean rápidas, receptivas y eficientes.&lt;/p>
&lt;h2 id="10-recursos-adicionales">10. Recursos adicionales&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/aspnet/core/blazor/">Documentación oficial de Blazor&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://webassembly.org/">Mejoras en WebAssembly&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/dotnet/diagnostics">Herramientas de depuración en .NET&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Usando Blazor para crear Progressive Web Apps (PWA)</title><link>https://cmas.dev/posts/2024-12-24-blazor-pwa/</link><pubDate>Tue, 24 Dec 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-12-24-blazor-pwa/</guid><description>&lt;p>&lt;strong>Blazor&lt;/strong>, el framework moderno basado en &lt;strong>.NET&lt;/strong>, ha demostrado ser una herramienta poderosa para el desarrollo de aplicaciones web interactivas. Combinado con las capacidades de &lt;strong>Progressive Web Apps (PWA)&lt;/strong>, ofrece una forma innovadora de construir aplicaciones que funcionan offline. Se pueden instalar en dispositivos y ofrecen una experiencia similar a las aplicaciones nativas. En este artículo, exploraremos cómo usar &lt;strong>Blazor&lt;/strong> para crear &lt;strong>PWAs&lt;/strong>, centrándonos en las nuevas capacidades introducidas con &lt;strong>.NET 9&lt;/strong>, buenas prácticas y ejemplos detallados.&lt;/p>
&lt;h2 id="qué-es-una-progressive-web-app-pwa">¿Qué es una Progressive Web App (PWA)?&lt;/h2>
&lt;p>Las &lt;strong>PWAs&lt;/strong> son aplicaciones web que combinan las mejores características de las aplicaciones web y las nativas. Algunas de sus características clave incluyen:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Capacidad offline&lt;/strong>: Funcionan sin conexión a internet mediante el uso de &lt;em>Service Workers&lt;/em>.&lt;/li>
&lt;li>&lt;strong>Instalables&lt;/strong>: Se pueden agregar a la pantalla de inicio de un dispositivo.&lt;/li>
&lt;li>&lt;strong>Rápidas y responsivas&lt;/strong>: Optimizadas para ofrecer un rendimiento similar al de las aplicaciones nativas.&lt;/li>
&lt;li>&lt;strong>Seguras&lt;/strong>: Utilizan &lt;em>HTTPS&lt;/em> para garantizar conexiones seguras.&lt;/li>
&lt;/ol>
&lt;h2 id="por-qué-usar-blazor-para-pwas">¿Por qué usar Blazor para PWAs?&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Reutilización de código&lt;/strong>: Con &lt;strong>Blazor&lt;/strong>, puedes usar &lt;strong>C#&lt;/strong> y &lt;strong>.NET&lt;/strong> tanto en el cliente como en el servidor.&lt;/li>
&lt;li>&lt;strong>Ecosistema robusto&lt;/strong>: Accede a las bibliotecas de .&lt;strong>NET&lt;/strong> y herramientas modernas.&lt;/li>
&lt;li>&lt;strong>Soporte para WebAssembly&lt;/strong>: &lt;strong>Blazor WebAssembly&lt;/strong> permite ejecutar aplicaciones completas en el navegador.&lt;/li>
&lt;li>&lt;strong>Integración nativa de PWA&lt;/strong>: Con configuraciones simples, &lt;strong>Blazor&lt;/strong> puede transformar una aplicación en una &lt;strong>PWA&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;h2 id="configuración-inicial">Configuración inicial&lt;/h2>
&lt;h3 id="requisitos-previos">Requisitos previos&lt;/h3>
&lt;ol>
&lt;li>Tener instalado &lt;strong>.NET 9 SDK&lt;/strong>:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Editor de código, como &lt;strong>Visual Studio 2022&lt;/strong> o &lt;strong>Visual Studio Code&lt;/strong>.&lt;/li>
&lt;li>Navegador moderno compatible con &lt;strong>PWAs&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;h3 id="crear-un-proyecto-blazor-webassembly">Crear un proyecto Blazor WebAssembly&lt;/h3>
&lt;ol>
&lt;li>Ejecutar el comando para crear un proyecto &lt;strong>PWA&lt;/strong>:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet new blazorwasm -o BlazorPwaApp --pwa
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Navegar al directorio del proyecto:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd BlazorPwaApp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Ejecutar la aplicación:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>Al usar la opción &lt;code>--pwa&lt;/code>, el proyecto incluye configuraciones predeterminadas para convertirlo en una &lt;strong>PWA&lt;/strong>.&lt;/p>
&lt;h2 id="entender-los-archivos-clave-de-una-pwa">Entender los archivos clave de una PWA&lt;/h2>
&lt;h3 id="manifestjson">&lt;code>manifest.json&lt;/code>&lt;/h3>
&lt;p>El archivo &lt;code>manifest.json&lt;/code> proporciona metadatos sobre la aplicación, como el nombre, íconos y configuraciones de inicio.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;short_name&amp;#34;: &amp;#34;BlazorPWA&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;name&amp;#34;: &amp;#34;Blazor Progressive Web App&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;start_url&amp;#34;: &amp;#34;/&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;display&amp;#34;: &amp;#34;standalone&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;background_color&amp;#34;: &amp;#34;#ffffff&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;theme_color&amp;#34;: &amp;#34;#0078D7&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;icons&amp;#34;: [
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;src&amp;#34;: &amp;#34;icons/icon-192.png&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;sizes&amp;#34;: &amp;#34;192x192&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;type&amp;#34;: &amp;#34;image/png&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;src&amp;#34;: &amp;#34;icons/icon-512.png&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;sizes&amp;#34;: &amp;#34;512x512&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;type&amp;#34;: &amp;#34;image/png&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="service-worker">Service Worker&lt;/h3>
&lt;p>El &lt;em>Service Worker&lt;/em> gestiona el almacenamiento en caché y las funcionalidades offline. En &lt;strong>Blazor&lt;/strong>, el archivo predeterminado es &lt;code>service-worker.published.js&lt;/code>.&lt;/p>
&lt;h4 id="ejemplo-de-manejo-de-caché">Ejemplo de manejo de caché&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">self.addEventListener(&amp;#39;install&amp;#39;, event =&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> event.waitUntil(
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> caches.open(&amp;#39;blazor-cache&amp;#39;).then(cache =&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return cache.addAll([
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;/&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;index.html&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;manifest.json&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;_framework/blazor.webassembly.js&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ]);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> })
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> );
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">});
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">self.addEventListener(&amp;#39;fetch&amp;#39;, event =&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> event.respondWith(
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> caches.match(event.request).then(response =&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return response || fetch(event.request);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> })
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> );
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="crear-una-experiencia-offline">Crear una experiencia offline&lt;/h2>
&lt;h3 id="habilitar-funcionalidad-offline">Habilitar funcionalidad offline&lt;/h3>
&lt;ol>
&lt;li>Actualizar el &lt;em>Service Worker&lt;/em> para gestionar recursos adicionales.&lt;/li>
&lt;li>Configurar rutas en &lt;code>manifest.json&lt;/code> y asegurarse de incluir recursos clave.&lt;/li>
&lt;/ol>
&lt;h4 id="ejemplo">Ejemplo&lt;/h4>
&lt;p>Agrega un mensaje personalizado para los usuarios sin conexión:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@if (isOffline)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;p&amp;gt;No tienes conexión a internet. Algunas funcionalidades pueden no estar disponibles.&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private bool isOffline;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> protected override void OnInitialized()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> isOffline = !navigator.onLine;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> window.addEventListener(&amp;#39;online&amp;#39;, () =&amp;gt; isOffline = false);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> window.addEventListener(&amp;#39;offline&amp;#39;, () =&amp;gt; isOffline = true);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="buenas-prácticas-para-pwas-con-blazor">Buenas prácticas para PWAs con Blazor&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Optimizar recursos&lt;/strong>:
&lt;ul>
&lt;li>Usa herramientas como &lt;code>dotnet publish&lt;/code> con opciones para reducir el tamaño de los archivos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Usar HTTPS&lt;/strong>:
&lt;ul>
&lt;li>Las &lt;strong>PWAs&lt;/strong> requieren &lt;em>HTTPS&lt;/em> para funcionar correctamente.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Pruebas regulares&lt;/strong>:
&lt;ul>
&lt;li>Prueba la aplicación en diferentes navegadores y dispositivos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Actualizar el Service Worker&lt;/strong>:
&lt;ul>
&lt;li>Implementa una estrategia para actualizar el &lt;em>Service Worker&lt;/em> cuando haya cambios significativos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Diseño responsivo&lt;/strong>:
&lt;ul>
&lt;li>Asegúrate de que la interfaz funcione en diferentes tamaños de pantalla.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="ventajas-y-limitaciones-de-blazor-para-pwas">Ventajas y limitaciones de Blazor para PWAs&lt;/h2>
&lt;h3 id="ventajas">Ventajas&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Reutilización de código&lt;/strong> entre plataformas.&lt;/li>
&lt;li>&lt;strong>Integración nativa con .NET&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Compatibilidad con WebAssembly&lt;/strong> para un rendimiento eficiente en el cliente.&lt;/li>
&lt;/ol>
&lt;h3 id="limitaciones">Limitaciones&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Tamaño inicial&lt;/strong> alto en &lt;strong>Blazor WebAssembly&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Dependencia del ecosistema .NET&lt;/strong> para ciertos escenarios.&lt;/li>
&lt;li>&lt;strong>Curva de aprendizaje&lt;/strong> para desarrolladores nuevos en &lt;strong>.NET&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Combinar las capacidades de &lt;strong>Blazor&lt;/strong> y &lt;strong>PWAs&lt;/strong> permite a los desarrolladores crear aplicaciones modernas y escalables que funcionan offline, se pueden instalar y ofrecen una experiencia de usuario mejorada. Aunque existen algunas limitaciones, las ventajas de usar &lt;strong>Blazor&lt;/strong> con &lt;strong>PWA&lt;/strong> superan ampliamente los desafíos, especialmente para equipos que ya utilizan &lt;strong>.NET&lt;/strong> en su flujo de desarrollo. ¡Explora las posibilidades de &lt;strong>Blazor&lt;/strong> para &lt;strong>PWAs&lt;/strong> y lleva tus aplicaciones web al siguiente nivel!&lt;/p></description></item><item><title>Blazor y Microsoft Entra ID: Implementación de autenticación</title><link>https://cmas.dev/posts/2024-12-18-blazor-and-microsoft-entra/</link><pubDate>Wed, 18 Dec 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-12-18-blazor-and-microsoft-entra/</guid><description>&lt;p>La integración de &lt;strong>Microsoft Entra ID (anteriormente Azure AD)&lt;/strong> con &lt;strong>Blazor&lt;/strong> permite implementar autenticación segura en aplicaciones web y mejorar la gestión de identidades. En este artículo, exploraremos cómo integrar &lt;strong>Microsoft Entra ID&lt;/strong> en una aplicación &lt;strong>Blazor&lt;/strong>, proporcionando un flujo de autenticación robusto y seguro.&lt;/p>
&lt;h2 id="1-introducción-a-microsoft-entra-id-y-blazor">1. Introducción a Microsoft Entra ID y Blazor&lt;/h2>
&lt;h3 id="qué-es-microsoft-entra-id">&lt;strong>¿Qué es Microsoft Entra ID?&lt;/strong>&lt;/h3>
&lt;p>Microsoft Entra ID es una plataforma de administración de identidad basada en la nube que permite el inicio de sesión único (SSO), autenticación multifactor (MFA) y gestión de usuarios y roles en aplicaciones corporativas.&lt;/p>
&lt;h3 id="por-qué-usar-blazor-con-entra-id">&lt;strong>¿Por qué usar Blazor con Entra ID?&lt;/strong>&lt;/h3>
&lt;p>Blazor es un framework de desarrollo web de Microsoft basado en C# y Razor, que permite construir aplicaciones interactivas sin depender de JavaScript. Integrarlo con Microsoft Entra ID ofrece beneficios como:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Autenticación segura basada en estándares OAuth 2.0 y OpenID Connect&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>SSO (Inicio de Sesión Único) en entornos empresariales&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Compatibilidad con MFA (Autenticación Multifactor)&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Gestión de permisos y roles con Microsoft Graph API&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="2-configuración-de-microsoft-entra-id">2. Configuración de Microsoft Entra ID&lt;/h2>
&lt;p>Antes de integrar Entra ID con Blazor, necesitamos configurar una aplicación en el portal de Azure.&lt;/p>
&lt;h3 id="paso-1-crear-una-aplicación-en-microsoft-entra-id">&lt;strong>Paso 1: Crear una aplicación en Microsoft Entra ID&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>Accede a &lt;a href="https://portal.azure.com/">Azure Portal&lt;/a>.&lt;/li>
&lt;li>Dirígete a &lt;strong>Microsoft Entra ID&lt;/strong> &amp;gt; &lt;strong>App Registrations&lt;/strong>.&lt;/li>
&lt;li>Haz clic en &lt;strong>New Registration&lt;/strong> y configura:
&lt;ul>
&lt;li>&lt;strong>Nombre&lt;/strong>: &lt;code>BlazorAuthApp&lt;/code>&lt;/li>
&lt;li>&lt;strong>Tipo de cuenta&lt;/strong>: &amp;ldquo;Cualquier organización de directorios&amp;rdquo; o &amp;ldquo;Cuentas personales y organizativas&amp;rdquo;.&lt;/li>
&lt;li>&lt;strong>Redirección&lt;/strong>: &lt;code>https://localhost:5001/authentication/login-callback&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Guarda los cambios y copia:
&lt;ul>
&lt;li>&lt;strong>Application (client) ID&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Directory (tenant) ID&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="paso-2-configurar-permisos-de-api">&lt;strong>Paso 2: Configurar permisos de API&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>En la sección &lt;strong>API Permissions&lt;/strong>, añade permisos para &lt;code>User.Read&lt;/code> (Microsoft Graph).&lt;/li>
&lt;li>&lt;strong>Grant Admin Consent&lt;/strong> para aplicar los permisos a todos los usuarios.&lt;/li>
&lt;/ol>
&lt;h3 id="paso-3-crear-un-cliente-secreto">&lt;strong>Paso 3: Crear un Cliente Secreto&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>Ve a &lt;strong>Certificates &amp;amp; Secrets&lt;/strong>.&lt;/li>
&lt;li>Genera un nuevo secreto y copia el valor.&lt;/li>
&lt;/ol>
&lt;h2 id="3-configuración-de-blazor-con-entra-id">3. Configuración de Blazor con Entra ID&lt;/h2>
&lt;p>Ahora que tenemos configurada la aplicación en Entra ID, podemos integrar la autenticación en Blazor.&lt;/p>
&lt;h3 id="paso-1-crear-un-proyecto-blazor-webassembly">&lt;strong>Paso 1: Crear un Proyecto Blazor WebAssembly&lt;/strong>&lt;/h3>
&lt;p>Ejecuta el siguiente comando en la terminal:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> dotnet new blazorwasm -o BlazorAuthApp --auth IndividualB2C
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cd BlazorAuthApp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-2-instalar-paquetes-necesarios">&lt;strong>Paso 2: Instalar Paquetes Necesarios&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">dotnet&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="kn">package&lt;/span> &lt;span class="nx">Microsoft&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">AspNetCore&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Authentication&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">AzureADB2C&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UI&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-3-configurar-appsettingsjson">&lt;strong>Paso 3: Configurar &lt;code>appsettings.json&lt;/code>&lt;/strong>&lt;/h3>
&lt;p>Edita el archivo &lt;code>appsettings.json&lt;/code> con la información de Entra ID:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;AzureAd&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;Instance&amp;#34;: &amp;#34;https://login.microsoftonline.com/&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;Domain&amp;#34;: &amp;#34;yourdomain.onmicrosoft.com&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;TenantId&amp;#34;: &amp;#34;your-tenant-id&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;ClientId&amp;#34;: &amp;#34;your-client-id&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;CallbackPath&amp;#34;: &amp;#34;/authentication/login-callback&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;SignedOutCallbackPath&amp;#34;: &amp;#34;/authentication/logout-callback&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-4-configurar-autenticación-en-programcs">&lt;strong>Paso 4: Configurar Autenticación en &lt;code>Program.cs&lt;/code>&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AspNetCore&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Authentication&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AspNetCore&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Authentication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">OpenIdConnect&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AspNetCore&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Authorization&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AspNetCore&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Builder&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AspNetCore&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Components&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Web&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AspNetCore&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Components&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">WebAssembly&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Hosting&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AspNetCore&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Http&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Extensions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DependencyInjection&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Extensions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Hosting&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">builder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">WebAssemblyHostBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CreateDefault&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddAuthentication&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">options&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DefaultScheme&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Cookies&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DefaultChallengeScheme&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">OpenIdConnectDefaults&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AuthenticationScheme&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">.&lt;/span>&lt;span class="n">AddOpenIdConnect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">OpenIdConnectDefaults&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AuthenticationScheme&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">options&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Authority&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;https://login.microsoftonline.com/{your-tenant-id}&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ClientId&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;your-client-id&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ResponseType&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;code&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SaveTokens&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddAuthorizationCore&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">await&lt;/span> &lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Build&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">RunAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="4-protección-de-rutas-y-gestión-de-roles">4. Protección de Rutas y Gestión de Roles&lt;/h2>
&lt;h3 id="paso-1-crear-una-página-protegida">&lt;strong>Paso 1: Crear una Página Protegida&lt;/strong>&lt;/h3>
&lt;p>Modifica &lt;code>Pages/Protected.razor&lt;/code> para permitir el acceso solo a usuarios autenticados:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@page &amp;#34;/protected&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@using Microsoft.AspNetCore.Components.Authorization
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;AuthorizeView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Authorized&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;h3&amp;gt;Bienvenido, usuario autenticado&amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;button @onclick=&amp;#34;Logout&amp;#34;&amp;gt;Cerrar Sesión&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Authorized&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;NotAuthorized&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;h3&amp;gt;Acceso Restringido&amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/NotAuthorized&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/AuthorizeView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Inject] NavigationManager Navigation { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private async Task Logout()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Navigation.NavigateTo(&amp;#34;authentication/logout&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-2-configurar-el-routeview-en-apprazor">&lt;strong>Paso 2: Configurar el &lt;code>RouteView&lt;/code> en &lt;code>App.razor&lt;/code>&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;CascadingAuthenticationState&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;AuthorizeRouteView RouteData=&amp;#34;@routeData&amp;#34; DefaultLayout=&amp;#34;typeof(MainLayout)&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/CascadingAuthenticationState&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-3-agregar-un-componente-de-login">&lt;strong>Paso 3: Agregar un Componente de Login&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;AuthorizeView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Authorized&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;button @onclick=&amp;#34;Logout&amp;#34;&amp;gt;Cerrar Sesión&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Authorized&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;NotAuthorized&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;button @onclick=&amp;#34;Login&amp;#34;&amp;gt;Iniciar Sesión&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/NotAuthorized&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/AuthorizeView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private void Login() =&amp;gt; Navigation.NavigateTo(&amp;#34;authentication/login&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private void Logout() =&amp;gt; Navigation.NavigateTo(&amp;#34;authentication/logout&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="5-conclusión">5. Conclusión&lt;/h2>
&lt;p>La integración de &lt;strong>Blazor con Microsoft Entra ID&lt;/strong> proporciona una solución robusta para la autenticación de usuarios, garantizando seguridad y facilidad de administración. Gracias a OpenID Connect y OAuth 2.0, podemos ofrecer inicio de sesión seguro y control de acceso basado en roles.&lt;/p>
&lt;h3 id="resumen">&lt;strong>Resumen:&lt;/strong>&lt;/h3>
&lt;p>✅ Configuración de &lt;strong>Microsoft Entra ID&lt;/strong> en Azure.
✅ Integración de &lt;strong>Blazor WebAssembly&lt;/strong> con Entra ID.
✅ Protección de rutas y gestión de autenticación.
✅ Implementación de un flujo de inicio y cierre de sesión seguro.&lt;/p>
&lt;p>¡Ahora puedes implementar autenticación avanzada en tus aplicaciones Blazor con Entra ID! 🚀&lt;/p></description></item><item><title>Seguridad en Angular: Roles y autenticación avanzada</title><link>https://cmas.dev/posts/2024-12-11-angular-security/</link><pubDate>Wed, 11 Dec 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-12-11-angular-security/</guid><description>&lt;p>La seguridad en Angular es un aspecto fundamental para cualquier aplicación web moderna. Implementar un sistema de autenticación robusto y un control de acceso basado en roles garantiza la integridad y protección de los datos. En este artículo, exploraremos estrategias avanzadas de autenticación y gestión de roles en Angular con ejemplos prácticos.&lt;/p>
&lt;h2 id="1-introducción-a-la-seguridad-en-angular">1. Introducción a la Seguridad en Angular&lt;/h2>
&lt;p>Las aplicaciones web requieren mecanismos de seguridad efectivos para proteger información sensible y garantizar que los usuarios solo accedan a los recursos que les corresponden. En Angular, se pueden implementar diversas estrategias de seguridad, tales como:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Autenticación&lt;/strong>: Verificación de identidad de los usuarios.&lt;/li>
&lt;li>&lt;strong>Autorización basada en roles&lt;/strong>: Control de acceso según privilegios de usuario.&lt;/li>
&lt;li>&lt;strong>Protección de rutas&lt;/strong>: Restricción de acceso a ciertas secciones de la aplicación.&lt;/li>
&lt;li>&lt;strong>Manejo de tokens (JWT)&lt;/strong>: Uso de tokens seguros para gestionar sesiones.&lt;/li>
&lt;/ul>
&lt;h2 id="2-implementación-de-autenticación-en-angular">2. Implementación de Autenticación en Angular&lt;/h2>
&lt;h3 id="21-configuración-del-proyecto">2.1 Configuración del Proyecto&lt;/h3>
&lt;p>Primero, creamos un nuevo proyecto Angular e instalamos las dependencias necesarias:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng new angular-security
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd angular-security
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm install @angular/fire firebase jsonwebtoken
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="22-creación-del-servicio-de-autenticación">2.2 Creación del Servicio de Autenticación&lt;/h3>
&lt;p>El servicio &lt;code>AuthService&lt;/code> manejará el registro, inicio de sesión y cierre de sesión de usuarios.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Injectable&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Router&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/router&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">BehaviorSubject&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;rxjs&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Injectable&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">providedIn&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">AuthService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">authState&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">BehaviorSubject&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">boolean&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">false&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">userRole&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">BehaviorSubject&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">router&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Router&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">login&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">email&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Simulación&lt;/span> &lt;span class="n">de&lt;/span> &lt;span class="n">autenticación&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">email&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;admin@demo.com&amp;#39;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">password&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;password&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">localStorage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">setItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;token&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;fake-jwt-token&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">localStorage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">setItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;role&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;admin&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">authState&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">true&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">userRole&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;admin&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">navigate&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s1">&amp;#39;/dashboard&amp;#39;&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logout&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">localStorage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">removeItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;token&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">localStorage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">removeItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;role&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">authState&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">false&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">userRole&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">navigate&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s1">&amp;#39;/login&amp;#39;&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">isAuthenticated&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">boolean&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">!!&lt;/span>&lt;span class="n">localStorage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;token&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">getRole&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">localStorage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;role&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="3-protección-de-rutas-en-angular">3. Protección de Rutas en Angular&lt;/h2>
&lt;p>Angular proporciona &lt;strong>route guards&lt;/strong> para restringir el acceso a ciertas rutas en función de la autenticación del usuario.&lt;/p>
&lt;h3 id="31-implementación-de-authguard">3.1 Implementación de &lt;code>AuthGuard&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Injectable&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">CanActivate&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Router&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/router&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">AuthService&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./auth.service&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Injectable&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">providedIn&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">AuthGuard&lt;/span> &lt;span class="n">implements&lt;/span> &lt;span class="n">CanActivate&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">authService&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">AuthService&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">private&lt;/span> &lt;span class="n">router&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Router&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">canActivate&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">boolean&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">authService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">isAuthenticated&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">navigate&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s1">&amp;#39;/login&amp;#39;&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="32-configuración-de-las-rutas-protegidas">3.2 Configuración de las Rutas Protegidas&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">NgModule&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">RouterModule&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Routes&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/router&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">DashboardComponent&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./dashboard/dashboard.component&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">LoginComponent&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./login/login.component&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">AuthGuard&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./auth.guard&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">routes&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Routes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;dashboard&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">component&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">DashboardComponent&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">canActivate&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">AuthGuard&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;login&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">component&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">LoginComponent&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;**&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">redirectTo&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;login&amp;#39;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">NgModule&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">imports&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">RouterModule&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">forRoot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="p">)],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">exports&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">RouterModule&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">AppRoutingModule&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="4-gestión-de-roles-en-angular">4. Gestión de Roles en Angular&lt;/h2>
&lt;p>Para restringir accesos según el rol del usuario, utilizamos un &lt;strong>Role Guard&lt;/strong>.&lt;/p>
&lt;h3 id="41-implementación-de-roleguard">4.1 Implementación de &lt;code>RoleGuard&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Injectable&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">CanActivate&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Router&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/router&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">AuthService&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./auth.service&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Injectable&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">providedIn&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">RoleGuard&lt;/span> &lt;span class="n">implements&lt;/span> &lt;span class="n">CanActivate&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">authService&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">AuthService&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">private&lt;/span> &lt;span class="n">router&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Router&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">canActivate&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">boolean&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">role&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">authService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getRole&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">role&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;admin&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">navigate&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s1">&amp;#39;/login&amp;#39;&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="42-aplicación-del-roleguard-en-rutas">4.2 Aplicación del &lt;code>RoleGuard&lt;/code> en Rutas&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">routes&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Routes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;admin&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">component&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">AdminComponent&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">canActivate&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">RoleGuard&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="5-implementación-de-json-web-tokens-jwt">5. Implementación de JSON Web Tokens (JWT)&lt;/h2>
&lt;p>Para mejorar la seguridad, se recomienda el uso de &lt;strong>JWT&lt;/strong> para gestionar sesiones.&lt;/p>
&lt;h3 id="51-generación-de-un-jwt-en-el-servidor-nodejs">5.1 Generación de un JWT en el Servidor (Node.js)&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">jwt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;jsonwebtoken&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">function&lt;/span> &lt;span class="n">generateToken&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">jwt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sign&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">email&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">email&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">role&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">role&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="s1">&amp;#39;secreto&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">expiresIn&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;1h&amp;#39;&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="52-validación-del-jwt-en-el-cliente-angular">5.2 Validación del JWT en el Cliente (Angular)&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">HttpClient&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">HttpHeaders&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/common/http&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">headers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">HttpHeaders&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="s1">&amp;#39;Authorization&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="err">`&lt;/span>&lt;span class="n">Bearer&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">localStorage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;token&amp;#39;&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="err">`&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;https://api.protegida.com/data&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">headers&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="6-conclusión">6. Conclusión&lt;/h2>
&lt;p>Implementar autenticación avanzada en Angular es esencial para proteger los datos y restringir el acceso de los usuarios según sus roles. Con &lt;strong>route guards, RoleGuard y JWT&lt;/strong>, podemos garantizar un sistema seguro y escalable.&lt;/p>
&lt;p>Al aplicar estas prácticas, se fortalece la seguridad de las aplicaciones Angular, proporcionando un entorno confiable para los usuarios.&lt;/p>
&lt;p>&lt;strong>Resumen:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>✅ Implementación de autenticación en Angular.&lt;/li>
&lt;li>✅ Protección de rutas con &lt;code>AuthGuard&lt;/code>.&lt;/li>
&lt;li>✅ Gestión de roles con &lt;code>RoleGuard&lt;/code>.&lt;/li>
&lt;li>✅ Uso de JSON Web Tokens (JWT) para mayor seguridad.&lt;/li>
&lt;/ul>
&lt;p>¡Con estas estrategias, puedes mejorar significativamente la seguridad de tus aplicaciones Angular!&lt;/p></description></item><item><title>Comparativa de frameworks: Angular, React y Vue en 2024</title><link>https://cmas.dev/posts/2024-12-04-frameworks-comparatives/</link><pubDate>Wed, 04 Dec 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-12-04-frameworks-comparatives/</guid><description>&lt;p>El desarrollo web ha evolucionado significativamente en los últimos años, y tres de los frameworks más populares continúan liderando el mercado: &lt;strong>Angular, React y Vue&lt;/strong>. En este artículo, compararemos estos frameworks en términos de rendimiento, facilidad de uso, casos de uso ideales y comunidad en 2024.&lt;/p>
&lt;h2 id="1-introducción-a-angular-react-y-vue">1. Introducción a Angular, React y Vue&lt;/h2>
&lt;p>Antes de profundizar en la comparativa, veamos una breve descripción de cada framework.&lt;/p>
&lt;h3 id="angular">&lt;strong>Angular&lt;/strong>&lt;/h3>
&lt;p>Angular es un framework desarrollado por Google basado en TypeScript. Es una solución completa para el desarrollo de aplicaciones web robustas y escalables.&lt;/p>
&lt;p>&lt;strong>Características principales:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Basado en TypeScript.&lt;/li>
&lt;li>Arquitectura basada en componentes y módulos.&lt;/li>
&lt;li>Soporte oficial para PWA y SSR.&lt;/li>
&lt;li>Enfoque de programación reactiva con RxJS.&lt;/li>
&lt;li>CLI potente para automatizar tareas.&lt;/li>
&lt;/ul>
&lt;h3 id="react">&lt;strong>React&lt;/strong>&lt;/h3>
&lt;p>React, desarrollado por Meta (Facebook), es una biblioteca enfocada en la construcción de interfaces de usuario reactivas y reutilizables.&lt;/p>
&lt;p>&lt;strong>Características principales:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Basado en JavaScript/TypeScript.&lt;/li>
&lt;li>Uso de JSX para la creación de interfaces.&lt;/li>
&lt;li>Unidireccionalidad en el flujo de datos con Redux o Context API.&lt;/li>
&lt;li>Gran ecosistema de herramientas como Next.js.&lt;/li>
&lt;li>Flexibilidad para integrarse con otras tecnologías.&lt;/li>
&lt;/ul>
&lt;h3 id="vue">&lt;strong>Vue&lt;/strong>&lt;/h3>
&lt;p>Vue es un framework progresivo diseñado para ser accesible y flexible, ideal para aplicaciones de tamaño mediano y pequeño.&lt;/p>
&lt;p>&lt;strong>Características principales:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Basado en JavaScript/TypeScript.&lt;/li>
&lt;li>Plantillas declarativas y sintaxis intuitiva.&lt;/li>
&lt;li>Reactividad eficiente sin necesidad de bibliotecas adicionales.&lt;/li>
&lt;li>Soporte para PWA y SSR con Nuxt.js.&lt;/li>
&lt;li>Ecosistema modular y adaptable.&lt;/li>
&lt;/ul>
&lt;h2 id="2-comparación-técnica">2. Comparación Técnica&lt;/h2>
&lt;h3 id="21-rendimiento">&lt;strong>2.1 Rendimiento&lt;/strong>&lt;/h3>
&lt;p>El rendimiento de un framework depende de múltiples factores como el tamaño del bundle, el tiempo de renderizado y la eficiencia del DOM virtual.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Característica&lt;/th>
&lt;th>Angular&lt;/th>
&lt;th>React&lt;/th>
&lt;th>Vue&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Tamaño del Bundle&lt;/td>
&lt;td>Mayor (~120KB)&lt;/td>
&lt;td>Medio (~40KB)&lt;/td>
&lt;td>Menor (~30KB)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Virtual DOM&lt;/td>
&lt;td>No&lt;/td>
&lt;td>Sí&lt;/td>
&lt;td>Sí&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SSR (Server-Side)&lt;/td>
&lt;td>Sí (Angular Universal)&lt;/td>
&lt;td>Sí (Next.js)&lt;/td>
&lt;td>Sí (Nuxt.js)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tiempo de Render&lt;/td>
&lt;td>Medio&lt;/td>
&lt;td>Rápido&lt;/td>
&lt;td>Muy rápido&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="22-facilidad-de-aprendizaje">&lt;strong>2.2 Facilidad de Aprendizaje&lt;/strong>&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Aspecto&lt;/th>
&lt;th>Angular&lt;/th>
&lt;th>React&lt;/th>
&lt;th>Vue&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Complejidad&lt;/td>
&lt;td>Alta&lt;/td>
&lt;td>Media&lt;/td>
&lt;td>Baja&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Documentación&lt;/td>
&lt;td>Completa&lt;/td>
&lt;td>Excelente&lt;/td>
&lt;td>Muy buena&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Configuración&lt;/td>
&lt;td>Rígida&lt;/td>
&lt;td>Flexible&lt;/td>
&lt;td>Flexible&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Escalabilidad&lt;/td>
&lt;td>Alta&lt;/td>
&lt;td>Alta&lt;/td>
&lt;td>Media&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="23-popularidad-y-comunidad">&lt;strong>2.3 Popularidad y Comunidad&lt;/strong>&lt;/h3>
&lt;p>El tamaño de la comunidad y la cantidad de recursos disponibles son factores clave para elegir un framework.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Aspecto&lt;/th>
&lt;th>Angular&lt;/th>
&lt;th>React&lt;/th>
&lt;th>Vue&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>GitHub Stars&lt;/td>
&lt;td>90k+&lt;/td>
&lt;td>200k+&lt;/td>
&lt;td>210k+&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Empresas que usan&lt;/td>
&lt;td>Google, Microsoft&lt;/td>
&lt;td>Meta, Airbnb&lt;/td>
&lt;td>Alibaba, Xiaomi&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ecosistema&lt;/td>
&lt;td>Amplio&lt;/td>
&lt;td>Enorme&lt;/td>
&lt;td>Creciendo&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="3-casos-de-uso">3. Casos de Uso&lt;/h2>
&lt;h3 id="cuándo-elegir-angular">&lt;strong>¿Cuándo elegir Angular?&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>Aplicaciones empresariales de gran escala.&lt;/li>
&lt;li>Proyectos que requieren una arquitectura estructurada y modular.&lt;/li>
&lt;li>Equipos grandes que prefieren convenciones estrictas.&lt;/li>
&lt;/ul>
&lt;h3 id="cuándo-elegir-react">&lt;strong>¿Cuándo elegir React?&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>Aplicaciones de alto rendimiento y dinámicas.&lt;/li>
&lt;li>Proyectos que necesitan SSR con Next.js.&lt;/li>
&lt;li>Equipos que prefieren una arquitectura flexible y componible.&lt;/li>
&lt;/ul>
&lt;h3 id="cuándo-elegir-vue">&lt;strong>¿Cuándo elegir Vue?&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>Aplicaciones de mediana o pequeña escala.&lt;/li>
&lt;li>Proyectos con requerimientos de reactividad rápida.&lt;/li>
&lt;li>Equipos pequeños o desarrolladores individuales.&lt;/li>
&lt;/ul>
&lt;h2 id="4-ejemplos-de-código">4. Ejemplos de Código&lt;/h2>
&lt;h3 id="angular-componente-básico">&lt;strong>Angular: Componente Básico&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Component&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">selector&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;app-ejemplo&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">template&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;h1&amp;gt;{{ mensaje }}&amp;lt;/h1&amp;gt;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">EjemploComponent&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mensaje&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;Hola desde Angular&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="react-componente-funcional">&lt;strong>React: Componente Funcional&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="n">React&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">function&lt;/span> &lt;span class="n">Ejemplo&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">h1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Hola&lt;/span> &lt;span class="n">desde&lt;/span> &lt;span class="n">React&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">h1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">default&lt;/span> &lt;span class="n">Ejemplo&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="vue-componente-sencillo">&lt;strong>Vue: Componente Sencillo&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">h1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="n">mensaje&lt;/span> &lt;span class="p">}}&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">h1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">mensaje&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;Hola desde Vue&amp;#39;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="5-conclusión-cuál-elegir-en-2024">5. Conclusión: ¿Cuál Elegir en 2024?&lt;/h2>
&lt;p>La elección entre Angular, React y Vue depende del tipo de proyecto y las necesidades del equipo:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Si necesitas un framework sólido para aplicaciones empresariales:&lt;/strong> Angular es la mejor opción.&lt;/li>
&lt;li>&lt;strong>Si buscas flexibilidad y escalabilidad con SSR:&lt;/strong> React es la alternativa ideal.&lt;/li>
&lt;li>&lt;strong>Si prefieres simplicidad y reactividad rápida:&lt;/strong> Vue es una excelente elección.&lt;/li>
&lt;/ul>
&lt;p>Cualquiera de estos frameworks es una gran elección en 2024, y la decisión final debe basarse en los requisitos específicos del proyecto y la experiencia del equipo.&lt;/p>
&lt;h3 id="resumen-final">&lt;strong>Resumen Final&lt;/strong>&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Característica&lt;/th>
&lt;th>Angular&lt;/th>
&lt;th>React&lt;/th>
&lt;th>Vue&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Curva de Aprendizaje&lt;/td>
&lt;td>Alta&lt;/td>
&lt;td>Media&lt;/td>
&lt;td>Baja&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Rendimiento&lt;/td>
&lt;td>Medio&lt;/td>
&lt;td>Alto&lt;/td>
&lt;td>Muy alto&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Popularidad&lt;/td>
&lt;td>Amplia&lt;/td>
&lt;td>Más popular&lt;/td>
&lt;td>En crecimiento&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ecosistema&lt;/td>
&lt;td>Robusto&lt;/td>
&lt;td>Más extenso&lt;/td>
&lt;td>Modular&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Casos de uso&lt;/td>
&lt;td>Empresas&lt;/td>
&lt;td>Startups, SSR&lt;/td>
&lt;td>Aplicaciones pequeñas&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>En 2024, todos siguen siendo opciones viables. La clave está en seleccionar el adecuado para cada proyecto.&lt;/strong>&lt;/p></description></item><item><title>Gestión de dependencias en TypeScript: Consejos y herramientas</title><link>https://cmas.dev/posts/2024-11-27-dependency-management-typescript/</link><pubDate>Wed, 27 Nov 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-11-27-dependency-management-typescript/</guid><description>&lt;p>La gestión eficiente de dependencias es una parte fundamental del desarrollo en TypeScript. Al trabajar con paquetes externos, es esencial conocer las mejores prácticas y herramientas disponibles para garantizar la estabilidad, seguridad y rendimiento de nuestros proyectos. En este artículo, exploraremos las estrategias para gestionar dependencias en TypeScript, incluyendo herramientas como npm, yarn, pnpm y Deno, junto con ejemplos prácticos.&lt;/p>
&lt;h2 id="qué-son-las-dependencias-en-typescript">¿Qué son las Dependencias en TypeScript?&lt;/h2>
&lt;p>Las &lt;strong>dependencias&lt;/strong> son paquetes de código externo que un proyecto necesita para funcionar. Estas pueden ser bibliotecas de utilidad, frameworks, herramientas de compilación, entre otras.&lt;/p>
&lt;p>En TypeScript, las dependencias se instalan y gestionan a través de gestores de paquetes como:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>npm&lt;/strong> (Node Package Manager)&lt;/li>
&lt;li>&lt;strong>Yarn&lt;/strong>&lt;/li>
&lt;li>&lt;strong>pnpm&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Deno&lt;/strong> (para entornos sin &lt;code>node_modules&lt;/code>)&lt;/li>
&lt;/ul>
&lt;p>Existen dos tipos principales de dependencias:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Dependencias regulares (&lt;code>dependencies&lt;/code>)&lt;/strong>: Necesarias para la ejecución de la aplicación.&lt;/li>
&lt;li>&lt;strong>Dependencias de desarrollo (&lt;code>devDependencies&lt;/code>)&lt;/strong>: Usadas solo en el desarrollo (pruebas, compilación, herramientas de linting, etc.).&lt;/li>
&lt;/ol>
&lt;p>Ejemplo de un &lt;code>package.json&lt;/code> con ambas:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;dependencies&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;express&amp;#34;: &amp;#34;^4.17.1&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;typeorm&amp;#34;: &amp;#34;^0.2.41&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;devDependencies&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;typescript&amp;#34;: &amp;#34;^4.7.4&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;jest&amp;#34;: &amp;#34;^27.5.1&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="herramientas-para-la-gestión-de-dependencias">Herramientas para la Gestión de Dependencias&lt;/h2>
&lt;h3 id="1-npm-el-gestor-de-paquetes-predeterminado">1. &lt;strong>npm: El gestor de paquetes predeterminado&lt;/strong>&lt;/h3>
&lt;p>npm es el gestor de paquetes predeterminado para Node.js y es ampliamente utilizado en proyectos TypeScript.&lt;/p>
&lt;ul>
&lt;li>Instalar una dependencia:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install lodash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Instalar como &lt;code>devDependency&lt;/code>:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install --save-dev jest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Eliminar una dependencia:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm uninstall lodash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="2-yarn-alternativa-rápida-y-segura">2. &lt;strong>Yarn: Alternativa rápida y segura&lt;/strong>&lt;/h3>
&lt;p>Yarn ofrece mejoras en rendimiento y seguridad respecto a npm.&lt;/p>
&lt;ul>
&lt;li>Instalar una dependencia:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">yarn add lodash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Instalar como &lt;code>devDependency&lt;/code>:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">yarn add jest --dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="3-pnpm-ahorro-de-espacio-y-eficiencia">3. &lt;strong>pnpm: Ahorro de espacio y eficiencia&lt;/strong>&lt;/h3>
&lt;p>pnpm es una alternativa más eficiente en cuanto a almacenamiento ya que utiliza enlaces simbólicos para compartir paquetes entre proyectos.&lt;/p>
&lt;ul>
&lt;li>Instalar una dependencia:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pnpm add lodash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Instalar como &lt;code>devDependency&lt;/code>:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pnpm add jest --save-dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="4-deno-sin-node_modules">4. &lt;strong>Deno: Sin &lt;code>node_modules&lt;/code>&lt;/strong>&lt;/h3>
&lt;p>Deno elimina la necesidad de un gestor de paquetes tradicional y permite importar dependencias desde URLs.&lt;/p>
&lt;p>Ejemplo de importación en TypeScript:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">import { serve } from &amp;#34;https://deno.land/std/http/server.ts&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">serve((req) =&amp;gt; new Response(&amp;#34;Hello, Deno!&amp;#34;), { port: 8000 });
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="estrategias-para-la-gestión-de-dependencias">Estrategias para la Gestión de Dependencias&lt;/h2>
&lt;h3 id="1-bloquear-versiones-package-lockjson-o-yarnlock">1. &lt;strong>Bloquear versiones (&lt;code>package-lock.json&lt;/code> o &lt;code>yarn.lock&lt;/code>)&lt;/strong>&lt;/h3>
&lt;p>Para garantizar estabilidad en las versiones de los paquetes, siempre se deben usar archivos de bloqueo (&lt;code>package-lock.json&lt;/code> o &lt;code>yarn.lock&lt;/code>).&lt;/p>
&lt;p>Ejemplo de instalación con versión fija:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install express@4.17.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-uso-de-peerdependencies-y-optionaldependencies">2. &lt;strong>Uso de &lt;code>peerDependencies&lt;/code> y &lt;code>optionalDependencies&lt;/code>&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>&lt;code>peerDependencies&lt;/code>&lt;/strong>: Útil cuando se espera que el usuario instale una versión específica de un paquete.&lt;/li>
&lt;li>&lt;strong>&lt;code>optionalDependencies&lt;/code>&lt;/strong>: No bloquean la instalación si fallan.&lt;/li>
&lt;/ul>
&lt;p>Ejemplo en &lt;code>package.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;peerDependencies&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;react&amp;#34;: &amp;#34;^17.0.0&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;optionalDependencies&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;fsevents&amp;#34;: &amp;#34;^2.3.2&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-actualización-controlada-de-dependencias">3. &lt;strong>Actualización controlada de dependencias&lt;/strong>&lt;/h3>
&lt;p>Para actualizar dependencias sin romper el proyecto:&lt;/p>
&lt;ul>
&lt;li>Revisar actualizaciones disponibles:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm outdated
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Actualizar una dependencia específica:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm update lodash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Actualizar todas las dependencias:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>Para mayor control, se recomienda usar &lt;code>npm-check-updates&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npx npm-check-updates -u
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-verificación-de-seguridad-en-dependencias">4. &lt;strong>Verificación de seguridad en dependencias&lt;/strong>&lt;/h3>
&lt;p>Las vulnerabilidades en dependencias pueden comprometer la seguridad del proyecto. Se recomienda:&lt;/p>
&lt;ul>
&lt;li>Analizar dependencias con npm:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm audit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Aplicar correcciones automáticas:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm audit fix
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>Para mayor seguridad, se pueden usar herramientas como &lt;strong>Snyk&lt;/strong> o &lt;strong>Dependabot&lt;/strong>.&lt;/p>
&lt;h2 id="ejemplo-práctico-proyecto-con-typescript-y-express">Ejemplo Práctico: Proyecto con TypeScript y Express&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Inicializar un proyecto TypeScript&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">mkdir my-ts-project &amp;amp;&amp;amp; cd my-ts-project
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm init -y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm install typescript ts-node express @types/express
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Configurar &lt;code>tsconfig.json&lt;/code>&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;compilerOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;target&amp;#34;: &amp;#34;ES6&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;module&amp;#34;: &amp;#34;CommonJS&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;outDir&amp;#34;: &amp;#34;dist&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;strict&amp;#34;: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Crear un servidor Express en &lt;code>index.ts&lt;/code>&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="n">express&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;express&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">express&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Hello, TypeScript!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">listen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Servidor corriendo en http://localhost:3000&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Ejecutar el servidor&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npx ts-node index.ts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>La gestión de dependencias en TypeScript es clave para la estabilidad y seguridad de los proyectos. Usar herramientas adecuadas como &lt;strong>npm, yarn, pnpm o Deno&lt;/strong>, junto con buenas prácticas como el control de versiones y auditorías de seguridad, asegura un desarrollo eficiente y libre de problemas.&lt;/p>
&lt;p>Siguiendo estos consejos, puedes optimizar la gestión de dependencias y garantizar la calidad de tus proyectos en TypeScript.&lt;/p></description></item><item><title>Creación de aplicaciones serverless con Deno y Azure</title><link>https://cmas.dev/posts/2024-11-20-serverless-apps-deno-azure/</link><pubDate>Wed, 20 Nov 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-11-20-serverless-apps-deno-azure/</guid><description>&lt;p>El paradigma serverless permite construir aplicaciones sin necesidad de gestionar servidores, proporcionando escalabilidad automática y optimización de costos. En este artículo, exploraremos cómo crear aplicaciones serverless utilizando Deno y Azure Functions, combinando la eficiencia de Deno con la potencia de la nube de Azure.&lt;/p>
&lt;h2 id="por-qué-usar-deno-y-azure-functions">¿Por qué usar Deno y Azure Functions?&lt;/h2>
&lt;h3 id="beneficios-de-deno">&lt;strong>Beneficios de Deno&lt;/strong>&lt;/h3>
&lt;p>Deno es un runtime moderno para JavaScript y TypeScript con varias características que lo hacen ideal para aplicaciones serverless:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Seguridad integrada&lt;/strong>: Requiere permisos explícitos para acceder a archivos, red y entorno.&lt;/li>
&lt;li>&lt;strong>Soporte nativo para TypeScript&lt;/strong>: No necesita configuración adicional.&lt;/li>
&lt;li>&lt;strong>Gestión de dependencias simplificada&lt;/strong>: Se utilizan URLs en lugar de &lt;code>node_modules&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Rápido y eficiente&lt;/strong>: Basado en V8 y Rust, ofrece un excelente rendimiento.&lt;/li>
&lt;/ul>
&lt;h3 id="beneficios-de-azure-functions">&lt;strong>Beneficios de Azure Functions&lt;/strong>&lt;/h3>
&lt;p>Azure Functions es una plataforma serverless que permite ejecutar código en la nube sin administrar infraestructura:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Escalabilidad automática&lt;/strong>: Se adapta a la demanda sin intervención manual.&lt;/li>
&lt;li>&lt;strong>Modelo de pago por uso&lt;/strong>: Solo se cobra por el tiempo de ejecución.&lt;/li>
&lt;li>&lt;strong>Integración con otros servicios de Azure&lt;/strong>: Como bases de datos, colas y almacenamiento.&lt;/li>
&lt;/ul>
&lt;h2 id="configuración-del-entorno">Configuración del Entorno&lt;/h2>
&lt;h3 id="1-instalar-deno">&lt;strong>1. Instalar Deno&lt;/strong>&lt;/h3>
&lt;p>Para instalar Deno en tu máquina local, ejecuta:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">curl -fsSL https://deno.land/x/install/install.sh | sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verifica la instalación con:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">deno --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-configurar-azure-functions">&lt;strong>2. Configurar Azure Functions&lt;/strong>&lt;/h3>
&lt;p>Para trabajar con Azure Functions, necesitamos la &lt;strong>Azure Functions Core Tools&lt;/strong> y una suscripción activa en Azure.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Instalar las herramientas de Azure Functions&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">npm&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">g&lt;/span> &lt;span class="n">azure&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">functions&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">tools&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="mi">4&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">unsafe&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">perm&lt;/span> &lt;span class="bp">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Iniciar sesión en Azure&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">az login
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Crear un nuevo proyecto de Azure Functions&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">func&lt;/span> &lt;span class="n">init&lt;/span> &lt;span class="n">my&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">deno&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">function&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">worker&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">runtime&lt;/span> &lt;span class="n">custom&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cd&lt;/span> &lt;span class="n">my&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">deno&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">function&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="creación-de-una-función-serverless-con-deno">Creación de una Función Serverless con Deno&lt;/h2>
&lt;p>Vamos a crear una función HTTP que reciba una solicitud y devuelva una respuesta utilizando Deno.&lt;/p>
&lt;h3 id="1-crear-la-función-http">&lt;strong>1. Crear la Función HTTP&lt;/strong>&lt;/h3>
&lt;p>Ejecuta el siguiente comando para generar la función:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">func&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="n">helloDeno&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">template&lt;/span> &lt;span class="s2">&amp;#34;HTTP trigger&amp;#34;&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">language&lt;/span> &lt;span class="n">JavaScript&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto generará una carpeta &lt;code>helloDeno&lt;/code> con los archivos necesarios. Ahora, modificamos &lt;code>helloDeno/index.ts&lt;/code> para usar Deno:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">default&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">any&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">req&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Request&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Promise&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">void&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Deno Serverless Function ejecutada&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">req&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">searchParams&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="s2">&amp;#34;Mundo&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">body&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="err">`&lt;/span>&lt;span class="n">Hola&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="n">desde&lt;/span> &lt;span class="n">Deno&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="n">Azure&lt;/span> &lt;span class="n">Functions&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="err">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-modificar-el-archivo-functionjson">&lt;strong>2. Modificar el archivo &lt;code>function.json&lt;/code>&lt;/strong>&lt;/h3>
&lt;p>Editamos &lt;code>helloDeno/function.json&lt;/code> para definir los métodos HTTP permitidos:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;bindings&amp;#34;: [
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;authLevel&amp;#34;: &amp;#34;anonymous&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;type&amp;#34;: &amp;#34;httpTrigger&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;direction&amp;#34;: &amp;#34;in&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;name&amp;#34;: &amp;#34;req&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;methods&amp;#34;: [&amp;#34;get&amp;#34;, &amp;#34;post&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;type&amp;#34;: &amp;#34;http&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;direction&amp;#34;: &amp;#34;out&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;name&amp;#34;: &amp;#34;res&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="despliegue-en-azure">Despliegue en Azure&lt;/h2>
&lt;h3 id="1-crear-un-recurso-de-azure-functions">&lt;strong>1. Crear un recurso de Azure Functions&lt;/strong>&lt;/h3>
&lt;p>Antes de desplegar, necesitamos un grupo de recursos y una cuenta de almacenamiento:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">az group create --name deno-serverless --location eastus
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">az storage account create --name denostorage --location eastus --resource-group deno-serverless --sku Standard_LRS
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Luego, creamos una instancia de Azure Functions:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">az functionapp create --resource-group deno-serverless --consumption-plan-location eastus --runtime custom --functions-version 4 --name myDenoFunctionApp --storage-account denostorage
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-desplegar-la-función-en-azure">&lt;strong>2. Desplegar la función en Azure&lt;/strong>&lt;/h3>
&lt;p>Ahora podemos desplegar nuestra función con:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">func&lt;/span> &lt;span class="n">azure&lt;/span> &lt;span class="n">functionapp&lt;/span> &lt;span class="n">publish&lt;/span> &lt;span class="n">myDenoFunctionApp&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Si el despliegue es exitoso, obtendremos una URL donde la función está disponible:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">https://myDenoFunctionApp.azurewebsites.net/api/helloDeno
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Podemos probarla enviando una solicitud HTTP:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">curl &amp;#34;https://myDenoFunctionApp.azurewebsites.net/api/helloDeno?name=Juan&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="integración-con-una-base-de-datos">Integración con una Base de Datos&lt;/h2>
&lt;p>Para conectar nuestra función con una base de datos, podemos usar Azure Cosmos DB.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Crear una cuenta de Cosmos DB:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">az cosmosdb create --resource-group deno-serverless --name denoCosmosDB
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Obtener la cadena de conexión:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">az cosmosdb keys list --resource-group deno-serverless --name denoCosmosDB --type connection-strings
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Modificar la función para leer datos de Cosmos DB:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Client&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/postgres/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Client&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;usuario&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">database&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;denoDB&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">hostname&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;tu-host&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;tu-password&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">port&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">5432&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">default&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">any&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">req&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Request&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Promise&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">void&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">connect&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">query&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;SELECT * FROM usuarios&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">body&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">JSON&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stringify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rows&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Desarrollar aplicaciones serverless con &lt;strong>Deno y Azure Functions&lt;/strong> nos permite crear aplicaciones altamente escalables y eficientes sin preocuparnos por la infraestructura. &lt;strong>Deno&lt;/strong>, con su seguridad y rendimiento, y &lt;strong>Azure Functions&lt;/strong>, con su escalabilidad automática, forman una combinación poderosa para aplicaciones modernas.&lt;/p>
&lt;p>¡Explora estas tecnologías y crea tus propias soluciones serverless con Deno y Azure!&lt;/p></description></item><item><title>Testing en Deno: Estrategias para Aplicaciones Grandes</title><link>https://cmas.dev/posts/2024-11-13-testing-strategies-in-deno/</link><pubDate>Wed, 13 Nov 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-11-13-testing-strategies-in-deno/</guid><description>&lt;p>El desarrollo de aplicaciones grandes con &lt;strong>Deno&lt;/strong> requiere un enfoque sólido en &lt;strong>pruebas automatizadas&lt;/strong> para garantizar su estabilidad y escalabilidad. Deno ofrece un sistema de testing integrado con herramientas modernas que facilitan la escritura y ejecución de pruebas unitarias, de integración y funcionales.&lt;/p>
&lt;p>En este artículo, exploraremos las &lt;strong>estrategias para testing en Deno&lt;/strong>, incluyendo fundamentos teóricos, mejores prácticas y ejemplos de código para aplicaciones a gran escala.&lt;/p>
&lt;h2 id="por-qué-es-importante-el-testing-en-deno">¿Por qué es importante el testing en Deno?&lt;/h2>
&lt;p>A medida que una aplicación crece, es fundamental contar con un &lt;strong>sistema de pruebas eficiente&lt;/strong> para evitar regresiones y asegurar que cada módulo funcione correctamente. Las pruebas en Deno permiten:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Detectar errores temprano&lt;/strong> antes de que lleguen a producción.&lt;/li>
&lt;li>&lt;strong>Automatizar la validación&lt;/strong> de funcionalidades clave.&lt;/li>
&lt;li>&lt;strong>Facilitar la refactorización&lt;/strong> sin comprometer la estabilidad.&lt;/li>
&lt;li>&lt;strong>Asegurar la compatibilidad&lt;/strong> entre módulos y servicios externos.&lt;/li>
&lt;/ul>
&lt;h2 id="configuración-del-entorno-de-pruebas-en-deno">Configuración del Entorno de Pruebas en Deno&lt;/h2>
&lt;p>Deno tiene soporte nativo para testing sin necesidad de librerías externas. Podemos ejecutar pruebas con:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">deno test --allow-net --allow-read
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="1-estructura-de-pruebas-en-un-proyecto-grande">&lt;strong>1. Estructura de pruebas en un proyecto grande&lt;/strong>&lt;/h3>
&lt;p>Para organizar nuestras pruebas en aplicaciones grandes, podemos seguir esta estructura:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">/project
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│── src/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── controllers/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── services/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── models/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── routes/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│── tests/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── unit/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── integration/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── e2e/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│── deps.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│── mod.ts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Las pruebas deben dividirse en:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Unitarias&lt;/strong>: Validan la lógica de funciones individuales.&lt;/li>
&lt;li>&lt;strong>Integración&lt;/strong>: Aseguran que múltiples módulos funcionen juntos correctamente.&lt;/li>
&lt;li>&lt;strong>End-to-End (E2E)&lt;/strong>: Simulan el comportamiento del usuario y prueban la aplicación completa.&lt;/li>
&lt;/ul>
&lt;h2 id="pruebas-unitarias-en-deno">Pruebas Unitarias en Deno&lt;/h2>
&lt;p>Las &lt;strong>pruebas unitarias&lt;/strong> son fundamentales para validar funciones y módulos individuales. Supongamos que tenemos un servicio &lt;code>math.ts&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">suma&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">number&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">number&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">number&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Podemos escribir una prueba unitaria en &lt;code>tests/unit/math.test.ts&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">import { assertEquals } from &amp;#34;https://deno.land/std@0.194.0/testing/asserts.ts&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">import { suma } from &amp;#34;../../src/services/math.ts&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Deno.test(&amp;#34;suma debe retornar la suma de dos números&amp;#34;, () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> assertEquals(suma(2, 3), 5);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> assertEquals(suma(-1, 1), 0);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecutamos la prueba:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">deno test tests/unit/math.test.ts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="pruebas-de-integración-en-deno">Pruebas de Integración en Deno&lt;/h2>
&lt;p>Las &lt;strong>pruebas de integración&lt;/strong> validan la comunicación entre diferentes módulos o servicios. Supongamos que tenemos un servicio que interactúa con una base de datos:&lt;/p>
&lt;h3 id="1-servicio-de-usuarios-userservicets">&lt;strong>1. Servicio de usuarios &lt;code>userService.ts&lt;/code>&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">User&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../models/user.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">UserService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">users&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">User&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">addUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">User&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">getUsers&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">User&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-prueba-de-integración-testsintegrationuserservicetestts">&lt;strong>2. Prueba de integración &lt;code>tests/integration/userService.test.ts&lt;/code>&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">assertEquals&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/std@0.194.0/testing/asserts.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">UserService&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../../src/services/userService.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Deno&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;UserService debe agregar y recuperar usuarios&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">service&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">UserService&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">addUser&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Carlos&amp;#34;&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">users&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getUsers&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">assertEquals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">assertEquals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Carlos&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecutamos:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">deno &lt;span class="nb">test&lt;/span> tests/integration/userService.test.ts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="pruebas-end-to-end-e2e-en-deno">Pruebas End-to-End (E2E) en Deno&lt;/h2>
&lt;p>Las &lt;strong>pruebas E2E&lt;/strong> evalúan la aplicación completa simulando interacciones de usuario. Utilizaremos &lt;strong>Deno y Oak&lt;/strong> para probar una API REST.&lt;/p>
&lt;h3 id="1-configurar-un-servidor-api-con-oak">&lt;strong>1. Configurar un servidor API con Oak&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Router&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/oak/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">router&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Router&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/ping&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;pong&amp;#34;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">allowedMethods&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">await&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">listen&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8000&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-prueba-e2e-para-la-api">&lt;strong>2. Prueba E2E para la API&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">assertEquals&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/std@0.194.0/testing/asserts.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Deno&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;La API debe responder con pong&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;http://localhost:8000/ping&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">json&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">assertEquals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;pong&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecutamos la prueba:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">deno test tests/e2e/api.test.ts --allow-net
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="estrategias-para-testing-en-aplicaciones-grandes">Estrategias para Testing en Aplicaciones Grandes&lt;/h2>
&lt;p>Para aplicaciones grandes, es importante seguir estas estrategias:&lt;/p>
&lt;h3 id="1-uso-de-mocks-y-stubs">&lt;strong>1. Uso de Mocks y Stubs&lt;/strong>&lt;/h3>
&lt;p>Para evitar dependencias innecesarias en pruebas unitarias, podemos utilizar mocks:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">assertEquals&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/std@0.194.0/testing/asserts.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">spy&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/mock/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">mockFunction&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">spy&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="s2">&amp;#34;mock response&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">assertEquals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mockFunction&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="s2">&amp;#34;mock response&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-pruebas-en-paralelo">&lt;strong>2. Pruebas en Paralelo&lt;/strong>&lt;/h3>
&lt;p>Deno permite ejecutar pruebas en paralelo para mejorar el rendimiento:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Deno.test(&amp;#34;Prueba 1&amp;#34;, async () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> await new Promise(resolve =&amp;gt; setTimeout(resolve, 100));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.log(&amp;#34;Prueba 1 completada&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">});
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Deno.test(&amp;#34;Prueba 2&amp;#34;, async () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> await new Promise(resolve =&amp;gt; setTimeout(resolve, 50));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.log(&amp;#34;Prueba 2 completada&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>El &lt;strong>testing en Deno&lt;/strong> es una parte esencial del desarrollo de aplicaciones grandes. Implementar &lt;strong>pruebas unitarias, de integración y E2E&lt;/strong> permite mejorar la calidad y fiabilidad del código.&lt;/p>
&lt;p>Siguiendo estas estrategias y buenas prácticas, podemos asegurar que nuestras aplicaciones en Deno sean &lt;strong>más estables, escalables y fáciles de mantener&lt;/strong>.&lt;/p></description></item><item><title>Lazy Loading avanzado en Angular con rutas dinámicas</title><link>https://cmas.dev/posts/2024-11-06-advanced-lazy-loading-in-angular-with-dynamic-rules/</link><pubDate>Wed, 06 Nov 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-11-06-advanced-lazy-loading-in-angular-with-dynamic-rules/</guid><description>&lt;p>El &lt;strong>Lazy Loading&lt;/strong> es una técnica fundamental en Angular para mejorar el rendimiento de las aplicaciones al cargar solo los módulos necesarios cuando se requieren. En este artículo, exploraremos cómo implementar &lt;strong>Lazy Loading avanzado con rutas dinámicas&lt;/strong> para optimizar aún más la carga de módulos y mejorar la experiencia del usuario.&lt;/p>
&lt;h2 id="qué-es-el-lazy-loading-en-angular">¿Qué es el Lazy Loading en Angular?&lt;/h2>
&lt;p>&lt;strong>Lazy Loading (Carga diferida)&lt;/strong> permite que los módulos de una aplicación Angular se carguen solo cuando se necesitan, en lugar de cargar todo el código de la aplicación desde el inicio.&lt;/p>
&lt;h3 id="ventajas-del-lazy-loading">&lt;strong>Ventajas del Lazy Loading&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Mejora el rendimiento&lt;/strong>: Reduce el tiempo de carga inicial de la aplicación.&lt;/li>
&lt;li>&lt;strong>Optimiza el uso de recursos&lt;/strong>: Solo se cargan los módulos cuando son necesarios.&lt;/li>
&lt;li>&lt;strong>Reduce el consumo de memoria&lt;/strong>: La aplicación no mantiene en memoria módulos innecesarios.&lt;/li>
&lt;li>&lt;strong>Escalabilidad&lt;/strong>: Facilita la gestión de grandes aplicaciones con múltiples módulos.&lt;/li>
&lt;/ul>
&lt;h2 id="configuración-básica-del-lazy-loading">Configuración Básica del Lazy Loading&lt;/h2>
&lt;p>Para empezar, configuraremos una aplicación Angular con Lazy Loading. Supongamos que tenemos los siguientes módulos:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>HomeModule&lt;/strong> → &lt;code>/home&lt;/code>&lt;/li>
&lt;li>&lt;strong>AdminModule&lt;/strong> → &lt;code>/admin&lt;/code>&lt;/li>
&lt;li>&lt;strong>UserModule&lt;/strong> → &lt;code>/user&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="1-configurar-el-approutingmodule">&lt;strong>1. Configurar el AppRoutingModule&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">NgModule&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">RouterModule&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Routes&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/router&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">routes&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Routes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;home&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">loadChildren&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">import&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./home/home.module&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">HomeModule&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;admin&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">loadChildren&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">import&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./admin/admin.module&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AdminModule&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;user&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">loadChildren&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">import&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./user/user.module&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">UserModule&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;**&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">redirectTo&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;home&amp;#39;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">NgModule&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">imports&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">RouterModule&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">forRoot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="p">)],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">exports&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">RouterModule&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">AppRoutingModule&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="lazy-loading-con-rutas-dinámicas">Lazy Loading con Rutas Dinámicas&lt;/h2>
&lt;p>En muchas aplicaciones, las rutas pueden ser dinámicas, lo que significa que los módulos deben cargarse en función de parámetros o roles de usuario. Vamos a ver cómo hacerlo con Angular.&lt;/p>
&lt;h3 id="1-crear-un-servicio-para-la-carga-dinámica-de-módulos">&lt;strong>1. Crear un servicio para la carga dinámica de módulos&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Injectable&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">CanLoad&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Route&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Router&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/router&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">AuthService&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./auth.service&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Injectable&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">providedIn&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">DynamicLoaderGuard&lt;/span> &lt;span class="n">implements&lt;/span> &lt;span class="n">CanLoad&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">authService&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">AuthService&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">private&lt;/span> &lt;span class="n">router&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Router&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">canLoad&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">route&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Route&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">boolean&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">userRole&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">authService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getUserRole&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">route&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;admin&amp;#39;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">userRole&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="s1">&amp;#39;admin&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">navigate&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s1">&amp;#39;/home&amp;#39;&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-configurar-las-rutas-con-el-lazy-loading-condicional">&lt;strong>2. Configurar las rutas con el Lazy Loading condicional&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">routes&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Routes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;home&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">loadChildren&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">import&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./home/home.module&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">HomeModule&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;admin&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">loadChildren&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">import&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./admin/admin.module&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AdminModule&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">canLoad&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">DynamicLoaderGuard&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;user&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">loadChildren&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">import&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./user/user.module&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">UserModule&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;**&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">redirectTo&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;home&amp;#39;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Aquí, usamos &lt;code>canLoad&lt;/code> para evitar la carga del módulo si el usuario no tiene el rol adecuado.&lt;/p>
&lt;h2 id="implementación-de-un-loader-para-el-lazy-loading">Implementación de un Loader para el Lazy Loading&lt;/h2>
&lt;p>Para mejorar la experiencia del usuario, podemos agregar un &lt;strong>Loader&lt;/strong> que se muestre mientras se carga un módulo.&lt;/p>
&lt;h3 id="1-crear-un-loader-component">&lt;strong>1. Crear un Loader Component&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Component&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">selector&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;app-loader&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">template&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="err">`&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">div&lt;/span> &lt;span class="k">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;loader&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Cargando&lt;/span>&lt;span class="o">...&amp;lt;/&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">styles&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">loader&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">font&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="n">px&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">text&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">align&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">center&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">padding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="n">px&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">LoaderComponent&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-modificar-el-appcomponent-para-mostrar-el-loader">&lt;strong>2. Modificar el AppComponent para mostrar el Loader&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Component&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Router&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">NavigationStart&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">NavigationEnd&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/router&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">selector&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;app-root&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">template&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="err">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">app&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">loader&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ngIf&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;isLoading&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="n">app&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">loader&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">outlet&lt;/span>&lt;span class="o">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">outlet&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">`&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">AppComponent&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">isLoading&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">router&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Router&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">events&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subscribe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span> &lt;span class="n">instanceof&lt;/span> &lt;span class="n">NavigationStart&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">isLoading&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span> &lt;span class="n">instanceof&lt;/span> &lt;span class="n">NavigationEnd&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">isLoading&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Con esta implementación, se mostrará el Loader mientras un módulo se está cargando.&lt;/p>
&lt;h2 id="optimización-del-lazy-loading-con-prefetching">Optimización del Lazy Loading con Prefetching&lt;/h2>
&lt;p>Podemos optimizar aún más la carga diferida utilizando &lt;strong>preloading strategies&lt;/strong>, lo que permite cargar en segundo plano los módulos que probablemente se necesiten pronto.&lt;/p>
&lt;h3 id="1-usar-preloadallmodules">&lt;strong>1. Usar PreloadAllModules&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">NgModule&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">imports&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">RouterModule&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">forRoot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">preloadingStrategy&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">PreloadAllModules&lt;/span> &lt;span class="p">})],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">exports&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">RouterModule&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">AppRoutingModule&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esta estrategia carga los módulos en segundo plano después de que la aplicación haya terminado de cargar, mejorando la velocidad de navegación sin afectar el rendimiento inicial.&lt;/p>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>El &lt;strong>Lazy Loading avanzado en Angular&lt;/strong> con rutas dinámicas permite optimizar el rendimiento de las aplicaciones y mejorar la experiencia del usuario. Implementar estrategias como &lt;strong>canLoad&lt;/strong>, &lt;strong>Loaders visuales&lt;/strong> y &lt;strong>Preloading Strategies&lt;/strong> ayuda a gestionar mejor los recursos y acelerar la carga de los módulos.&lt;/p>
&lt;p>Con este enfoque, puedes construir aplicaciones más eficientes y escalables, garantizando una navegación fluida y una mejor administración de los módulos en tu proyecto Angular.&lt;/p></description></item><item><title>Integración de Angular con APIs RESTful en Deno</title><link>https://cmas.dev/posts/2024-10-30-angular-integration-with-api-rest-in-deno/</link><pubDate>Wed, 30 Oct 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-10-30-angular-integration-with-api-rest-in-deno/</guid><description>&lt;p>La integración entre &lt;strong>Angular&lt;/strong> y &lt;strong>APIs RESTful&lt;/strong> creadas con &lt;strong>Deno&lt;/strong> permite desarrollar aplicaciones modernas y escalables con una arquitectura limpia y basada en &lt;strong>TypeScript&lt;/strong>. En este artículo, exploraremos cómo conectar una aplicación Angular con un backend RESTful en Deno paso a paso, incluyendo fundamentos teóricos, ejemplos prácticos y buenas prácticas.&lt;/p>
&lt;h2 id="por-qué-utilizar-angular-y-deno">¿Por qué utilizar Angular y Deno?&lt;/h2>
&lt;h3 id="beneficios-de-angular">&lt;strong>Beneficios de Angular&lt;/strong>&lt;/h3>
&lt;p>&lt;strong>Angular&lt;/strong> es un framework frontend desarrollado por &lt;strong>Google&lt;/strong> que permite construir aplicaciones web robustas y escalables. Sus principales características incluyen:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Arquitectura basada en componentes&lt;/strong>: Facilita la reutilización del código y el mantenimiento.&lt;/li>
&lt;li>&lt;strong>TypeScript como base&lt;/strong>: Mejora la seguridad del código y facilita la detección de errores en tiempo de desarrollo.&lt;/li>
&lt;li>&lt;strong>Herramientas integradas&lt;/strong>: Angular CLI permite generar componentes, servicios y módulos de manera eficiente.&lt;/li>
&lt;li>&lt;strong>Manejo avanzado de estado y datos&lt;/strong>: Usa RxJS para gestionar datos de forma reactiva.&lt;/li>
&lt;/ul>
&lt;h3 id="beneficios-de-deno">&lt;strong>Beneficios de Deno&lt;/strong>&lt;/h3>
&lt;p>Deno es un runtime seguro para JavaScript y TypeScript que ofrece múltiples ventajas sobre Node.js:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Seguridad por defecto&lt;/strong>: Requiere permisos explícitos para acceder a archivos, red y entorno.&lt;/li>
&lt;li>&lt;strong>Soporte nativo para TypeScript&lt;/strong>: Sin necesidad de configuración adicional.&lt;/li>
&lt;li>&lt;strong>Gestión de dependencias sin &lt;code>node_modules&lt;/code>&lt;/strong>: Se utilizan URLs en lugar de paquetes locales.&lt;/li>
&lt;li>&lt;strong>Servidor HTTP integrado&lt;/strong>: No requiere frameworks adicionales para manejar solicitudes HTTP.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="configuración-del-entorno">Configuración del Entorno&lt;/h2>
&lt;h3 id="instalación-de-angular">&lt;strong>Instalación de Angular&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>Instalar Angular CLI:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install -g @angular/cli
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Crear un nuevo proyecto Angular:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng new frontend-angular
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd frontend-angular
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Ejecutar la aplicación:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng serve --open
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="instalación-de-deno">&lt;strong>Instalación de Deno&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>Instalar Deno:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">curl -fsSL https://deno.land/x/install/install.sh | sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Verificar la instalación:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">deno --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Crear el directorio del backend:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">mkdir backend-deno &amp;amp;&amp;amp; cd backend-deno
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="creación-de-una-api-restful-en-deno">Creación de una API RESTful en Deno&lt;/h2>
&lt;h3 id="configuración-del-servidor-http">&lt;strong>Configuración del Servidor HTTP&lt;/strong>&lt;/h3>
&lt;p>Deno permite crear servidores HTTP de manera sencilla con &lt;code>std/http&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">serve&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/std@0.194.0/http/server.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">handler&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Request&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Response&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Response&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Hola desde Deno API!&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">status&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">200&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">serve&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">handler&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8080&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Servidor corriendo en http://localhost:8080&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecuta el servidor con:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">deno run --allow-net server.ts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="implementación-de-una-api-rest-con-deno">&lt;strong>Implementación de una API REST con Deno&lt;/strong>&lt;/h3>
&lt;h4 id="1-definir-el-modelo">&lt;strong>1. Definir el modelo&lt;/strong>&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">interface&lt;/span> &lt;span class="n">Usuario&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">nombre&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">email&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="2-implementar-un-controlador">&lt;strong>2. Implementar un controlador&lt;/strong>&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Usuario&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;./models.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">let&lt;/span> &lt;span class="n">usuarios&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Usuario&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">obtenerUsuarios&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">():&lt;/span> &lt;span class="n">Response&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Response&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">JSON&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stringify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">usuarios&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">status&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">200&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">crearUsuario&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">req&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Request&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Promise&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Response&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">req&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">json&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">nuevoUsuario&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Usuario&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">crypto&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randomUUID&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="o">...&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">usuarios&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nuevoUsuario&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Response&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">JSON&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stringify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nuevoUsuario&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">status&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">201&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="3-configurar-rutas-con-oak">&lt;strong>3. Configurar rutas con Oak&lt;/strong>&lt;/h4>
&lt;p>Oak es un framework similar a Express.js para Deno.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Router&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/oak/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">obtenerUsuarios&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">crearUsuario&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;./controllers.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">router&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Router&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/usuarios&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">obtenerUsuarios&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">post&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/usuarios&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">crearUsuario&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">allowedMethods&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">await&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">listen&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8080&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecutar la API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">deno run --allow-net --allow-read --allow-write server.ts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="consumo-de-la-api-restful-en-angular">Consumo de la API RESTful en Angular&lt;/h2>
&lt;h3 id="configurar-conexión-con-la-api">&lt;strong>Configurar conexión con la API&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>Crear un servicio Angular para consumir la API REST:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Injectable&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">HttpClient&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/common/http&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Observable&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;rxjs&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">interface&lt;/span> &lt;span class="n">Usuario&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">nombre&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">email&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Injectable&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">providedIn&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">UsuarioService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">apiUrl&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;http://localhost:8080/usuarios&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">HttpClient&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">obtenerUsuarios&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">Observable&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Usuario&lt;/span>&lt;span class="p">[]&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Usuario&lt;/span>&lt;span class="p">[]&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">apiUrl&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">crearUsuario&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">usuario&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Usuario&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Observable&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Usuario&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">post&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Usuario&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">apiUrl&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">usuario&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Agregar el servicio a &lt;code>app.module.ts&lt;/code>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">HttpClientModule&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/common/http&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">NgModule&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">declarations&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">AppComponent&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">imports&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">BrowserModule&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">HttpClientModule&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">providers&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">bootstrap&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">AppComponent&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">AppModule&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="crear-un-componente-para-mostrar-usuarios">&lt;strong>Crear un componente para mostrar usuarios&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Component&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">OnInit&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">UsuarioService&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;../usuario.service&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">selector&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;app-usuarios&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">templateUrl&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;./usuarios.component.html&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">UsuariosComponent&lt;/span> &lt;span class="n">implements&lt;/span> &lt;span class="n">OnInit&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">usuarios&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">any&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">usuarioService&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">UsuarioService&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ngOnInit&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">usuarioService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">obtenerUsuarios&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subscribe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">usuarios&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;h2&amp;gt;Lista de Usuarios&amp;lt;/h2&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;ul&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;li *ngFor=&amp;#34;let usuario of usuarios&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ usuario.nombre }} - {{ usuario.email }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/li&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/ul&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Integrar &lt;strong>Angular&lt;/strong> con &lt;strong>APIs RESTful&lt;/strong> en Deno proporciona una solución segura y escalable para el desarrollo web moderno. La combinación de TypeScript en ambos entornos permite una experiencia de desarrollo fluida y consistente. ¡Explora estas tecnologías y lleva tu desarrollo full-stack al siguiente nivel!&lt;/p></description></item><item><title>Desarrollo full-stack con Angular y Deno</title><link>https://cmas.dev/posts/2024-10-23-fullstack-development-with-angular-and-deno/</link><pubDate>Wed, 23 Oct 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-10-23-fullstack-development-with-angular-and-deno/</guid><description>&lt;p>El desarrollo full-stack ha evolucionado con nuevas tecnologías que permiten construir aplicaciones modernas, escalables y seguras. En este artículo, exploraremos cómo combinar Angular en el frontend y Deno en el backend para crear aplicaciones full-stack eficientes y bien estructuradas.&lt;/p>
&lt;h2 id="por-qué-angular-y-deno">¿Por qué Angular y Deno?&lt;/h2>
&lt;h3 id="ventajas-de-angular">&lt;strong>Ventajas de Angular&lt;/strong>&lt;/h3>
&lt;p>Angular es un framework de desarrollo frontend basado en TypeScript que permite construir aplicaciones web robustas y escalables. Sus principales ventajas incluyen:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Arquitectura modular&lt;/strong>: Usa módulos y componentes para organizar el código.&lt;/li>
&lt;li>&lt;strong>Two-way data binding&lt;/strong>: Permite la sincronización automática entre la vista y el modelo.&lt;/li>
&lt;li>&lt;strong>Soporte para PWA&lt;/strong>: Facilita la creación de aplicaciones progresivas.&lt;/li>
&lt;li>&lt;strong>Ecosistema amplio&lt;/strong>: Compatible con RxJS, Angular Material y otras bibliotecas.&lt;/li>
&lt;/ul>
&lt;h3 id="ventajas-de-deno">&lt;strong>Ventajas de Deno&lt;/strong>&lt;/h3>
&lt;p>Deno es un runtime seguro para JavaScript y TypeScript que ofrece múltiples mejoras con respecto a Node.js. Sus principales características son:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Seguridad integrada&lt;/strong>: Requiere permisos explícitos para acceder a archivos, red y entorno.&lt;/li>
&lt;li>&lt;strong>Soporte nativo para TypeScript&lt;/strong>: No requiere configuración adicional.&lt;/li>
&lt;li>&lt;strong>Gestión de dependencias simplificada&lt;/strong>: Usa URLs en lugar de &lt;code>node_modules&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Servidor HTTP nativo&lt;/strong>: Sin necesidad de frameworks adicionales.&lt;/li>
&lt;/ul>
&lt;h2 id="configuración-del-entorno">Configuración del entorno&lt;/h2>
&lt;p>Para desarrollar una aplicación full-stack con Angular y Deno, primero debemos configurar ambos entornos.&lt;/p>
&lt;h3 id="instalación-de-angular">&lt;strong>Instalación de Angular&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>Instalar Angular CLI:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install -g @angular/cli
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Crear un nuevo proyecto Angular:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng new frontend-angular
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd frontend-angular
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Ejecutar la aplicación:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng serve --open
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="instalación-de-deno">&lt;strong>Instalación de Deno&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>Instalar Deno:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">curl -fsSL https://deno.land/x/install/install.sh | sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Verificar la instalación:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">deno --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Crear el directorio del backend:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">mkdir backend-deno &amp;amp;&amp;amp; cd backend-deno
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="desarrollo-del-backend-con-deno">Desarrollo del Backend con Deno&lt;/h2>
&lt;h3 id="configuración-del-servidor-http">&lt;strong>Configuración del Servidor HTTP&lt;/strong>&lt;/h3>
&lt;p>Deno permite crear servidores HTTP de manera sencilla con &lt;code>std/http&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">serve&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/std@0.194.0/http/server.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">handler&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Request&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Response&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Response&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Hola desde Deno API!&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">status&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">200&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">serve&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">handler&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8080&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Servidor corriendo en http://localhost:8080&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecuta el servidor con:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">deno run --allow-net server.ts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="creación-de-una-api-rest-con-deno">&lt;strong>Creación de una API REST con Deno&lt;/strong>&lt;/h3>
&lt;p>Vamos a estructurar nuestra API en un modelo MVC.&lt;/p>
&lt;h4 id="1-definir-el-modelo">&lt;strong>1. Definir el modelo&lt;/strong>&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">interface&lt;/span> &lt;span class="n">Usuario&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">nombre&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">email&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="2-implementar-un-controlador">&lt;strong>2. Implementar un controlador&lt;/strong>&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Usuario&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;./models.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">let&lt;/span> &lt;span class="n">usuarios&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Usuario&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">obtenerUsuarios&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">():&lt;/span> &lt;span class="n">Response&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Response&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">JSON&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stringify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">usuarios&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">status&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">200&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">crearUsuario&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">req&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Request&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Promise&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Response&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">req&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">json&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">nuevoUsuario&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Usuario&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">crypto&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randomUUID&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="o">...&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">usuarios&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nuevoUsuario&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Response&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">JSON&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stringify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nuevoUsuario&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">status&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">201&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="3-configurar-rutas-con-oak">&lt;strong>3. Configurar rutas con Oak&lt;/strong>&lt;/h4>
&lt;p>Oak es un framework similar a Express.js para Deno.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Router&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/oak/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">obtenerUsuarios&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">crearUsuario&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;./controllers.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">router&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Router&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/usuarios&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">obtenerUsuarios&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">post&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/usuarios&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">crearUsuario&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">allowedMethods&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">await&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">listen&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8080&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecutar la API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">deno run --allow-net --allow-read --allow-write server.ts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="desarrollo-del-frontend-con-angular">Desarrollo del Frontend con Angular&lt;/h2>
&lt;h3 id="configurar-conexión-con-la-api">&lt;strong>Configurar conexión con la API&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>Crear un servicio Angular para consumir la API REST:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Injectable&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">HttpClient&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/common/http&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Observable&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;rxjs&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">interface&lt;/span> &lt;span class="n">Usuario&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">nombre&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">email&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Injectable&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">providedIn&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">UsuarioService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">apiUrl&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;http://localhost:8080/usuarios&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">HttpClient&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">obtenerUsuarios&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">Observable&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Usuario&lt;/span>&lt;span class="p">[]&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Usuario&lt;/span>&lt;span class="p">[]&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">apiUrl&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">crearUsuario&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">usuario&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Usuario&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Observable&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Usuario&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">post&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Usuario&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">apiUrl&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">usuario&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Agregar el servicio a &lt;code>app.module.ts&lt;/code>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">HttpClientModule&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/common/http&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">NgModule&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">declarations&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">AppComponent&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">imports&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">BrowserModule&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">HttpClientModule&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">providers&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">bootstrap&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">AppComponent&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">AppModule&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="crear-un-componente-para-mostrar-usuarios">&lt;strong>Crear un componente para mostrar usuarios&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>Generar el componente:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng generate component usuarios
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Implementar la lógica en &lt;code>usuarios.component.ts&lt;/code>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Component&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">OnInit&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">UsuarioService&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;../usuario.service&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">selector&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;app-usuarios&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">templateUrl&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;./usuarios.component.html&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">UsuariosComponent&lt;/span> &lt;span class="n">implements&lt;/span> &lt;span class="n">OnInit&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">usuarios&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">any&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">usuarioService&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">UsuarioService&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ngOnInit&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">usuarioService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">obtenerUsuarios&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subscribe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">usuarios&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Agregar la vista en &lt;code>usuarios.component.html&lt;/code>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;h2&amp;gt;Lista de Usuarios&amp;lt;/h2&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;ul&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;li *ngFor=&amp;#34;let usuario of usuarios&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ usuario.nombre }} - {{ usuario.email }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/li&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/ul&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Incluir el componente en &lt;code>app.component.html&lt;/code>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;app-usuarios&amp;gt;&amp;lt;/app-usuarios&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Desarrollar aplicaciones full-stack con &lt;strong>Angular y Deno&lt;/strong> ofrece ventajas significativas en términos de seguridad, rendimiento y escalabilidad. Con Angular en el frontend y Deno en el backend, podemos construir aplicaciones modernas con un stack completamente basado en TypeScript.&lt;/p>
&lt;p>¡Explora estas tecnologías y lleva tu desarrollo full-stack al siguiente nivel!&lt;/p></description></item><item><title>Testing unitario en Blazor: Herramientas y estrategias</title><link>https://cmas.dev/posts/2024-10-16-testing-unitario-in-blazor/</link><pubDate>Wed, 16 Oct 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-10-16-testing-unitario-in-blazor/</guid><description>&lt;p>El desarrollo de aplicaciones robustas y fiables en &lt;strong>Blazor&lt;/strong> requiere un enfoque disciplinado hacia las pruebas unitarias. Las pruebas unitarias no solo garantizan que los componentes y servicios funcionen como se espera, sino que también facilitan el mantenimiento, la detección temprana de errores y la calidad del software. En este artículo, exploraremos en detalle cómo realizar pruebas unitarias en Blazor utilizando herramientas modernas, estrategias eficaces y ejemplos prácticos.&lt;/p>
&lt;h2 id="qué-es-el-testing-unitario">¿Qué es el testing unitario?&lt;/h2>
&lt;p>El testing unitario es un tipo de prueba de software que se enfoca en verificar la funcionalidad de componentes individuales, como clases, métodos o funciones. En Blazor, esto implica probar componentes y servicios para garantizar que realicen su tarea específica de manera correcta.&lt;/p>
&lt;h3 id="beneficios-del-testing-unitario">Beneficios del testing unitario&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Detección temprana de errores&lt;/strong>:
&lt;ul>
&lt;li>Ayuda a identificar problemas en etapas iniciales del desarrollo.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Facilita el refactoring&lt;/strong>:
&lt;ul>
&lt;li>Permite realizar cambios en el código con confianza.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Mejora la calidad del software&lt;/strong>:
&lt;ul>
&lt;li>Garantiza que cada unidad de código funcione correctamente.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Documentación viva&lt;/strong>:
&lt;ul>
&lt;li>Las pruebas actúan como una guía sobre cómo debe comportarse el sistema.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="herramientas-para-testing-unitario-en-blazor">Herramientas para testing unitario en Blazor&lt;/h2>
&lt;h3 id="1-xunit">1. &lt;strong>xUnit&lt;/strong>&lt;/h3>
&lt;p>xUnit es un framework popular para pruebas unitarias en .NET. Ofrece una sintaxis simple y características avanzadas para escribir y ejecutar pruebas.&lt;/p>
&lt;p>&lt;strong>Instalación:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">dotnet&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="kn">package&lt;/span> &lt;span class="nx">xunit&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-bunit">2. &lt;strong>bUnit&lt;/strong>&lt;/h3>
&lt;p>bUnit es un framework especializado para probar componentes de Blazor. Proporciona una API fácil de usar para renderizar componentes y realizar aserciones sobre su salida.&lt;/p>
&lt;p>&lt;strong>Instalación:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">dotnet&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="kn">package&lt;/span> &lt;span class="nx">Bunit&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-moq">3. &lt;strong>Moq&lt;/strong>&lt;/h3>
&lt;p>Moq es una biblioteca de mocking que permite simular dependencias como servicios o repositorios durante las pruebas.&lt;/p>
&lt;p>&lt;strong>Instalación:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">dotnet&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="kn">package&lt;/span> &lt;span class="nx">Moq&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-fluentassertions">4. &lt;strong>FluentAssertions&lt;/strong>&lt;/h3>
&lt;p>FluentAssertions es una biblioteca que facilita escribir aserciones legibles y expresivas.&lt;/p>
&lt;p>&lt;strong>Instalación:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">dotnet&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="kn">package&lt;/span> &lt;span class="nx">FluentAssertions&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configuración-del-entorno">Configuración del entorno&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Crear un proyecto de pruebas&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet new xunit -o BlazorApp.Tests
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd BlazorApp.Tests
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Agregar referencias al proyecto principal&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet add reference ../BlazorApp/BlazorApp.csproj
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Instalar las herramientas necesarias&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">dotnet&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="kn">package&lt;/span> &lt;span class="nx">Bunit&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">dotnet&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="kn">package&lt;/span> &lt;span class="nx">Moq&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">dotnet&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="kn">package&lt;/span> &lt;span class="nx">FluentAssertions&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="estrategias-para-el-testing-unitario-en-blazor">Estrategias para el testing unitario en Blazor&lt;/h2>
&lt;h3 id="1-pruebas-de-componentes">1. &lt;strong>Pruebas de componentes&lt;/strong>&lt;/h3>
&lt;p>Probar componentes de Blazor implica verificar su renderizado, interacción y estado interno.&lt;/p>
&lt;h4 id="ejemplo-básico-prueba-de-un-componente-de-contador">Ejemplo básico: Prueba de un componente de contador&lt;/h4>
&lt;p>&lt;strong>Componente Counter.razor:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@page &amp;#34;/counter&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;h3&amp;gt;Contador&amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;p&amp;gt;Valor actual: @count&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;button @onclick=&amp;#34;Increment&amp;#34;&amp;gt;Incrementar&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private int count = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private void Increment()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> count++;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Prueba unitaria:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Bunit&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Xunit&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">CounterTests&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">Fact&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">CounterShouldIncrementWhenButtonClicked&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Configurar&lt;/span> &lt;span class="n">el&lt;/span> &lt;span class="n">contexto&lt;/span> &lt;span class="n">de&lt;/span> &lt;span class="n">pruebas&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">using&lt;/span> &lt;span class="k">var&lt;/span> &lt;span class="n">context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">TestContext&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Renderizar&lt;/span> &lt;span class="n">el&lt;/span> &lt;span class="n">componente&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">component&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">RenderComponent&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Counter&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Verificar&lt;/span> &lt;span class="n">el&lt;/span> &lt;span class="n">estado&lt;/span> &lt;span class="n">inicial&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Assert&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Valor actual: 0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">component&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Markup&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Interactuar&lt;/span> &lt;span class="n">con&lt;/span> &lt;span class="n">el&lt;/span> &lt;span class="n">componente&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">component&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;button&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Click&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Verificar&lt;/span> &lt;span class="n">el&lt;/span> &lt;span class="n">nuevo&lt;/span> &lt;span class="n">estado&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Assert&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Valor actual: 1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">component&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Markup&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-pruebas-de-servicios">2. &lt;strong>Pruebas de servicios&lt;/strong>&lt;/h3>
&lt;p>Los servicios en Blazor suelen manejar la lógica de negocio y las interacciones con APIs. Estas pruebas garantizan que los servicios funcionen correctamente.&lt;/p>
&lt;h4 id="ejemplo-servicio-de-datos">Ejemplo: Servicio de datos&lt;/h4>
&lt;p>&lt;strong>Servicio IDataService:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">public interface IDataService
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Task&amp;lt;List&amp;lt;string&amp;gt;&amp;gt; GetItemsAsync();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Implementación DataService:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">public class DataService : IDataService
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public async Task&amp;lt;List&amp;lt;string&amp;gt;&amp;gt; GetItemsAsync()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // Simulación de datos desde una API
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> await Task.Delay(100);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return new List&amp;lt;string&amp;gt; { &amp;#34;Item1&amp;#34;, &amp;#34;Item2&amp;#34;, &amp;#34;Item3&amp;#34; };
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Prueba unitaria con Moq:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Moq&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Xunit&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">FluentAssertions&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">DataServiceTests&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">Fact&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">GetItemsAsync_ShouldReturnListOfItems&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Crear&lt;/span> &lt;span class="n">un&lt;/span> &lt;span class="n">mock&lt;/span> &lt;span class="n">del&lt;/span> &lt;span class="n">servicio&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">mockService&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Mock&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">IDataService&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mockService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Setup&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetItemsAsync&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ReturnsAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="s2">&amp;#34;MockItem1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;MockItem2&amp;#34;&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Llamar&lt;/span> &lt;span class="n">al&lt;/span> &lt;span class="n">método&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">mockService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetItemsAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Verificar&lt;/span> &lt;span class="n">resultados&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Should&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">NotBeNull&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Should&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">HaveCount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Should&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Contain&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;MockItem1&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-pruebas-de-integración">3. &lt;strong>Pruebas de integración&lt;/strong>&lt;/h3>
&lt;p>Las pruebas de integración verifican cómo interactúan múltiples componentes o servicios.&lt;/p>
&lt;h4 id="ejemplo-integración-de-un-componente-con-un-servicio">Ejemplo: Integración de un componente con un servicio&lt;/h4>
&lt;p>&lt;strong>Componente ItemList.razor:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">inject&lt;/span> &lt;span class="n">IDataService&lt;/span> &lt;span class="n">DataService&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">h3&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Lista&lt;/span> &lt;span class="n">de&lt;/span> &lt;span class="n">Items&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">h3&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">ul&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">foreach&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">var&lt;/span> &lt;span class="n">item&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">Items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">li&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">li&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">ul&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">code&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">Items&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">protected&lt;/span> &lt;span class="n">override&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">OnInitializedAsync&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Items&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">DataService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetItemsAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Prueba de integración:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Bunit&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Moq&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Xunit&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">ItemListTests&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">Fact&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">ItemListShouldRenderItemsFromService&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Crear&lt;/span> &lt;span class="n">el&lt;/span> &lt;span class="n">mock&lt;/span> &lt;span class="n">del&lt;/span> &lt;span class="n">servicio&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">mockService&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Mock&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">IDataService&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mockService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Setup&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetItemsAsync&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ReturnsAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="s2">&amp;#34;Item1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Item2&amp;#34;&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Configurar&lt;/span> &lt;span class="n">el&lt;/span> &lt;span class="n">contexto&lt;/span> &lt;span class="n">de&lt;/span> &lt;span class="n">pruebas&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">using&lt;/span> &lt;span class="k">var&lt;/span> &lt;span class="n">context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">TestContext&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddSingleton&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mockService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Renderizar&lt;/span> &lt;span class="n">el&lt;/span> &lt;span class="n">componente&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">component&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">RenderComponent&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="ne">ItemList&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Verificar&lt;/span> &lt;span class="n">el&lt;/span> &lt;span class="n">contenido&lt;/span> &lt;span class="n">renderizado&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Assert&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Item1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">component&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Markup&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Assert&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Item2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">component&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Markup&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Aislar las pruebas&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Usa mocks para evitar dependencias externas.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Pruebas pequeñas y específicas&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Cada prueba debe centrarse en un solo comportamiento.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Automatización&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Integra las pruebas en un pipeline CI/CD para garantizar que se ejecuten automáticamente.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Cobertura de pruebas&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Asegúrate de cubrir tanto escenarios positivos como negativos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>El testing unitario en Blazor es esencial para garantizar la calidad y fiabilidad de las aplicaciones. Al utilizar herramientas como xUnit, bUnit, Moq y FluentAssertions, junto con estrategias efectivas, puedes construir una base sólida de pruebas que facilite el desarrollo y mantenimiento del software. ¡Empieza a implementar estas prácticas en tus proyectos Blazor hoy mismo!&lt;/p></description></item><item><title>Uso de Azure Cosmos DB en aplicaciones Blazor</title><link>https://cmas.dev/posts/2024-10-09-azure-cosmos-in-blazor/</link><pubDate>Wed, 09 Oct 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-10-09-azure-cosmos-in-blazor/</guid><description>&lt;p>&lt;strong>Azure Cosmos DB&lt;/strong> es una base de datos distribuida globalmente y altamente escalable que permite almacenar y consultar datos de forma rápida y segura. Al integrarla con aplicaciones &lt;strong>Blazor&lt;/strong>, puedes construir soluciones web modernas y dinámicas con acceso a datos en tiempo real. Este artículo ofrece un instructivo paso a paso para usar &lt;strong>Azure Cosmos DB&lt;/strong> con &lt;strong>Blazor&lt;/strong>, incluyendo ejemplos de código prácticos y buenas prácticas.&lt;/p>
&lt;h2 id="qué-es-azure-cosmos-db">¿Qué es Azure Cosmos DB?&lt;/h2>
&lt;p>Azure Cosmos DB es un servicio de base de datos NoSQL en la nube que soporta múltiples modelos de datos, como documentos, claves-valor, gráficos y tablas. Ofrece:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Escalabilidad global&lt;/strong>: Replica los datos en múltiples regiones.&lt;/li>
&lt;li>&lt;strong>Latencia baja&lt;/strong>: Respuestas en milisegundos para operaciones de lectura y escritura.&lt;/li>
&lt;li>&lt;strong>Soporte para múltiples API&lt;/strong>: Incluye SQL, MongoDB, Cassandra, Gremlin y Table.&lt;/li>
&lt;li>&lt;strong>Altamente disponible&lt;/strong>: Con acuerdos de nivel de servicio (SLA) del 99.999%.&lt;/li>
&lt;/ul>
&lt;p>Azure Cosmos DB es ideal para aplicaciones que requieren alta disponibilidad, consistencia en datos distribuidos y escalabilidad masiva.&lt;/p>
&lt;h2 id="configuración-inicial">Configuración inicial&lt;/h2>
&lt;h3 id="requisitos-previos">Requisitos previos&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Cuenta de Azure&lt;/strong>: Si no tienes una, regístrate en &lt;a href="https://portal.azure.com/">Azure Portal&lt;/a>.&lt;/li>
&lt;li>&lt;strong>Visual Studio 2022 o Visual Studio Code&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>SDK de .NET 6 o superior&lt;/strong> instalado.&lt;/li>
&lt;/ol>
&lt;h3 id="crear-una-cuenta-de-azure-cosmos-db">Crear una cuenta de Azure Cosmos DB&lt;/h3>
&lt;ol>
&lt;li>Inicia sesión en el &lt;a href="https://portal.azure.com/">portal de Azure&lt;/a>.&lt;/li>
&lt;li>Haz clic en &lt;strong>Crear un recurso&lt;/strong> &amp;gt; &lt;strong>Bases de datos&lt;/strong> &amp;gt; &lt;strong>Azure Cosmos DB&lt;/strong>.&lt;/li>
&lt;li>Selecciona el modelo de API SQL (Core).&lt;/li>
&lt;li>Proporciona los detalles necesarios:
&lt;ul>
&lt;li>&lt;strong>Nombre de la cuenta&lt;/strong>: &lt;code>blazor-cosmosdb-demo&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Grupo de recursos&lt;/strong>: Crea uno nuevo o selecciona uno existente.&lt;/li>
&lt;li>&lt;strong>Ubicación&lt;/strong>: Selecciona la región más cercana a tus usuarios.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Haz clic en &lt;strong>Revisar y crear&lt;/strong>.&lt;/li>
&lt;li>Una vez creada, accede a la cuenta de Cosmos DB y toma nota de la clave primaria y la cadena de conexión.&lt;/li>
&lt;/ol>
&lt;h2 id="crear-una-aplicación-blazor-con-cosmos-db">Crear una aplicación Blazor con Cosmos DB&lt;/h2>
&lt;h3 id="paso-1-configurar-el-proyecto-blazor">Paso 1: Configurar el proyecto Blazor&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Crea un nuevo proyecto Blazor Server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet new blazorserver -o BlazorCosmosDemo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd BlazorCosmosDemo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Instala el paquete NuGet para Azure Cosmos DB:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">dotnet&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="kn">package&lt;/span> &lt;span class="nx">Microsoft&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Azure&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Cosmos&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Verifica que los paquetes estén instalados correctamente ejecutando:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet list package
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="paso-2-configurar-la-conexión-a-cosmos-db">Paso 2: Configurar la conexión a Cosmos DB&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Agrega las configuraciones de Cosmos DB al archivo &lt;code>appsettings.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;CosmosDb&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;AccountEndpoint&amp;#34;: &amp;#34;&amp;lt;TU_ENDPOINT&amp;gt;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;AccountKey&amp;#34;: &amp;#34;&amp;lt;TU_LLAVE&amp;gt;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;DatabaseName&amp;#34;: &amp;#34;BlazorDemoDB&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;ContainerName&amp;#34;: &amp;#34;Items&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Configura los servicios en &lt;code>Program.cs&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Azure&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Cosmos&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">builder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">WebApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CreateBuilder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddSingleton&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">config&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetSection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;CosmosDb&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">CosmosClient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;AccountEndpoint&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">config&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;AccountKey&amp;#34;&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddSingleton&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CosmosDbService&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Build&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Run&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="paso-3-crear-el-servicio-cosmos-db">Paso 3: Crear el servicio Cosmos DB&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Crea una clase llamada &lt;code>CosmosDbService&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Azure&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Cosmos&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Threading&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Tasks&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">CosmosDbService&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">readonly&lt;/span> &lt;span class="n">CosmosClient&lt;/span> &lt;span class="n">_cosmosClient&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">readonly&lt;/span> &lt;span class="ne">Container&lt;/span> &lt;span class="n">_container&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">CosmosDbService&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CosmosClient&lt;/span> &lt;span class="n">cosmosClient&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">IConfiguration&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_cosmosClient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cosmosClient&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">databaseName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;CosmosDb:DatabaseName&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">containerName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;CosmosDb:ContainerName&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_container&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_cosmosClient&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetContainer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">databaseName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">containerName&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">AddItemAsync&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">T&lt;/span> &lt;span class="n">item&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">_container&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CreateItemAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">PartitionKey&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">GetItemsAsync&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">query&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">items&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">iterator&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_container&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetItemQueryIterator&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">query&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">iterator&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">HasMoreResults&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">iterator&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ReadNextAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">items&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">DeleteItemAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">_container&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DeleteItemAsync&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">PartitionKey&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Implementa pruebas básicas para verificar la funcionalidad del servicio:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Ejemplo&lt;/span> &lt;span class="n">de&lt;/span> &lt;span class="n">prueba&lt;/span> &lt;span class="n">rápida&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">service&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">CosmosDbService&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">client&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">await&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddItemAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Test Item&amp;#34;&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">items&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetItemsAsync&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">dynamic&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;SELECT * FROM c&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">WriteLine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="crear-un-componente-blazor-para-interactuar-con-cosmos-db">Crear un componente Blazor para interactuar con Cosmos DB&lt;/h2>
&lt;h3 id="paso-1-crear-el-componente-itemlistrazor">Paso 1: Crear el componente &lt;code>ItemList.razor&lt;/code>&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Crea un nuevo componente llamado &lt;code>ItemList.razor&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">inject&lt;/span> &lt;span class="n">CosmosDbService&lt;/span> &lt;span class="n">CosmosDbService&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">h3&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Lista&lt;/span> &lt;span class="n">de&lt;/span> &lt;span class="n">Items&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">h3&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">button&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">onclick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;LoadItems&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Cargar&lt;/span> &lt;span class="n">Items&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">button&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">button&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">onclick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;AddNewItem&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Agregar&lt;/span> &lt;span class="n">Item&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">button&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">ul&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">foreach&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">var&lt;/span> &lt;span class="n">item&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">Items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">li&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Name&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">button&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">onclick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;() =&amp;gt; DeleteItem(item.Id)&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Eliminar&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">button&lt;/span>&lt;span class="o">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="n">li&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">ul&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">code&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Item&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">Items&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Item&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">LoadItems&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Items&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">CosmosDbService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetItemsAsync&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Item&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;SELECT * FROM c&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">AddNewItem&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">newItem&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Item&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Guid&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">NewGuid&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ToString&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">Name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Nuevo Item&amp;#34;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">CosmosDbService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddItemAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">newItem&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">newItem&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">LoadItems&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">DeleteItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">CosmosDbService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DeleteItemAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">LoadItems&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">Item&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="n">Id&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="n">Name&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="paso-2-agregar-el-componente-a-la-página-principal">Paso 2: Agregar el componente a la página principal&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Abre &lt;code>Pages/Index.razor&lt;/code> y agrega:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;ItemList /&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Optimiza las consultas&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Usa índices en Cosmos DB para acelerar las búsquedas.&lt;/li>
&lt;li>Realiza consultas específicas con cláusulas WHERE para evitar iteraciones innecesarias.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Manejo de errores&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Implementa bloques try-catch en las operaciones CRUD.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Paginación&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Implementa la funcionalidad de paginación para manejar grandes volúmenes de datos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Validación de datos&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Verifica y valida los datos antes de insertarlos en Cosmos DB.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Seguridad&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>No expongas directamente las claves de acceso en el cliente.&lt;/li>
&lt;li>Usa servicios de identidad como Azure Managed Identity.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Integrar &lt;strong>Azure Cosmos DB&lt;/strong> con &lt;strong>Blazor&lt;/strong> permite construir aplicaciones escalables y dinámicas con facilidad. Este artículo ha detallado un enfoque paso a paso para configurar, integrar y trabajar con &lt;strong>Cosmos DB&lt;/strong> en aplicaciones &lt;strong>Blazor&lt;/strong>, incluyendo funcionalidades avanzadas como eliminación y paginación. Con el uso de servicios bien configurados y buenas prácticas, puedes aprovechar al máximo esta poderosa base de datos en la nube. ¡Explora las posibilidades de &lt;strong>Azure Cosmos DB&lt;/strong> en tus proyectos &lt;strong>Blazor&lt;/strong> y lleva tus aplicaciones al siguiente nivel!&lt;/p></description></item><item><title>Blazor WebAssembly vs Blazor Server: ¿Cuál elegir?</title><link>https://cmas.dev/posts/2024-10-02-blazor-webassembly-vs-server/</link><pubDate>Wed, 02 Oct 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-10-02-blazor-webassembly-vs-server/</guid><description>&lt;p>&lt;strong>Blazor&lt;/strong>, el framework de desarrollo de aplicaciones web basado en &lt;strong>.NET&lt;/strong>, ofrece dos opciones principales para crear aplicaciones interactivas: &lt;strong>Blazor WebAssembly&lt;/strong> y &lt;strong>Blazor Server&lt;/strong>. Ambas tecnologías tienen sus propias fortalezas, debilidades y casos de uso ideales. En este artículo, exploraremos en detalle estas dos modalidades para ayudarte a decidir cuál se adapta mejor a tu proyecto.&lt;/p>
&lt;h2 id="qué-es-blazor">¿Qué es Blazor?&lt;/h2>
&lt;p>Blazor es un framework desarrollado por Microsoft que permite construir aplicaciones web utilizando C#. Blazor se basa en componentes reutilizables que combinan lógica de programación y diseño HTML. Una de las características más interesantes de Blazor es que permite a los desarrolladores trabajar con C# tanto en el cliente como en el servidor, eliminando la dependencia exclusiva de JavaScript.&lt;/p>
&lt;h2 id="blazor-webassembly">Blazor WebAssembly&lt;/h2>
&lt;h3 id="definición">Definición&lt;/h3>
&lt;p>Blazor WebAssembly (WASM) ejecuta aplicaciones directamente en el navegador utilizando WebAssembly. Todo el código, incluidas las dependencias .NET y la lógica de la aplicación, se descarga y ejecuta en el cliente.&lt;/p>
&lt;h3 id="características-principales">Características principales&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Ejecución en el cliente&lt;/strong>:
&lt;ul>
&lt;li>Todo el procesamiento ocurre en el navegador del usuario.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Sin dependencia del servidor&lt;/strong>:
&lt;ul>
&lt;li>Las aplicaciones pueden ejecutarse completamente offline.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Despliegue sencillo&lt;/strong>:
&lt;ul>
&lt;li>Puede alojarse en cualquier servidor web o incluso en un sistema de almacenamiento estático como Azure Blob Storage o GitHub Pages.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="código-de-ejemplo">Código de ejemplo&lt;/h3>
&lt;h4 id="componente-blazor-webassembly">Componente Blazor WebAssembly&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@page &amp;#34;/counter&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;h3&amp;gt;Contador&amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;p&amp;gt;Cuenta actual: @currentCount&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;button @onclick=&amp;#34;IncrementCount&amp;#34;&amp;gt;Incrementar&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private int currentCount = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private void IncrementCount()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> currentCount++;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ventajas">Ventajas&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Independencia del servidor&lt;/strong>:
&lt;ul>
&lt;li>Ideal para aplicaciones que necesitan trabajar offline o con una conectividad intermitente.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Escalabilidad&lt;/strong>:
&lt;ul>
&lt;li>Reduce la carga en el servidor, ya que el cliente maneja el procesamiento.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Despliegue flexible&lt;/strong>:
&lt;ul>
&lt;li>Compatible con múltiples plataformas de hosting.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="desventajas">Desventajas&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Tiempo de carga inicial&lt;/strong>:
&lt;ul>
&lt;li>La descarga de la aplicación puede ser lenta debido al tamaño de los archivos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Limitaciones del navegador&lt;/strong>:
&lt;ul>
&lt;li>Depende del soporte de WebAssembly y de los recursos disponibles en el dispositivo del usuario.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Seguridad&lt;/strong>:
&lt;ul>
&lt;li>El código ejecutado en el cliente es más susceptible a ser inspeccionado o manipulado.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="casos-de-uso-ideales">Casos de uso ideales&lt;/h3>
&lt;ul>
&lt;li>Aplicaciones que necesitan funcionar offline.&lt;/li>
&lt;li>Interfaces ricas en interactividad que dependen poco del servidor.&lt;/li>
&lt;li>Aplicaciones pequeñas o medianas donde el tamaño inicial de descarga no es un problema.&lt;/li>
&lt;/ul>
&lt;h2 id="blazor-server">Blazor Server&lt;/h2>
&lt;h3 id="definición-1">Definición&lt;/h3>
&lt;p>Blazor Server ejecuta la lógica de la aplicación en el servidor. La interfaz de usuario se actualiza en el cliente a través de una conexión en tiempo real utilizando SignalR.&lt;/p>
&lt;h3 id="características-principales-1">Características principales&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Ejecución en el servidor&lt;/strong>:
&lt;ul>
&lt;li>Todo el procesamiento ocurre en el servidor y solo se envían actualizaciones al cliente.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Rendimiento inmediato&lt;/strong>:
&lt;ul>
&lt;li>No es necesario descargar toda la aplicación al inicio.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Seguridad avanzada&lt;/strong>:
&lt;ul>
&lt;li>El código y los datos permanecen en el servidor.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="código-de-ejemplo-1">Código de ejemplo&lt;/h3>
&lt;h4 id="componente-blazor-server">Componente Blazor Server&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">page&lt;/span> &lt;span class="s2">&amp;#34;/weather&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">h3&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Pronóstico&lt;/span> &lt;span class="n">del&lt;/span> &lt;span class="n">tiempo&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">h3&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">forecasts&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">null&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Cargando&lt;/span>&lt;span class="o">...&amp;lt;/&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">table&lt;/span> &lt;span class="k">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;table&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">thead&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">tr&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">th&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Fecha&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">th&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">th&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Temperatura&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">C&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">th&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">th&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Resumen&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">th&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">tr&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">thead&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">tbody&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">foreach&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">var&lt;/span> &lt;span class="n">forecast&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">forecasts&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">tr&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">td&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">forecast&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Date&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ToShortDateString&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">td&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">td&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">forecast&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TemperatureC&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">td&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">td&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">forecast&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Summary&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">td&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">tr&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">tbody&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">table&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">code&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">WeatherForecast&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="n">forecasts&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">protected&lt;/span> &lt;span class="n">override&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">OnInitializedAsync&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">forecasts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">Http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetFromJsonAsync&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">WeatherForecast&lt;/span>&lt;span class="p">[]&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;weatherforecast&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">WeatherForecast&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">DateTime&lt;/span> &lt;span class="n">Date&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="ne">int&lt;/span> &lt;span class="n">TemperatureC&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="n">Summary&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ventajas-1">Ventajas&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Inicio rápido&lt;/strong>:
&lt;ul>
&lt;li>La aplicación comienza a funcionar casi de inmediato.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Menor uso de recursos del cliente&lt;/strong>:
&lt;ul>
&lt;li>Ideal para dispositivos con recursos limitados.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Compatibilidad con navegadores&lt;/strong>:
&lt;ul>
&lt;li>Funciona en cualquier navegador moderno sin necesidad de soporte para WebAssembly.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="desventajas-1">Desventajas&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Dependencia del servidor&lt;/strong>:
&lt;ul>
&lt;li>Requiere una conexión constante al servidor para funcionar.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Escalabilidad limitada&lt;/strong>:
&lt;ul>
&lt;li>Aumenta la carga en el servidor, especialmente en aplicaciones con muchos usuarios simultáneos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Latencia&lt;/strong>:
&lt;ul>
&lt;li>La experiencia del usuario puede verse afectada por una conexión lenta o inestable.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="casos-de-uso-ideales-1">Casos de uso ideales&lt;/h3>
&lt;ul>
&lt;li>Aplicaciones empresariales que requieren alta seguridad.&lt;/li>
&lt;li>Interfaces con usuarios que necesitan acceso inmediato.&lt;/li>
&lt;li>Aplicaciones que gestionan datos sensibles y complejos.&lt;/li>
&lt;/ul>
&lt;h2 id="comparación-detallada">Comparación detallada&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Característica&lt;/th>
&lt;th>Blazor WebAssembly&lt;/th>
&lt;th>Blazor Server&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Ejecución&lt;/strong>&lt;/td>
&lt;td>Cliente&lt;/td>
&lt;td>Servidor&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Tiempo de carga inicial&lt;/strong>&lt;/td>
&lt;td>Más lento&lt;/td>
&lt;td>Más rápido&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Funciona offline&lt;/strong>&lt;/td>
&lt;td>Sí&lt;/td>
&lt;td>No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Carga del servidor&lt;/strong>&lt;/td>
&lt;td>Baja&lt;/td>
&lt;td>Alta&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Requisitos del cliente&lt;/strong>&lt;/td>
&lt;td>Navegador con soporte WebAssembly&lt;/td>
&lt;td>Navegador moderno&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Conexión persistente&lt;/strong>&lt;/td>
&lt;td>No necesaria&lt;/td>
&lt;td>Necesaria&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Seguridad&lt;/strong>&lt;/td>
&lt;td>Menos seguro&lt;/td>
&lt;td>Más seguro&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="cuál-elegir">¿Cuál elegir?&lt;/h2>
&lt;p>La elección entre Blazor WebAssembly y Blazor Server depende en gran medida de los requisitos de tu proyecto. Aquí tienes una guía básica para ayudarte a decidir:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Elige Blazor WebAssembly si&amp;hellip;&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Necesitas que la aplicación funcione offline.&lt;/li>
&lt;li>Quieres reducir la carga en el servidor.&lt;/li>
&lt;li>Estás desarrollando una aplicación que puede tolerar tiempos de carga inicial más largos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Elige Blazor Server si&amp;hellip;&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Estás creando una aplicación empresarial con datos sensibles.&lt;/li>
&lt;li>Necesitas una experiencia de usuario inmediata sin descargas pesadas.&lt;/li>
&lt;li>El entorno tiene una conectividad constante y fiable.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>&lt;strong>Blazor WebAssembly&lt;/strong> y &lt;strong>Blazor Server&lt;/strong> son dos tecnologías potentes y flexibles que cubren diferentes necesidades. &lt;strong>Blazor WebAssembly&lt;/strong> es ideal para aplicaciones independientes del servidor con requisitos offline, mientras que &lt;strong>Blazor Server&lt;/strong> sobresale en aplicaciones empresariales que necesitan alta seguridad y rendimiento inmediato. Evalúa las necesidades específicas de tu proyecto, el entorno de tus usuarios y los recursos disponibles para tomar la mejor decisión.&lt;/p></description></item><item><title>Gestión de estado en Angular con NgRx</title><link>https://cmas.dev/posts/2024-09-25-state-management-angular/</link><pubDate>Wed, 25 Sep 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-09-25-state-management-angular/</guid><description>&lt;p>La gestión de estado es un aspecto fundamental en el desarrollo de aplicaciones frontend, especialmente en aplicaciones complejas donde se manejan grandes cantidades de datos compartidos entre componentes. &lt;strong>NgRx&lt;/strong> es una librería basada en &lt;strong>Redux&lt;/strong> que permite gestionar el estado de manera predecible y escalable en aplicaciones &lt;strong>Angular&lt;/strong>. Este artículo ofrece una guía detallada para implementar y utilizar NgRx en tus proyectos Angular.&lt;/p>
&lt;h2 id="1-qué-es-ngrx-y-por-qué-usarlo">1. ¿Qué es NgRx y por qué usarlo?&lt;/h2>
&lt;p>NgRx es una implementación de patrones Redux y RxJS para Angular. Redux se basa en un estado único y centralizado que describe toda la aplicación. NgRx combina este patrón con la reactividad de RxJS para manejar flujos de datos asincrónicos y garantizar la inmutabilidad.&lt;/p>
&lt;h3 id="ventajas-de-ngrx">Ventajas de NgRx:&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Estado centralizado:&lt;/strong> Facilita la sincronización entre componentes.&lt;/li>
&lt;li>&lt;strong>Predecibilidad:&lt;/strong> Los cambios en el estado son manejados mediante acciones y reducers, lo que mejora la trazabilidad.&lt;/li>
&lt;li>&lt;strong>Escalabilidad:&lt;/strong> Ideal para aplicaciones de gran tamaño.&lt;/li>
&lt;li>&lt;strong>Integración con RxJS:&lt;/strong> Simplifica el manejo de operaciones asincrónicas.&lt;/li>
&lt;/ul>
&lt;h2 id="2-instalación-y-configuración-inicial">2. Instalación y configuración inicial&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Instalar NgRx:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">npm&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">ngrx&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">store&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">ngrx&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">effects&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">ngrx&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">entity&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">ngrx&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">store&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">devtools&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Configurar el Store en el módulo principal:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">NgModule&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">StoreModule&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@ngrx/store&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">EffectsModule&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@ngrx/effects&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">StoreDevtoolsModule&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@ngrx/store-devtools&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">environment&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;../environments/environment&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">NgModule&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">imports&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">StoreModule&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">forRoot&lt;/span>&lt;span class="p">({},&lt;/span> &lt;span class="p">{}),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">EffectsModule&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">forRoot&lt;/span>&lt;span class="p">([]),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">!&lt;/span>&lt;span class="n">environment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">production&lt;/span> &lt;span class="err">?&lt;/span> &lt;span class="n">StoreDevtoolsModule&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">instrument&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">declarations&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">AppComponent&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">bootstrap&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">AppComponent&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">AppModule&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="3-conceptos-fundamentales-de-ngrx">3. Conceptos fundamentales de NgRx&lt;/h2>
&lt;h3 id="store">Store&lt;/h3>
&lt;p>El &lt;strong>Store&lt;/strong> es un contenedor global para el estado de la aplicación. Proporciona una única fuente de verdad que todos los componentes pueden acceder.&lt;/p>
&lt;h3 id="actions">Actions&lt;/h3>
&lt;p>Las &lt;strong>acciones&lt;/strong> describen eventos que ocurren en la aplicación y disparan cambios en el estado.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">createAction&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">props&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@ngrx/store&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">loadTasks&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">createAction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;[Tasks] Load Tasks&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">addTask&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">createAction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;[Tasks] Add Task&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">props&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="p">{&lt;/span> &lt;span class="n">task&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="p">}&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="reducers">Reducers&lt;/h3>
&lt;p>Los &lt;strong>reducers&lt;/strong> especifican cómo cambia el estado en respuesta a las acciones.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">createReducer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">on&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@ngrx/store&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">loadTasks&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">addTask&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./tasks.actions&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">interface&lt;/span> &lt;span class="n">TaskState&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">tasks&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">initialState&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TaskState&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">tasks&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[]&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">tasksReducer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">createReducer&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">initialState&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">loadTasks&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">state&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">({&lt;/span> &lt;span class="o">...&lt;/span>&lt;span class="n">state&lt;/span> &lt;span class="p">})),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">addTask&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">state&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="p">})&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">({&lt;/span> &lt;span class="o">...&lt;/span>&lt;span class="n">state&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tasks&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="n">state&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tasks&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">task&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">}))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="selectors">Selectors&lt;/h3>
&lt;p>Los &lt;strong>selectors&lt;/strong> permiten acceder a partes específicas del estado.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">createSelector&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@ngrx/store&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">selectTasksState&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">state&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">any&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">state&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tasks&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">selectAllTasks&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">createSelector&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">selectTasksState&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">state&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TaskState&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">state&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tasks&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="effects">Effects&lt;/h3>
&lt;p>Los &lt;strong>effects&lt;/strong> manejan operaciones asincrónicas como llamadas HTTP y despachan nuevas acciones.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Injectable&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Actions&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">createEffect&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ofType&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@ngrx/effects&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">map&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mergeMap&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;rxjs/operators&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">TaskService&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./task.service&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">loadTasks&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">addTask&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./tasks.actions&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Injectable&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">TaskEffects&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">loadTasks&lt;/span>&lt;span class="o">$&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">createEffect&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">actions&lt;/span>&lt;span class="o">$.&lt;/span>&lt;span class="n">pipe&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ofType&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">loadTasks&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mergeMap&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">taskService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getTasks&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pipe&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tasks&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">addTask&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">task&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">tasks&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">}))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">actions&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Actions&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">private&lt;/span> &lt;span class="n">taskService&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TaskService&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="4-implementación-paso-a-paso">4. Implementación paso a paso&lt;/h2>
&lt;h3 id="1-creación-del-store">1. Creación del Store&lt;/h3>
&lt;p>Define el estado inicial y regístralo en el módulo principal.&lt;/p>
&lt;h3 id="2-definición-de-acciones-y-reducers">2. Definición de acciones y reducers&lt;/h3>
&lt;p>Crea acciones para describir eventos y reducers para modificar el estado.&lt;/p>
&lt;h3 id="3-uso-de-selectors-en-componentes">3. Uso de selectors en componentes&lt;/h3>
&lt;p>Accede al estado usando &lt;code>Store&lt;/code> y &lt;code>selectors&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Component&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Store&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@ngrx/store&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">selectAllTasks&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./tasks.selectors&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">selector&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;app-task-list&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">template&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;ul&amp;gt;&amp;lt;li *ngFor=&amp;#34;let task of tasks$ | async&amp;#34;&amp;gt;{{ task }}&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">TaskListComponent&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">tasks&lt;/span>&lt;span class="o">$&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">store&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">selectAllTasks&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">store&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Store&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-manejo-de-efectos-para-llamadas-http">4. Manejo de efectos para llamadas HTTP&lt;/h3>
&lt;p>Usa effects para realizar operaciones asincrónicas y despachar acciones.&lt;/p>
&lt;h2 id="5-buenas-prácticas-en-ngrx">5. Buenas prácticas en NgRx&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Mantén los reducers simples:&lt;/strong> Divide los reducers en funciones más pequeñas si es necesario.&lt;/li>
&lt;li>&lt;strong>Usa actions descriptivas:&lt;/strong> Los nombres de las acciones deben describir claramente el evento.&lt;/li>
&lt;li>&lt;strong>Centraliza la lógica en effects:&lt;/strong> Mantén las operaciones complejas fuera de los componentes.&lt;/li>
&lt;li>&lt;strong>Prueba todo:&lt;/strong> Asegúrate de probar reducers, effects y selectors.&lt;/li>
&lt;/ul>
&lt;h2 id="6-ejemplo-práctico-aplicación-de-tareas">6. Ejemplo práctico: Aplicación de tareas&lt;/h2>
&lt;h3 id="estructura-del-proyecto">Estructura del proyecto&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">project/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── actions/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── tasks.actions.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── reducers/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── tasks.reducer.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── effects/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── tasks.effects.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── selectors/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── tasks.selectors.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── components/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └── task-list.component.ts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="resultado-esperado">Resultado esperado&lt;/h3>
&lt;p>Una lista de tareas que se actualiza dinámicamente al agregar nuevas tareas o al cargarlas desde una API.&lt;/p>
&lt;h2 id="7-conclusión">7. Conclusión&lt;/h2>
&lt;p>&lt;strong>NgRx&lt;/strong> es una herramienta poderosa para gestionar el estado en aplicaciones Angular complejas. Aunque puede requerir una curva de aprendizaje inicial, su enfoque estructurado y predecible mejora significativamente la mantenibilidad y escalabilidad del código. Al seguir las mejores prácticas descritas en este artículo, estarás bien equipado para implementar &lt;strong>NgRx&lt;/strong> en tus proyectos Angular con éxito.&lt;/p></description></item><item><title>Angular y Firebase: Uso avanzado de RxJS</title><link>https://cmas.dev/posts/2024-09-18-angular-and-firebase/</link><pubDate>Wed, 18 Sep 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-09-18-angular-and-firebase/</guid><description>&lt;p>&lt;strong>Angular&lt;/strong> y &lt;strong>Firebase&lt;/strong> son una combinación poderosa para el desarrollo de aplicaciones web modernas y reactivas. Al integrar &lt;strong>Firebase&lt;/strong> en &lt;strong>Angular&lt;/strong>, &lt;strong>RxJS&lt;/strong> se convierte en una herramienta clave para gestionar flujos de datos y operaciones asincrónicas de manera eficiente. Este artículo explora el uso avanzado de RxJS en aplicaciones &lt;strong>Angular&lt;/strong> con &lt;strong>Firebase&lt;/strong>, proporcionando ejemplos prácticos y estrategias para maximizar su potencial.&lt;/p>
&lt;h2 id="1-introducción-a-angular-firebase-y-rxjs">1. Introducción a Angular, Firebase y RxJS&lt;/h2>
&lt;h3 id="angular">Angular&lt;/h3>
&lt;p>Angular es un framework frontend de código abierto desarrollado por Google. Es conocido por su arquitectura basada en componentes y su uso extensivo de RxJS para manejar flujos de datos reactivos.&lt;/p>
&lt;h3 id="firebase">Firebase&lt;/h3>
&lt;p>Firebase es una plataforma para el desarrollo de aplicaciones que proporciona servicios como almacenamiento en la nube, autenticación, bases de datos en tiempo real y hosting.&lt;/p>
&lt;h3 id="rxjs">RxJS&lt;/h3>
&lt;p>RxJS (Reactive Extensions for JavaScript) es una biblioteca para programación reactiva que permite trabajar con flujos de datos asincrónicos. En Angular, RxJS se usa para gestionar observables en servicios como HttpClient, formularios reactivos y Firebase.&lt;/p>
&lt;h2 id="2-configuración-inicial-del-proyecto">2. Configuración inicial del proyecto&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Crear un nuevo proyecto Angular:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng new angular-firebase-rxjs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd angular-firebase-rxjs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Instalar AngularFire y Firebase:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install firebase @angular/fire rxjs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Configurar Firebase en el proyecto:&lt;/strong>
Agrega el archivo de configuración de Firebase en &lt;code>environment.ts&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">environment&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">firebase&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">apiKey&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;API_KEY&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">authDomain&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;AUTH_DOMAIN&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">projectId&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;PROJECT_ID&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">storageBucket&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;STORAGE_BUCKET&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">messagingSenderId&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;MESSAGING_SENDER_ID&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">appId&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;APP_ID&amp;gt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Importar AngularFire en el módulo principal:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">AngularFireModule&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/fire/compat&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">AngularFirestoreModule&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/fire/compat/firestore&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">NgModule&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">declarations&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">AppComponent&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">imports&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">BrowserModule&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">AngularFireModule&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">initializeApp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">environment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">firebase&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">AngularFirestoreModule&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">bootstrap&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">AppComponent&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">AppModule&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="3-uso-de-rxjs-con-firestore">3. Uso de RxJS con Firestore&lt;/h2>
&lt;h3 id="consultas-reactivas">Consultas reactivas&lt;/h3>
&lt;p>Firestore se integra perfectamente con RxJS al devolver observables para las consultas.&lt;/p>
&lt;p>&lt;strong>Ejemplo:&lt;/strong> Obtener datos de una colección.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">AngularFirestore&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/fire/compat/firestore&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Observable&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;rxjs&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Injectable&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">providedIn&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">TaskService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">firestore&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">AngularFirestore&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">getTasks&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">Observable&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">any&lt;/span>&lt;span class="p">[]&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">firestore&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">collection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;tasks&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">valueChanges&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="operadores-avanzados">Operadores avanzados&lt;/h3>
&lt;p>Puedes usar operadores de RxJS como &lt;code>map&lt;/code> y &lt;code>filter&lt;/code> para transformar datos.&lt;/p>
&lt;p>&lt;strong>Ejemplo:&lt;/strong> Filtrar tareas completadas.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">getCompletedTasks(): Observable&amp;lt;any[]&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return this.firestore.collection(&amp;#39;tasks&amp;#39;).valueChanges().pipe(
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> map(tasks =&amp;gt; tasks.filter(task =&amp;gt; task.completed))
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> );
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="4-manejo-de-autenticación-con-rxjs">4. Manejo de autenticación con RxJS&lt;/h2>
&lt;h3 id="observables-para-estado-de-autenticación">Observables para estado de autenticación&lt;/h3>
&lt;p>Firebase Authentication permite suscribirse al estado de autenticación mediante observables.&lt;/p>
&lt;p>&lt;strong>Ejemplo:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">AngularFireAuth&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/fire/compat/auth&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">afAuth&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">AngularFireAuth&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">getAuthState&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">Observable&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">any&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">afAuth&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">authState&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="pipes-para-transformaciones">Pipes para transformaciones&lt;/h3>
&lt;p>Usa pipes para modificar el flujo de datos según el usuario autenticado.&lt;/p>
&lt;p>&lt;strong>Ejemplo:&lt;/strong> Obtener el ID del usuario actual.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">getUserId(): Observable&amp;lt;string | null&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return this.afAuth.authState.pipe(
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> map(user =&amp;gt; user ? user.uid : null)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> );
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="5-estrategias-avanzadas-con-rxjs-y-firebase">5. Estrategias avanzadas con RxJS y Firebase&lt;/h2>
&lt;h3 id="combinar-datos-de-múltiples-colecciones">Combinar datos de múltiples colecciones&lt;/h3>
&lt;p>Puedes usar operadores como &lt;code>combineLatest&lt;/code> para trabajar con datos relacionados.&lt;/p>
&lt;p>&lt;strong>Ejemplo:&lt;/strong> Obtener tareas con detalles del usuario.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">combineLatest&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;rxjs&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">switchMap&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;rxjs/operators&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">getTasksWithUserDetails&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">Observable&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">any&lt;/span>&lt;span class="p">[]&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">firestore&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">collection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;tasks&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">valueChanges&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pipe&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switchMap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tasks&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">userObservables&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tasks&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">task&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">firestore&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">collection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;users&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">doc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">userId&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">valueChanges&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">combineLatest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">userObservables&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pipe&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">userDetails&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">tasks&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">({&lt;/span> &lt;span class="o">...&lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">userDetails&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">})))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="manejo-de-errores-reactivo">Manejo de errores reactivo&lt;/h3>
&lt;p>Usa &lt;code>catchError&lt;/code> para gestionar errores de manera elegante.&lt;/p>
&lt;p>&lt;strong>Ejemplo:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">getTasks(): Observable&amp;lt;any[]&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return this.firestore.collection(&amp;#39;tasks&amp;#39;).valueChanges().pipe(
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> catchError(error =&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> console.error(&amp;#39;Error fetching tasks:&amp;#39;, error);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return of([]); // Retorna un arreglo vacío en caso de error.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> })
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> );
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="6-ejemplo-práctico-dashboard-en-tiempo-real">6. Ejemplo práctico: Dashboard en tiempo real&lt;/h2>
&lt;p>Crea un dashboard que muestre tareas y permita actualizarlas en tiempo real.&lt;/p>
&lt;h3 id="servicio">Servicio&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">getRealTimeTasks&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">Observable&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">any&lt;/span>&lt;span class="p">[]&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">firestore&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">collection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;tasks&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">snapshotChanges&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pipe&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">actions&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">actions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">payload&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">doc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">payload&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">doc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">...&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="componente">Componente&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">selector&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;app-dashboard&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">template&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="err">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">div&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ngFor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;let task of tasks$ | async&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="n">task&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="p">}}&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="p">{{&lt;/span> &lt;span class="n">task&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">completed&lt;/span> &lt;span class="err">?&lt;/span> &lt;span class="s1">&amp;#39;Done&amp;#39;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;Pending&amp;#39;&lt;/span> &lt;span class="p">}}&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">DashboardComponent&lt;/span> &lt;span class="n">implements&lt;/span> &lt;span class="n">OnInit&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">tasks&lt;/span>&lt;span class="o">$!&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Observable&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">any&lt;/span>&lt;span class="p">[]&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">taskService&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">TaskService&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ngOnInit&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tasks&lt;/span>&lt;span class="o">$&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">taskService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getRealTimeTasks&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="7-conclusión">7. Conclusión&lt;/h2>
&lt;p>El uso avanzado de &lt;strong>RxJS&lt;/strong> con &lt;strong>Angular&lt;/strong> y &lt;strong>Firebase&lt;/strong> desbloquea todo el potencial de la programación reactiva. Desde consultas reactivas en &lt;strong>Firestore&lt;/strong> hasta manejo de autenticación y datos en tiempo real, &lt;strong>RxJS&lt;/strong> proporciona las herramientas necesarias para construir aplicaciones escalables y altamente interactivas. Aplicar estas técnicas mejorará la calidad y el rendimiento de tus proyectos.&lt;/p></description></item><item><title>Mejores prácticas de modularidad con Deno 2</title><link>https://cmas.dev/posts/2024-09-11-best-practices-modularity-deno2/</link><pubDate>Wed, 11 Sep 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-09-11-best-practices-modularity-deno2/</guid><description>&lt;p>&lt;strong>Deno 2&lt;/strong> ha revolucionado el desarrollo con &lt;strong>JavaScript&lt;/strong> y &lt;strong>TypeScript&lt;/strong> al proporcionar un entorno moderno, seguro y modular. Su sistema de importación basado en URL y su soporte nativo para &lt;strong>TypeScript&lt;/strong> facilitan la creación de aplicaciones bien estructuradas y mantenibles. En este artículo, exploraremos las mejores prácticas para lograr modularidad en proyectos con &lt;strong>Deno 2&lt;/strong>.&lt;/p>
&lt;h2 id="1-introducción-a-la-modularidad-en-deno-2">1. Introducción a la modularidad en Deno 2&lt;/h2>
&lt;p>La modularidad se refiere a dividir un programa en componentes más pequeños e independientes. En &lt;strong>Deno 2&lt;/strong>, cada archivo actúa como un módulo independiente, importado y exportado mediante URLs. Esto elimina la necesidad de gestores de paquetes como npm y fomenta un enfoque más directo para manejar dependencias.&lt;/p>
&lt;h3 id="ventajas-de-la-modularidad-en-deno-2">Ventajas de la modularidad en Deno 2&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Mantenibilidad:&lt;/strong> El código está organizado y es fácil de entender.&lt;/li>
&lt;li>&lt;strong>Reutilización:&lt;/strong> Los módulos pueden reutilizarse en diferentes proyectos.&lt;/li>
&lt;li>&lt;strong>Escalabilidad:&lt;/strong> Es más fácil agregar nuevas funcionalidades.&lt;/li>
&lt;li>&lt;strong>Colaboración:&lt;/strong> Los equipos pueden trabajar en diferentes módulos de forma independiente.&lt;/li>
&lt;/ul>
&lt;h2 id="2-estructura-de-carpetas-recomendada">2. Estructura de carpetas recomendada&lt;/h2>
&lt;p>Una estructura de carpetas bien organizada es esencial para la modularidad. Una configuración recomendada para proyectos en Deno es:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">project/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── src/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── controllers/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ └── userController.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── services/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ └── userService.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── utils/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ └── logger.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── deps.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── tests/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── userService_test.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── mod.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── README.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>&lt;code>src/&lt;/code>&lt;/strong>: Contiene el código principal de la aplicación.&lt;/li>
&lt;li>&lt;strong>&lt;code>deps.ts&lt;/code>&lt;/strong>: Centraliza las dependencias externas.&lt;/li>
&lt;li>&lt;strong>&lt;code>tests/&lt;/code>&lt;/strong>: Almacena los archivos de prueba.&lt;/li>
&lt;li>&lt;strong>&lt;code>mod.ts&lt;/code>&lt;/strong>: Archivo principal que expone los módulos necesarios.&lt;/li>
&lt;/ul>
&lt;h2 id="3-uso-de-depsts-para-centralizar-dependencias">3. Uso de deps.ts para centralizar dependencias&lt;/h2>
&lt;p>En Deno, es común utilizar un archivo &lt;code>deps.ts&lt;/code> para centralizar todas las dependencias externas, lo que facilita su gestión y actualización.&lt;/p>
&lt;h3 id="ejemplo-de-depsts">Ejemplo de deps.ts&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Router&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/oak/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">assertEquals&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/std/testing/asserts.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">config&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/dotenv/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="uso-en-un-módulo">Uso en un módulo&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Router&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../deps.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">router&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Router&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Hello, Deno!&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">listen&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8000&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="4-importaciones-y-exportaciones-claras">4. Importaciones y exportaciones claras&lt;/h2>
&lt;p>Las importaciones y exportaciones claras mejoran la legibilidad del código.&lt;/p>
&lt;h3 id="exportaciones-nombradas">Exportaciones nombradas&lt;/h3>
&lt;p>Prefiere exportar funciones y clases de manera nombrada:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">logInfo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">INFO&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="importaciones-claras">Importaciones claras&lt;/h3>
&lt;p>Importa solo lo necesario para evitar confusión:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">import { logInfo } from &amp;#34;./utils/logger.ts&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">logInfo(&amp;#34;Application started&amp;#34;);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="5-modularización-de-funcionalidades">5. Modularización de funcionalidades&lt;/h2>
&lt;h3 id="servicios">Servicios&lt;/h3>
&lt;p>Los servicios encapsulan la lógica de negocio.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">userService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">getUsers&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">Promise&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="ne">Array&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">User&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">[{&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;John Doe&amp;#34;&lt;/span> &lt;span class="p">}];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="controladores">Controladores&lt;/h3>
&lt;p>Los controladores gestionan las solicitudes HTTP.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">userController&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Router&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../deps.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">getUsers&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../services/userService.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">router&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Router&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/users&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">getUsers&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">default&lt;/span> &lt;span class="n">router&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="utilidades">Utilidades&lt;/h3>
&lt;p>Las utilidades ofrecen funciones auxiliares reutilizables.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">logError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">ERROR&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="6-testing-modular">6. Testing modular&lt;/h2>
&lt;p>Deno incluye soporte integrado para pruebas, lo que facilita el desarrollo modular.&lt;/p>
&lt;h3 id="ejemplo-de-prueba">Ejemplo de prueba&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">getUsers&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../src/services/userService.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">assertEquals&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../src/deps.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">deno&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;getUsers devuelve una lista de usuarios&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">users&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">getUsers&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">assertEquals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">assertEquals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;John Doe&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="7-ejemplo-práctico-api-rest-modular">7. Ejemplo práctico: API REST modular&lt;/h2>
&lt;h3 id="estructura-del-proyecto">Estructura del proyecto&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">project/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── src/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── controllers/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ └── userController.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── services/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ └── userService.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── deps.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── mod.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── tests/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── userService_test.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── README.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="modts">mod.ts&lt;/h3>
&lt;p>Archivo principal que inicia la aplicación:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Application&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;./deps.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="n">userRouter&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;./controllers/userController.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">userRouter&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Server running on http://localhost:8000&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">listen&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8000&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="8-conclusión">8. Conclusión&lt;/h2>
&lt;p>La modularidad en &lt;strong>Deno 2&lt;/strong> no solo mejora la organización del código, sino que también facilita la escalabilidad y mantenibilidad de los proyectos. Al seguir las mejores prácticas descritas, como centralizar dependencias, usar importaciones claras y escribir pruebas modulares, puedes garantizar que tus aplicaciones sean robustas y fáciles de gestionar a medida que crecen.&lt;/p></description></item><item><title>Configuración de CI/CD para proyectos Angular con GitHub Actions</title><link>https://cmas.dev/posts/2024-09-04-config-ci-cd-angular-github/</link><pubDate>Wed, 04 Sep 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-09-04-config-ci-cd-angular-github/</guid><description>&lt;p>La integración continua (CI) y la entrega continua (CD) son pilares fundamentales en el desarrollo de software moderno. &lt;strong>GitHub Actions&lt;/strong> proporciona una solución poderosa y flexible para automatizar procesos de &lt;strong>CI/CD&lt;/strong> directamente en repositorios de &lt;strong>GitHub&lt;/strong>. En este artículo, aprenderemos a configurar &lt;strong>CI/CD&lt;/strong> para un proyecto Angular utilizando &lt;strong>GitHub Actions&lt;/strong>.&lt;/p>
&lt;h2 id="1-introducción-a-cicd-y-github-actions">1. Introducción a CI/CD y GitHub Actions&lt;/h2>
&lt;h3 id="qué-es-cicd">¿Qué es CI/CD?&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>CI (Integración Continua):&lt;/strong> Automatiza la verificación del código mediante pruebas y validaciones cada vez que se realiza un cambio en el repositorio.&lt;/li>
&lt;li>&lt;strong>CD (Entrega Continua):&lt;/strong> Automatiza el proceso de despliegue del código a entornos de producción o pruebas.&lt;/li>
&lt;/ul>
&lt;h3 id="ventajas-de-github-actions">Ventajas de GitHub Actions&lt;/h3>
&lt;ul>
&lt;li>Integración nativa con repositorios de GitHub.&lt;/li>
&lt;li>Flexibilidad para definir pipelines personalizados.&lt;/li>
&lt;li>Amplio ecosistema de acciones reutilizables.&lt;/li>
&lt;li>Historial detallado de ejecuciones y logs.&lt;/li>
&lt;/ul>
&lt;h2 id="2-configuración-inicial-del-proyecto-angular">2. Configuración inicial del proyecto Angular&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Crear un proyecto Angular:&lt;/strong>
Si no tienes un proyecto Angular, puedes crear uno nuevo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng new angular-ci-cd-example
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd angular-ci-cd-example
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Subir el proyecto a GitHub:&lt;/strong>
Inicializa un repositorio y empuja el proyecto:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">git init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git remote add origin &amp;lt;tu-repositorio&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git commit -m &amp;#34;Initial commit&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push -u origin main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="3-creación-del-workflow-de-ci">3. Creación del workflow de CI&lt;/h2>
&lt;h3 id="estructura-básica-del-workflow">Estructura básica del workflow&lt;/h3>
&lt;p>GitHub Actions utiliza un archivo YAML ubicado en &lt;code>.github/workflows&lt;/code>. Crearemos un archivo llamado &lt;code>ci.yml&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">name: CI for Angular
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">on:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> push:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> branches:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pull_request:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> branches:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jobs:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> build-and-test:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> runs-on: ubuntu-latest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> steps:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Check out code
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uses: actions/checkout@v3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Set up Node.js
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uses: actions/setup-node@v3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> with:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> node-version: 18
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Install dependencies
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> run: npm ci
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Run linting
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> run: npm run lint
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Run tests
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> run: npm test
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="explicación-del-workflow">Explicación del workflow&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Eventos de disparo:&lt;/strong> Ejecuta el workflow en cada &lt;code>push&lt;/code> o &lt;code>pull_request&lt;/code> hacia la rama &lt;code>main&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Jobs:&lt;/strong> El trabajo &lt;code>build-and-test&lt;/code> incluye:
&lt;ul>
&lt;li>&lt;strong>actions/checkout:&lt;/strong> Descarga el código del repositorio.&lt;/li>
&lt;li>&lt;strong>actions/setup-node:&lt;/strong> Configura Node.js en la máquina.&lt;/li>
&lt;li>&lt;strong>npm ci:&lt;/strong> Instala las dependencias de forma limpia.&lt;/li>
&lt;li>&lt;strong>npm run lint:&lt;/strong> Ejecuta la verificación de estilo de código.&lt;/li>
&lt;li>&lt;strong>npm test:&lt;/strong> Ejecuta pruebas unitarias.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="4-configuración-del-workflow-de-cd">4. Configuración del workflow de CD&lt;/h2>
&lt;h3 id="despliegue-en-github-pages">Despliegue en GitHub Pages&lt;/h3>
&lt;p>Si deseas publicar tu aplicación Angular en GitHub Pages, sigue estos pasos:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Configurar el archivo &lt;code>angular.json&lt;/code>:&lt;/strong>
Asegúrate de que la propiedad &lt;code>outputPath&lt;/code> de &lt;code>build&lt;/code> esté configurada correctamente:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;#34;outputPath&amp;#34;: &amp;#34;dist/angular-ci-cd-example&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Agregar el workflow de despliegue:&lt;/strong>
Crea un archivo &lt;code>.github/workflows/cd-gh-pages.yml&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">name: Deploy to GitHub Pages
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">on:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> push:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> branches:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jobs:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> deploy:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> runs-on: ubuntu-latest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> steps:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Check out code
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uses: actions/checkout@v3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Set up Node.js
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uses: actions/setup-node@v3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> with:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> node-version: 18
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Install dependencies
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> run: npm ci
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Build project
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> run: npm run build -- --output-path=dist
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Deploy to GitHub Pages
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uses: peaceiris/actions-gh-pages@v3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> with:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> github_token: ${{ secrets.GITHUB_TOKEN }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> publish_dir: ./dist/angular-ci-cd-example
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Habilitar GitHub Pages:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Ve a la configuración de tu repositorio en GitHub.&lt;/li>
&lt;li>Activa GitHub Pages y selecciona la rama &lt;code>gh-pages&lt;/code> como fuente.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="despliegue-en-un-servidor-externo">Despliegue en un servidor externo&lt;/h3>
&lt;p>Si prefieres desplegar en un servidor externo, como AWS o Azure, puedes agregar un paso adicional al workflow.&lt;/p>
&lt;p>&lt;strong>Ejemplo para FTP:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Deploy&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">FTP&lt;/span> &lt;span class="n">server&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">uses&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">sebastianpopp&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ftp&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">action&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">v2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">with&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">host&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="n">secrets&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">FTP_HOST&lt;/span> &lt;span class="p">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">username&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="n">secrets&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">FTP_USERNAME&lt;/span> &lt;span class="p">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="n">secrets&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">FTP_PASSWORD&lt;/span> &lt;span class="p">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">local&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">dir&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">./&lt;/span>&lt;span class="n">dist&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">angular&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">ci&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">cd&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">example&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">remote&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">dir&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">www&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">html&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="5-buenas-prácticas-en-cicd-para-angular">5. Buenas prácticas en CI/CD para Angular&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Usar &lt;code>npm ci&lt;/code> en lugar de &lt;code>npm install&lt;/code>:&lt;/strong> Garantiza una instalación consistente de dependencias.&lt;/li>
&lt;li>&lt;strong>Configurar pruebas end-to-end (E2E):&lt;/strong> Agrega un paso para ejecutar pruebas E2E utilizando herramientas como Cypress o Protractor.&lt;/li>
&lt;li>&lt;strong>Separar workflows:&lt;/strong> Divide CI y CD en archivos separados para mayor claridad.&lt;/li>
&lt;li>&lt;strong>Utilizar secretos de GitHub:&lt;/strong> Almacena credenciales sensibles en &lt;code>Secrets&lt;/code> para mantener la seguridad.&lt;/li>
&lt;li>&lt;strong>Monitorear el rendimiento:&lt;/strong> Usa herramientas de seguimiento como Lighthouse para verificar el impacto de los cambios.&lt;/li>
&lt;/ol>
&lt;h2 id="6-conclusión">6. Conclusión&lt;/h2>
&lt;p>Configurar &lt;strong>CI/CD&lt;/strong> para proyectos &lt;strong>Angular&lt;/strong> con &lt;strong>GitHub Actions&lt;/strong> mejora la eficiencia del desarrollo y asegura entregas rápidas y confiables. Desde la ejecución de pruebas hasta el despliegue automatizado en &lt;strong>GitHub Pages&lt;/strong> o servidores externos, &lt;strong>GitHub Actions&lt;/strong> simplifica el proceso y permite un flujo de trabajo profesional y moderno. ¡Empieza a automatizar hoy mismo y lleva tu proyecto Angular al siguiente nivel!&lt;/p></description></item><item><title>Gráficos interactivos con Angular y D3.js</title><link>https://cmas.dev/posts/2024-08-28-interactive-graphics-angular-d3/</link><pubDate>Wed, 28 Aug 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-08-28-interactive-graphics-angular-d3/</guid><description>&lt;p>Los gráficos interactivos son esenciales para visualizar datos de manera efectiva en aplicaciones modernas. &lt;strong>Angular&lt;/strong>, combinado con &lt;strong>D3.js&lt;/strong>, ofrece una solución poderosa para crear visualizaciones dinámicas y altamente interactivas. Este artículo explora cómo integrar &lt;strong>D3.js&lt;/strong> en una aplicación &lt;strong>Angular&lt;/strong> para construir gráficos interactivos desde cero, proporcionando ejemplos prácticos y consejos clave.&lt;/p>
&lt;h2 id="1-introducción-a-angular-y-d3js">1. Introducción a Angular y D3.js&lt;/h2>
&lt;h3 id="angular">Angular&lt;/h3>
&lt;p>Angular es un framework de desarrollo frontend mantenido por Google que permite construir aplicaciones web robustas y escalables. Con su arquitectura basada en componentes y herramientas modernas como TypeScript y RxJS, Angular es ideal para proyectos grandes.&lt;/p>
&lt;h3 id="d3js">D3.js&lt;/h3>
&lt;p>D3.js (Data-Driven Documents) es una biblioteca de JavaScript para crear visualizaciones de datos utilizando SVG, HTML y CSS. Es conocido por su flexibilidad y capacidad para manipular el DOM en función de los datos.&lt;/p>
&lt;h3 id="por-qué-combinar-angular-y-d3js">¿Por qué combinar Angular y D3.js?&lt;/h3>
&lt;p>La combinación de Angular y D3.js permite:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Reactividad:&lt;/strong> Sincronizar datos y gráficos con cambios en tiempo real.&lt;/li>
&lt;li>&lt;strong>Modularidad:&lt;/strong> Organizar código de visualización en componentes reutilizables.&lt;/li>
&lt;li>&lt;strong>Interactividad:&lt;/strong> Crear experiencias de usuario enriquecedoras.&lt;/li>
&lt;/ul>
&lt;h2 id="2-configuración-del-proyecto-angular">2. Configuración del proyecto Angular&lt;/h2>
&lt;h3 id="creación-del-proyecto-angular">Creación del proyecto Angular&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Asegúrate de tener Angular CLI instalado:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install -g @angular/cli
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Crea un nuevo proyecto Angular:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng new graficos-angular-d3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd graficos-angular-d3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Instala D3.js:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install d3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="estructura-del-proyecto">Estructura del proyecto&lt;/h3>
&lt;p>Crea un nuevo componente para los gráficos:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ng generate component components/bar-chart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="3-fundamentos-de-d3js-en-angular">3. Fundamentos de D3.js en Angular&lt;/h2>
&lt;p>D3.js utiliza selectores para manipular elementos del DOM y vincularlos a datos. Al trabajar con Angular, es importante integrar estas funcionalidades en el ciclo de vida de los componentes.&lt;/p>
&lt;h3 id="seleccionar-un-elemento">Seleccionar un elemento&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">import * as d3 from &amp;#39;d3&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">d3.select(&amp;#39;svg&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> .append(&amp;#39;rect&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> .attr(&amp;#39;width&amp;#39;, 100)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> .attr(&amp;#39;height&amp;#39;, 50)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> .attr(&amp;#39;fill&amp;#39;, &amp;#39;blue&amp;#39;);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ciclo-de-vida-de-angular">Ciclo de vida de Angular&lt;/h3>
&lt;p>Usa &lt;code>ngOnInit&lt;/code> para inicializar gráficos:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Component&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">OnInit&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">selector&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;app-bar-chart&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">template&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;svg&amp;gt;&amp;lt;/svg&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">styleUrls&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;./bar-chart.component.css&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">BarChartComponent&lt;/span> &lt;span class="n">implements&lt;/span> &lt;span class="n">OnInit&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ngOnInit&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">createChart&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">createChart&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">svg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">d3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;svg&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">attr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;width&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">500&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">attr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;height&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">300&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">svg&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;rect&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">attr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;x&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">50&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">attr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;y&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">50&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">attr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;width&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">attr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;height&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">200&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">attr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;fill&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;steelblue&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="4-creando-un-gráfico-de-barras-interactivo">4. Creando un gráfico de barras interactivo&lt;/h2>
&lt;h3 id="configuración-inicial">Configuración inicial&lt;/h3>
&lt;p>Define los datos y el espacio de trabajo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">40&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">50&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">width&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">500&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">height&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">300&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">margin&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">top&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">right&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">bottom&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">left&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">40&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="renderizado-del-gráfico">Renderizado del gráfico&lt;/h3>
&lt;p>Crea las escalas y ejes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">d3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">scaleBand&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">domain&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toString&lt;/span>&lt;span class="p">()))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">margin&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">width&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">margin&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">padding&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">d3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">scaleLinear&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">domain&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">d3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">as&lt;/span> &lt;span class="n">number&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">nice&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">height&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">margin&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">bottom&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">margin&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">top&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">svg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">d3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;svg&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">attr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;width&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">attr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;height&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">svg&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;g&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">selectAll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;rect&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">enter&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;rect&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">attr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;x&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toString&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="n">as&lt;/span> &lt;span class="n">number&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">attr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;y&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">d&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">attr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;height&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">d&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">attr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;width&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">bandwidth&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">attr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;fill&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;steelblue&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="agregando-interactividad">Agregando interactividad&lt;/h3>
&lt;p>Agrega eventos de hover:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">svg.selectAll(&amp;#39;rect&amp;#39;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> .on(&amp;#39;mouseover&amp;#39;, function () {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> d3.select(this).attr(&amp;#39;fill&amp;#39;, &amp;#39;orange&amp;#39;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> })
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> .on(&amp;#39;mouseout&amp;#39;, function () {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> d3.select(this).attr(&amp;#39;fill&amp;#39;, &amp;#39;steelblue&amp;#39;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> });
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="5-creando-un-gráfico-de-líneas">5. Creando un gráfico de líneas&lt;/h2>
&lt;p>Define datos y escalas:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">lineData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">30&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">80&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">45&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">60&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">20&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">90&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">line&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">d3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">svg&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;path&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">datum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lineData&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">attr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;fill&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;none&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">attr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;stroke&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;steelblue&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">attr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;d&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">line&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="6-buenas-prácticas-para-trabajar-con-d3js-en-angular">6. Buenas prácticas para trabajar con D3.js en Angular&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Encapsular lógica en servicios:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Centraliza el código D3.js para evitar redundancia.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Utilizar ChangeDetectionStrategy.OnPush:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Mejora el rendimiento al minimizar detecciones de cambios innecesarias.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Evitar manipulaciones directas del DOM:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Usa ViewChild para seleccionar elementos del DOM en lugar de usar selectores globales.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="7-conclusión">7. Conclusión&lt;/h2>
&lt;p>&lt;strong>Angular&lt;/strong> y &lt;strong>D3.js&lt;/strong> forman una combinación poderosa para crear visualizaciones interactivas y reactivas. Aunque la integración puede requerir algunos ajustes iniciales, el resultado ofrece flexibilidad y modularidad en aplicaciones modernas. Al seguir las mejores prácticas y estructurar correctamente tu proyecto, puedes aprovechar al máximo estas herramientas.&lt;/p></description></item><item><title>Migración de Node.js a Deno: Caso práctico</title><link>https://cmas.dev/posts/2024-08-24-nodejs-migration-to-deno/</link><pubDate>Sat, 24 Aug 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-08-24-nodejs-migration-to-deno/</guid><description>&lt;p>En los últimos años, &lt;strong>Deno&lt;/strong> ha emergido como una alternativa moderna a &lt;strong>Node.js&lt;/strong>. Desarrollado por el mismo creador de &lt;strong>Node.js&lt;/strong>, &lt;strong>Deno&lt;/strong> busca abordar algunas de las limitaciones y problemas de diseño que han surgido con &lt;strong>Node.js&lt;/strong> a lo largo del tiempo. Este artículo presenta un caso práctico detallado sobre cómo migrar una aplicación existente de &lt;strong>Node.js&lt;/strong> a &lt;strong>Deno&lt;/strong>, destacando las diferencias clave, los desafíos y las soluciones.&lt;/p>
&lt;h2 id="1-introducción-a-deno-y-sus-ventajas">1. Introducción a Deno y sus ventajas&lt;/h2>
&lt;p>&lt;strong>Deno&lt;/strong> es un runtime moderno para &lt;strong>JavaScript&lt;/strong> y &lt;strong>TypeScript&lt;/strong> basado en &lt;strong>V8&lt;/strong> y &lt;strong>Rust&lt;/strong>. Se diferencia de &lt;strong>Node.js&lt;/strong> por su enfoque en la seguridad, su soporte nativo para &lt;strong>TypeScript&lt;/strong> y su sistema de módulos sin un administrador de paquetes como &lt;em>npm&lt;/em>.&lt;/p>
&lt;h3 id="ventajas-principales-de-deno">Ventajas principales de Deno:&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Seguridad por diseño:&lt;/strong> Deno ejecuta código en un sandbox, lo que significa que no tiene acceso a archivos, red o variables de entorno sin permisos explícitos.&lt;/li>
&lt;li>&lt;strong>Soporte nativo para TypeScript:&lt;/strong> No se necesita configuración adicional para usar TypeScript.&lt;/li>
&lt;li>&lt;strong>Gestor de módulos simplificado:&lt;/strong> Deno utiliza URLs para importar módulos, eliminando la necesidad de un archivo &lt;code>package.json&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Ecosistema moderno:&lt;/strong> Con un enfoque en el desarrollo moderno, Deno integra herramientas como un linter y formateador.&lt;/li>
&lt;/ul>
&lt;h2 id="2-preparativos-para-la-migración">2. Preparativos para la migración&lt;/h2>
&lt;h3 id="requisitos-previos">Requisitos previos&lt;/h3>
&lt;p>Antes de comenzar la migración, asegúrate de tener lo siguiente:&lt;/p>
&lt;ul>
&lt;li>Conocimiento básico de TypeScript.&lt;/li>
&lt;li>Acceso al código fuente de la aplicación Node.js.&lt;/li>
&lt;li>Deno instalado. Puedes instalarlo siguiendo la &lt;a href="https://deno.land/manual@v1.0.0/getting_started/installation">documentación oficial&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h3 id="configuración-del-entorno">Configuración del entorno&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Instalar Deno:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">curl -fsSL https://deno.land/install.sh | sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Configurar el editor:&lt;/strong> Si usas VS Code, instala la extensión oficial de Deno.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Revisar dependencias existentes:&lt;/strong> Enumera todas las dependencias utilizadas en tu proyecto de Node.js para planificar su equivalencia en Deno.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="3-diferencias-clave-entre-nodejs-y-deno">3. Diferencias clave entre Node.js y Deno&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Característica&lt;/th>
&lt;th>Node.js&lt;/th>
&lt;th>Deno&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Sistema de módulos&lt;/td>
&lt;td>CommonJS/ESM&lt;/td>
&lt;td>ESM por defecto&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Gestor de paquetes&lt;/td>
&lt;td>npm/yarn&lt;/td>
&lt;td>No tiene (usa URLs)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Soporte para TypeScript&lt;/td>
&lt;td>Configuración adicional requerida&lt;/td>
&lt;td>Soporte nativo&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Seguridad&lt;/td>
&lt;td>Sin restricciones&lt;/td>
&lt;td>Requiere permisos explícitos&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Herramientas integradas&lt;/td>
&lt;td>No&lt;/td>
&lt;td>Linter, formateador, test runner&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="4-migrando-una-aplicación-paso-a-paso">4. Migrando una aplicación paso a paso&lt;/h2>
&lt;h3 id="caso-práctico-api-rest">Caso práctico: API REST&lt;/h3>
&lt;p>Migraré una API REST básica en Node.js a Deno. La API utiliza Express y accede a una base de datos.&lt;/p>
&lt;h4 id="estructura-original-en-nodejs">Estructura original en Node.js:&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">project/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── package.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── src/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── index.js
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── routes/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ └── users.js
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── controllers/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ └── userController.js
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── db/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── connection.js
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── tests/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └── user.test.js
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="paso-1-migración-de-módulos">Paso 1: Migración de módulos&lt;/h4>
&lt;p>Deno no utiliza npm. En su lugar, los módulos se importan directamente desde URLs.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>En Node.js:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">express&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;express&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">express&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>En Deno:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Application&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/oak/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h4 id="paso-2-migración-del-código">Paso 2: Migración del código&lt;/h4>
&lt;p>Deno utiliza &lt;code>async&lt;/code>/&lt;code>await&lt;/code> de forma nativa para operaciones de red y archivo.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Ejemplo: Middleware para JSON en Node.js:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">express&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;express&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">express&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">express&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">json&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Equivalente en Deno:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Application&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/oak/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">next&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hasBody&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">state&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">body&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">next&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h4 id="paso-3-manejo-de-dependencias">Paso 3: Manejo de dependencias&lt;/h4>
&lt;p>En lugar de &lt;code>package.json&lt;/code>, Deno recomienda usar un archivo &lt;code>deps.ts&lt;/code> para centralizar los módulos importados:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Application&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/oak/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="paso-4-ajustes-en-pruebas">Paso 4: Ajustes en pruebas&lt;/h4>
&lt;p>Deno incluye un test runner integrado:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Prueba en Node.js (Jest):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-j" data-lang="j">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#39;should return all users&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nv">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">const&lt;/span> &lt;span class="nv">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">await&lt;/span> &lt;span class="nv">request&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">app&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="nv">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#39;/users&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="nv">status&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="nv">toBe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">200&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Equivalente en Deno:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">assertEquals&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/std/testing/asserts.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Deno&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;should return all users&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;http://localhost:8000/users&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">assertEquals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">200&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="5-buenas-prácticas-para-la-migración">5. Buenas prácticas para la migración&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Iniciar con módulos pequeños:&lt;/strong> Identifica partes autónomas del proyecto que puedan migrarse de manera independiente.&lt;/li>
&lt;li>&lt;strong>Usar herramientas integradas:&lt;/strong> Aprovecha el formateador (&lt;code>deno fmt&lt;/code>) y linter (&lt;code>deno lint&lt;/code>) integrados para mantener un código limpio.&lt;/li>
&lt;li>&lt;strong>Revisar permisos:&lt;/strong> Configura correctamente los permisos que tu aplicación necesita con &lt;code>--allow-*&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Documentar el proceso:&lt;/strong> Mantén un registro de cambios y problemas encontrados para futuras migraciones.&lt;/li>
&lt;/ol>
&lt;h2 id="6-conclusión-y-aprendizajes">6. Conclusión y aprendizajes&lt;/h2>
&lt;p>Migrar de &lt;strong>Node.js&lt;/strong> a &lt;strong>Deno&lt;/strong> requiere un cambio de mentalidad debido a sus diferencias fundamentales. Sin embargo, &lt;strong>Deno&lt;/strong> ofrece un entorno más seguro, moderno y simplificado que puede resultar beneficioso a largo plazo. Este caso práctico demuestra que, aunque la migración puede ser desafiante, las herramientas y características de &lt;strong>Deno&lt;/strong> hacen que valga la pena el esfuerzo.&lt;/p></description></item><item><title>Decoradores avanzados en TypeScript: Mejora tu código</title><link>https://cmas.dev/posts/2024-08-14-decorators-typescript/</link><pubDate>Wed, 14 Aug 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-08-14-decorators-typescript/</guid><description>&lt;p>Los decoradores son una característica poderosa y avanzada de &lt;strong>TypeScript&lt;/strong> que permiten modificar el comportamiento de clases, métodos, propiedades y parámetros de una forma declarativa. Son ampliamente utilizados en frameworks como Angular, pero también pueden emplearse en proyectos personalizados para mejorar la reutilización y la claridad del código. En este artículo exploraremos los decoradores avanzados en &lt;strong>TypeScript&lt;/strong>, sus usos más comunes, cómo crearlos desde cero, y las mejores prácticas para implementarlos.&lt;/p>
&lt;h2 id="introducción-a-los-decoradores">Introducción a los decoradores&lt;/h2>
&lt;h3 id="qué-son-los-decoradores">¿Qué son los decoradores?&lt;/h3>
&lt;p>Un decorador es una función especial que puede adjuntarse a una clase, método, accesor, propiedad o parámetro. Proporcionan una forma de agregar meta-programación a tu código, es decir, modificar su comportamiento sin cambiar su estructura básica.&lt;/p>
&lt;h3 id="tipos-de-decoradores-en-typescript">Tipos de decoradores en TypeScript&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Decoradores de clases&lt;/strong>:
&lt;ul>
&lt;li>Aplicados a clases completas para modificar su estructura o comportamiento.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Decoradores de métodos&lt;/strong>:
&lt;ul>
&lt;li>Aplicados a métodos de clase para interceptar, modificar o registrar su ejecución.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Decoradores de propiedades&lt;/strong>:
&lt;ul>
&lt;li>Aplicados a propiedades de clase para añadir lógica adicional al acceso o modificación del valor.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Decoradores de parámetros&lt;/strong>:
&lt;ul>
&lt;li>Aplicados a parámetros de métodos para realizar validaciones o registrar su uso.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="habilitar-decoradores-en-typescript">Habilitar decoradores en TypeScript&lt;/h3>
&lt;p>Para usar decoradores, es necesario habilitar la opción &lt;code>experimentalDecorators&lt;/code> en el archivo &lt;code>tsconfig.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;compilerOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;experimentalDecorators&amp;#34;: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="decoradores-de-clases">Decoradores de clases&lt;/h2>
&lt;p>Un decorador de clase se aplica a la definición de una clase completa. Es ideal para añadir funcionalidades transversales como registros o validaciones.&lt;/p>
&lt;h3 id="ejemplo-básico">Ejemplo básico&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">function&lt;/span> &lt;span class="n">LogClass&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Function&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="n">Clase&lt;/span> &lt;span class="n">decorada&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">LogClass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="n">MyClass&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Instancia creada&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">instance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">MyClass&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="resultado">Resultado&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Clase decorada: MyClass
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Instancia creada
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="uso-avanzado-agregar-metadatos">Uso avanzado: Agregar metadatos&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">function&lt;/span> &lt;span class="n">AddMetadata&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">metadata&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">any&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Function&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">target&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">prototype&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">metadata&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">metadata&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">AddMetadata&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">role&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;admin&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">permissions&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;read&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;write&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="n">User&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">User&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;metadata&amp;#39;&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="decoradores-de-métodos">Decoradores de métodos&lt;/h2>
&lt;p>Permiten interceptar y modificar la ejecución de un método. Esto es útil para agregar registros, manejo de errores o validaciones.&lt;/p>
&lt;h3 id="ejemplo-registro-de-ejecución">Ejemplo: Registro de ejecución&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">function&lt;/span> &lt;span class="n">LogMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">any&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">propertyKey&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">descriptor&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">PropertyDescriptor&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">originalMethod&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">descriptor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">descriptor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">any&lt;/span>&lt;span class="p">[])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="n">Método&lt;/span> &lt;span class="n">ejecutado&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">propertyKey&lt;/span>&lt;span class="p">},&lt;/span> &lt;span class="n">con&lt;/span> &lt;span class="n">argumentos&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">originalMethod&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">apply&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="n">Calculator&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">LogMethod&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">number&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">number&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">number&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">calc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Calculator&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">calc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="resultado-1">Resultado&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Método ejecutado: add, con argumentos: 2,3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="decoradores-de-propiedades">Decoradores de propiedades&lt;/h2>
&lt;p>Permiten personalizar el comportamiento de las propiedades de clase, por ejemplo, agregando validaciones o valores predeterminados.&lt;/p>
&lt;h3 id="ejemplo-validar-propiedades">Ejemplo: Validar propiedades&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">function&lt;/span> &lt;span class="n">MinLength&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">number&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">any&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">propertyKey&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">let&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ne">Object&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">defineProperty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">propertyKey&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">get&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">set&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">newValue&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">newValue&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">throw&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="n">La&lt;/span> &lt;span class="n">longitud&lt;/span> &lt;span class="n">mínima&lt;/span> &lt;span class="n">de&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">propertyKey&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="n">es&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">newValue&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="n">User&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">MinLength&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">username&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">User&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">username&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;John&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="n">Error&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">La&lt;/span> &lt;span class="n">longitud&lt;/span> &lt;span class="n">mínima&lt;/span> &lt;span class="n">de&lt;/span> &lt;span class="n">username&lt;/span> &lt;span class="n">es&lt;/span> &lt;span class="mi">5&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="decoradores-de-parámetros">Decoradores de parámetros&lt;/h2>
&lt;p>Estos decoradores son útiles para realizar validaciones en los parámetros de métodos.&lt;/p>
&lt;h3 id="ejemplo-validación-de-parámetros">Ejemplo: Validación de parámetros&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">function&lt;/span> &lt;span class="n">Validate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">any&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">propertyKey&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">parameterIndex&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">number&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">existingRequiredParameters&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">number&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Reflect&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getOwnMetadata&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;required&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">propertyKey&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">existingRequiredParameters&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">parameterIndex&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Reflect&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">defineMetadata&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;required&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">existingRequiredParameters&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">propertyKey&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="n">OrderService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">processOrder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">Validate&lt;/span> &lt;span class="n">orderId&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="n">Procesando&lt;/span> &lt;span class="n">orden&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">orderId&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="buenas-prácticas-con-decoradores">Buenas prácticas con decoradores&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Mantén los decoradores reutilizables&lt;/strong>:
&lt;ul>
&lt;li>Diseña decoradores genéricos que puedan ser aplicados en múltiples contextos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Evita la lógica compleja&lt;/strong>:
&lt;ul>
&lt;li>Mantén los decoradores simples y delega la lógica compleja a otras partes del código.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Documenta los decoradores&lt;/strong>:
&lt;ul>
&lt;li>Proporciona descripciones claras sobre el propósito y uso de cada decorador.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Combina decoradores con metadatos&lt;/strong>:
&lt;ul>
&lt;li>Usa bibliotecas como &lt;code>reflect-metadata&lt;/code> para almacenar y acceder a metadatos en tiempo de ejecución.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Prueba los decoradores&lt;/strong>:
&lt;ul>
&lt;li>Escribe pruebas unitarias para garantizar que los decoradores funcionen correctamente en diferentes escenarios.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Los decoradores en TypeScript son una herramienta poderosa que puede transformar la forma en que organizas y escribes tu código. Desde agregar metadatos hasta interceptar métodos y propiedades, ofrecen una manera elegante y declarativa de manejar lógica transversal. Siguiendo las buenas prácticas y explorando casos de uso avanzados, puedes aprovechar al máximo esta característica y llevar tu desarrollo TypeScript al siguiente nivel.&lt;/p></description></item><item><title>Comparación: Angular Signals vs React Hooks</title><link>https://cmas.dev/posts/2024-08-07-angular-signals-vs-react-hooks/</link><pubDate>Wed, 07 Aug 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-08-07-angular-signals-vs-react-hooks/</guid><description>&lt;p>En el mundo del desarrollo frontend, los frameworks y bibliotecas como &lt;strong>Angular&lt;/strong> y &lt;strong>React&lt;/strong> han evolucionado constantemente para ofrecer soluciones más eficientes y escalables. Dos características destacadas de estas tecnologías son los &lt;em>Signals&lt;/em> de &lt;strong>Angular&lt;/strong> y los &lt;em>Hooks&lt;/em> de &lt;strong>React&lt;/strong>. Ambos conceptos están diseñados para manejar estados y mejorar la reactividad, pero lo hacen de maneras muy diferentes. Este artículo explora en profundidad ambas herramientas, sus similitudes, diferencias, ejemplos prácticos y buenas prácticas.&lt;/p>
&lt;h2 id="qué-son-los-angular-signals">¿Qué son los Angular Signals?&lt;/h2>
&lt;h3 id="definición">Definición&lt;/h3>
&lt;p>Los Signals en Angular son una característica relativamente nueva que permite gestionar el estado y la reactividad en aplicaciones. Proporcionan una forma declarativa y eficiente de reaccionar a los cambios de estado mediante el uso de señales que notifican automáticamente a los componentes afectados.&lt;/p>
&lt;h3 id="ventajas-de-angular-signals">Ventajas de Angular Signals&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Reactividad automática&lt;/strong>: Las actualizaciones de estado notifican automáticamente a los componentes dependientes.&lt;/li>
&lt;li>&lt;strong>Optimización de rendimiento&lt;/strong>: Solo los componentes afectados se vuelven a renderizar.&lt;/li>
&lt;li>&lt;strong>Facilidad de uso&lt;/strong>: Simplifican la gestión del estado global y local.&lt;/li>
&lt;li>&lt;strong>Soporte nativo en Angular&lt;/strong>: Integración directa con el ecosistema Angular.&lt;/li>
&lt;/ol>
&lt;h3 id="ejemplo-básico-de-signals">Ejemplo básico de Signals&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">signal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">computed&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">selector&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;app-counter&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">template&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="err">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">h1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Contador&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{{&lt;/span> &lt;span class="n">count&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">}}&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">h1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">button&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">click&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;increment()&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Incrementar&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">button&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">`&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">CounterComponent&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">signal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">increment&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>En este ejemplo, &lt;code>signal&lt;/code> define un estado reactivo que actualiza automáticamente la plantilla cuando cambia.&lt;/p>
&lt;h2 id="qué-son-los-react-hooks">¿Qué son los React Hooks?&lt;/h2>
&lt;h3 id="definición-1">Definición&lt;/h3>
&lt;p>Los Hooks en React son funciones que permiten usar características de React, como el estado y el ciclo de vida, en componentes funcionales. Introducidos en React 16.8, han transformado la forma en que los desarrolladores construyen aplicaciones React modernas.&lt;/p>
&lt;h3 id="ventajas-de-react-hooks">Ventajas de React Hooks&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Simplificación de componentes&lt;/strong>: Elimina la necesidad de clases.&lt;/li>
&lt;li>&lt;strong>Flexibilidad&lt;/strong>: Permite combinar lógica de estado y efectos secundarios en un único componente.&lt;/li>
&lt;li>&lt;strong>Reutilización de lógica&lt;/strong>: Los Hooks personalizados facilitan la reutilización de lógica en diferentes componentes.&lt;/li>
&lt;li>&lt;strong>Compatibilidad total&lt;/strong>: Funcionan con todas las herramientas y bibliotecas del ecosistema React.&lt;/li>
&lt;/ol>
&lt;h3 id="ejemplo-básico-de-hooks">Ejemplo básico de Hooks&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="n">React&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">useState&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">function&lt;/span> &lt;span class="n">Counter&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">setCount&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">useState&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">h1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Contador&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">h1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">button&lt;/span> &lt;span class="n">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">setCount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">count&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Incrementar&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">button&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">default&lt;/span> &lt;span class="n">Counter&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>En este ejemplo, &lt;code>useState&lt;/code> maneja el estado del contador y actualiza automáticamente el componente cuando cambia el estado.&lt;/p>
&lt;h2 id="comparación-detallada-signals-vs-hooks">Comparación detallada: Signals vs Hooks&lt;/h2>
&lt;h3 id="declaración-del-estado">Declaración del estado&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Característica&lt;/th>
&lt;th>Angular Signals&lt;/th>
&lt;th>React Hooks&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Declaración&lt;/td>
&lt;td>&lt;code>signal(initialValue)&lt;/code>&lt;/td>
&lt;td>&lt;code>useState(initialValue)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Reactividad&lt;/td>
&lt;td>Automática&lt;/td>
&lt;td>Basada en cambios manuales&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Reutilización&lt;/td>
&lt;td>Basada en servicios&lt;/td>
&lt;td>Hooks personalizados&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="rendimiento">Rendimiento&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Métrica&lt;/th>
&lt;th>Angular Signals&lt;/th>
&lt;th>React Hooks&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Renderizados&lt;/td>
&lt;td>Solo los componentes afectados&lt;/td>
&lt;td>Puede incluir renders innecesarios&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Optimización&lt;/td>
&lt;td>Nativa en el framework&lt;/td>
&lt;td>Necesita memoización (e.g., &lt;code>useMemo&lt;/code>)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="ejemplo-comparativo">Ejemplo comparativo&lt;/h3>
&lt;h4 id="angular-signals">Angular Signals&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Component&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">signal&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">selector&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;app-signal-example&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">template&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="err">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">h1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">}}&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">h1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">button&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">click&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;updateMessage()&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Actualizar&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">button&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">`&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">SignalExampleComponent&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">signal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Hola, Angular Signals!&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">updateMessage&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Mensaje actualizado con Signals!&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="react-hooks">React Hooks&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="n">React&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">useState&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">function&lt;/span> &lt;span class="n">HooksExample&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">setMessage&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">useState&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Hola, React Hooks!&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">h1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">h1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">button&lt;/span> &lt;span class="n">onClick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">setMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Mensaje actualizado con Hooks!&amp;#39;&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Actualizar&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">button&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">default&lt;/span> &lt;span class="n">HooksExample&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;h3 id="angular-signals-1">Angular Signals&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Evitar dependencias circulares&lt;/strong>:
&lt;ul>
&lt;li>Mantén las señales independientes para evitar bucles infinitos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Usar &lt;code>computed&lt;/code> para cálculos derivados&lt;/strong>:
&lt;ul>
&lt;li>Reduce lógica repetitiva y mejora la legibilidad del código.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Inyectar servicios para estado global&lt;/strong>:
&lt;ul>
&lt;li>Mantén el estado compartido en servicios Angular.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="react-hooks-1">React Hooks&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Usar Hooks personalizados&lt;/strong>:
&lt;ul>
&lt;li>Encapsula lógica repetitiva para mejorar la reutilización.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Memoizar funciones&lt;/strong>:
&lt;ul>
&lt;li>Usa &lt;code>useMemo&lt;/code> y &lt;code>useCallback&lt;/code> para evitar renderizados innecesarios.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Separar efectos&lt;/strong>:
&lt;ul>
&lt;li>Divide los efectos secundarios en múltiples llamadas a &lt;code>useEffect&lt;/code> para mantener la claridad.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Tanto Angular Signals como React Hooks son herramientas poderosas que abordan problemas similares en el manejo del estado y la reactividad, pero con enfoques diferentes. Mientras que Signals enfatiza la simplicidad y el rendimiento nativo en Angular, Hooks ofrece flexibilidad y compatibilidad total con el ecosistema React. La elección entre ambos dependerá del framework que estés utilizando y de las necesidades específicas de tu proyecto.&lt;/p></description></item><item><title>Optimización de Angular Universal para SEO y rendimiento</title><link>https://cmas.dev/posts/2024-07-31-angular-seo/</link><pubDate>Wed, 31 Jul 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-07-31-angular-seo/</guid><description>&lt;p>&lt;strong>Angular Universal&lt;/strong> es una herramienta poderosa que permite realizar el renderizado del lado del servidor (SSR, por sus siglas en inglés) en aplicaciones &lt;strong>Angular&lt;/strong>. Esto no solo mejora la experiencia del usuario, sino que también optimiza la aplicación para motores de búsqueda (SEO) y mejora significativamente el rendimiento. Este artículo explora cómo optimizar &lt;strong>Angular Universal&lt;/strong> para &lt;strong>SEO&lt;/strong> y rendimiento con ejemplos prácticos y buenas prácticas.&lt;/p>
&lt;h2 id="qué-es-angular-universal">¿Qué es Angular Universal?&lt;/h2>
&lt;p>&lt;strong>Angular Universal&lt;/strong> es una tecnología que permite renderizar aplicaciones &lt;strong>Angular&lt;/strong> en el servidor antes de enviarlas al cliente. Esto ayuda a los motores de búsqueda y a las redes sociales a indexar correctamente las páginas y a mejorar el tiempo de carga inicial de la aplicación.&lt;/p>
&lt;h3 id="beneficios-de-angular-universal">Beneficios de Angular Universal&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Mejoras en SEO&lt;/strong>: Permite que los motores de búsqueda indexen contenido dinámico.&lt;/li>
&lt;li>&lt;strong>Rendimiento mejorado&lt;/strong>: Reduce el tiempo hasta el primer renderizado.&lt;/li>
&lt;li>&lt;strong>Compartibilidad social&lt;/strong>: Genera metadatos dinámicos para compartir en redes sociales.&lt;/li>
&lt;li>&lt;strong>Compatibilidad&lt;/strong>: Funciona en navegadores sin soporte para JavaScript habilitado.&lt;/li>
&lt;/ol>
&lt;h2 id="configuración-de-angular-universal">Configuración de Angular Universal&lt;/h2>
&lt;h3 id="requisitos-previos">Requisitos previos&lt;/h3>
&lt;ol>
&lt;li>Tener Angular CLI instalado:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install -g @angular/cli
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Crear o tener un proyecto Angular existente.&lt;/li>
&lt;/ol>
&lt;h3 id="agregar-angular-universal-a-tu-proyecto">Agregar Angular Universal a tu proyecto&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Ejecuta el siguiente comando para agregar Angular Universal:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng add @nguniversal/express-engine
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto configura automáticamente los archivos necesarios y agrega soporte para SSR.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Verifica que se hayan creado los siguientes archivos:&lt;/p>
&lt;ul>
&lt;li>&lt;code>server.ts&lt;/code>: El punto de entrada para el servidor.&lt;/li>
&lt;li>&lt;code>angular.json&lt;/code>: Actualizado con las configuraciones de SSR.&lt;/li>
&lt;li>&lt;code>main.server.ts&lt;/code>: El módulo principal para la ejecución del servidor.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="ejecutar-la-aplicación-en-modo-ssr">Ejecutar la aplicación en modo SSR&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Construye la aplicación para SSR:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm run build:ssr
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Sirve la aplicación:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm run serve:ssr
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Visita &lt;code>http://localhost:4000&lt;/code> para verificar que la aplicación se renderice del lado del servidor.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="optimización-para-seo">Optimización para SEO&lt;/h2>
&lt;h3 id="implementar-metadatos-dinámicos">Implementar metadatos dinámicos&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Usa el servicio &lt;code>Meta&lt;/code> para actualizar los metadatos de la página:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Component&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Meta&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Title&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/platform-browser&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">selector&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;app-home&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">templateUrl&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;./home.component.html&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">HomeComponent&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">meta&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Meta&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">private&lt;/span> &lt;span class="n">title&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Title&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">setTitle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Página de inicio - Mi Aplicación&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">meta&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">addTags&lt;/span>&lt;span class="p">([&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;description&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">content&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;Bienvenido a nuestra aplicación optimizada para SEO.&amp;#39;&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;keywords&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">content&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;Angular, SEO, Universal&amp;#39;&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Asegúrate de que cada página tenga un título único y metadatos relevantes.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="crear-un-archivo-robotstxt">Crear un archivo &lt;code>robots.txt&lt;/code>&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Crea un archivo &lt;code>src/assets/robots.txt&lt;/code> con las siguientes líneas:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">User-agent: *
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Allow: /
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Incluye el archivo en el proceso de construcción:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;assets&amp;#34;: [
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;src/assets&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;src/robots.txt&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="agregar-un-sitemapxml">Agregar un &lt;code>sitemap.xml&lt;/code>&lt;/h3>
&lt;ol>
&lt;li>Usa herramientas como &lt;a href="https://www.xml-sitemaps.com/">Sitemap Generator&lt;/a> para crear un archivo &lt;code>sitemap.xml&lt;/code>.&lt;/li>
&lt;li>Inclúyelo en la carpeta &lt;code>src/assets&lt;/code> y asegúrate de que esté accesible desde el servidor.&lt;/li>
&lt;/ol>
&lt;h2 id="optimización-para-rendimiento">Optimización para rendimiento&lt;/h2>
&lt;h3 id="lazy-loading">Lazy Loading&lt;/h3>
&lt;p>Divide tu aplicación en módulos cargados bajo demanda:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Configura módulos con lazy loading:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">routes&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Routes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;feature&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">loadChildren&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">import&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./feature/feature.module&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">FeatureModule&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Verifica que cada módulo solo se cargue cuando sea necesario.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="implementar-precarga">Implementar precarga&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Usa el servicio de precarga predeterminado de Angular:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">RouterModule&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">forRoot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">preloadingStrategy&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">PreloadAllModules&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Asegúrate de que los módulos importantes se carguen rápidamente.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="compresión-de-archivos">Compresión de archivos&lt;/h3>
&lt;ol>
&lt;li>Configura el servidor para servir archivos comprimidos con Gzip o Brotli.&lt;/li>
&lt;li>Usa herramientas como &lt;code>webpack-bundle-analyzer&lt;/code> para reducir el tamaño de los paquetes.&lt;/li>
&lt;/ol>
&lt;h3 id="caché-en-el-servidor">Caché en el servidor&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Configura el caché para recursos estáticos y dinámicos:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">server.use(express.static(&amp;#39;dist/browser&amp;#39;, { maxAge: &amp;#39;1y&amp;#39; }));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Usa Service Workers para manejar la caché del lado del cliente.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Mantener URLs amigables&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Usa URLs descriptivas y evita parámetros innecesarios.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Evitar contenido duplicado&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Configura etiquetas &lt;code>canonical&lt;/code> para páginas duplicadas.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Supervisar el rendimiento&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Usa herramientas como Lighthouse y PageSpeed Insights para identificar áreas de mejora.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Pruebas regulares&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Verifica que los motores de búsqueda indexen correctamente tu aplicación.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Minimizar recursos&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Usa imágenes optimizadas y minimiza los archivos CSS y JavaScript.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Optimizar &lt;strong>Angular Universal&lt;/strong> para &lt;strong>SEO&lt;/strong> y rendimiento no solo mejora la experiencia del usuario, sino que también garantiza que tu aplicación sea accesible y visible para los motores de búsqueda. Siguiendo las buenas prácticas y utilizando las herramientas adecuadas, puedes maximizar el potencial de tu aplicación y destacarte en un entorno web competitivo. ¡Comienza hoy mismo y lleva tu aplicación Angular al siguiente nivel!&lt;/p></description></item><item><title>Creación de microservicios con Deno y Azure Functions</title><link>https://cmas.dev/posts/2024-07-24-microservices-deno-azure/</link><pubDate>Wed, 24 Jul 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-07-24-microservices-deno-azure/</guid><description>&lt;p>En el mundo moderno del desarrollo de software, los microservicios han revolucionado la forma de construir y desplegar aplicaciones escalables. Al combinar &lt;strong>Deno&lt;/strong>, una plataforma de runtime moderna basada en &lt;strong>JavaScript&lt;/strong> y &lt;strong>TypeScript&lt;/strong>, con &lt;strong>Azure Functions&lt;/strong>, una solución serverless flexible de &lt;strong>Microsoft&lt;/strong>, los desarrolladores pueden crear microservicios rápidos, seguros y eficientes. Este artículo te guiará paso a paso en el proceso de crear microservicios utilizando estas tecnologías, destacando buenas prácticas, ejemplos prácticos y el uso de &lt;strong>Visual Studio Code&lt;/strong> como herramienta principal.&lt;/p>
&lt;h2 id="introducción-a-los-microservicios">Introducción a los microservicios&lt;/h2>
&lt;h3 id="qué-son-los-microservicios">¿Qué son los microservicios?&lt;/h3>
&lt;p>Los microservicios son un estilo arquitectónico que divide las aplicaciones en servicios independientes, cada uno responsable de una funcionalidad específica. Estos servicios se comunican entre sí mediante protocolos ligeros como &lt;strong>HTTP&lt;/strong> o &lt;strong>gRPC&lt;/strong>.&lt;/p>
&lt;h3 id="beneficios-de-los-microservicios">Beneficios de los microservicios&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Escalabilidad independiente&lt;/strong>: Cada microservicio puede escalarse según sus necesidades.&lt;/li>
&lt;li>&lt;strong>Facilidad de despliegue&lt;/strong>: Permite actualizar y desplegar partes de la aplicación sin afectar al sistema completo.&lt;/li>
&lt;li>&lt;strong>Mantenibilidad&lt;/strong>: Facilita la organización del código y la colaboración en equipos grandes.&lt;/li>
&lt;/ol>
&lt;h2 id="introducción-a-deno-y-azure-functions">Introducción a Deno y Azure Functions&lt;/h2>
&lt;h3 id="qué-es-deno">¿Qué es Deno?&lt;/h3>
&lt;p>Deno es un runtime para JavaScript y TypeScript creado por Ryan Dahl, el creador de Node.js. Algunas de sus principales características incluyen:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Seguridad&lt;/strong>: Permisos de ejecución para controlar el acceso a archivos, redes y entornos.&lt;/li>
&lt;li>&lt;strong>Soporte nativo de TypeScript&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Gestor de dependencias integrado&lt;/strong>: No requiere archivos como &lt;code>package.json&lt;/code>.&lt;/li>
&lt;li>&lt;strong>APIs modernas&lt;/strong>: Inspiradas en las especificaciones del navegador.&lt;/li>
&lt;/ul>
&lt;h3 id="qué-es-azure-functions">¿Qué es Azure Functions?&lt;/h3>
&lt;p>Azure Functions es un servicio serverless que permite ejecutar código en la nube sin necesidad de gestionar infraestructura. Ofrece:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Ejecución bajo demanda&lt;/strong>: Facturación basada en el tiempo de ejecución.&lt;/li>
&lt;li>&lt;strong>Integraciones nativas&lt;/strong>: Con Azure Blob Storage, Cosmos DB y otros servicios.&lt;/li>
&lt;li>&lt;strong>Compatibilidad con varios lenguajes&lt;/strong>: Como JavaScript, Python, C# y TypeScript.&lt;/li>
&lt;/ul>
&lt;h2 id="configuración-del-entorno">Configuración del entorno&lt;/h2>
&lt;h3 id="requisitos-previos">Requisitos previos&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Instalar Deno&lt;/strong>:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">curl -fsSL https://deno.land/x/install/install.sh | sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;strong>Instalar Azure Functions Core Tools&lt;/strong>:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">npm&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">g&lt;/span> &lt;span class="n">azure&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">functions&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">tools&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="mi">4&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">unsafe&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">perm&lt;/span> &lt;span class="bp">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;strong>Instalar Visual Studio Code&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Configurar la extensión de Azure Functions en VS Code&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;h3 id="crear-un-nuevo-proyecto-con-azure-functions">Crear un nuevo proyecto con Azure Functions&lt;/h3>
&lt;ol>
&lt;li>Crea un directorio para tu proyecto:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">mkdir microservices-deno
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd microservices-deno
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Inicializa un nuevo proyecto:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">func&lt;/span> &lt;span class="n">init&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">worker&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">runtime&lt;/span> &lt;span class="n">custom&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">language&lt;/span> &lt;span class="n">typescript&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Agrega una nueva función HTTP:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">func&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">template&lt;/span> &lt;span class="s2">&amp;#34;HTTP trigger&amp;#34;&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="n">MyMicroservice&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="crear-un-microservicio-con-deno-y-azure-functions">Crear un microservicio con Deno y Azure Functions&lt;/h2>
&lt;h3 id="configuración-inicial">Configuración inicial&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Modifica el archivo &lt;code>MyMicroservice/index.ts&lt;/code> para usar Deno:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">serve&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/std@0.152.0/http/server.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">serve&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">req&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">URL&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">req&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pathname&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s2">&amp;#34;/api/MyMicroservice&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Response&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Hello from Deno and Azure Functions!&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">status&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">200&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">headers&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="s2">&amp;#34;Content-Type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;text/plain&amp;#34;&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Response&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Not Found&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">status&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">404&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Configura los permisos necesarios en el archivo &lt;code>deno.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;tasks&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;start&amp;#34;: &amp;#34;deno run --allow-net index.ts&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="probar-el-microservicio-localmente">Probar el microservicio localmente&lt;/h3>
&lt;ol>
&lt;li>Ejecuta la función localmente:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">func&lt;/span> &lt;span class="n">start&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Accede a la URL generada, como &lt;code>http://localhost:7071/api/MyMicroservice&lt;/code>.&lt;/li>
&lt;/ol>
&lt;h2 id="despliegue-en-azure">Despliegue en Azure&lt;/h2>
&lt;h3 id="paso-1-inicia-sesión-en-azure">Paso 1: Inicia sesión en Azure&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">az login
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-2-crear-un-recurso-de-azure-functions">Paso 2: Crear un recurso de Azure Functions&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">az functionapp create --resource-group MyResourceGroup --consumption-plan-location eastus --runtime custom --functions-version 4 --name MyDenoFunctionApp --storage-account MyStorageAccount
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-3-desplegar-la-función">Paso 3: Desplegar la función&lt;/h3>
&lt;ol>
&lt;li>Publica tu función:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">func azure functionapp publish MyDenoFunctionApp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Verifica que tu función esté activa visitando la URL proporcionada por Azure.&lt;/li>
&lt;/ol>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Seguridad&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Limita los permisos en Deno para garantizar la seguridad.&lt;/li>
&lt;li>Usa claves de API o tokens para proteger los endpoints.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Estructura del proyecto&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Organiza los microservicios en carpetas independientes para facilitar el mantenimiento.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Pruebas unitarias&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Usa bibliotecas como &lt;code>deno test&lt;/code> para escribir pruebas y asegurar la calidad del código.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Monitorización&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Configura Azure Monitor para supervisar el rendimiento y detectar errores.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Optimizar la ejecución&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Minimiza las dependencias externas y cachea resultados frecuentes.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>La combinación de &lt;strong>Deno&lt;/strong> y &lt;strong>Azure Functions&lt;/strong> ofrece una solución moderna y eficiente para construir microservicios escalables y seguros. Con las herramientas adecuadas, como &lt;strong>Visual Studio Code&lt;/strong>, y siguiendo buenas prácticas, puedes maximizar el potencial de tus proyectos serverless. Empieza hoy mismo a explorar estas tecnologías y lleva tus microservicios al siguiente nivel.&lt;/p></description></item><item><title>.NET Web API con Proyecto IDX</title><link>https://cmas.dev/posts/2024-07-17-dotnet-project-idx/</link><pubDate>Wed, 17 Jul 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-07-17-dotnet-project-idx/</guid><description>&lt;p>En este artículo veremos cómo crear una Web API básica con el nuevo &lt;strong>Proyecto IDX&lt;/strong> de &lt;strong>Google&lt;/strong>, totalmente desde el navegador sin la necesidad de instalar absolutamente nada en él.&lt;/p>
&lt;p>El &lt;strong>Proyecto IDX&lt;/strong>, según &lt;strong>Google&lt;/strong> es:&lt;/p>
&lt;blockquote>
&lt;p>Project IDX es un espacio de trabajo asistido por IA para el desarrollo de aplicaciones multiplataforma y de pila completa en la nube.
Con soporte para una amplia gama de marcos, lenguajes y servicios, además de integraciones con sus productos favoritos de Google, IDX optimiza su flujo de trabajo de desarrollo para que pueda crear y enviar aplicaciones entre plataformas con velocidad, facilidad y calidad.&lt;/p>
&lt;/blockquote>
&lt;p>Más info &lt;a href="https://idx.dev/">aquí&lt;/a>&lt;/p>
&lt;p>En este artículo veremos cómo crear una app backend con .NET, bien sencilla a modo de demostración. Para ello, seguiremos los siguientes pasos:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Ingresamos al IDE (web) &lt;a href="https://idx.google.com/?pli=1">aquí&lt;/a>. Se necesita iniciar sesión con una cuenta &lt;strong>Google&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Buscamos más plantillas (la idea es encontrar a .NET):
&lt;img src="https://i.ibb.co/ZWH4KVc/idx-1.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>En la sección &lt;strong>Backend&lt;/strong>, buscamos a &lt;strong>.NET&lt;/strong> y la seleccionamos:
&lt;img src="https://i.ibb.co/w0WTPFy/idx-2.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Colocamos un nombre descriptivo, seleccionamos el ambiente ideal y creamos el proyecto:
&lt;img src="https://i.ibb.co/WcJ8hx2/idx-3.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Nos mostrará el indicador de creación del proyecto:
&lt;img src="https://i.ibb.co/Stb8CYR/idx-4.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Nos abre el IDX (hasta ahora vi que es un Visual Studio Code en la nube, tal como GitHub Codespace) y miramos el código de ejemplo:
&lt;img src="https://i.ibb.co/zQjNKYp/idx-5.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Procedemos a ejecutar al aplicación en cuestión:
&lt;img src="https://i.ibb.co/r6CNSTQ/idx-6.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Nos ofrece opciones para abrir la web:
&lt;img src="https://i.ibb.co/yFQkkGD/idx-7.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>En una nueva pestaña, nos muestra la web App.
&lt;img src="https://i.ibb.co/ngHNgCv/idx-8.png" alt="">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Algo que noté es que la plantilla figura en &lt;strong>Backend&lt;/strong>, pero tranquilamente podemos crear una aplicación Full Stack con .NET de base para cubrir nuestras necesidades.&lt;/p>
&lt;p>Al momento de escribir este artículo noto que &lt;strong>Proyecto IDX&lt;/strong> = &lt;strong>GitHub Codespace&lt;/strong>. La base es Visual Studio Code.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Despliegue de aplicaciones Blazor en Azure App Services</title><link>https://cmas.dev/posts/2024-07-10-deploy-blazor-azure-app-services/</link><pubDate>Wed, 10 Jul 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-07-10-deploy-blazor-azure-app-services/</guid><description>&lt;p>&lt;strong>Blazor&lt;/strong>, el framework moderno basado en &lt;strong>.NET&lt;/strong>, permite a los desarrolladores crear aplicaciones web interactivas utilizando &lt;strong>C#&lt;/strong>. Combinado con &lt;strong>Azure App Services&lt;/strong>, puedes desplegar aplicaciones de manera sencilla, escalable y segura. En este artículo, exploraremos los pasos para desplegar aplicaciones &lt;strong>Blazor (Server y WebAssembly)&lt;/strong> en &lt;strong>Azure App Services&lt;/strong>, acompañado de ejemplos detallados y buenas prácticas para garantizar un despliegue óptimo.&lt;/p>
&lt;h2 id="qué-es-azure-app-services">¿Qué es Azure App Services?&lt;/h2>
&lt;p>&lt;strong>Azure App Services&lt;/strong> es una plataforma de alojamiento en la nube totalmente administrada que soporta aplicaciones web, móviles y &lt;em>API&lt;/em>. Sus principales características incluyen:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Despliegue rápido&lt;/strong>: Permite subir aplicaciones directamente desde tu entorno de desarrollo.&lt;/li>
&lt;li>&lt;strong>Escalabilidad&lt;/strong>: Ajusta los recursos según la demanda.&lt;/li>
&lt;li>&lt;strong>Seguridad&lt;/strong>: Ofrece integración con certificados SSL y autenticación.&lt;/li>
&lt;li>&lt;strong>Compatibilidad con varias tecnologías&lt;/strong>: Soporta .NET, Node.js, Python, Java y más.&lt;/li>
&lt;/ol>
&lt;h2 id="crear-y-configurar-un-azure-app-service">Crear y configurar un Azure App Service&lt;/h2>
&lt;h3 id="paso-1-crear-un-recurso-en-azure">Paso 1: Crear un recurso en Azure&lt;/h3>
&lt;ol>
&lt;li>Inicia sesión en el &lt;a href="https://portal.azure.com">portal de Azure&lt;/a>.&lt;/li>
&lt;li>Selecciona &lt;strong>Crear un recurso&lt;/strong> y busca &lt;strong>App Service&lt;/strong>.&lt;/li>
&lt;li>Completa los detalles:
&lt;ul>
&lt;li>&lt;strong>Nombre&lt;/strong>: &lt;code>blazor-app-service&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Pila de runtime&lt;/strong>: .NET 9.&lt;/li>
&lt;li>&lt;strong>Sistema operativo&lt;/strong>: Windows o Linux.&lt;/li>
&lt;li>&lt;strong>Plan de App Service&lt;/strong>: Selecciona un plan según tus necesidades (recomendado: Plan de consumo para pruebas o B1 para producción).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="paso-2-configurar-el-entorno-de-despliegue">Paso 2: Configurar el entorno de despliegue&lt;/h3>
&lt;ol>
&lt;li>Habilita la autenticación si es necesario.&lt;/li>
&lt;li>Configura las variables de entorno requeridas por la aplicación.&lt;/li>
&lt;/ol>
&lt;h2 id="despliegue-de-blazor-server-en-azure-app-services">Despliegue de Blazor Server en Azure App Services&lt;/h2>
&lt;h3 id="paso-1-crear-una-aplicación-blazor-server">Paso 1: Crear una aplicación Blazor Server&lt;/h3>
&lt;ol>
&lt;li>Genera un nuevo proyecto Blazor Server:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet new blazorserver -o BlazorServerApp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Navega al directorio del proyecto:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd BlazorServerApp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Ejecuta la aplicación localmente:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="paso-2-publicar-la-aplicación">Paso 2: Publicar la aplicación&lt;/h3>
&lt;ol>
&lt;li>Publica la aplicación:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet publish -c Release -o ./publish
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Verifica los archivos generados en el directorio &lt;code>publish&lt;/code>.&lt;/li>
&lt;/ol>
&lt;h3 id="paso-3-desplegar-a-azure">Paso 3: Desplegar a Azure&lt;/h3>
&lt;ol>
&lt;li>Usa el CLI de Azure para iniciar sesión:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">az login
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Despliega la aplicación:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">az webapp deploy --resource-group MyResourceGroup --name blazor-app-service --src-path ./publish
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="despliegue-de-blazor-webassembly-en-azure-app-services">Despliegue de Blazor WebAssembly en Azure App Services&lt;/h2>
&lt;h3 id="paso-1-crear-una-aplicación-blazor-webassembly">Paso 1: Crear una aplicación Blazor WebAssembly&lt;/h3>
&lt;ol>
&lt;li>Genera un nuevo proyecto:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet new blazorwasm -o BlazorWebAssemblyApp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Habilita el modo PWA si es necesario:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet new blazorwasm -o BlazorPWA --pwa
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Ejecuta la aplicación localmente:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="paso-2-publicar-la-aplicación-1">Paso 2: Publicar la aplicación&lt;/h3>
&lt;ol>
&lt;li>Publica la aplicación:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet publish -c Release -o ./publish
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="paso-3-configurar-y-desplegar">Paso 3: Configurar y desplegar&lt;/h3>
&lt;ol>
&lt;li>Asegúrate de que el servidor web esté configurado para servir contenido estático desde el directorio &lt;code>wwwroot&lt;/code>.&lt;/li>
&lt;li>Usa Azure CLI o el portal de Azure para subir los archivos.&lt;/li>
&lt;/ol>
&lt;h4 id="subir-archivos-usando-azure-storage">Subir archivos usando Azure Storage&lt;/h4>
&lt;ol>
&lt;li>Crea una cuenta de almacenamiento:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">az storage account create --name mystorageaccount --resource-group MyResourceGroup --location eastus --sku Standard_LRS
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Usa &lt;code>azcopy&lt;/code> para subir los archivos:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">azcopy copy ./publish/wwwroot https://mystorageaccount.blob.core.windows.net/$web --recursive
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="buenas-prácticas-para-despliegues-en-azure-app-services">Buenas prácticas para despliegues en Azure App Services&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Configurar entornos&lt;/strong>:
&lt;ul>
&lt;li>Usa &lt;code>appsettings.json&lt;/code> para gestionar configuraciones por entorno.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Escalabilidad&lt;/strong>:
&lt;ul>
&lt;li>Configura escalado automático para manejar incrementos de tráfico.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Seguridad&lt;/strong>:
&lt;ul>
&lt;li>Habilita HTTPS y usa certificados SSL.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Monitorización&lt;/strong>:
&lt;ul>
&lt;li>Usa Application Insights para supervisar el rendimiento.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Optimizar el tamaño de la aplicación&lt;/strong>:
&lt;ul>
&lt;li>Habilita compresión y minimización de archivos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="resolución-de-problemas-comunes">Resolución de problemas comunes&lt;/h2>
&lt;h3 id="error-500-internal-server-error">Error 500: &amp;ldquo;Internal Server Error&amp;rdquo;&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Causa&lt;/strong>: Configuraciones incorrectas en &lt;code>appsettings.json&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Solución&lt;/strong>: Verifica las rutas y las claves de configuración.&lt;/li>
&lt;/ul>
&lt;h3 id="failed-to-start-en-blazor-server">&amp;ldquo;Failed to Start&amp;rdquo; en Blazor Server&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Causa&lt;/strong>: Problemas de dependencias no satisfechas.&lt;/li>
&lt;li>&lt;strong>Solución&lt;/strong>: Revisa las dependencias en el archivo &lt;code>csproj&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h3 id="archivos-estáticos-no-encontrados-en-blazor-webassembly">Archivos estáticos no encontrados en Blazor WebAssembly&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Causa&lt;/strong>: Configuración errónea del servidor.&lt;/li>
&lt;li>&lt;strong>Solución&lt;/strong>: Asegúrate de que el servidor apunte al directorio &lt;code>wwwroot&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Desplegar aplicaciones &lt;strong>Blazor&lt;/strong> en &lt;strong>Azure App Services&lt;/strong> es un proceso directo que se beneficia de las capacidades robustas de Azure para escalar, monitorear y proteger aplicaciones. Siguiendo las mejores prácticas y resolviendo problemas comunes, puedes garantizar un despliegue exitoso y mantener tus aplicaciones funcionando de manera eficiente. ¡Explora &lt;strong>Azure App Services&lt;/strong> y lleva tus aplicaciones &lt;strong>Blazor&lt;/strong> al siguiente nivel!&lt;/p></description></item><item><title>Creación de componentes reutilizables en Blazor para aplicaciones escalables</title><link>https://cmas.dev/posts/2024-07-03-components-blazor/</link><pubDate>Wed, 03 Jul 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-07-03-components-blazor/</guid><description>&lt;p>&lt;strong>Blazor&lt;/strong> es un framework poderoso que permite a los desarrolladores construir aplicaciones web modernas utilizando &lt;strong>C#&lt;/strong>. Una de sus características clave es la capacidad de crear componentes reutilizables que promueven la modularidad, escalabilidad y mantenibilidad de las aplicaciones. En este artículo, exploraremos cómo diseñar y desarrollar componentes reutilizables en Blazor, acompañado de ejemplos prácticos y mejores prácticas.&lt;/p>
&lt;h2 id="qué-son-los-componentes-en-blazor">¿Qué son los componentes en Blazor?&lt;/h2>
&lt;p>Los componentes en Blazor son unidades reutilizables de la interfaz de usuario que combinan lógica y presentación. Cada componente se define en un archivo &lt;code>.razor&lt;/code> y puede incluir código C#, HTML y CSS.&lt;/p>
&lt;h3 id="características-principales">Características principales&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Encapsulación&lt;/strong>: Los componentes encapsulan la lógica y el diseño, promoviendo la reutilización.&lt;/li>
&lt;li>&lt;strong>Reactividad&lt;/strong>: Pueden responder a eventos y actualizarse dinámicamente.&lt;/li>
&lt;li>&lt;strong>Comunicación entre componentes&lt;/strong>: Soportan la transferencia de datos a través de propiedades y eventos.&lt;/li>
&lt;li>&lt;strong>Renderizado eficiente&lt;/strong>: Blazor optimiza el renderizado para minimizar los cambios en el DOM.&lt;/li>
&lt;/ol>
&lt;h2 id="crear-un-componente-básico">Crear un componente básico&lt;/h2>
&lt;h3 id="ejemplo-componente-de-botón">Ejemplo: Componente de Botón&lt;/h3>
&lt;p>Archivo: &lt;code>ButtonComponent.razor&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;button class=&amp;#34;btn btn-primary&amp;#34; @onclick=&amp;#34;OnClick&amp;#34;&amp;gt;@Label&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Parameter]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public string Label { get; set; } = &amp;#34;Click Me&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Parameter]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public EventCallback OnClick { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="uso-del-componente">Uso del componente&lt;/h4>
&lt;p>Archivo: &lt;code>MainLayout.razor&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;ButtonComponent Label=&amp;#34;Guardar&amp;#34; OnClick=&amp;#34;SaveData&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private void SaveData()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Console.WriteLine(&amp;#34;Datos guardados correctamente.&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="componentes-parametrizables">Componentes parametrizables&lt;/h2>
&lt;h3 id="paso-1-definir-propiedades-con-parameter">Paso 1: Definir propiedades con &lt;code>[Parameter]&lt;/code>&lt;/h3>
&lt;p>Las propiedades con el atributo &lt;code>[Parameter]&lt;/code> permiten a los componentes recibir datos externos.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;h3&amp;gt;@Title&amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;p&amp;gt;@Description&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Parameter]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public string Title { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Parameter]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public string Description { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-2-render-fragment">Paso 2: Render Fragment&lt;/h3>
&lt;p>Render Fragment permite pasar bloques de contenido al componente.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;div class=&amp;#34;card&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;div class=&amp;#34;card-header&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> @Header
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/div&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;div class=&amp;#34;card-body&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> @Body
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/div&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/div&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Parameter]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public RenderFragment Header { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Parameter]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public RenderFragment Body { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="ejemplo-de-uso">Ejemplo de uso&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;CardComponent&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Header&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;h3&amp;gt;Mi Título&amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Header&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Body&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;p&amp;gt;Este es el contenido del cuerpo.&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Body&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/CardComponent&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="mejores-prácticas-para-componentes-reutilizables">Mejores prácticas para componentes reutilizables&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Evitar lógica compleja&lt;/strong>:
&lt;ul>
&lt;li>Divide la funcionalidad compleja en varios componentes más simples.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Documentar parámetros&lt;/strong>:
&lt;ul>
&lt;li>Proporciona descripciones claras de los parámetros y su uso.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Usar estilos modulares&lt;/strong>:
&lt;ul>
&lt;li>Utiliza CSS aislado para evitar conflictos de estilos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Validar entradas&lt;/strong>:
&lt;ul>
&lt;li>Asegúrate de validar los datos recibidos a través de los parámetros.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Seguir el principio DRY (Don&amp;rsquo;t Repeat Yourself)&lt;/strong>:
&lt;ul>
&lt;li>Reutiliza componentes siempre que sea posible.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="componentes-avanzados">Componentes avanzados&lt;/h2>
&lt;h3 id="componentes-genéricos">Componentes genéricos&lt;/h3>
&lt;p>Blazor soporta componentes genéricos que permiten trabajar con diferentes tipos de datos.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">foreach&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">var&lt;/span> &lt;span class="n">item&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">Items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">code&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">Parameter&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">IEnumerable&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">Items&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="uso-del-componente-genérico">Uso del componente genérico&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;GenericComponent Items=&amp;#34;new List&amp;lt;int&amp;gt; { 1, 2, 3 }&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="componentes-dinámicos">Componentes dinámicos&lt;/h3>
&lt;p>Permiten renderizar diferentes componentes basados en datos o estados.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">foreach&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">var&lt;/span> &lt;span class="n">component&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">Components&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">DynamicComponent&lt;/span> &lt;span class="n">Type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;component&amp;#34;&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">code&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">Parameter&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Type&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">Components&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Type&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nb">typeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ButtonComponent&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">typeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CardComponent&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="pruebas-de-componentes">Pruebas de componentes&lt;/h2>
&lt;h3 id="framework-recomendado-bunit">Framework recomendado: &lt;code>bUnit&lt;/code>&lt;/h3>
&lt;h4 id="configurar-bunit">Configurar &lt;code>bUnit&lt;/code>&lt;/h4>
&lt;ol>
&lt;li>Instalar la biblioteca:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">dotnet&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="kn">package&lt;/span> &lt;span class="nx">Bunit&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Escribir pruebas:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">Fact&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">ButtonComponent_DisplaysCorrectLabel&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">using&lt;/span> &lt;span class="k">var&lt;/span> &lt;span class="n">ctx&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">TestContext&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">cut&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">RenderComponent&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">ButtonComponent&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">parameters&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">parameters&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Label&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Test Button&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Assert&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Test Button&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cut&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Markup&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>La creación de componentes reutilizables en &lt;strong>Blazor&lt;/strong> es clave para construir aplicaciones escalables y mantenibles. Siguiendo las buenas prácticas y aprovechando las características avanzadas del framework, los desarrolladores pueden maximizar la productividad y garantizar la calidad de sus aplicaciones. ¡Empieza a diseñar tus propios componentes reutilizables hoy mismo y lleva tus habilidades de desarrollo web al siguiente nivel!&lt;/p></description></item><item><title>Introducción a Blazor: Cambiando el paradigma del desarrollo web</title><link>https://cmas.dev/posts/2024-06-26-intro-blazor/</link><pubDate>Wed, 26 Jun 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-06-26-intro-blazor/</guid><description>&lt;p>&lt;strong>Blazor&lt;/strong> es una tecnología desarrollada por &lt;strong>Microsoft&lt;/strong> que está transformando la forma en que se crean aplicaciones web modernas. Basado en &lt;strong>.NET&lt;/strong>, &lt;strong>Blazor&lt;/strong> permite a los desarrolladores escribir aplicaciones web interactivas utilizando &lt;strong>C#&lt;/strong> en lugar de &lt;strong>JavaScript&lt;/strong>, ofreciendo una solución innovadora para quienes buscan aprovechar las ventajas del ecosistema &lt;strong>.NET&lt;/strong> en el desarrollo web. En este artículo, exploraremos las bases de Blazor, sus ventajas, desventajas y cómo empezar a utilizarlo, acompañado de ejemplos y buenas prácticas.&lt;/p>
&lt;h2 id="qué-es-blazor">¿Qué es Blazor?&lt;/h2>
&lt;p>Blazor es un framework de desarrollo web que permite construir aplicaciones interactivas del lado del cliente y del servidor utilizando C#. Se basa en WebAssembly para ejecutar código .NET directamente en el navegador, eliminando la necesidad de JavaScript para muchas funcionalidades.&lt;/p>
&lt;h3 id="tipos-de-blazor">Tipos de Blazor&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Blazor Server&lt;/strong>: La aplicación se ejecuta en el servidor y utiliza SignalR para comunicarse con el cliente. Ideal para aplicaciones con requisitos de tiempo real o cuando se desea un inicio rápido.&lt;/li>
&lt;li>&lt;strong>Blazor WebAssembly&lt;/strong>: Ejecuta el código directamente en el navegador utilizando WebAssembly. Ofrece una experiencia completamente del lado del cliente.&lt;/li>
&lt;li>&lt;strong>Blazor Hybrid&lt;/strong>: Integra Blazor con plataformas como MAUI para crear aplicaciones multiplataforma.&lt;/li>
&lt;/ol>
&lt;h2 id="ventajas-de-blazor">Ventajas de Blazor&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Reutilización de código&lt;/strong>: Usa el mismo lenguaje, C#, tanto para el cliente como para el servidor.&lt;/li>
&lt;li>&lt;strong>Ecosistema unificado&lt;/strong>: Aprovecha las herramientas y bibliotecas de .NET.&lt;/li>
&lt;li>&lt;strong>Soporte a largo plazo&lt;/strong>: Microsoft ofrece soporte continuo para Blazor como parte del ecosistema .NET.&lt;/li>
&lt;li>&lt;strong>Sin JavaScript adicional&lt;/strong>: Aunque puedes integrarlo, no es necesario para funciones comunes.&lt;/li>
&lt;li>&lt;strong>Componentes reutilizables&lt;/strong>: Facilita la modularidad y la organización del código.&lt;/li>
&lt;/ol>
&lt;h2 id="desventajas-de-blazor">Desventajas de Blazor&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Tamaño inicial&lt;/strong>: En Blazor WebAssembly, el tamaño de descarga inicial puede ser considerable.&lt;/li>
&lt;li>&lt;strong>Soporte limitado en navegadores antiguos&lt;/strong>: Requiere navegadores modernos con soporte para WebAssembly.&lt;/li>
&lt;li>&lt;strong>Latencia en Blazor Server&lt;/strong>: La comunicación constante con el servidor puede introducir latencia.&lt;/li>
&lt;li>&lt;strong>Curva de aprendizaje&lt;/strong>: Aunque es similar a .NET, puede ser desafiante para desarrolladores sin experiencia previa en el ecosistema.&lt;/li>
&lt;/ol>
&lt;h2 id="configuración-inicial">Configuración inicial&lt;/h2>
&lt;h3 id="requisitos-previos">Requisitos previos&lt;/h3>
&lt;ol>
&lt;li>Tener instalado .NET SDK:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Instalar un editor de código, como Visual Studio o Visual Studio Code.&lt;/li>
&lt;/ol>
&lt;h3 id="crear-un-proyecto-blazor-server">Crear un proyecto Blazor Server&lt;/h3>
&lt;ol>
&lt;li>Ejecutar el comando para crear un proyecto:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet new blazorserver -o BlazorServerApp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Navegar al directorio del proyecto:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd BlazorServerApp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Ejecutar la aplicación:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="crear-un-proyecto-blazor-webassembly">Crear un proyecto Blazor WebAssembly&lt;/h3>
&lt;ol>
&lt;li>Crear un proyecto WebAssembly:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet new blazorwasm -o BlazorWebAssemblyApp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Navegar al directorio del proyecto y ejecutarlo:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd BlazorWebAssemblyApp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dotnet run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="conceptos-fundamentales">Conceptos fundamentales&lt;/h2>
&lt;h3 id="componentes">Componentes&lt;/h3>
&lt;p>Los componentes son la unidad básica en Blazor. Se crean utilizando archivos &lt;code>.razor&lt;/code> y combinan C# con HTML.&lt;/p>
&lt;h4 id="ejemplo-básico">Ejemplo básico&lt;/h4>
&lt;p>Archivo: &lt;code>Counter.razor&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@page &amp;#34;/counter&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;h3&amp;gt;Contador&amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;p&amp;gt;Valor actual: @currentCount&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;button @onclick=&amp;#34;IncrementCount&amp;#34;&amp;gt;Incrementar&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private int currentCount = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private void IncrementCount()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> currentCount++;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="inyección-de-dependencias">Inyección de dependencias&lt;/h3>
&lt;p>Blazor soporta inyección de dependencias a través del contenedor de servicios.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@inject WeatherService WeatherService
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;h3&amp;gt;Clima actual&amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;p&amp;gt;@WeatherService.GetCurrentWeather()&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Organización del proyecto&lt;/strong>: Divide la aplicación en módulos y componentes reutilizables.&lt;/li>
&lt;li>&lt;strong>Manejo de estado&lt;/strong>: Usa librerías como &lt;code>Fluxor&lt;/code> o servicios para manejar el estado de la aplicación.&lt;/li>
&lt;li>&lt;strong>Optimizar el tamaño&lt;/strong>: Para Blazor WebAssembly, minimiza los recursos y activa la compresión.&lt;/li>
&lt;li>&lt;strong>Seguridad&lt;/strong>: Implementa protección contra ataques XSS y valida todas las entradas de usuario.&lt;/li>
&lt;li>&lt;strong>Pruebas&lt;/strong>: Usa frameworks como &lt;code>bUnit&lt;/code> para pruebas unitarias de componentes.&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>&lt;strong>Blazor&lt;/strong> representa un cambio significativo en el desarrollo web al permitir que los desarrolladores utilicen C# para crear aplicaciones interactivas. Su capacidad para aprovechar el ecosistema de .NET lo hace una opción atractiva para equipos que ya trabajan con esta tecnología. Aunque tiene limitaciones, las ventajas que ofrece son significativas, especialmente en proyectos donde la reutilización de código y la integración con .NET son esenciales. ¡Explora Blazor y lleva tus habilidades de desarrollo web al siguiente nivel!&lt;/p></description></item><item><title>Creación de librerías compartidas en TypeScript</title><link>https://cmas.dev/posts/2024-06-19-share-libraries-typescript/</link><pubDate>Wed, 19 Jun 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-06-19-share-libraries-typescript/</guid><description>&lt;p>La creación de librerías compartidas en &lt;strong>TypeScript&lt;/strong> permite a los desarrolladores encapsular funcionalidad reutilizable y mejorar la mantenibilidad del código. Este artículo explorará el proceso completo de desarrollo de librerías en &lt;strong>TypeScript&lt;/strong>, desde la configuración inicial hasta el despliegue, con un enfoque moderno, ejemplos prácticos y consideraciones de seguridad.&lt;/p>
&lt;h2 id="por-qué-crear-librerías-compartidas-en-typescript">¿Por qué crear librerías compartidas en TypeScript?&lt;/h2>
&lt;h3 id="beneficios-principales">Beneficios principales&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Reutilización de código&lt;/strong>: Evita la duplicación en diferentes proyectos.&lt;/li>
&lt;li>&lt;strong>Mantenibilidad&lt;/strong>: Centraliza la gestión de funcionalidades comunes.&lt;/li>
&lt;li>&lt;strong>Escalabilidad&lt;/strong>: Facilita la integración con nuevos proyectos.&lt;/li>
&lt;li>&lt;strong>Colaboración&lt;/strong>: Permite a los equipos trabajar en conjunto sobre componentes centrales.&lt;/li>
&lt;/ol>
&lt;h2 id="configuración-inicial">Configuración inicial&lt;/h2>
&lt;h3 id="requisitos-previos">Requisitos previos&lt;/h3>
&lt;ul>
&lt;li>Tener Node.js y npm instalados.&lt;/li>
&lt;li>Familiaridad con TypeScript.&lt;/li>
&lt;/ul>
&lt;h3 id="crear-un-nuevo-proyecto-de-librería">Crear un nuevo proyecto de librería&lt;/h3>
&lt;ol>
&lt;li>Crea un directorio para la librería:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">mkdir my-shared-library
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd my-shared-library
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Inicializa un proyecto Node.js:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm init -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Instala TypeScript y otras dependencias necesarias:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install typescript --save-dev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm install tslib
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Crea una configuración base de TypeScript:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npx tsc --init
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="configurar-tsconfigjson">Configurar &lt;code>tsconfig.json&lt;/code>&lt;/h3>
&lt;p>Configura el archivo para soportar módulos comunes y optimizar la compilación:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;compilerOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;outDir&amp;#34;: &amp;#34;dist&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;rootDir&amp;#34;: &amp;#34;src&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;target&amp;#34;: &amp;#34;ES2020&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;module&amp;#34;: &amp;#34;CommonJS&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;declaration&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;sourceMap&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;strict&amp;#34;: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;include&amp;#34;: [&amp;#34;src/**/*&amp;#34;],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;exclude&amp;#34;: [&amp;#34;node_modules&amp;#34;, &amp;#34;dist&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="estructura-del-proyecto">Estructura del proyecto&lt;/h2>
&lt;p>Organiza los archivos de tu proyecto:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">my-shared-library/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── src/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── index.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── utils/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ │ └── math.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── dist/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── package.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── tsconfig.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── README.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="desarrollo-de-la-librería">Desarrollo de la librería&lt;/h2>
&lt;h3 id="crear-funcionalidades">Crear funcionalidades&lt;/h3>
&lt;h4 id="ejemplo-operaciones-matemáticas">Ejemplo: Operaciones matemáticas&lt;/h4>
&lt;p>Archivo: &lt;code>src/utils/math.ts&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">number&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">number&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">number&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">subtract&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">number&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">number&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">number&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="archivo-de-entrada-principal">Archivo de entrada principal&lt;/h4>
&lt;p>Archivo: &lt;code>src/index.ts&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./utils/math&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="compilación-de-la-librería">Compilación de la librería&lt;/h2>
&lt;ol>
&lt;li>Compila el código:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npx tsc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Verifica que los archivos se generaron en el directorio &lt;code>dist/&lt;/code>.&lt;/li>
&lt;/ol>
&lt;h2 id="publicación-de-la-librería">Publicación de la librería&lt;/h2>
&lt;h3 id="configurar-packagejson">Configurar &lt;code>package.json&lt;/code>&lt;/h3>
&lt;p>Asegúrate de incluir los campos necesarios para npm:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;name&amp;#34;: &amp;#34;my-shared-library&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;version&amp;#34;: &amp;#34;1.0.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;main&amp;#34;: &amp;#34;dist/index.js&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;types&amp;#34;: &amp;#34;dist/index.d.ts&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;files&amp;#34;: [&amp;#34;dist&amp;#34;],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;scripts&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;build&amp;#34;: &amp;#34;tsc&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;prepublishOnly&amp;#34;: &amp;#34;npm run build&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;dependencies&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;tslib&amp;#34;: &amp;#34;^2.0.0&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;devDependencies&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;typescript&amp;#34;: &amp;#34;^4.0.0&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="publicar-en-npm">Publicar en npm&lt;/h3>
&lt;ol>
&lt;li>Inicia sesión en npm:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm login
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Publica la librería:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm publish
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="uso-de-la-librería-en-otros-proyectos">Uso de la librería en otros proyectos&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Instala la librería:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install my-shared-library
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Usa las funciones en tu código:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">import { add, subtract } from &amp;#39;my-shared-library&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">console.log(add(2, 3)); // 5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">console.log(subtract(5, 2)); // 3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Documentación&lt;/strong>:
&lt;ul>
&lt;li>Usa &lt;code>README.md&lt;/code> para describir la instalación, uso y ejemplos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Pruebas unitarias&lt;/strong>:
&lt;ul>
&lt;li>Configura un framework como Jest para validar el comportamiento de la librería.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Versionado semántico&lt;/strong>:
&lt;ul>
&lt;li>Sigue el esquema &lt;code>MAJOR.MINOR.PATCH&lt;/code> para gestionar cambios.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Optimizar el tamaño&lt;/strong>:
&lt;ul>
&lt;li>Excluye archivos innecesarios en el campo &lt;code>files&lt;/code> de &lt;code>package.json&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Seguridad&lt;/strong>:
&lt;ul>
&lt;li>Actualiza dependencias regularmente y realiza auditorías con:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm audit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Crear librerías compartidas en TypeScript es una estrategia efectiva para mejorar la reutilización de código y aumentar la productividad del equipo. Siguiendo las mejores prácticas y adoptando herramientas modernas, puedes garantizar que tus librerías sean seguras, eficientes y fáciles de usar. ¡Empieza a construir tu próxima librería hoy mismo!&lt;/p></description></item><item><title>Testing avanzado en Angular con Jest: Mejores prácticas</title><link>https://cmas.dev/posts/2024-06-12-testing-angular-jest/</link><pubDate>Wed, 12 Jun 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-06-12-testing-angular-jest/</guid><description>&lt;p>Las pruebas en aplicaciones &lt;strong>Angular&lt;/strong> son esenciales para garantizar la calidad, confiabilidad y mantenibilidad del código. En este artículo, exploraremos el uso avanzado de &lt;strong>Jest&lt;/strong> como framework de pruebas en &lt;strong>Angular&lt;/strong>, cubriendo configuración inicial, estrategias de pruebas unitarias y de integración, así como buenas prácticas para lograr un enfoque moderno, eficiente y seguro.&lt;/p>
&lt;h2 id="por-qué-usar-jest-en-angular">¿Por qué usar Jest en Angular?&lt;/h2>
&lt;h3 id="ventajas-de-jest">Ventajas de Jest&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Rápido y eficiente&lt;/strong>: Jest paraleliza la ejecución de pruebas, lo que mejora significativamente los tiempos.&lt;/li>
&lt;li>&lt;strong>API intuitiva&lt;/strong>: Proporciona una sintaxis clara y fácil de aprender.&lt;/li>
&lt;li>&lt;strong>Mocks y espías integrados&lt;/strong>: Simplifica la simulación de dependencias.&lt;/li>
&lt;li>&lt;strong>Informes detallados&lt;/strong>: Ofrece feedback claro sobre las pruebas fallidas.&lt;/li>
&lt;li>&lt;strong>Snapshot testing&lt;/strong>: Permite capturar estados de componentes para detectar cambios inesperados.&lt;/li>
&lt;/ol>
&lt;h2 id="configuración-inicial-de-jest-en-un-proyecto-angular">Configuración inicial de Jest en un proyecto Angular&lt;/h2>
&lt;h3 id="requisitos-previos">Requisitos previos&lt;/h3>
&lt;ol>
&lt;li>Tener Angular CLI instalado:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install -g @angular/cli
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Crear un nuevo proyecto Angular o usar uno existente:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng new angular-jest-demo --routing --style css
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="instalar-jest-y-dependencias">Instalar Jest y dependencias&lt;/h3>
&lt;p>Reemplaza el entorno de pruebas predeterminado de Angular (Karma) con Jest:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install jest @types/jest jest-preset-angular --save-dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="configurar-jest">Configurar Jest&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Agrega un archivo de configuración &lt;code>jest.config.js&lt;/code> en la raíz del proyecto:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">module&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">exports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">preset&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;jest-preset-angular&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">setupFilesAfterEnv&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;rootDir&amp;gt;/setup-jest.ts&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">testEnvironment&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;jsdom&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">testMatch&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;**/+(*.)+(spec).+(ts|js)&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">transform&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;^.+\.(ts|html)$&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;jest-preset-angular&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">moduleFileExtensions&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;ts&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;html&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;js&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;json&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">collectCoverage&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="bp">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">coverageReporters&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;html&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;text&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">coverageDirectory&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;coverage/jest&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Crea el archivo &lt;code>setup-jest.ts&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">import &amp;#39;jest-preset-angular/setup-jest&amp;#39;;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Modifica &lt;code>tsconfig.spec.json&lt;/code> para incluir Jest:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;compilerOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;types&amp;#34;: [&amp;#34;jest&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Actualiza los scripts de &lt;code>package.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;scripts&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;test&amp;#34;: &amp;#34;jest&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;test:watch&amp;#34;: &amp;#34;jest --watch&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="escribir-pruebas-unitarias-avanzadas">Escribir pruebas unitarias avanzadas&lt;/h2>
&lt;h3 id="pruebas-de-componentes">Pruebas de componentes&lt;/h3>
&lt;h4 id="configurar-pruebas-básicas">Configurar pruebas básicas&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">ComponentFixture&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">TestBed&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core/testing&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">MyComponent&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./my.component&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">describe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;MyComponent&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">let&lt;/span> &lt;span class="n">component&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">MyComponent&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">let&lt;/span> &lt;span class="n">fixture&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ComponentFixture&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">MyComponent&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">beforeEach&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">TestBed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">configureTestingModule&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">declarations&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">MyComponent&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">compileComponents&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fixture&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TestBed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">createComponent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MyComponent&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">component&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fixture&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">componentInstance&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fixture&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">detectChanges&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">it&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;debería crear el componente&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">component&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toBeTruthy&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">it&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;debería renderizar el título&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">compiled&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fixture&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nativeElement&lt;/span> &lt;span class="n">as&lt;/span> &lt;span class="n">HTMLElement&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">compiled&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">querySelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;h1&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">?&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">textContent&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toContain&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Bienvenido a MyComponent!&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="pruebas-de-servicios">Pruebas de servicios&lt;/h3>
&lt;h4 id="mocking-de-dependencias">Mocking de dependencias&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">TestBed&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core/testing&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">HttpClientTestingModule&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">HttpTestingController&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/common/http/testing&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">MyService&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./my.service&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">describe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;MyService&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">let&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">MyService&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">let&lt;/span> &lt;span class="n">httpMock&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">HttpTestingController&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">beforeEach&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">TestBed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">configureTestingModule&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">imports&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">HttpClientTestingModule&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">providers&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">MyService&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">service&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TestBed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">inject&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MyService&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">httpMock&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TestBed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">inject&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">HttpTestingController&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">afterEach&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">httpMock&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">verify&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">it&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;debería obtener datos correctamente&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">mockData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;Test&amp;#39;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getData&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subscribe&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toEqual&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mockData&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">req&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">httpMock&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">expectOne&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/api/data&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">req&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">method&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toBe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;GET&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">req&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">flush&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mockData&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="snapshot-testing-en-angular">Snapshot Testing en Angular&lt;/h2>
&lt;p>Los snapshots permiten capturar el estado de un componente y compararlo con versiones futuras para detectar cambios inesperados.&lt;/p>
&lt;h3 id="crear-un-snapshot">Crear un snapshot&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">render&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@testing-library/angular&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">MyComponent&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./my.component&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">describe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;MyComponent&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">it&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;debería coincidir con el snapshot&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">container&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">render&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MyComponent&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">container&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toMatchSnapshot&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="actualizar-snapshots">Actualizar snapshots&lt;/h3>
&lt;p>Si los cambios son intencionales, actualiza los snapshots:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">jest --updateSnapshot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="buenas-prácticas-para-pruebas-avanzadas">Buenas prácticas para pruebas avanzadas&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Configurar CI/CD&lt;/strong>: Automatiza las pruebas en plataformas como GitHub Actions o Azure DevOps.&lt;/li>
&lt;li>&lt;strong>Cobertura de código&lt;/strong>: Asegúrate de alcanzar al menos el 80% de cobertura.&lt;/li>
&lt;li>&lt;strong>Separar pruebas unitarias e integradas&lt;/strong>: Mantén un enfoque claro entre las pruebas locales y las de sistema.&lt;/li>
&lt;li>&lt;strong>Mocking eficiente&lt;/strong>: Usa herramientas como &lt;code>jest.mock&lt;/code> para simular dependencias externas.&lt;/li>
&lt;li>&lt;strong>Documentar las pruebas&lt;/strong>: Incluye descripciones claras sobre los objetivos de cada caso de prueba.&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Implementar pruebas avanzadas con &lt;strong>Jest&lt;/strong> en &lt;strong>Angular&lt;/strong> mejora la calidad del software y reduce riesgos en el desarrollo. Al seguir buenas prácticas y adoptar herramientas modernas, los equipos pueden garantizar que sus aplicaciones sean robustas, seguras y fáciles de mantener. ¡Empieza hoy mismo a implementar Jest en tus proyectos &lt;strong>Angular&lt;/strong>!&lt;/p></description></item><item><title>Integración de Angular con Azure Static Web Apps: Un caso práctico</title><link>https://cmas.dev/posts/2024-06-05-angular-integration-azure-static-web/</link><pubDate>Wed, 05 Jun 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-06-05-angular-integration-azure-static-web/</guid><description>&lt;p>En la era moderna del desarrollo web, la combinación de frameworks frontend como &lt;strong>Angular&lt;/strong> y servicios en la nube como &lt;strong>Azure Static Web Apps&lt;/strong> proporciona una solución eficiente y escalable para crear y desplegar aplicaciones. Este artículo explora cómo integrar &lt;strong>Angular&lt;/strong> con &lt;strong>Azure Static Web Apps&lt;/strong>, mostrando ejemplos prácticos, buenas prácticas y enfoques modernos y seguros para garantizar el éxito en tus proyectos.&lt;/p>
&lt;h2 id="por-qué-elegir-angular-y-azure-static-web-apps">¿Por qué elegir Angular y Azure Static Web Apps?&lt;/h2>
&lt;h3 id="ventajas-de-angular">Ventajas de Angular&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Ecosistema robusto&lt;/strong>: Angular es un framework completo con herramientas integradas para el desarrollo de aplicaciones escalables.&lt;/li>
&lt;li>&lt;strong>TypeScript nativo&lt;/strong>: Mejora la calidad del código y la experiencia del desarrollador.&lt;/li>
&lt;li>&lt;strong>Componentes reusables&lt;/strong>: Facilitan la organización y el mantenimiento del código.&lt;/li>
&lt;/ol>
&lt;h3 id="beneficios-de-azure-static-web-apps">Beneficios de Azure Static Web Apps&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Despliegue sencillo&lt;/strong>: Automatiza el despliegue directo desde repositorios como GitHub.&lt;/li>
&lt;li>&lt;strong>Distribución global&lt;/strong>: Servidores edge para un rendimiento óptimo.&lt;/li>
&lt;li>&lt;strong>Soporte para APIs&lt;/strong>: Integración con Azure Functions para lógica backend.&lt;/li>
&lt;li>&lt;strong>Certificados SSL automáticos&lt;/strong>: Garantiza conexiones seguras sin configuraciones adicionales.&lt;/li>
&lt;/ol>
&lt;h2 id="configuración-inicial">Configuración inicial&lt;/h2>
&lt;h3 id="requisitos-previos">Requisitos previos&lt;/h3>
&lt;ul>
&lt;li>Node.js y Angular CLI instalados:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install -g @angular/cli
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Cuenta de Azure activa.&lt;/li>
&lt;li>Repositorio en GitHub (opcional pero recomendado).&lt;/li>
&lt;/ul>
&lt;h3 id="crear-una-aplicación-angular">Crear una aplicación Angular&lt;/h3>
&lt;ol>
&lt;li>Generar un nuevo proyecto:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng new angular-azure-demo --routing --style css
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Navegar al directorio del proyecto:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd angular-azure-demo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Ejecutar el servidor de desarrollo:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng serve
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="preparar-la-aplicación-para-despliegue">Preparar la aplicación para despliegue&lt;/h2>
&lt;h3 id="generar-los-archivos-de-producción">Generar los archivos de producción&lt;/h3>
&lt;ol>
&lt;li>Ejecutar el comando de construcción:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng build --prod
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Los archivos generados se encontrarán en el directorio &lt;code>dist/angular-azure-demo&lt;/code>.&lt;/li>
&lt;/ol>
&lt;h3 id="configurar-un-archivo-staticwebappconfigjson">Configurar un archivo &lt;code>staticwebapp.config.json&lt;/code>&lt;/h3>
&lt;p>Este archivo define rutas y configuraciones personalizadas para Azure Static Web Apps:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;routes&amp;#34;: [
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;route&amp;#34;: &amp;#34;/api/*&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;method&amp;#34;: &amp;#34;GET&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;allowedRoles&amp;#34;: [&amp;#34;anonymous&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;route&amp;#34;: &amp;#34;/*&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;rewrite&amp;#34;: &amp;#34;/index.html&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Guarda este archivo en el directorio &lt;code>dist/angular-azure-demo&lt;/code>.&lt;/p>
&lt;h2 id="crear-y-configurar-azure-static-web-app">Crear y configurar Azure Static Web App&lt;/h2>
&lt;h3 id="paso-1-crear-un-recurso-en-azure">Paso 1: Crear un recurso en Azure&lt;/h3>
&lt;ol>
&lt;li>Inicia sesión en el &lt;a href="https://portal.azure.com">portal de Azure&lt;/a>.&lt;/li>
&lt;li>Selecciona &lt;strong>Crear un recurso&lt;/strong> y busca &lt;strong>Static Web Apps&lt;/strong>.&lt;/li>
&lt;li>Completa los detalles del recurso:
&lt;ul>
&lt;li>&lt;strong>Nombre&lt;/strong>: &lt;code>angular-static-web&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Plan&lt;/strong>: Gratis (Free).&lt;/li>
&lt;li>&lt;strong>Región&lt;/strong>: Elige la más cercana a tus usuarios.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="paso-2-vincular-el-repositorio">Paso 2: Vincular el repositorio&lt;/h3>
&lt;ol>
&lt;li>Conecta el recurso con tu repositorio de GitHub.&lt;/li>
&lt;li>Selecciona la rama principal y el directorio de la aplicación (&lt;code>/dist/angular-azure-demo&lt;/code>).&lt;/li>
&lt;/ol>
&lt;h3 id="paso-3-despliegue-automático">Paso 3: Despliegue automático&lt;/h3>
&lt;p>Cada vez que actualices la rama principal, Azure redeployará la aplicación automáticamente.&lt;/p>
&lt;h2 id="integrar-una-api-con-azure-functions">Integrar una API con Azure Functions&lt;/h2>
&lt;h3 id="crear-una-azure-function">Crear una Azure Function&lt;/h3>
&lt;ol>
&lt;li>Instalar las herramientas necesarias:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">npm&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">g&lt;/span> &lt;span class="n">azure&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">functions&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">core&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">tools&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="mi">4&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">unsafe&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">perm&lt;/span> &lt;span class="bp">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Crear un proyecto de funciones:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">func&lt;/span> &lt;span class="n">init&lt;/span> &lt;span class="n">api&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">typescript&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Crear una nueva función HTTP:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">cd&lt;/span> &lt;span class="n">api&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">func&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">template&lt;/span> &lt;span class="s2">&amp;#34;HTTP trigger&amp;#34;&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="n">GetMessage&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="conectar-la-api-con-la-aplicación-angular">Conectar la API con la aplicación Angular&lt;/h3>
&lt;ol>
&lt;li>Modificar el código de la función:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">req&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">HttpRequest&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Promise&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">void&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">body&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Hola desde Azure Functions&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Agregar un servicio Angular para consumir la API:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">HttpClient&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/common/http&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Injectable&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Injectable&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">providedIn&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">ApiService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">HttpClient&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">getMessage&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/api/GetMessage&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Usar el servicio en un componente:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Component&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">OnInit&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">ApiService&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./api.service&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">selector&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;app-root&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">template&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="err">`&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">h1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">{{&lt;/span> &lt;span class="n">message&lt;/span> &lt;span class="p">}}&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">h1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="err">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">AppComponent&lt;/span> &lt;span class="n">implements&lt;/span> &lt;span class="n">OnInit&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">api&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ApiService&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ngOnInit&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">api&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getMessage&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subscribe&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">any&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Usar HTTPS&lt;/strong>: Siempre habilita HTTPS en el entorno de producción.&lt;/li>
&lt;li>&lt;strong>Monitorear el rendimiento&lt;/strong>: Utiliza Azure Monitor para detectar cuellos de botella.&lt;/li>
&lt;li>&lt;strong>Validar entradas&lt;/strong>: Implementa validaciones en la API para evitar vulnerabilidades como inyecciones.&lt;/li>
&lt;li>&lt;strong>Minimizar y optimizar recursos&lt;/strong>: Usa herramientas como &lt;code>ng build --prod&lt;/code> para reducir el tamaño de los archivos.&lt;/li>
&lt;li>&lt;strong>Seguridad&lt;/strong>: Configura roles y permisos en el archivo &lt;code>staticwebapp.config.json&lt;/code> para proteger rutas sensibles.&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>La integración de Angular con &lt;strong>Azure Static Web Apps&lt;/strong> ofrece una solución moderna, escalable y eficiente para desplegar aplicaciones web. Siguiendo las mejores prácticas y aprovechando herramientas como Azure Functions, puedes construir sistemas completos y seguros que se adapten a las necesidades de tus usuarios. ¡Empieza hoy mismo a aprovechar estas tecnologías y lleva tus proyectos al siguiente nivel!&lt;/p></description></item><item><title>API RESTful con TypeScript y Deno: Guía completa</title><link>https://cmas.dev/posts/2024-05-29-api-restful-typescript-deno/</link><pubDate>Wed, 29 May 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-05-29-api-restful-typescript-deno/</guid><description>&lt;p>Deno, el moderno entorno de ejecución para JavaScript y TypeScript creado por Ryan Dahl, está transformando la manera en que se desarrollan aplicaciones backend. A diferencia de Node.js, Deno se centra en la seguridad, el rendimiento y una experiencia de desarrollo simplificada. En este artículo, exploraremos cómo construir una API RESTful utilizando &lt;strong>TypeScript&lt;/strong> y &lt;strong>Deno&lt;/strong> desde cero, cubriendo todas las operaciones CRUD (&lt;strong>POST, GET, PUT, DELETE&lt;/strong>) junto con buenas prácticas, seguridad y optimización&amp;hellip;&lt;/p>
&lt;h2 id="qué-es-deno-y-por-qué-usarlo">¿Qué es Deno y por qué usarlo?&lt;/h2>
&lt;p>Deno es un entorno de ejecución seguro para JavaScript y TypeScript que se ejecuta en el motor V8 de Google. Fue diseñado para abordar algunas limitaciones de Node.js y proporcionar:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Seguridad por defecto&lt;/strong>: No se permite acceso al sistema de archivos, red o variables de entorno sin permisos explícitos.&lt;/li>
&lt;li>&lt;strong>Soporte nativo para TypeScript&lt;/strong>: No es necesario usar compilers externos como &lt;code>tsc&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Manejo de módulos con URL&lt;/strong>: No hay &lt;code>node_modules&lt;/code>, los módulos se cargan desde URLs.&lt;/li>
&lt;li>&lt;strong>Ecosistema moderno&lt;/strong>: Incluye un test runner, formateador y otras herramientas integradas.&lt;/li>
&lt;/ol>
&lt;h2 id="configuración-inicial-del-entorno-de-desarrollo">Configuración inicial del entorno de desarrollo&lt;/h2>
&lt;h3 id="instalación-de-deno">Instalación de Deno&lt;/h3>
&lt;p>Primero, instala Deno en tu sistema operativo siguiendo los comandos oficiales:&lt;/p>
&lt;p>&lt;strong>Windows (PowerShell):&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">iwr https://deno.land/x/install/install.ps1 -useb | iex
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>macOS/Linux:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">curl -fsSL https://deno.land/x/install/install.sh | sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verifica la instalación:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">deno --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="creación-de-la-estructura-del-proyecto">Creación de la estructura del proyecto&lt;/h3>
&lt;p>Crea un directorio para tu API y estructura el proyecto de la siguiente manera:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">api-restful-deno/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── controllers/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── models/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── routes/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── server.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── deps.ts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── utils/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-1-configurar-el-servidor-http-con-deno">Paso 1: Configurar el servidor HTTP con Deno&lt;/h2>
&lt;p>Deno utiliza bibliotecas como &lt;code>oak&lt;/code> para manejar solicitudes HTTP. Agrega las dependencias en un archivo &lt;code>deps.ts&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">deps&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Router&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Context&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/oak/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">v4&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/std@0.197.0/uuid/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ahora, configura el servidor en &lt;code>server.ts&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">server&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Router&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;./deps.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="n">router&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;./routes/index.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Application&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">port&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">8000&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Middleware&lt;/span> &lt;span class="n">para&lt;/span> &lt;span class="n">registrar&lt;/span> &lt;span class="n">las&lt;/span> &lt;span class="n">solicitudes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">next&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">method&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">next&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Rutas&lt;/span> &lt;span class="n">principales&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">allowedMethods&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="n">Servidor&lt;/span> &lt;span class="n">escuchando&lt;/span> &lt;span class="n">en&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">localhost&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">port&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">await&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">listen&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">port&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecuta el servidor:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">deno run --allow-net server.ts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-2-crear-rutas-y-controladores">Paso 2: Crear rutas y controladores&lt;/h2>
&lt;h3 id="crear-rutas-base">Crear rutas base&lt;/h3>
&lt;p>Crea un archivo &lt;code>routes/index.ts&lt;/code> para definir las rutas principales de la API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">routes&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Router&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../deps.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">getAllUsers&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">getUserById&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">createUser&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">updateUser&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">deleteUser&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../controllers/userController.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">router&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Router&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">router&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/api/users&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">getAllUsers&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/api/users/:id&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">getUserById&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">post&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/api/users&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">createUser&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">put&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/api/users/:id&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">updateUser&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">delete&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/api/users/:id&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">deleteUser&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">default&lt;/span> &lt;span class="n">router&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="crear-controladores-crud">Crear controladores CRUD&lt;/h3>
&lt;p>En &lt;code>controllers/userController.ts&lt;/code>, define la lógica para cada operación CRUD:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">controllers&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">userController&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Context&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../deps.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">v4&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;../deps.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">interface&lt;/span> &lt;span class="n">User&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">email&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">let&lt;/span> &lt;span class="n">users&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">User&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Obtener&lt;/span> &lt;span class="n">todos&lt;/span> &lt;span class="n">los&lt;/span> &lt;span class="n">usuarios&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">getAllUsers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">users&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Obtener&lt;/span> &lt;span class="n">un&lt;/span> &lt;span class="n">usuario&lt;/span> &lt;span class="n">por&lt;/span> &lt;span class="n">ID&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">getUserById&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">params&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">users&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">u&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">404&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Usuario no encontrado&amp;#34;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Crear&lt;/span> &lt;span class="n">un&lt;/span> &lt;span class="n">nuevo&lt;/span> &lt;span class="n">usuario&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">createUser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">email&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">type&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;json&amp;#34;&lt;/span> &lt;span class="p">})&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">newUser&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">User&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">v4&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">generate&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">email&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">users&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">newUser&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">201&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">newUser&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Actualizar&lt;/span> &lt;span class="n">un&lt;/span> &lt;span class="n">usuario&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">updateUser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">params&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">email&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">type&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;json&amp;#34;&lt;/span> &lt;span class="p">})&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">users&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">u&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">email&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">email&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">email&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">404&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Usuario no encontrado&amp;#34;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Eliminar&lt;/span> &lt;span class="n">un&lt;/span> &lt;span class="n">usuario&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">deleteUser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">params&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">users&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">findIndex&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">u&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">index&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">users&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">splice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">204&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">404&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Usuario no encontrado&amp;#34;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Construir una API RESTful con TypeScript y Deno no solo es sencillo, sino que ofrece ventajas en términos de seguridad y rendimiento. Siguiendo las buenas prácticas y utilizando las herramientas modernas que Deno proporciona, puedes crear APIs escalables y fáciles de mantener.&lt;/p></description></item><item><title>Introducción a los Signals en Angular: Casos prácticos</title><link>https://cmas.dev/posts/2024-05-22-intro-signals-angular/</link><pubDate>Wed, 22 May 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-05-22-intro-signals-angular/</guid><description>&lt;p>Angular es un framework robusto y evolutivo que continuamente introduce nuevas características para mejorar el desarrollo de aplicaciones web modernas. Una de estas innovaciones son los &lt;strong>Signals&lt;/strong>, una herramienta que permite manejar cambios de estado de manera reactiva, clara y eficiente. Este artículo ofrece una introducción detallada a los Signals en Angular, explicando cómo utilizarlos, sus ventajas comparativas frente a otras soluciones reactivas y sus aplicaciones en el desarrollo real, acompañado de casos prácticos ampliados, buenas prácticas y un enfoque moderno en seguridad.&lt;/p>
&lt;h2 id="qué-son-los-signals-en-angular">¿Qué son los Signals en Angular?&lt;/h2>
&lt;p>Los Signals son una forma reactiva de manejar cambios de estado dentro de una aplicación Angular. A diferencia de las propiedades tradicionales o las soluciones basadas en &lt;em>Observables&lt;/em> de &lt;em>RxJS&lt;/em>, los Signals proporcionan un enfoque más directo para gestionar actualizaciones en la interfaz de usuario. Esta simplicidad es particularmente útil para escenarios donde se necesita un manejo del estado local claro y eficiente, reduciendo la complejidad general del código.&lt;/p>
&lt;h3 id="características-clave-de-los-signals">Características clave de los Signals&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Reactividad Automática&lt;/strong>: Los Signals reaccionan automáticamente a los cambios en su estado, actualizando los componentes afectados. Esto elimina la necesidad de invocar manualmente procesos de actualización de la interfaz.&lt;/li>
&lt;li>&lt;strong>Simplicidad&lt;/strong>: Reducir la necesidad de suscribirse y manejar manualmente flujos de datos, mejorando la legibilidad del código.&lt;/li>
&lt;li>&lt;strong>Integración nativa&lt;/strong>: Diseñar para integrarse de manera fluida con Angular, los Signals pueden ser utilizados junto con otras herramientas del framework.&lt;/li>
&lt;/ol>
&lt;h2 id="configuración-de-signals-en-angular">Configuración de Signals en Angular&lt;/h2>
&lt;h3 id="paso-1-configurar-un-proyecto-angular">Paso 1: Configurar un proyecto Angular&lt;/h3>
&lt;p>Primero, crear un nuevo proyecto Angular utilizando Angular CLI. Este proceso genera una estructura base para la aplicación.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ng&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">signals&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">demo&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">routing&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">style&lt;/span> &lt;span class="n">css&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-2-instalar-las-dependencias-necesarias">Paso 2: Instalar las dependencias necesarias&lt;/h3>
&lt;p>Si los Signals no están incluidos en tu versión de Angular, se debe asegurar de actualizar a la última versión. Esto garantiza que se tenga acceso a las funcionalidades más recientes y al soporte técnico oficial.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng update @angular/core @angular/cli
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="usando-signals-en-angular">Usando Signals en Angular&lt;/h2>
&lt;h3 id="declaración-de-un-signal">Declaración de un Signal&lt;/h3>
&lt;p>Poder declarar un Signal utilizando el método &lt;code>signal&lt;/code> del paquete Angular. Este método permitir definir estados reactivos que pueden actualizarse y observarse de manera eficiente.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">signal&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">AppComponent&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">signal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">increment&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="uso-en-plantillas">Uso en plantillas&lt;/h3>
&lt;p>Los Signals se integran perfectamente con las plantillas de Angular. Se puede enlazarlos directamente, lo que simplifica la gestión del estado en la interfaz de usuario.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;div&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;p&amp;gt;Contador: {{ count() }}&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;button (click)=&amp;#34;increment()&amp;#34;&amp;gt;Incrementar&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/div&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="reactividad-con-computed-signals">Reactividad con Computed Signals&lt;/h3>
&lt;p>Los &lt;em>Computed Signals&lt;/em> permiten derivar valores basados en otros Signals. Esto es útil para evitar cálculos repetitivos o duplicados en la aplicación.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">signal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">computed&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">AppComponent&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">signal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">doubleCount&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">computed&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">increment&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>En la plantilla:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;div&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;p&amp;gt;Doble del contador: {{ doubleCount() }}&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;button (click)=&amp;#34;increment()&amp;#34;&amp;gt;Incrementar&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/div&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="casos-prácticos">Casos Prácticos&lt;/h2>
&lt;h3 id="1-manejo-de-estados-globales">1. Manejo de Estados Globales&lt;/h3>
&lt;p>Los Signals son útiles para gestionar estados compartidos en una aplicación. Un ejemplo clásico es la administración del estado de autenticación.&lt;/p>
&lt;h4 id="ejemplo">Ejemplo&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Injectable&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">signal&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Injectable&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">providedIn&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">AuthService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">_isLoggedIn&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">signal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">false&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">isLoggedIn&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_isLoggedIn&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">asReadonly&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">login&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_isLoggedIn&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">true&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logout&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_isLoggedIn&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">false&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-formularios-reactivos-con-signals">2. Formularios Reactivos con Signals&lt;/h3>
&lt;p>Los Signals pueden simplificar la reactividad en formularios, mejorando la claridad del código y reduciendo la dependencia de estados auxiliares.&lt;/p>
&lt;h4 id="ejemplo-1">Ejemplo&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Component&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">FormBuilder&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">FormGroup&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Validators&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/forms&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">signal&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Component&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">selector&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;app-login&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">templateUrl&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;./login.component.html&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">LoginComponent&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">loginForm&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">FormGroup&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">isSubmitting&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">signal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">false&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">fb&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">FormBuilder&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">loginForm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fb&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">group&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">username&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Validators&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">required&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Validators&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">required&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">submit&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">loginForm&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">valid&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">isSubmitting&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">true&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Simular&lt;/span> &lt;span class="n">una&lt;/span> &lt;span class="n">petición&lt;/span> &lt;span class="n">de&lt;/span> &lt;span class="n">login&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">setTimeout&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">isSubmitting&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">false&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span> &lt;span class="mi">2000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Plantilla:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;form [formGroup]=&amp;#34;loginForm&amp;#34; (ngSubmit)=&amp;#34;submit()&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;input formControlName=&amp;#34;username&amp;#34; placeholder=&amp;#34;Usuario&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;input formControlName=&amp;#34;password&amp;#34; type=&amp;#34;password&amp;#34; placeholder=&amp;#34;Contraseña&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;button type=&amp;#34;submit&amp;#34; [disabled]=&amp;#34;isSubmitting()&amp;#34;&amp;gt;Iniciar Sesión&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/form&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="buenas-prácticas-con-signals">Buenas Prácticas con Signals&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Mantener la simplicidad&lt;/strong>: Usar Signals para estados locales y Observables para flujos de datos complejos o asíncronos.&lt;/li>
&lt;li>&lt;strong>Usar Signals derivados&lt;/strong>: Preferir &lt;code>computed&lt;/code> para evitar código duplicado y mejorar la eficiencia.&lt;/li>
&lt;li>&lt;strong>Proteger los Signals&lt;/strong>: Utilizar &lt;code>asReadonly&lt;/code> para evitar modificaciones accidentales en estados que no deben cambiarse directamente.&lt;/li>
&lt;li>&lt;strong>Combinar Signals y Observables&lt;/strong>: En aplicaciones grandes, considerar usar Signals para estados locales y Observables para comunicaciones con servicios remotos.&lt;/li>
&lt;/ol>
&lt;h2 id="seguridad-con-signals">Seguridad con Signals&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Validar datos&lt;/strong>: Siempre validar los datos antes de actualizarlos en un Signal. Esto es especialmente importante en escenarios donde los datos provienen de entradas de usuario.&lt;/li>
&lt;li>&lt;strong>Evitar manipulaciones directas&lt;/strong>: Encapsular los Signals en servicios para proteger su integridad y evitar accesos no autorizados.&lt;/li>
&lt;li>&lt;strong>Auditar&lt;/strong>: Implementar logs para registrar cambios en Signals sensibles. Esto permite rastrear modificaciones inesperadas y detectar posibles problemas de seguridad.&lt;/li>
&lt;li>&lt;strong>Evitar exponerse a cambios externos&lt;/strong>: Cuando se trabaja con aplicaciones multiusuario, considerar estrategias de sincronización seguras para evitar conflictos.&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Los Signals representan un avance significativo en el manejo del estado reactivo en Angular. Su simplicidad y eficiencia los convierten en una herramienta esencial para aplicaciones modernas. Al adoptar buenas prácticas y aprovechar sus características avanzadas, como los Computed Signals, los desarrolladores pueden construir experiencias de usuario más fluidas, escalables y seguras. ¡Empezá a explorar los Signals hoy mismo y transforma la manera en que diseñas aplicaciones con Angular! Además, considerar su combinación con otras herramientas reactivas para maximizar su impacto en proyectos complejos.&lt;/p></description></item><item><title>Lazy Loading en Angular: Mejora el rendimiento de tus aplicaciones</title><link>https://cmas.dev/posts/2024-05-15-lazy-loading-angular/</link><pubDate>Wed, 15 May 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-05-15-lazy-loading-angular/</guid><description>&lt;p>El rendimiento es un factor crítico en las aplicaciones web modernas. Angular, como uno de los frameworks más populares para construir aplicaciones, ofrece herramientas avanzadas para optimizar la carga y el uso de recursos. Una de estas herramientas es el &lt;strong>Lazy Loading&lt;/strong> (carga diferida), que permite cargar módulos de la aplicación sólo cuando son necesarios. Este artículo explora cómo implementar Lazy Loading en Angular, sus beneficios y las mejores prácticas para maximizar su eficacia.&lt;/p>
&lt;h2 id="qué-es-lazy-loading">¿Qué es Lazy Loading?&lt;/h2>
&lt;p>Lazy Loading es una técnica que retrasa la carga de recursos o módulos hasta que sean realmente necesarios. En el contexto de Angular, esto implica cargar partes específicas de la aplicación (como módulos) sólo cuando el usuario las solicita. Esto mejora significativamente el tiempo de carga inicial de la aplicación y reduce el uso de recursos del navegador.&lt;/p>
&lt;h3 id="beneficios-de-lazy-loading">Beneficios de Lazy Loading&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Tiempo de carga inicial reducido&lt;/strong>: Solo se cargan los recursos necesarios para la vista inicial.&lt;/li>
&lt;li>&lt;strong>Uso eficiente de recursos&lt;/strong>: Reduce la cantidad de código que el navegador necesita procesar al inicio.&lt;/li>
&lt;li>&lt;strong>Mejora en la experiencia del usuario&lt;/strong>: La aplicación responde más rápido a las interacciones iniciales.&lt;/li>
&lt;li>&lt;strong>Soporte para escalabilidad&lt;/strong>: Ideal para aplicaciones grandes con múltiples módulos y rutas.&lt;/li>
&lt;/ol>
&lt;h2 id="configuración-básica-de-lazy-loading-en-angular">Configuración básica de Lazy Loading en Angular&lt;/h2>
&lt;h3 id="paso-1-crear-un-módulo-con-rutas-independientes">Paso 1: Crear un módulo con rutas independientes&lt;/h3>
&lt;p>Primero, generar un nuevo módulo utilizando Angular CLI:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng generate module feature --route feature --module app.module
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Este comando genera un módulo llamado &lt;code>FeatureModule&lt;/code> y configura la ruta correspondiente en el &lt;code>AppRoutingModule&lt;/code>.&lt;/p>
&lt;h3 id="paso-2-configurar-rutas-con-lazy-loading">Paso 2: Configurar rutas con Lazy Loading&lt;/h3>
&lt;p>El archivo &lt;code>app-routing.module.ts&lt;/code> debería verse así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">NgModule&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">RouterModule&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Routes&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/router&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">routes&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Routes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;feature&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">loadChildren&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">import&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./feature/feature.module&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">FeatureModule&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">NgModule&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">imports&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">RouterModule&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">forRoot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="p">)],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">exports&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">RouterModule&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">AppRoutingModule&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-3-crear-componentes-dentro-del-módulo-cargado-de-forma-diferida">Paso 3: Crear componentes dentro del módulo cargado de forma diferida&lt;/h3>
&lt;p>Dentro del &lt;code>FeatureModule&lt;/code>, genera un componente:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ng generate component feature/feature-home
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Asegúrate de declarar este componente en el &lt;code>FeatureModule&lt;/code> y configurarlo en el archivo &lt;code>feature-routing.module.ts&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">NgModule&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">RouterModule&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Routes&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/router&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">FeatureHomeComponent&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;./feature-home/feature-home.component&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">routes&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Routes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">component&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">FeatureHomeComponent&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">NgModule&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">imports&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">RouterModule&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">forChild&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">routes&lt;/span>&lt;span class="p">)],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">exports&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">RouterModule&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">FeatureRoutingModule&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="mejores-prácticas-para-lazy-loading">Mejores prácticas para Lazy Loading&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Organización modular&lt;/strong>: Divide la aplicación en módulos coherentes y significativos.&lt;/li>
&lt;li>&lt;strong>Prefetching&lt;/strong>: Carga anticipada de módulos con alta probabilidad de ser usados.&lt;/li>
&lt;li>&lt;strong>Rutas protegidas&lt;/strong>: Implementa Lazy Loading junto con guardias de ruta (route guards) para asegurar recursos sensibles.&lt;/li>
&lt;li>&lt;strong>Análisis de rendimiento&lt;/strong>: Usa herramientas como Lighthouse para identificar oportunidades de mejora.&lt;/li>
&lt;/ol>
&lt;h3 id="ejemplo-implementación-de-prefetching">Ejemplo: Implementación de prefetching&lt;/h3>
&lt;p>El prefetching anticipa y carga módulos en segundo plano mientras el usuario interactúa con la aplicación.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">NgModule&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">RouterModule&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">Routes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">PreloadAllModules&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/router&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">routes&lt;/span>: &lt;span class="kt">Routes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;feature&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">loadChildren&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="kr">import&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./feature/feature.module&amp;#39;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">m&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="nx">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">FeatureModule&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">@NgModule&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">imports&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">RouterModule&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">forRoot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">routes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">preloadingStrategy&lt;/span>: &lt;span class="kt">PreloadAllModules&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">exports&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">RouterModule&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">export&lt;/span> &lt;span class="kr">class&lt;/span> &lt;span class="nx">AppRoutingModule&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="seguridad-en-lazy-loading">Seguridad en Lazy Loading&lt;/h2>
&lt;p>Lazy Loading también puede usarse para proteger rutas sensibles de forma eficiente. Algunos enfoques incluyen:&lt;/p>
&lt;h3 id="uso-de-route-guards">Uso de Route Guards&lt;/h3>
&lt;p>Los Route Guards controlan el acceso a rutas específicas. Implementa un guardia básico:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Injectable&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">CanActivate&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Router&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/router&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Injectable&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">providedIn&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">AuthGuard&lt;/span> &lt;span class="n">implements&lt;/span> &lt;span class="n">CanActivate&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">private&lt;/span> &lt;span class="n">router&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Router&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">canActivate&lt;/span>&lt;span class="p">():&lt;/span> &lt;span class="n">boolean&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">isAuthenticated&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">!!&lt;/span>&lt;span class="n">localStorage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;token&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">isAuthenticated&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">navigate&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s1">&amp;#39;/login&amp;#39;&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Configura el guardia en la ruta:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">routes&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Routes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;feature&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">loadChildren&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">import&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./feature/feature.module&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">then&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">FeatureModule&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">canActivate&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">AuthGuard&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="validación-de-datos-en-el-servidor">Validación de datos en el servidor&lt;/h3>
&lt;p>Siempre valida los datos del lado del servidor para evitar accesos no autorizados, incluso si se usan guardias del lado del cliente.&lt;/p>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Lazy Loading es una técnica poderosa para optimizar aplicaciones Angular, mejorando tanto el rendimiento como la experiencia del usuario. Al combinar Lazy Loading con buenas prácticas de seguridad y prefetching, puedes construir aplicaciones escalables, rápidas y seguras. Mantén tu aplicación organizada y realiza pruebas de rendimiento periódicas para garantizar su eficacia.&lt;/p></description></item><item><title>Seguridad en aplicaciones Deno: Autenticación y autorización</title><link>https://cmas.dev/posts/2024-05-08-deno-apps-security/</link><pubDate>Wed, 08 May 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-05-08-deno-apps-security/</guid><description>&lt;p>&lt;strong>Deno&lt;/strong>, como entorno de ejecución moderno para &lt;strong>JavaScript&lt;/strong> y &lt;strong>TypeScript&lt;/strong>, ofrece varias ventajas en términos de seguridad. Su enfoque en la seguridad por diseño incluye la gestión de permisos granular y un runtime sin acceso implícito al sistema. Sin embargo, la seguridad en aplicaciones Deno no solo depende del entorno, sino también de cómo se implementan funcionalidades clave como la autenticación y autorización. Este artículo explora cómo construir aplicaciones seguras en Deno con ejemplos prácticos y buenas prácticas.&lt;/p>
&lt;h2 id="introducción-a-la-seguridad-en-deno">Introducción a la seguridad en Deno&lt;/h2>
&lt;h3 id="ventajas-de-deno-en-términos-de-seguridad">Ventajas de Deno en términos de seguridad&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Sistema de permisos&lt;/strong>: Deno requiere permisos explícitos para acceder a archivos, red y entorno.&lt;/li>
&lt;li>&lt;strong>Tipado estático&lt;/strong>: TypeScript mejora la robustez del código.&lt;/li>
&lt;li>&lt;strong>Integración nativa con WebAssembly (WASM)&lt;/strong>: Reduce vulnerabilidades por código nativo inseguro.&lt;/li>
&lt;/ol>
&lt;p>A pesar de estas ventajas, los desarrolladores deben implementar medidas adicionales para proteger sus aplicaciones, especialmente en lo relacionado con la autenticación y autorización.&lt;/p>
&lt;h2 id="autenticación-en-deno">Autenticación en Deno&lt;/h2>
&lt;p>La autenticación verifica la identidad de los usuarios. Una implementación segura considera:&lt;/p>
&lt;ol>
&lt;li>Uso de protocolos modernos como &lt;em>OAuth 2.0&lt;/em> o &lt;em>OpenID Connect (OIDC)&lt;/em>.&lt;/li>
&lt;li>Encriptación de contraseñas con algoritmos seguros (&lt;em>bcrypt&lt;/em>, &lt;em>Argon2&lt;/em>).&lt;/li>
&lt;li>Tokens seguros (&lt;em>JWT&lt;/em> con &lt;em>HS256&lt;/em> o &lt;em>RS256&lt;/em>).&lt;/li>
&lt;/ol>
&lt;h3 id="ejemplo-práctico-autenticación-basada-en-jwt">Ejemplo práctico: Autenticación basada en JWT&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">create&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">verify&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/djwt/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">secretKey&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;your-secret-key&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Generar&lt;/span> &lt;span class="n">un&lt;/span> &lt;span class="n">token&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">async&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">generateToken&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">payload&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Record&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">unknown&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">jwt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">create&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">alg&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;HS256&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">typ&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;JWT&amp;#34;&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="n">payload&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">secretKey&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">jwt&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Verificar&lt;/span> &lt;span class="n">un&lt;/span> &lt;span class="n">token&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">async&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">verifyToken&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">payload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">verify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">secretKey&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;HS256&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">payload&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="n">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">throw&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Token inválido&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Ejemplo&lt;/span> &lt;span class="n">de&lt;/span> &lt;span class="n">uso&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">token&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">generateToken&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">role&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;admin&amp;#34;&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Token generado:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">token&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">payload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">verifyToken&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Payload verificado:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">payload&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="buenas-prácticas-para-la-autenticación">Buenas prácticas para la autenticación&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Usar HTTPS&lt;/strong>: Protege los tokens en tránsito.&lt;/li>
&lt;li>&lt;strong>Implementar expiración de tokens&lt;/strong>: Minimiza riesgos en caso de compromiso.&lt;/li>
&lt;li>&lt;strong>Almacenar contraseñas de forma segura&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nb">hash&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">compare&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/bcrypt/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">password&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;securepassword&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">hashedPassword&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="nb">hash&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Contraseña hasheada:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hashedPassword&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">isValid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">compare&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hashedPassword&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Contraseña válida:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">isValid&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="autorización-en-deno">Autorización en Deno&lt;/h2>
&lt;p>La autorización determina qué recursos puede acceder un usuario autenticado.&lt;/p>
&lt;h3 id="ejemplo-práctico-middleware-para-roles">Ejemplo práctico: Middleware para roles&lt;/h3>
&lt;p>Un &lt;em>middleware&lt;/em> puede garantizar que solo ciertos roles accedan a rutas específicas:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Context&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/oak/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">async&lt;/span> &lt;span class="n">function&lt;/span> &lt;span class="n">roleMiddleware&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">next&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">Promise&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">unknown&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">allowedRoles&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">[])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">token&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">headers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Authorization&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">?&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Bearer &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">401&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Token no proporcionado&amp;#34;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">payload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">verifyToken&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">allowedRoles&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">includes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">payload&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">role&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">403&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Acceso denegado&amp;#34;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">next&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="n">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">401&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Token inválido&amp;#34;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Ejemplo&lt;/span> &lt;span class="n">de&lt;/span> &lt;span class="n">uso&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">router&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;/admin&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">next&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">roleMiddleware&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">next&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;admin&amp;#34;&lt;/span>&lt;span class="p">]),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">ctx&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ctx&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Bienvenido, admin&amp;#34;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="buenas-prácticas-para-la-autorización">Buenas prácticas para la autorización&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Principio de menor privilegio&lt;/strong>: Limitar accesos a lo estrictamente necesario.&lt;/li>
&lt;li>&lt;strong>Políticas basadas en roles (RBAC)&lt;/strong>: Simplifican la gestión de permisos.&lt;/li>
&lt;li>&lt;strong>Registro de eventos de acceso&lt;/strong>: Proporciona trazabilidad.&lt;/li>
&lt;/ol>
&lt;h2 id="medidas-adicionales-de-seguridad">Medidas adicionales de seguridad&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>CORS&lt;/strong>: Configurar correctamente para evitar accesos no autorizados.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">import { oakCors } from &amp;#34;https://deno.land/x/cors/mod.ts&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">app.use(oakCors({
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> origin: &amp;#34;https://example.com&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>&lt;strong>Validación de datos&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">z&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/x/zod/mod.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">userSchema&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">z&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">object&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">username&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">z&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">z&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">userData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">userSchema&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">username&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;test&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">password&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;secure&amp;#34;&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Datos válidos:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">userData&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span> &lt;span class="n">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Error de validación:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>&lt;strong>Monitoreo y auditoría&lt;/strong>: Implementar registros de eventos sensibles.&lt;/li>
&lt;li>&lt;strong>Uso de secretos seguros&lt;/strong>: Gestionar claves de API y configuraciones sensibles mediante herramientas como Deno Deploy Secrets.&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>La seguridad en aplicaciones Deno va más allá de las capacidades intrínsecas del entorno. Una implementación adecuada de autenticación y autorización, junto con medidas complementarias, garantiza aplicaciones robustas y protegidas contra amenazas modernas. Aplicar las mejores prácticas descritas y mantenerse actualizado con las últimas vulnerabilidades es esencial para mantener la confianza y la integridad de tus aplicaciones.&lt;/p></description></item><item><title>¿Cómo configurar un proyecto TypeScript moderno con Deno?</title><link>https://cmas.dev/posts/2024-05-01-typescript-project-with-deno/</link><pubDate>Wed, 01 May 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-05-01-typescript-project-with-deno/</guid><description>&lt;h2 id="introducción">Introducción&lt;/h2>
&lt;p>Configurar un proyecto moderno en &lt;strong>TypeScript&lt;/strong> con &lt;strong>Deno&lt;/strong> permitirá aprovechar un entorno de desarrollo optimizado, seguro y compatible con los estándares más recientes, como &lt;strong>ES2024&lt;/strong>. Este artículo mostrará cómo realizar esta configuración tanto en &lt;strong>Visual Studio Code&lt;/strong> como en &lt;strong>JetBrains Rider&lt;/strong>, destacando buenas prácticas, incluyendo &lt;strong>testing&lt;/strong> con TypeScript, y proporcionando ejemplos prácticos de código.&lt;/p>
&lt;h2 id="prerrequisitos">Prerrequisitos&lt;/h2>
&lt;ul>
&lt;li>Instalar &lt;strong>Deno&lt;/strong> desde &lt;a href="https://deno.land">https://deno.land&lt;/a>:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> curl -fsSL https://deno.land/x/install/install.sh | sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Tener instalado &lt;strong>Visual Studio Code&lt;/strong> o &lt;strong>JetBrains Rider&lt;/strong>.&lt;/li>
&lt;li>Conocer los fundamentos de &lt;strong>TypeScript&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="crear-la-configuración-del-proyecto">Crear la configuración del proyecto&lt;/h2>
&lt;h3 id="1-crear-un-directorio-base">1. Crear un directorio base&lt;/h3>
&lt;p>Crear un directorio para el proyecto:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">mkdir modern-typescript-deno
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd modern-typescript-deno
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-configurar-el-archivo-denojson">2. Configurar el archivo deno.json&lt;/h3>
&lt;p>Crear un archivo &lt;em>deno.json&lt;/em> con configuraciones básicas para &lt;strong>ES2024&lt;/strong> y definir tareas útiles:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;compilerOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;target&amp;#34;: &amp;#34;ES2024&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;strict&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;lib&amp;#34;: [&amp;#34;deno.ns&amp;#34;, &amp;#34;deno.unstable&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;tasks&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;start&amp;#34;: &amp;#34;deno run --allow-net --allow-read src/index.ts&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;test&amp;#34;: &amp;#34;deno test&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;importMap&amp;#34;: &amp;#34;./import_map.json&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto permite:&lt;/p>
&lt;ul>
&lt;li>Establecer &lt;strong>ES2024&lt;/strong> como objetivo del compilador.&lt;/li>
&lt;li>Definir tareas como &lt;em>start&lt;/em> y &lt;em>test&lt;/em>.&lt;/li>
&lt;li>Utilizar un archivo &lt;em>import_map.json&lt;/em> para gestionar rutas.&lt;/li>
&lt;/ul>
&lt;h2 id="configuración-en-visual-studio-code">Configuración en Visual Studio Code&lt;/h2>
&lt;h3 id="instalar-la-extensión-de-deno">Instalar la extensión de Deno&lt;/h3>
&lt;ul>
&lt;li>Abrir Visual Studio Code.&lt;/li>
&lt;li>Buscar e instalar la extensión &lt;strong>Deno&lt;/strong> desarrollada por Justjavac.&lt;/li>
&lt;/ul>
&lt;h3 id="configurar-deno-en-el-entorno">Configurar Deno en el entorno&lt;/h3>
&lt;p>Crear un archivo &lt;strong>.vscode/settings.json&lt;/strong> para habilitar Deno:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;deno.enable&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;deno.unstable&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;editor.defaultFormatter&amp;#34;: &amp;#34;denoland.vscode-deno&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;[typescript]&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;editor.defaultFormatter&amp;#34;: &amp;#34;denoland.vscode-deno&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configuración-en-jetbrains-rider">Configuración en JetBrains Rider&lt;/h2>
&lt;h3 id="instalar-el-plugin-de-deno">Instalar el plugin de Deno&lt;/h3>
&lt;ol>
&lt;li>Abrir &lt;strong>JetBrains Rider&lt;/strong> e ir a &lt;em>File&lt;/em> &amp;gt; &lt;em>Settings&lt;/em> &amp;gt; &lt;em>Plugins&lt;/em>.&lt;/li>
&lt;li>Busca e instala el plugin llamado &lt;strong>Deno&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;h3 id="configurar-deno-en-el-proyecto">Configurar Deno en el proyecto&lt;/h3>
&lt;ol>
&lt;li>Ir a &lt;em>File&lt;/em> &amp;gt; &lt;em>Settings&lt;/em> &amp;gt; &lt;em>Languages &amp;amp; Frameworks&lt;/em> &amp;gt; &lt;em>Deno&lt;/em>.&lt;/li>
&lt;li>Activar la opción &lt;em>Enable Deno for this project&lt;/em>.&lt;/li>
&lt;li>Especificar la ruta al binario de Deno (se puede encontrar con &lt;em>which deno&lt;/em> en Linux/macOS o &lt;em>where deno&lt;/em> en Windows).&lt;/li>
&lt;/ol>
&lt;h3 id="crear-una-configuración-de-ejecución">Crear una configuración de ejecución&lt;/h3>
&lt;ol>
&lt;li>Ir a &lt;em>Run&lt;/em> &amp;gt; &lt;em>Edit Configurations&lt;/em>.&lt;/li>
&lt;li>Crear una nueva configuración del tipo Deno:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Nombre: &lt;em>Run Deno Server&lt;/em>.&lt;/li>
&lt;li>Archivo: &lt;em>src/index.ts&lt;/em>.&lt;/li>
&lt;li>Argumentos: &lt;em>&amp;ndash;allow-net&lt;/em>.&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>Guardar la configuración y hacer clic en &lt;em>Run&lt;/em> para ejecutar el servidor.&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Configurar un proyecto &lt;strong>TypeScript&lt;/strong> moderno con &lt;strong>Deno&lt;/strong> utilizando &lt;strong>ES2024&lt;/strong> ofrece un entorno potente y seguro. Tanto &lt;strong>Visual Studio Code&lt;/strong> como &lt;strong>JetBrains Rider&lt;/strong> proporcionan herramientas avanzadas para aprovechar las capacidades de Deno al máximo. Implementar estas configuraciones, buenas prácticas y pruebas garantiza un desarrollo eficiente y confiable.&lt;/p></description></item><item><title>Introducción a Angular 17: Características clave y mejoras</title><link>https://cmas.dev/posts/2024-04-24-angular-17-characteristics/</link><pubDate>Tue, 23 Apr 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-04-24-angular-17-characteristics/</guid><description>&lt;p>Angular 17, la última versión del popular framework de desarrollo web, introduce mejoras significativas para desarrolladores y equipos técnicos. Con un enfoque en el rendimiento, herramientas optimizadas y simplificación de procesos, esta actualización trae nuevas características como las Signals API, mejoras en el manejo de estados y optimizaciones para el desarrollo y pruebas. En este artículo, exploramos las características clave de Angular 17, su impacto en el desarrollo de aplicaciones modernas y cómo empezar a usar estas innovaciones en tus proyectos. Descubre cómo esta versión refuerza la posición de Angular como un pilar en el ecosistema de desarrollo web.&lt;/p>
&lt;h2 id="introducción">Introducción&lt;/h2>
&lt;p>Angular es uno de los frameworks de desarrollo web más populares, y su última versión, &lt;strong>Angular 17&lt;/strong>, continúa evolucionando para satisfacer las demandas de los desarrolladores modernos. Con mejoras enfocadas en el rendimiento, herramientas simplificadas y nuevas funcionalidades, Angular 17 consolida su posición como una solución robusta para aplicaciones de todos los tamaños.&lt;/p>
&lt;p>En este artículo, exploraremos las &lt;strong>características clave y mejoras&lt;/strong> de Angular 17, destacando cómo estas actualizaciones impactan en el flujo de trabajo de los desarrolladores y cómo puedes aprovecharlas para optimizar tus proyectos.&lt;/p>
&lt;hr>
&lt;h2 id="novedades-principales-en-angular-17">Novedades principales en Angular 17&lt;/h2>
&lt;h3 id="1-signals-api-un-nuevo-enfoque-para-el-manejo-de-estados">1. &lt;strong>Signals API: Un nuevo enfoque para el manejo de estados&lt;/strong>&lt;/h3>
&lt;p>La introducción de las &lt;strong>Signals API&lt;/strong> marca un cambio importante en Angular. Este sistema proporciona una forma más eficiente y reactiva de gestionar estados dentro de las aplicaciones, eliminando la necesidad de bibliotecas adicionales como NgRx en casos simples.&lt;/p>
&lt;p>&lt;strong>Ejemplo básico de Signals API:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">signal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">computed&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">effect&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;@angular/core&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Crear un signal para el estado
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">contador&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">signal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Computar un valor basado en el estado
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">doble&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">computed&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="nx">contador&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Efecto que reacciona a cambios en el estado
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">effect&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`El contador ahora es &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">contador&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb"> y el doble es &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">doble&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Actualizar el estado
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">contador&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="kr">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="beneficios">Beneficios:&lt;/h3>
&lt;ul>
&lt;li>Mejor rendimiento al actualizar solo las partes necesarias de la UI.&lt;/li>
&lt;li>Reducción en la complejidad del manejo de estados.&lt;/li>
&lt;li>Compatibilidad nativa con el ecosistema Angular.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="2-mejoras-en-la-compilación-y-el-rendimiento">2. &lt;strong>Mejoras en la compilación y el rendimiento&lt;/strong>&lt;/h3>
&lt;p>Angular 17 introduce optimizaciones en el &lt;strong>motor de compilación&lt;/strong> (Ivy), reduciendo significativamente los tiempos de construcción y carga. Esto es especialmente útil en aplicaciones grandes con múltiples módulos.&lt;/p>
&lt;h4 id="cambios-destacados">Cambios destacados:&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>Incremental Builds&lt;/strong> más rápidos: Solo recompila los módulos afectados por los cambios.&lt;/li>
&lt;li>Reducción en el tamaño de los bundles generados.&lt;/li>
&lt;li>Mejoras en el árbol de dependencias para eliminar código no utilizado.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="3-mejoras-en-angular-cli">3. &lt;strong>Mejoras en Angular CLI&lt;/strong>&lt;/h3>
&lt;p>La &lt;strong>CLI de Angular&lt;/strong> en esta versión ha sido mejorada para ofrecer una experiencia más fluida. Algunas de las nuevas funcionalidades incluyen:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Comandos simplificados&lt;/strong>:
&lt;ul>
&lt;li>&lt;code>ng update&lt;/code>: Detecta automáticamente dependencias obsoletas y las actualiza.&lt;/li>
&lt;li>&lt;code>ng serve&lt;/code>: Más rápido con menos uso de recursos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Soporte para configuraciones avanzadas de Webpack&lt;/strong> sin necesidad de extender los archivos de configuración.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Ejemplo: Uso de &lt;code>ng add&lt;/code> para integrar Signals API fácilmente:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ng add @angular/signals
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="4-mejor-experiencia-de-desarrollo">4. &lt;strong>Mejor experiencia de desarrollo&lt;/strong>&lt;/h3>
&lt;p>Angular 17 introduce herramientas que hacen que el desarrollo sea más eficiente:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Depuración mejorada con Angular DevTools&lt;/strong>: Compatible con las nuevas Signals API y el motor Ivy.&lt;/li>
&lt;li>&lt;strong>Soporte para Tailwind CSS mejorado&lt;/strong>: Simplificación de la configuración inicial para estilos modernos.&lt;/li>
&lt;li>&lt;strong>Documentación interactiva&lt;/strong>: Ejemplos más claros y herramientas para probar código en línea.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="5-soporte-extendido-para-typescript-5">5. &lt;strong>Soporte extendido para TypeScript 5&lt;/strong>&lt;/h3>
&lt;p>Angular 17 es completamente compatible con &lt;strong>TypeScript 5&lt;/strong>, lo que permite aprovechar características avanzadas como:&lt;/p>
&lt;ul>
&lt;li>Modificadores &lt;code>satisfies&lt;/code> para validaciones más estrictas.&lt;/li>
&lt;li>Optimizaciones en la inferencia de tipos.&lt;/li>
&lt;li>Mejoras en la interoperabilidad con bibliotecas externas.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Ejemplo práctico:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">type&lt;/span> &lt;span class="nx">Usuario&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">nombre&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">edad&lt;/span>: &lt;span class="kt">number&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">usuario&lt;/span>: &lt;span class="kt">Usuario&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">nombre&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Juan&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">edad&lt;/span>: &lt;span class="kt">30&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span> &lt;span class="nx">satisfies&lt;/span> &lt;span class="nx">Usuario&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="cómo-empezar-con-angular-17">¿Cómo empezar con Angular 17?&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Actualizar tu proyecto existente&lt;/strong>:
Usa el comando &lt;code>ng update&lt;/code> para migrar tu aplicación a Angular 17.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ng update @angular/core@17 @angular/cli@17
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Crear un nuevo proyecto&lt;/strong>:
Si deseas comenzar desde cero, ejecuta:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ng new mi-proyecto-angular17
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Explora las Signals API&lt;/strong>:
Asegúrate de instalar el paquete &lt;code>@angular/signals&lt;/code> y experimenta con la nueva forma de manejar estados.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Angular 17 trae un conjunto robusto de herramientas y mejoras que hacen que el desarrollo web sea más eficiente y escalable. Con características como las Signals API, optimizaciones en la compilación y soporte mejorado para TypeScript 5, esta versión está diseñada para facilitar tanto el desarrollo como el mantenimiento de aplicaciones modernas. Si aún no has probado Angular 17, ahora es el momento perfecto para actualizar y aprovechar estas innovaciones.&lt;/p>
&lt;hr></description></item><item><title>Despliegue de aplicaciones Blazor en Azure App Services</title><link>https://cmas.dev/posts/2024-04-17-deploy-blazor-apps-azure/</link><pubDate>Wed, 17 Apr 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-04-17-deploy-blazor-apps-azure/</guid><description>&lt;p>El despliegue de aplicaciones Blazor en Azure App Services ofrece una forma rápida y eficiente de llevar tus proyectos al entorno de producción. Azure proporciona escalabilidad, seguridad y opciones flexibles para automatizar el flujo de trabajo de despliegue. En este artículo, exploramos tres métodos clave: usando Visual Studio, la CLI de Azure, y GitHub Actions, con pasos prácticos y ejemplos detallados. Con las mejoras de .NET 8, las aplicaciones Blazor ahora son más rápidas y optimizadas para la nube, lo que facilita la entrega de soluciones web escalables y modernas.&lt;/p>
&lt;h2 id="introducción">Introducción&lt;/h2>
&lt;p>Desplegar aplicaciones Blazor en &lt;strong>Azure App Services&lt;/strong> es una solución sencilla y eficiente para llevar tus aplicaciones web al entorno de producción. Azure proporciona escalabilidad, seguridad y herramientas integradas para un despliegue rápido. En este artículo, exploraremos cómo configurar y desplegar una aplicación Blazor, incluyendo pasos prácticos y ejemplos detallados. Con &lt;strong>.NET 8&lt;/strong>, el rendimiento y la optimización de aplicaciones Blazor han mejorado significativamente, facilitando el despliegue en la nube.&lt;/p>
&lt;hr>
&lt;h2 id="prerrequisitos">Prerrequisitos&lt;/h2>
&lt;p>Antes de comenzar, asegúrate de contar con lo siguiente:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>.NET SDK 8&lt;/strong> instalado en tu máquina.&lt;/li>
&lt;li>Una cuenta de &lt;strong>Azure&lt;/strong>.&lt;/li>
&lt;li>Azure CLI instalada y configurada.&lt;/li>
&lt;li>Una aplicación Blazor lista para ser desplegada.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="paso-1-crear-una-aplicación-blazor">Paso 1: Crear una aplicación Blazor&lt;/h2>
&lt;p>Primero, crea una aplicación Blazor WebAssembly básica si no tienes una ya:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">dotnet new blazorwasm -o BlazorApp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> BlazorApp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dotnet build
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecuta el proyecto para verificar que funciona correctamente:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">dotnet run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Accede a &lt;code>http://localhost:5000&lt;/code> para comprobar que la aplicación se ejecuta correctamente.&lt;/p>
&lt;hr>
&lt;h2 id="paso-2-configurar-azure-app-service">Paso 2: Configurar Azure App Service&lt;/h2>
&lt;h3 id="21-acceder-al-portal-de-azure">&lt;strong>2.1 Acceder al portal de Azure&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>Ve al &lt;a href="https://portal.azure.com">Portal de Azure&lt;/a> e inicia sesión con tu cuenta.&lt;/li>
&lt;li>En la barra de búsqueda superior, escribe &amp;ldquo;App Services&amp;rdquo; y selecciona la opción &lt;strong>App Services&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;h3 id="22-crear-un-nuevo-app-service">&lt;strong>2.2 Crear un nuevo App Service&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Haz clic en el botón &lt;strong>Crear&lt;/strong> en la parte superior.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Aparecerá un formulario de configuración donde debes proporcionar la siguiente información:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Suscripción&lt;/strong>: Selecciona tu suscripción activa.&lt;/li>
&lt;li>&lt;strong>Grupo de recursos&lt;/strong>: Crea uno nuevo o elige un grupo existente.&lt;/li>
&lt;li>&lt;strong>Nombre de la aplicación&lt;/strong>: Introduce un nombre único, por ejemplo, &lt;code>blazor-app-deploy&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Publicación&lt;/strong>: Selecciona &lt;strong>Código&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Pila de ejecución&lt;/strong>: Elige &lt;strong>.NET 8&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Sistema operativo&lt;/strong>: Selecciona &lt;strong>Windows&lt;/strong> o &lt;strong>Linux&lt;/strong> según tu preferencia.&lt;/li>
&lt;li>&lt;strong>Plan de App Service&lt;/strong>: Crea uno nuevo o selecciona un plan existente.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Haz clic en &lt;strong>Revisar + Crear&lt;/strong> y luego en &lt;strong>Crear&lt;/strong> para iniciar la implementación del App Service.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="23-validar-la-creación-del-app-service">&lt;strong>2.3 Validar la creación del App Service&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>Una vez creada, verás un mensaje de confirmación en la parte superior del portal.&lt;/li>
&lt;li>Haz clic en &lt;strong>Ir al recurso&lt;/strong> para acceder al panel del App Service.&lt;/li>
&lt;/ol>
&lt;h3 id="24-configurar-las-opciones-del-app-service">&lt;strong>2.4 Configurar las opciones del App Service&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>En el panel del App Service, selecciona &lt;strong>Configuración&lt;/strong> en el menú lateral.&lt;/li>
&lt;li>Verifica que la versión de .NET sea la correcta (&lt;strong>.NET 8&lt;/strong>).&lt;/li>
&lt;li>Configura las variables de entorno necesarias para tu aplicación (si aplica) en la pestaña &lt;strong>Configuración de aplicaciones&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;h3 id="25-obtener-la-url-del-app-service">&lt;strong>2.5 Obtener la URL del App Service&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>En el panel principal del App Service, encuentra el enlace de &lt;strong>URL predeterminada&lt;/strong>.&lt;/li>
&lt;li>Esta será la dirección donde se alojará tu aplicación una vez desplegada.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="paso-3-publicar-la-aplicación-desde-visual-studio">Paso 3: Publicar la aplicación desde Visual Studio&lt;/h2>
&lt;ol>
&lt;li>Abre tu proyecto Blazor en &lt;strong>Visual Studio&lt;/strong>.&lt;/li>
&lt;li>Haz clic derecho en el proyecto y selecciona &lt;strong>Publicar&lt;/strong>.&lt;/li>
&lt;li>Selecciona &lt;strong>App Service (Windows)&lt;/strong> o &lt;strong>App Service (Linux)&lt;/strong> según tu configuración.&lt;/li>
&lt;li>Inicia sesión en tu cuenta de Azure.&lt;/li>
&lt;li>Selecciona el App Service creado previamente.&lt;/li>
&lt;li>Haz clic en &lt;strong>Publicar&lt;/strong> y espera a que finalice el proceso.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="paso-4-usar-azure-cli-para-el-despliegue">Paso 4: Usar Azure CLI para el despliegue&lt;/h2>
&lt;p>Si prefieres usar la CLI, sigue estos pasos:&lt;/p>
&lt;ol>
&lt;li>Publica la aplicación localmente:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">dotnet publish -c Release
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Crea un recurso de App Service en Azure si aún no lo has hecho:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">az webapp create --name blazor-app-deploy --resource-group &amp;lt;tu-grupo&amp;gt; --plan &amp;lt;tu-plan&amp;gt; --runtime &lt;span class="s2">&amp;#34;DOTNET-8.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Despliega la aplicación:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">az webapp deploy --resource-group &amp;lt;tu-grupo&amp;gt; --name blazor-app-deploy --src-path ./bin/Release/net8.0/publish
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Accede a la URL proporcionada por Azure para ver tu aplicación.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="paso-5-configurar-cicd-con-github-actions">Paso 5: Configurar CI/CD con GitHub Actions&lt;/h2>
&lt;p>Automatiza el despliegue utilizando GitHub Actions:&lt;/p>
&lt;ol>
&lt;li>Crea un archivo llamado &lt;code>.github/workflows/azure-webapp.yml&lt;/code> en tu repositorio.&lt;/li>
&lt;li>Añade la siguiente configuración:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy Blazor App to Azure&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">main&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">build-and-deploy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Setup .NET&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/setup-dotnet@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">dotnet-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;8.0&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build Project&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dotnet build --configuration Release&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy to Azure&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">azure/webapps-deploy@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app-name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">blazor-app-deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">slot-name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">production&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">publish-profile&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Configura el secreto &lt;code>AZURE_WEBAPP_PUBLISH_PROFILE&lt;/code> en los ajustes de tu repositorio.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Desplegar aplicaciones Blazor en Azure App Services es un proceso flexible y eficiente. Ya sea utilizando Visual Studio, la CLI de Azure o GitHub Actions, Azure ofrece las herramientas necesarias para simplificar el flujo de trabajo de desarrollo y despliegue. Con las mejoras de &lt;strong>.NET 8&lt;/strong>, tus aplicaciones serán más rápidas y escalables que nunca. ¡Empieza hoy mismo a aprovechar el poder de Blazor en la nube!&lt;/p></description></item><item><title>Creación de componentes reutilizables en Blazor para aplicaciones escalables</title><link>https://cmas.dev/posts/2024-04-10-blazor-reusable-components/</link><pubDate>Wed, 10 Apr 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-04-10-blazor-reusable-components/</guid><description>&lt;p>Los componentes reutilizables son esenciales para construir aplicaciones Blazor escalables y mantenibles. Este artículo explora cómo aprovechar las capacidades de .NET 8 para crear componentes modulares que mejoren la eficiencia y la reutilización en proyectos de cualquier tamaño. Además, aprenderás las mejores prácticas y técnicas clave para optimizar la construcción de interfaces dinámicas con Blazor.&lt;/p>
&lt;h2 id="introducción">Introducción&lt;/h2>
&lt;p>Blazor permite a los desarrolladores de .NET construir aplicaciones web interactivas con componentes reutilizables, un enfoque que no solo mejora la eficiencia del desarrollo, sino que también facilita la escalabilidad de las aplicaciones. Con &lt;strong>.NET 8&lt;/strong>, Blazor incluye mejoras significativas en el rendimiento y capacidades avanzadas para la creación de componentes, lo que lo convierte en una herramienta ideal para construir aplicaciones mantenibles y modulares.&lt;/p>
&lt;p>En este artículo, exploraremos cómo crear componentes reutilizables en Blazor y cómo organizarlos de manera eficiente para aplicaciones escalables.&lt;/p>
&lt;hr>
&lt;h2 id="qué-son-los-componentes-en-blazor">¿Qué son los componentes en Blazor?&lt;/h2>
&lt;p>Un componente en Blazor es una unidad modular de interfaz de usuario (UI) que encapsula lógica, datos y presentación. Los componentes son la base de cualquier aplicación Blazor y permiten construir UI dinámicas de forma sencilla.&lt;/p>
&lt;p>Un componente puede incluir:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>HTML y Razor&lt;/strong>: Para definir la estructura y el diseño.&lt;/li>
&lt;li>&lt;strong>C#&lt;/strong>: Para la lógica y el manejo de eventos.&lt;/li>
&lt;li>&lt;strong>CSS&lt;/strong>: Para el estilo.&lt;/li>
&lt;/ul>
&lt;p>Estos componentes son reutilizables, lo que significa que pueden ser compartidos en diferentes partes de la aplicación o incluso entre diferentes proyectos.&lt;/p>
&lt;hr>
&lt;h2 id="beneficios-de-los-componentes-reutilizables">Beneficios de los componentes reutilizables&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Eficiencia en el desarrollo&lt;/strong>:&lt;br>
Reduce la duplicación de código al centralizar funcionalidades comunes en un único componente.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Facilidad de mantenimiento&lt;/strong>:&lt;br>
Los cambios realizados en un componente se reflejan automáticamente donde sea utilizado.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Escalabilidad&lt;/strong>:&lt;br>
Una arquitectura basada en componentes facilita la expansión de la aplicación.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Reutilización entre proyectos&lt;/strong>:&lt;br>
Los componentes pueden empaquetarse como bibliotecas para su uso en múltiples aplicaciones.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="creación-de-un-componente-reutilizable-ejemplo-práctico">Creación de un componente reutilizable: Ejemplo práctico&lt;/h2>
&lt;h3 id="escenario-botón-genérico-reutilizable">&lt;strong>Escenario: Botón genérico reutilizable&lt;/strong>&lt;/h3>
&lt;p>Vamos a crear un botón genérico que se pueda reutilizar en diferentes partes de la aplicación. Este botón incluirá propiedades configurables para el texto, el estilo y la acción que ejecuta al ser clicado.&lt;/p>
&lt;h3 id="paso-1-crear-el-componente">Paso 1: Crear el componente&lt;/h3>
&lt;p>Crea un archivo llamado &lt;code>ReusableButton.razor&lt;/code> en tu proyecto Blazor:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;button class=&amp;#34;@ButtonClass&amp;#34; @onclick=&amp;#34;HandleClick&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> @ButtonText
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Parameter]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public string ButtonText { get; set; } = &amp;#34;Click me&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Parameter]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public string ButtonClass { get; set; } = &amp;#34;btn btn-primary&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Parameter]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public EventCallback OnClick { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private async Task HandleClick()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (OnClick.HasDelegate)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> await OnClick.InvokeAsync();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-2-explicación-del-código">Paso 2: Explicación del código&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>[Parameter]&lt;/strong>:&lt;br>
Los parámetros permiten que las propiedades del componente sean configurables desde su punto de uso.&lt;/p>
&lt;ul>
&lt;li>&lt;code>ButtonText&lt;/code>: El texto que aparecerá en el botón.&lt;/li>
&lt;li>&lt;code>ButtonClass&lt;/code>: Las clases CSS para personalizar el estilo.&lt;/li>
&lt;li>&lt;code>OnClick&lt;/code>: Un delegado para manejar la acción al hacer clic en el botón.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>EventCallback&lt;/strong>:&lt;br>
Es la forma recomendada en Blazor para manejar eventos como clics de botón.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="paso-3-uso-del-componente">Paso 3: Uso del componente&lt;/h3>
&lt;p>Ahora puedes utilizar este componente en cualquier parte de tu aplicación:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;ReusableButton
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ButtonText=&amp;#34;Guardar&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ButtonClass=&amp;#34;btn btn-success&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> OnClick=&amp;#34;GuardarCambios&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;ReusableButton
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ButtonText=&amp;#34;Eliminar&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ButtonClass=&amp;#34;btn btn-danger&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> OnClick=&amp;#34;EliminarRegistro&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private void GuardarCambios()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Console.WriteLine(&amp;#34;Cambios guardados&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private void EliminarRegistro()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Console.WriteLine(&amp;#34;Registro eliminado&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="resultado">Resultado&lt;/h3>
&lt;p>Los dos botones tendrán textos y estilos diferentes, pero comparten la misma lógica de interacción encapsulada en el componente &lt;code>ReusableButton&lt;/code>.&lt;/p>
&lt;hr>
&lt;h2 id="buenas-prácticas-para-componentes-reutilizables">Buenas prácticas para componentes reutilizables&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Modularidad&lt;/strong>:&lt;br>
Divide los componentes en unidades pequeñas y específicas que puedan ser fácilmente combinadas.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Evita la lógica excesiva&lt;/strong>:&lt;br>
Mantén los componentes centrados en la UI y delega la lógica compleja a servicios o clases separadas.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Uso de bibliotecas compartidas&lt;/strong>:&lt;br>
Empaqueta componentes comunes en una &lt;strong>librería Razor Class Library (RCL)&lt;/strong> para su reutilización entre proyectos.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Documentación clara&lt;/strong>:&lt;br>
Proporciona ejemplos de uso y documentación para que otros desarrolladores puedan integrarlos fácilmente.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="blazor-en-net-8-mejoras-para-componentes">Blazor en .NET 8: Mejoras para componentes&lt;/h2>
&lt;p>Con &lt;strong>.NET 8&lt;/strong>, Blazor introduce mejoras clave para el desarrollo basado en componentes:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Renderización condicional optimizada&lt;/strong>:&lt;br>
Reduce el impacto de cambios frecuentes en la UI.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Soporte para componentes híbridos (Blazor United)&lt;/strong>:&lt;br>
Combina los beneficios de Blazor Server y WebAssembly, facilitando la creación de componentes reutilizables en cualquier modelo.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Mejoras en la interoperabilidad con JavaScript&lt;/strong>:&lt;br>
Permite integrar bibliotecas externas en componentes Blazor de manera más eficiente.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Los componentes reutilizables son fundamentales para construir aplicaciones Blazor escalables y mantenibles. Al encapsular la lógica y la presentación en módulos independientes, puedes reducir la duplicación de código, mejorar la eficiencia y facilitar la expansión de tu aplicación.&lt;/p>
&lt;p>Con las mejoras introducidas en &lt;strong>.NET 8&lt;/strong>, crear componentes en Blazor es más poderoso que nunca. Ya sea que estés desarrollando una aplicación pequeña o un sistema complejo, el enfoque modular de Blazor te ayudará a mantener tu proyecto organizado y fácil de escalar.&lt;/p></description></item><item><title>Introducción a Blazor: Cambiando el paradigma del desarrollo web</title><link>https://cmas.dev/posts/2024-04-03-intro-blazor/</link><pubDate>Wed, 03 Apr 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-04-03-intro-blazor/</guid><description>&lt;p>El framework de Microsoft, está transformando el desarrollo web al permitir crear aplicaciones interactivas con C# y .NET, eliminando la necesidad de JavaScript. Con las mejoras de .NET 8, ofrece mayor rendimiento y flexibilidad, facilitando la creación de aplicaciones tanto en el cliente como en el servidor. Este artículo explora cómo Blazor redefine el desarrollo web y muestra cómo empezar a usarlo.&lt;/p>
&lt;h2 id="qué-es-blazor">¿Qué es Blazor?&lt;/h2>
&lt;p>Blazor es un framework de desarrollo web de &lt;strong>Microsoft&lt;/strong> que permite construir aplicaciones web interactivas utilizando &lt;strong>C# y .NET&lt;/strong> en lugar de depender exclusivamente de &lt;strong>JavaScript&lt;/strong>. Lanzado inicialmente como una alternativa a frameworks como Angular o React, Blazor ha evolucionado significativamente, y con la llegada de &lt;strong>.NET 8&lt;/strong>, sus capacidades y rendimiento han alcanzado nuevos niveles.&lt;/p>
&lt;h3 id="por-qué-blazor-es-revolucionario">¿Por qué Blazor es revolucionario?&lt;/h3>
&lt;p>Blazor introduce un cambio importante al permitir que los desarrolladores trabajen en aplicaciones web sin salir del ecosistema .NET. Esto reduce la necesidad de manejar múltiples lenguajes y frameworks en un solo proyecto. Además, Blazor está diseñado para cubrir diversos escenarios:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Blazor Server:&lt;/strong> Renderiza componentes en el servidor y envía actualizaciones al cliente a través de SignalR.&lt;/li>
&lt;li>&lt;strong>Blazor WebAssembly (WASM):&lt;/strong> Ejecuta la aplicación directamente en el navegador, utilizando WebAssembly para una experiencia completamente client-side.&lt;/li>
&lt;li>&lt;strong>Blazor en .NET MAUI:&lt;/strong> Permite usar Blazor para construir aplicaciones de escritorio y móviles.&lt;/li>
&lt;/ul>
&lt;p>Con &lt;strong>.NET 8&lt;/strong>, estas capacidades han sido optimizadas para ofrecer un mejor rendimiento y una experiencia de desarrollo más fluida.&lt;/p>
&lt;hr>
&lt;h2 id="ventajas-de-usar-blazor-en-net-8">Ventajas de usar Blazor en .NET 8&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Un único lenguaje para todo:&lt;/strong>&lt;br>
Con Blazor, puedes desarrollar aplicaciones completas utilizando &lt;strong>C#&lt;/strong>, eliminando la necesidad de escribir código en JavaScript para el frontend.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Rendimiento mejorado en WebAssembly:&lt;/strong>&lt;br>
La llegada de .NET 8 ha reducido los tiempos de carga inicial en Blazor WebAssembly, gracias a la optimización de su tamaño y mejor manejo de caché.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Integración con el ecosistema .NET:&lt;/strong>&lt;br>
Blazor se integra perfectamente con APIs .NET, Entity Framework, Azure, y bibliotecas de terceros.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Componentes reutilizables:&lt;/strong>&lt;br>
Blazor permite crear componentes UI que son reutilizables en distintas partes de una aplicación, similar a otros frameworks modernos como React.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Compatibilidad con JavaScript:&lt;/strong>&lt;br>
Aunque elimina la dependencia de JavaScript, Blazor permite interactuar con librerías JavaScript cuando sea necesario.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="blazor-en-acción-un-ejemplo-práctico">Blazor en acción: Un ejemplo práctico&lt;/h2>
&lt;h3 id="paso-1-creación-de-un-proyecto-blazor">Paso 1: Creación de un proyecto Blazor&lt;/h3>
&lt;p>Primero, asegúrate de tener instalada la última versión de .NET 8. Luego, crea un nuevo proyecto Blazor WebAssembly desde la CLI de .NET:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">dotnet new blazorwasm -o BlazorApp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> BlazorApp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dotnet run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Este comando genera una aplicación Blazor básica. Accede a &lt;code>http://localhost:5000&lt;/code> para verla en funcionamiento.&lt;/p>
&lt;h3 id="paso-2-crear-un-componente-de-contador">Paso 2: Crear un componente de contador&lt;/h3>
&lt;p>Edita el archivo &lt;code>Counter.razor&lt;/code> para personalizar el contador:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@page &amp;#34;/counter&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;h3&amp;gt;Contador&amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;p&amp;gt;Contador actual: @count&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;button class=&amp;#34;btn btn-primary&amp;#34; @onclick=&amp;#34;IncrementarContador&amp;#34;&amp;gt;Incrementar&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private int count = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private void IncrementarContador()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> count++;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-3-agregar-estilos-personalizados">Paso 3: Agregar estilos personalizados&lt;/h3>
&lt;p>Puedes personalizar los estilos en el archivo &lt;code>wwwroot/css/app.css&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">button&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">font-size&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">1.2&lt;/span>&lt;span class="kt">rem&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">padding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">margin-top&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Este simple ejemplo muestra cómo Blazor permite crear componentes interactivos utilizando únicamente C#.&lt;/p>
&lt;hr>
&lt;h2 id="blazor-y-el-futuro-del-desarrollo-web">Blazor y el futuro del desarrollo web&lt;/h2>
&lt;p>Con la llegada de &lt;strong>.NET 8&lt;/strong>, Microsoft ha reforzado su compromiso con Blazor como una herramienta clave para el desarrollo web. Algunas de las mejoras que destacan en esta versión incluyen:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Mejoras en el soporte de WebAssembly:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Reducción del tiempo de carga inicial.&lt;/li>
&lt;li>Implementación de AOT (Ahead-of-Time Compilation) para optimizar el rendimiento.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Blazor United:&lt;/strong>&lt;br>
Introducción de un enfoque híbrido que combina las ventajas de Blazor Server y WebAssembly, permitiendo cambiar dinámicamente entre ambos modelos según las necesidades de la aplicación.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Integración con .NET MAUI:&lt;/strong>&lt;br>
Blazor ahora puede usarse para desarrollar aplicaciones de escritorio y móviles con un solo código base.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="cuándo-elegir-blazor-para-tu-proyecto">Cuándo elegir Blazor para tu proyecto&lt;/h2>
&lt;p>Blazor es una excelente opción si:&lt;/p>
&lt;ol>
&lt;li>Tu equipo ya está familiarizado con el ecosistema .NET.&lt;/li>
&lt;li>Necesitas desarrollar aplicaciones web rápidamente sin aprender un nuevo lenguaje como JavaScript.&lt;/li>
&lt;li>Quieres aprovechar las capacidades de WebAssembly para mejorar la experiencia del cliente.&lt;/li>
&lt;li>Planeas integrar tu aplicación con otros servicios en Azure o APIs basadas en .NET.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Blazor está cambiando el paradigma del desarrollo web al eliminar la necesidad de separar el frontend y backend en lenguajes diferentes. Gracias a .NET 8, las aplicaciones Blazor son más rápidas, ligeras y fáciles de desarrollar que nunca.&lt;/p>
&lt;p>Si todavía no has probado Blazor, ahora es el momento perfecto para sumergirte en esta tecnología y descubrir cómo puede transformar tus proyectos web. Con un lenguaje unificado y un ecosistema robusto, Blazor está listo para liderar el futuro del desarrollo web.&lt;/p></description></item></channel></rss>