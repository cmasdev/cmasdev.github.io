<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Windows 11 on Christian Amado's Blog</title><link>https://cmas.dev/tags/windows-11/</link><description>Recent content in Windows 11 on Christian Amado's Blog</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Fri, 28 Mar 2025 00:00:00 -0300</lastBuildDate><atom:link href="https://cmas.dev/tags/windows-11/index.xml" rel="self" type="application/rss+xml"/><item><title>Construcción de un asistente contextual para escritorio usando IA local con acceso al sistema</title><link>https://cmas.dev/posts/2025-03-28-local-ai/</link><pubDate>Fri, 28 Mar 2025 00:00:00 -0300</pubDate><guid>https://cmas.dev/posts/2025-03-28-local-ai/</guid><description>&lt;p>La combinación de capacidades de &lt;strong>IA local&lt;/strong> (como modelos &lt;strong>ONNX&lt;/strong>) con APIs del sistema de &lt;strong>Windows&lt;/strong> abre la puerta al desarrollo de asistentes inteligentes capaces de entender el contexto del usuario y reaccionar en consecuencia. En este artículo se describe cómo crear un asistente de escritorio moderno con &lt;strong>WinUI 3&lt;/strong> que escuche el contenido del portapapeles, analice el texto localmente mediante inferencia con IA, y sugiera acciones o realice comandos con base en el resultado.&lt;/p>
&lt;p>Este enfoque funciona completamente offline, preservando privacidad y respondiendo en tiempo real.&lt;/p>
&lt;h2 id="escenario">Escenario&lt;/h2>
&lt;p>Se construye una app tipo widget flotante que:&lt;/p>
&lt;ul>
&lt;li>Detecta texto nuevo en el portapapeles&lt;/li>
&lt;li>Usa un modelo ONNX de clasificación de intención&lt;/li>
&lt;li>Sugiere acciones como: buscar, traducir, abrir app, copiar info, etc.&lt;/li>
&lt;li>Accede a procesos del sistema para acciones automatizadas&lt;/li>
&lt;/ul>
&lt;h2 id="requisitos">Requisitos&lt;/h2>
&lt;ul>
&lt;li>Windows 11&lt;/li>
&lt;li>Visual Studio 2022&lt;/li>
&lt;li>Windows App SDK + WinUI 3&lt;/li>
&lt;li>Microsoft.AI.MachineLearning + acceso a Windows.ApplicationModel.DataTransfer&lt;/li>
&lt;li>Modelo ONNX de clasificación (intención o NLP embebido)&lt;/li>
&lt;li>Permiso para acceder a procesos (System.Diagnostics)&lt;/li>
&lt;/ul>
&lt;h2 id="paso-1-crear-ventana-persistente-estilo-widget">Paso 1: Crear ventana persistente estilo Widget&lt;/h2>
&lt;p>Basado en el artículo anterior, crear ventana flotante:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">hwnd&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">WindowNative&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetWindowHandle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">appWindow&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">AppWindow&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetFromWindowId&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GetWindowIdForWindow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">appWindow&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SetPresenter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AppWindowPresenterKind&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CompactOverlay&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-2-capturar-texto-del-portapapeles">Paso 2: Capturar texto del portapapeles&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">DispatcherQueueTimer&lt;/span> &lt;span class="n">timer&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">DispatcherQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CreateTimer&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">string&lt;/span> &lt;span class="n">anterior&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">timer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Interval&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">TimeSpan&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">FromSeconds&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">timer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Tick&lt;/span> &lt;span class="p">+=&lt;/span> &lt;span class="kd">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">Clipboard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetContent&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">StandardDataFormats&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">string&lt;/span> &lt;span class="n">texto&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetTextAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">texto&lt;/span> &lt;span class="p">!=&lt;/span> &lt;span class="n">anterior&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">anterior&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">texto&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">EvaluarTexto&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">texto&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">timer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-3-evaluar-intención-con-modelo-onnx">Paso 3: Evaluar intención con modelo ONNX&lt;/h2>
&lt;p>Cargar modelo preentrenado de intención o clasificación:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">model&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">LearningModel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">LoadFromFilePath&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Assets/Modelos/clasificador.onnx&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">session&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">LearningModelSession&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">model&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">tensor&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">TensorString&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CreateFromArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="n">u&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="k">new&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">texto&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">binding&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">LearningModelBinding&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">session&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">binding&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Bind&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;input_text&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tensor&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecutar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">resultado&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="n">session&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">EvaluateAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">binding&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Inferencia&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">salida&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">resultado&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Outputs&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;output_label&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">TensorString&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">prediccion&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">salida&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetAsVectorView&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">FirstOrDefault&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-4-mostrar-sugerencia-en-ui">Paso 4: Mostrar sugerencia en UI&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">SugerenciaText&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">$&amp;#34;¿Deseás {prediccion}?&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Agregar botón según intención:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">prediccion&lt;/span> &lt;span class="p">==&lt;/span> &lt;span class="s">&amp;#34;traducir&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Traducir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">texto&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">prediccion&lt;/span> &lt;span class="p">==&lt;/span> &lt;span class="s">&amp;#34;buscar&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Start&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">ProcessStartInfo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;https://www.bing.com/search?q=&amp;#34;&lt;/span> &lt;span class="p">+&lt;/span> &lt;span class="n">Uri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">EscapeDataString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">texto&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">UseShellExecute&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-5-automatización-de-acciones">Paso 5: Automatización de acciones&lt;/h2>
&lt;p>Acceder a procesos abiertos:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">procesos&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">Process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetProcesses&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">foreach&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">var&lt;/span> &lt;span class="n">proc&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">procesos&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">proc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ProcessName&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;notepad&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">proc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Kill&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="c1">// o traer al frente&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejemplo: copiar texto detectado como nombre de archivo → abrir archivo.&lt;/p>
&lt;h2 id="paso-6-ui-simplificada-con-feedback">Paso 6: UI simplificada con feedback&lt;/h2>
&lt;p>En XAML:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;StackPanel&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;TextBlock&lt;/span> &lt;span class="na">x:Name=&lt;/span>&lt;span class="s">&amp;#34;TextoDetectado&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;TextBlock&lt;/span> &lt;span class="na">x:Name=&lt;/span>&lt;span class="s">&amp;#34;SugerenciaText&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;Button&lt;/span> &lt;span class="na">Content=&lt;/span>&lt;span class="s">&amp;#34;Ejecutar acción&amp;#34;&lt;/span> &lt;span class="na">Click=&lt;/span>&lt;span class="s">&amp;#34;Ejecutar_Click&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/StackPanel&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Actualizar en tiempo real:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">TextoDetectado&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">texto&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="casos-de-uso-reales">Casos de uso reales&lt;/h2>
&lt;ul>
&lt;li>Asistentes de productividad (resumen, acción sugerida)&lt;/li>
&lt;li>IA contextual para tareas repetitivas&lt;/li>
&lt;li>Reemplazo de accesos rápidos con comandos inteligentes&lt;/li>
&lt;li>Interfaces adaptativas para entornos sin conectividad&lt;/li>
&lt;/ul>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Permitir desactivar portapapeles automático&lt;/li>
&lt;li>Evitar acciones destructivas (confirmar antes de cerrar apps)&lt;/li>
&lt;li>Mostrar claramente el resultado de la inferencia&lt;/li>
&lt;li>Ejecutar tareas en background sin bloquear la UI&lt;/li>
&lt;li>No ejecutar si la confianza es baja (basado en score)&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>La construcción de un asistente inteligente de escritorio que combine IA local con APIs del sistema permite ofrecer experiencias proactivas, eficientes y altamente personalizadas. &lt;strong>WinUI 3&lt;/strong> junto con &lt;strong>Windows ML&lt;/strong> y la integración con funcionalidades como el portapapeles, procesos y UI flotante, ofrece un entorno ideal para crear agentes inteligentes que funcionan sin depender de la nube.&lt;/p></description></item><item><title>Integración de inferencia local ONNX con Windows ML en apps modernas</title><link>https://cmas.dev/posts/2025-03-21-onnx-windows-ml/</link><pubDate>Fri, 21 Mar 2025 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2025-03-21-onnx-windows-ml/</guid><description>&lt;p>La inteligencia artificial en el entorno de escritorio ya no está limitada a la nube. &lt;strong>Windows&lt;/strong> proporciona soporte nativo para la ejecución de modelos &lt;strong>ONNX&lt;/strong> directamente desde una app &lt;strong>WinUI 3&lt;/strong> utilizando &lt;strong>Windows ML&lt;/strong>. Esto permite realizar inferencia local con alto rendimiento y sin necesidad de conexión a internet, ideal para escenarios de privacidad, baja latencia o ejecución offline.&lt;/p>
&lt;p>En este artículo se describe cómo integrar un modelo &lt;strong>ONNX&lt;/strong> a una app moderna, cómo usar la &lt;strong>API&lt;/strong> de &lt;strong>Windows ML&lt;/strong> y cómo estructurar un flujo de inferencia optimizado con soporte para entrada y salida de datos reales.&lt;/p>
&lt;h2 id="requisitos">Requisitos&lt;/h2>
&lt;ul>
&lt;li>Windows 11 (recomendado build 22621+)&lt;/li>
&lt;li>Visual Studio 2022 con Windows App SDK 1.3+&lt;/li>
&lt;li>Proyecto WinUI 3 empaquetado (MSIX)&lt;/li>
&lt;li>Referencia al paquete &lt;code>Microsoft.AI.MachineLearning&lt;/code>&lt;/li>
&lt;li>Modelo ONNX compatible (puede ser descargado de onnxruntime zoo)&lt;/li>
&lt;/ul>
&lt;h2 id="paso-1-agregar-el-paquete-nuget-de-windows-ml">Paso 1: Agregar el paquete NuGet de Windows ML&lt;/h2>
&lt;p>Agregar al proyecto:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Install-Package Microsoft.AI.MachineLearning
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto permite cargar y ejecutar modelos ONNX directamente desde código.&lt;/p>
&lt;h2 id="paso-2-copiar-el-modelo-onnx-al-proyecto">Paso 2: Copiar el modelo ONNX al proyecto&lt;/h2>
&lt;p>Ejemplo: &lt;code>modelo_mnist.onnx&lt;/code> copiado a la carpeta &lt;code>Assets/ML&lt;/code>&lt;/p>
&lt;p>Configurar en propiedades:&lt;/p>
&lt;ul>
&lt;li>Build Action: Content&lt;/li>
&lt;li>Copy to Output Directory: Copy if newer&lt;/li>
&lt;/ul>
&lt;h2 id="paso-3-cargar-el-modelo-onnx">Paso 3: Cargar el modelo ONNX&lt;/h2>
&lt;p>Importar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="nn">Microsoft.AI.MachineLearning&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Cargar desde archivo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">file&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="n">StorageFile&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetFileFromApplicationUriAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">Uri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ms-appx:///Assets/ML/modelo_mnist.onnx&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">session&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">LearningModelSession&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CreateFromModel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">LearningModel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">LoadFromFilePath&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Path&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto crea una sesión de inferencia desde el modelo.&lt;/p>
&lt;h2 id="paso-4-preparar-entrada-para-inferencia">Paso 4: Preparar entrada para inferencia&lt;/h2>
&lt;p>Ejemplo para imagen de 28x28 píxeles escala de grises:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">float&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="n">input&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="kt">float&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="p">*&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="p">*&lt;/span> &lt;span class="m">28&lt;/span> &lt;span class="p">*&lt;/span> &lt;span class="m">28&lt;/span>&lt;span class="p">];&lt;/span> &lt;span class="c1">// NCHW&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Rellenar input con los valores de píxeles normalizados (0.0–1.0)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">tensor&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">TensorFloat&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CreateFromArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="n">u&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="n">u&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">28&lt;/span>&lt;span class="n">u&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">28&lt;/span>&lt;span class="n">u&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="n">input&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">binding&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">LearningModelBinding&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">session&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">binding&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Bind&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Input3&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tensor&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-5-ejecutar-inferencia">Paso 5: Ejecutar inferencia&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="n">session&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">EvaluateAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">binding&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Inferencia1&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">outputTensor&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Outputs&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;Plus214_Output_0&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">TensorFloat&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">output&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">outputTensor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetAsVectorView&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="n">predictedIndex&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">output&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ToList&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">IndexOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">output&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Max&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto retorna el índice con mayor probabilidad (en este caso, el dígito 0–9).&lt;/p>
&lt;h2 id="paso-6-mostrar-resultados-en-ui">Paso 6: Mostrar resultados en UI&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ResultadoText&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">$&amp;#34;Predicción: {predictedIndex}&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>En XAML:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;StackPanel&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;Image&lt;/span> &lt;span class="na">x:Name=&lt;/span>&lt;span class="s">&amp;#34;InputPreview&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;TextBlock&lt;/span> &lt;span class="na">x:Name=&lt;/span>&lt;span class="s">&amp;#34;ResultadoText&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/StackPanel&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-7-optimización-y-aceleración">Paso 7: Optimización y aceleración&lt;/h2>
&lt;p>Windows ML usa DirectML y soporte para GPU si está disponible. No se requiere configuración extra: el runtime lo detecta automáticamente.&lt;/p>
&lt;p>Validar el dispositivo utilizado:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">deviceKind&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">session&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">DeviceKind&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ToString&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="c1">// CPU, GPU, DirectML&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-8-alternativas-para-modelos">Paso 8: Alternativas para modelos&lt;/h2>
&lt;ul>
&lt;li>Convertir PyTorch / TensorFlow → ONNX&lt;/li>
&lt;li>Usar modelos preentrenados: &lt;code>squeezenet&lt;/code>, &lt;code>resnet18&lt;/code>, &lt;code>mobilenetv2&lt;/code>&lt;/li>
&lt;li>Exportar modelos propios con herramientas como &lt;code>onnxruntime-tools&lt;/code> o &lt;code>tf2onnx&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="casos-de-uso-reales">Casos de uso reales&lt;/h2>
&lt;ul>
&lt;li>Clasificación de imágenes (productos, documentos)&lt;/li>
&lt;li>Detección de anomalías locales&lt;/li>
&lt;li>Asistentes inteligentes offline&lt;/li>
&lt;li>Modelos de NLP ligeros ejecutados localmente&lt;/li>
&lt;li>Reconocimiento de escritura a mano o números&lt;/li>
&lt;/ul>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Validar entradas antes de ejecutar inferencia&lt;/li>
&lt;li>Manejar fallback si no hay aceleración GPU&lt;/li>
&lt;li>No cargar el modelo en cada inferencia (persistir sesión)&lt;/li>
&lt;li>Reducir tamaño del modelo con quantization si es posible&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>La integración de &lt;strong>ONNX&lt;/strong> y &lt;strong>Windows ML&lt;/strong> en aplicaciones modernas &lt;strong>WinUI 3&lt;/strong> permite ejecutar inferencia local de modelos de IA de forma nativa, segura y sin latencia de red. Esto convierte a &lt;strong>Windows&lt;/strong> en una plataforma ideal para aplicaciones inteligentes en el borde, desde escritorios empresariales hasta dispositivos autónomos. El soporte de &lt;strong>Windows App SDK&lt;/strong> lo hace accesible a cualquier desarrollador de apps modernas.&lt;/p></description></item><item><title>Integración con servicios locales vía App Services y extensión de funcionalidades entre apps</title><link>https://cmas.dev/posts/2025-03-14-winui-apps-services/</link><pubDate>Fri, 14 Mar 2025 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2025-03-14-winui-apps-services/</guid><description>&lt;p>En &lt;strong>Windows&lt;/strong>, las aplicaciones modernas pueden compartir capacidades y comunicarse entre sí a través de &lt;strong>App Services&lt;/strong>. Esta tecnología permite que una app ofrezca un servicio que puede ser invocado por otra app —incluso si están empaquetadas por separado— de forma segura y asincrónica.&lt;/p>
&lt;p>Este enfoque es ideal para dividir funcionalidades entre componentes, implementar microservicios locales o permitir extensibilidad entre apps del mismo desarrollador. &lt;strong>Windows App SDK&lt;/strong> conserva la compatibilidad con App Services, permitiendo a las apps modernas establecer esta comunicación sin usar sockets ni canalizaciones personalizadas.&lt;/p>
&lt;p>Este artículo explora cómo implementar un servicio local entre dos apps modernas, incluyendo su declaración, registro, activación y comunicación estructurada con respuestas.&lt;/p>
&lt;h2 id="escenario">Escenario&lt;/h2>
&lt;p>Una app &amp;ldquo;Cliente&amp;rdquo; quiere consultar datos a una app &amp;ldquo;Servicio&amp;rdquo; (por ejemplo, conversión de monedas). El servicio se mantiene empaquetado con su propio MSIX y ofrece un punto de entrada App Service.&lt;/p>
&lt;h2 id="requisitos">Requisitos&lt;/h2>
&lt;ul>
&lt;li>Dos apps empaquetadas (Cliente y Servicio)&lt;/li>
&lt;li>Ambas deben declararse en sus respectivos manifiestos&lt;/li>
&lt;li>Se necesita control del namespace y entrypoint de la app de servicio&lt;/li>
&lt;/ul>
&lt;h2 id="paso-1-crear-la-app-de-servicio">Paso 1: Crear la app de servicio&lt;/h2>
&lt;p>Implementar clase &lt;code>IBackgroundTask&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span> &lt;span class="kd">sealed&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="nc">ServicioConversion&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">IBackgroundTask&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="kd">async&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">Run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IBackgroundTaskInstance&lt;/span> &lt;span class="n">taskInstance&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">deferral&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">taskInstance&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetDeferral&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">details&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">taskInstance&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TriggerDetails&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">AppServiceTriggerDetails&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">connection&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">details&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">AppServiceConnection&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">msg&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="n">connection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">RequestReceivedTask&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">msg&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Request&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Message&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ContainsKey&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;monto&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">double&lt;/span> &lt;span class="n">monto&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">Convert&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ToDouble&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">msg&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Request&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Message&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;monto&amp;#34;&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">resultado&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">monto&lt;/span> &lt;span class="p">*&lt;/span> &lt;span class="m">0.92&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">respuesta&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ValueSet&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">respuesta&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;resultado&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">resultado&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ToString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;F2&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">msg&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Request&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SendResponseAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">respuesta&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">deferral&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Complete&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-2-declarar-app-service-en-el-manifiesto">Paso 2: Declarar App Service en el manifiesto&lt;/h2>
&lt;p>En el &lt;code>Package.appxmanifest&lt;/code> del servicio:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;Extensions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;Extension&lt;/span> &lt;span class="na">Category=&lt;/span>&lt;span class="s">&amp;#34;windows.appService&amp;#34;&lt;/span> &lt;span class="na">EntryPoint=&lt;/span>&lt;span class="s">&amp;#34;ServicioApp.ServicioConversion&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;AppService&lt;/span> &lt;span class="na">Name=&lt;/span>&lt;span class="s">&amp;#34;Servicio.Conversion&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/Extension&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/Extensions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>El &lt;code>EntryPoint&lt;/code> debe coincidir con el namespace completo.&lt;/p>
&lt;h2 id="paso-3-crear-app-cliente">Paso 3: Crear app cliente&lt;/h2>
&lt;p>Desde la app cliente, establecer conexión:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">connection&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">AppServiceConnection&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">AppServiceName&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;Servicio.Conversion&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PackageFamilyName&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;ServicioApp_xyz123&amp;#34;&lt;/span> &lt;span class="c1">// copiar desde appxmanifest generado&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">estado&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="n">connection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">OpenAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">estado&lt;/span> &lt;span class="p">==&lt;/span> &lt;span class="n">AppServiceConnectionStatus&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Success&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">datos&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ValueSet&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">datos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;monto&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;100&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">respuesta&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="n">connection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SendMessageAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">datos&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">valorConvertido&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">respuesta&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Message&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;resultado&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ResultadoText&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">$&amp;#34;Valor: {valorConvertido}&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ResultadoText&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">$&amp;#34;Error de conexión: {estado}&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-4-empaquetar-y-firmar-ambas-apps">Paso 4: Empaquetar y firmar ambas apps&lt;/h2>
&lt;p>Ambas deben estar empaquetadas, firmadas e instaladas. En desarrollo, puede usarse instalación local con certificados de prueba.&lt;/p>
&lt;h2 id="paso-5-comunicación-bidireccional">Paso 5: Comunicación bidireccional&lt;/h2>
&lt;p>El servicio puede devolver múltiples valores, y el cliente puede enviar instrucciones con múltiples claves.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">datos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;comando&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;convertir&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">datos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;origen&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;USD&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">datos&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;destino&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;EUR&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>El servicio puede interpretar estas claves para ejecutar lógica diferente.&lt;/p>
&lt;h2 id="casos-de-uso">Casos de uso&lt;/h2>
&lt;ul>
&lt;li>Apps que extienden funcionalidades de otra (plugin, extensiones)&lt;/li>
&lt;li>Apps que centralizan lógica compartida (autenticación, licencia, almacenamiento seguro)&lt;/li>
&lt;li>Clientes ligeros que consultan una app “nodo” local con base de datos&lt;/li>
&lt;li>Comunicación entre app de escritorio y servicio auxiliar en background&lt;/li>
&lt;/ul>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Definir claves de mensajes con nombres únicos y versionados&lt;/li>
&lt;li>Validar inputs antes de ejecutar operaciones&lt;/li>
&lt;li>Usar &lt;code>try/catch&lt;/code> para proteger el canal de comunicación&lt;/li>
&lt;li>No mantener conexiones abiertas más allá de lo necesario&lt;/li>
&lt;li>Revisar que la app de servicio esté activa o instalada correctamente&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>&lt;strong>App Services&lt;/strong> permite una arquitectura modular para aplicaciones modernas en &lt;strong>Windows&lt;/strong>, fomentando la reutilización, extensibilidad y separación de responsabilidades. Este enfoque es robusto, seguro y bien integrado en el modelo &lt;strong>MSIX&lt;/strong>, facilitando aplicaciones compuestas que se comunican entre sí de forma directa y eficiente.&lt;/p></description></item><item><title>Implementación de Background Tasks persistentes en apps modernas</title><link>https://cmas.dev/posts/2025-03-07-winui-background-tasks/</link><pubDate>Fri, 07 Mar 2025 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2025-03-07-winui-background-tasks/</guid><description>&lt;p>Las apps modernas no siempre necesitan estar en primer plano para ofrecer valor. Muchas tareas pueden ejecutarse en segundo plano: desde sincronizar datos, recibir notificaciones push, recolectar telemetría o mantener información actualizada. &lt;strong>Windows App SDK&lt;/strong>, junto con el modelo de &lt;strong>Background Tasks&lt;/strong>, permite que las aplicaciones &lt;strong>WinUI 3&lt;/strong> implementen lógica persistente y autónoma en segundo plano, sin requerir una ventana activa.&lt;/p>
&lt;p>Este artículo explica cómo crear y registrar tareas en segundo plano usando temporizadores, eventos del sistema o push notifications (RAW), y cómo integrarlas en una aplicación moderna empaquetada.&lt;/p>
&lt;h2 id="requisitos">Requisitos&lt;/h2>
&lt;ul>
&lt;li>Windows 11&lt;/li>
&lt;li>Visual Studio 2022+&lt;/li>
&lt;li>Proyecto WinUI 3 empaquetado (MSIX)&lt;/li>
&lt;li>Windows App SDK 1.3+&lt;/li>
&lt;li>Conocimiento de manifiesto MSIX&lt;/li>
&lt;/ul>
&lt;h2 id="tipos-de-background-tasks">Tipos de Background Tasks&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>TimeTrigger&lt;/strong>: se ejecuta a intervalos (mínimo 15 min)&lt;/li>
&lt;li>&lt;strong>MaintenanceTrigger&lt;/strong>: cuando el sistema está inactivo&lt;/li>
&lt;li>&lt;strong>PushTrigger (Raw Push)&lt;/strong>: notificación sin UI&lt;/li>
&lt;li>&lt;strong>SystemTrigger&lt;/strong>: conectado a eventos del sistema&lt;/li>
&lt;/ul>
&lt;h2 id="paso-1-crear-clase-de-tarea-en-segundo-plano">Paso 1: Crear clase de tarea en segundo plano&lt;/h2>
&lt;p>Agregar nuevo archivo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span> &lt;span class="kd">sealed&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="nc">MiBackgroundTask&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">IBackgroundTask&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">Run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IBackgroundTaskInstance&lt;/span> &lt;span class="n">taskInstance&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Lógica que se ejecuta en segundo plano&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">deferral&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">taskInstance&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetDeferral&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Ejemplo: guardar log&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">File&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">AppendAllText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;C:\Logs\tasklog.txt&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">$&amp;#34;Ejecutado {DateTime.Now}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">deferral&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Complete&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-2-registrar-la-tarea-desde-la-app-principal">Paso 2: Registrar la tarea desde la app principal&lt;/h2>
&lt;p>En &lt;code>App.xaml.cs&lt;/code> o &lt;code>MainWindow.xaml.cs&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">builder&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">BackgroundTaskBuilder&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;MiTareaTimer&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">TaskEntryPoint&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;NombreApp.MiBackgroundTask&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">builder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SetTrigger&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">TimeTrigger&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">15&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// cada 15 min&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">BackgroundTaskRegistration&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">builder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Register&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Este código registra la tarea al iniciar la app.&lt;/p>
&lt;h2 id="paso-3-declarar-extensión-en-packageappxmanifest">Paso 3: Declarar extensión en &lt;code>Package.appxmanifest&lt;/code>&lt;/h2>
&lt;p>Abrir el manifiesto en modo texto y agregar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;Extensions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;Extension&lt;/span> &lt;span class="na">Category=&lt;/span>&lt;span class="s">&amp;#34;windows.backgroundTasks&amp;#34;&lt;/span> &lt;span class="na">EntryPoint=&lt;/span>&lt;span class="s">&amp;#34;NombreApp.MiBackgroundTask&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;BackgroundTasks&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;Task&lt;/span> &lt;span class="na">Type=&lt;/span>&lt;span class="s">&amp;#34;timer&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/BackgroundTasks&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/Extension&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/Extensions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto informa al sistema que la app ejecuta tareas temporizadas.&lt;/p>
&lt;h2 id="paso-4-usar-raw-push-notifications">Paso 4: Usar Raw Push Notifications&lt;/h2>
&lt;p>Configurar canal:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">channel&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="n">PushNotificationChannelManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CreatePushNotificationChannelForApplicationAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Debug&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WriteLine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;URI canal push: &amp;#34;&lt;/span> &lt;span class="p">+&lt;/span> &lt;span class="n">channel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Uri&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Registrar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">builder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SetTrigger&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">PushNotificationTrigger&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">builder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;PushTask&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">builder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TaskEntryPoint&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;NombreApp.MiPushTask&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">builder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Register&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Desde backend, enviar notificación RAW con cuerpo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;toast&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;visual&amp;gt;&amp;lt;binding&lt;/span> &lt;span class="na">template=&lt;/span>&lt;span class="s">&amp;#34;ToastText01&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&amp;lt;text&amp;gt;&lt;/span>Push Recibido&lt;span class="nt">&amp;lt;/text&amp;gt;&amp;lt;/binding&amp;gt;&amp;lt;/visual&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/toast&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-5-ejecutar-tareas-en-mantenimiento">Paso 5: Ejecutar tareas en mantenimiento&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">builder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SetTrigger&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">MaintenanceTrigger&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">15&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">// cada 15 mins cuando el sistema está idle&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Usado para limpieza, archivado, backups, etc.&lt;/p>
&lt;h2 id="paso-6-monitorear-ejecución">Paso 6: Monitorear ejecución&lt;/h2>
&lt;p>Registrar evento de monitoreo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">task&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Completed&lt;/span> &lt;span class="p">+=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Debug&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WriteLine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">$&amp;#34;Tarea completada: {s.Name}&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ver eventos del sistema en Visor de Eventos &amp;gt; Aplicaciones y servicios &amp;gt; Microsoft &amp;gt; Windows &amp;gt; BackgroundTaskInfrastructure&lt;/p>
&lt;h2 id="consideraciones-importantes">Consideraciones importantes&lt;/h2>
&lt;ul>
&lt;li>Las tareas en segundo plano no pueden mostrar UI&lt;/li>
&lt;li>Si el sistema está en ahorro de batería, pueden ser diferidas&lt;/li>
&lt;li>El &lt;code>EntryPoint&lt;/code> debe estar bien definido y coincidir con el namespace&lt;/li>
&lt;/ul>
&lt;h2 id="casos-de-uso-reales">Casos de uso reales&lt;/h2>
&lt;ul>
&lt;li>Sincronización periódica con backend&lt;/li>
&lt;li>Recibir notificaciones silenciosas&lt;/li>
&lt;li>Reintentar envíos fallidos&lt;/li>
&lt;li>Registro de métricas, backups, auditorías&lt;/li>
&lt;/ul>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Siempre solicitar &lt;code>GetDeferral()&lt;/code> si la tarea es async&lt;/li>
&lt;li>No hacer lógica intensiva que exceda el tiempo permitido (30 seg máx)&lt;/li>
&lt;li>Registrar tareas solo una vez y verificar si ya existen&lt;/li>
&lt;li>No abusar de intervalos mínimos (respetar consumo energético)&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>La implementación de &lt;strong>Background Tasks&lt;/strong> en apps modernas permite extender su funcionalidad más allá del primer plano, ejecutando lógica útil, context-aware y controlada por el sistema. Usando &lt;strong>Windows App SDK&lt;/strong>, es posible construir tareas eficientes, reactivas y persistentes que mejoran la autonomía y robustez de la aplicación.&lt;/p></description></item><item><title>Empaquetado de apps modernas con MSIX y configuración avanzada del manifiesto</title><link>https://cmas.dev/posts/2025-02-28-winui-packaging-msix/</link><pubDate>Fri, 28 Feb 2025 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2025-02-28-winui-packaging-msix/</guid><description>&lt;p>&lt;strong>MSIX&lt;/strong> es el formato de empaquetado moderno para aplicaciones &lt;strong>Windows&lt;/strong>. Ofrece instalación limpia, actualización controlada, aislamiento seguro, y registro transparente de recursos y capacidades. Para aplicaciones desarrolladas con &lt;strong>Windows App SDK&lt;/strong> y &lt;strong>WinUI 3&lt;/strong>, el uso de &lt;strong>MSIX&lt;/strong> no es opcional, es el estándar recomendado para integrarse completamente al ecosistema del sistema operativo moderno.&lt;/p>
&lt;p>Este artículo aborda cómo empaquetar una app moderna con &lt;strong>MSIX&lt;/strong> desde &lt;strong>Visual Studio&lt;/strong>, y cómo configurar el manifiesto del paquete (&lt;code>Package.appxmanifest&lt;/code>) para habilitar capacidades avanzadas como protocolos personalizados, extensiones del sistema, iconografía personalizada y más.&lt;/p>
&lt;h2 id="requisitos">Requisitos&lt;/h2>
&lt;ul>
&lt;li>Windows 11&lt;/li>
&lt;li>Visual Studio 2022 con workload “Desarrollo para escritorio con C++” y MSIX Packaging Tools&lt;/li>
&lt;li>Windows App SDK 1.3+&lt;/li>
&lt;li>Proyecto de tipo &lt;strong>Blank App, Packaged (WinUI 3 in Desktop)&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2 id="paso-1-estructura-básica-de-un-paquete-msix">Paso 1: Estructura básica de un paquete MSIX&lt;/h2>
&lt;p>El archivo clave es &lt;code>Package.appxmanifest&lt;/code>, que contiene:&lt;/p>
&lt;ul>
&lt;li>Identidad de la app&lt;/li>
&lt;li>Declaraciones de capacidades&lt;/li>
&lt;li>Asociaciones de archivo, URI, tareas de fondo&lt;/li>
&lt;li>Iconos, entradas al menú inicio, y más&lt;/li>
&lt;/ul>
&lt;p>Ejemplo básico:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;Identity&lt;/span> &lt;span class="na">Name=&lt;/span>&lt;span class="s">&amp;#34;com.empresa.miapp&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">Publisher=&lt;/span>&lt;span class="s">&amp;#34;CN=Empresa&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">Version=&lt;/span>&lt;span class="s">&amp;#34;1.0.0.0&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;Properties&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;DisplayName&amp;gt;&lt;/span>MiApp&lt;span class="nt">&amp;lt;/DisplayName&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;PublisherDisplayName&amp;gt;&lt;/span>Empresa S.A.&lt;span class="nt">&amp;lt;/PublisherDisplayName&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;Logo&amp;gt;&lt;/span>Assets/StoreLogo.png&lt;span class="nt">&amp;lt;/Logo&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/Properties&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-2-configurar-iconografía-y-recursos-visuales">Paso 2: Configurar iconografía y recursos visuales&lt;/h2>
&lt;p>Se pueden establecer logos personalizados para:&lt;/p>
&lt;ul>
&lt;li>Barra de tareas&lt;/li>
&lt;li>Menú inicio&lt;/li>
&lt;li>App list (Start Menu)&lt;/li>
&lt;li>Notificaciones toast&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;VisualElements&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">DisplayName=&lt;/span>&lt;span class="s">&amp;#34;MiApp&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">Square44x44Logo=&lt;/span>&lt;span class="s">&amp;#34;Assets/Icon44.png&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">Square150x150Logo=&lt;/span>&lt;span class="s">&amp;#34;Assets/Icon150.png&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">Description=&lt;/span>&lt;span class="s">&amp;#34;Aplicación moderna con MSIX&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">BackgroundColor=&lt;/span>&lt;span class="s">&amp;#34;transparent&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Los iconos deben estar declarados en todos los tamaños requeridos por el sistema (44, 150, 310, etc.).&lt;/p>
&lt;h2 id="paso-3-agregar-protocolo-personalizado">Paso 3: Agregar protocolo personalizado&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;uap:Extension&lt;/span> &lt;span class="na">Category=&lt;/span>&lt;span class="s">&amp;#34;windows.protocol&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:Protocol&lt;/span> &lt;span class="na">Name=&lt;/span>&lt;span class="s">&amp;#34;miapp&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:DisplayName&amp;gt;&lt;/span>miapp Protocol&lt;span class="nt">&amp;lt;/uap:DisplayName&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/uap:Protocol&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/uap:Extension&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Permite que la app responda a enlaces como &lt;code>miapp://abrir&lt;/code>.&lt;/p>
&lt;h2 id="paso-4-asociar-tipos-de-archivo">Paso 4: Asociar tipos de archivo&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;uap:Extension&lt;/span> &lt;span class="na">Category=&lt;/span>&lt;span class="s">&amp;#34;windows.fileTypeAssociation&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:FileTypeAssociation&lt;/span> &lt;span class="na">Name=&lt;/span>&lt;span class="s">&amp;#34;MiExt&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:SupportedFileTypes&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:FileType&amp;gt;&lt;/span>.miapp&lt;span class="nt">&amp;lt;/uap:FileType&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/uap:SupportedFileTypes&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:DisplayName&amp;gt;&lt;/span>Archivo MiApp&lt;span class="nt">&amp;lt;/uap:DisplayName&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/uap:FileTypeAssociation&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/uap:Extension&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ahora la app podrá abrir estos archivos con doble clic.&lt;/p>
&lt;h2 id="paso-5-declarar-capacidades-del-sistema">Paso 5: Declarar capacidades del sistema&lt;/h2>
&lt;p>Para acceder a funcionalidades como ubicación, micrófono, red, etc.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;Capabilities&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;Capability&lt;/span> &lt;span class="na">Name=&lt;/span>&lt;span class="s">&amp;#34;internetClient&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;Capability&lt;/span> &lt;span class="na">Name=&lt;/span>&lt;span class="s">&amp;#34;location&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:Capability&lt;/span> &lt;span class="na">Name=&lt;/span>&lt;span class="s">&amp;#34;userAccountInformation&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/Capabilities&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Siempre declarar solo lo necesario. La declaración excesiva puede generar advertencias o problemas de distribución.&lt;/p>
&lt;h2 id="paso-6-configurar-appexecutionalias">Paso 6: Configurar AppExecutionAlias&lt;/h2>
&lt;p>Esto permite ejecutar la app desde consola:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;uap:Extension&lt;/span> &lt;span class="na">Category=&lt;/span>&lt;span class="s">&amp;#34;windows.appExecutionAlias&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:AppExecutionAlias&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:ExecutionAlias&lt;/span> &lt;span class="na">Alias=&lt;/span>&lt;span class="s">&amp;#34;miapp.exe&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/uap:AppExecutionAlias&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/uap:Extension&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto habilita &lt;code>miapp.exe&lt;/code> en línea de comandos tras instalar la app.&lt;/p>
&lt;h2 id="paso-7-configurar-entrada-al-menú-inicio">Paso 7: Configurar entrada al menú inicio&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;Applications&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;Application&lt;/span> &lt;span class="na">Id=&lt;/span>&lt;span class="s">&amp;#34;App&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">Executable=&lt;/span>&lt;span class="s">&amp;#34;MiApp.exe&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">EntryPoint=&lt;/span>&lt;span class="s">&amp;#34;MiApp.App&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:VisualElements&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">DisplayName=&lt;/span>&lt;span class="s">&amp;#34;MiApp&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">Square150x150Logo=&lt;/span>&lt;span class="s">&amp;#34;Assets/Logo.png&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">BackgroundColor=&lt;/span>&lt;span class="s">&amp;#34;transparent&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/uap:VisualElements&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/Application&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/Applications&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Cada app (o extensión) debe tener su entrada bien declarada.&lt;/p>
&lt;h2 id="paso-8-empaquetar-desde-visual-studio">Paso 8: Empaquetar desde Visual Studio&lt;/h2>
&lt;ol>
&lt;li>Clic derecho sobre el proyecto empaquetado&lt;/li>
&lt;li>Publicar &amp;gt; Crear paquete de la aplicación&lt;/li>
&lt;li>Elegir: &amp;ldquo;Sí, quiero firmar el paquete&amp;rdquo;&lt;/li>
&lt;li>Crear certificado local o usar uno comercial&lt;/li>
&lt;li>Elegir modo Sideloading (para pruebas) o Store&lt;/li>
&lt;/ol>
&lt;p>Esto generará archivos &lt;code>.msix&lt;/code> o &lt;code>.msixbundle&lt;/code> junto con &lt;code>AppInstaller&lt;/code>.&lt;/p>
&lt;h2 id="paso-9-instalar-y-probar-el-paquete">Paso 9: Instalar y probar el paquete&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Add-AppxPackage&lt;/span> &lt;span class="n">-Path&lt;/span> &lt;span class="s2">&amp;#34;.\MiApp.msix&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verificar en menú inicio, buscar &lt;code>MiApp&lt;/code> y validar comportamiento completo.&lt;/p>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Usar GUID únicos para IDs internos si hay múltiples extensiones&lt;/li>
&lt;li>Revisar el manifiesto en modo XML y no solo visual&lt;/li>
&lt;li>Usar &lt;code>capability declarations&lt;/code> mínimas y revisadas&lt;/li>
&lt;li>Probar el paquete con App Installer antes de distribución&lt;/li>
&lt;li>Mantener la versión del paquete actualizada en cada build&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>El empaquetado con &lt;strong>MSIX&lt;/strong> es esencial para garantizar instalación fiable, comportamiento predecible y compatibilidad con el ecosistema moderno de &lt;strong>Windows&lt;/strong>. El manifiesto ofrece un alto nivel de control sobre cómo se comporta y se expone la aplicación al sistema, permitiendo personalización avanzada, integración con el shell y soporte para flujos de deep linking, archivos, protocolos y más.&lt;/p></description></item><item><title>Creación de ventanas flotantes estilo Widget con posicionamiento persistente en pantalla</title><link>https://cmas.dev/posts/2025-02-21-winui-floating-windows/</link><pubDate>Fri, 21 Feb 2025 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2025-02-21-winui-floating-windows/</guid><description>&lt;p>Las ventanas flotantes (overlay) son una técnica poderosa para presentar información contextual o utilitaria en una aplicación de escritorio. En el ecosistema moderno de &lt;strong>Windows&lt;/strong>, se pueden implementar como “ventanas tipo Widget” que permanecen siempre visibles, no aparecen en la barra de tareas y mantienen su posición de forma persistente. Este tipo de UI es ideal para herramientas de monitoreo, asistentes, controles rápidos o paneles interactivos.&lt;/p>
&lt;p>Este artículo explica cómo crear este tipo de ventana en una app moderna usando &lt;strong>WinUI 3&lt;/strong> y &lt;strong>Windows App SDK&lt;/strong>, controlando su estilo, posición y comportamiento sin interferir con el foco de otras ventanas del sistema.&lt;/p>
&lt;h2 id="requisitos">Requisitos&lt;/h2>
&lt;ul>
&lt;li>Windows 11&lt;/li>
&lt;li>Visual Studio 2022&lt;/li>
&lt;li>Windows App SDK 1.3 o superior&lt;/li>
&lt;li>Proyecto WinUI 3 (Packaged)&lt;/li>
&lt;/ul>
&lt;h2 id="paso-1-crear-una-nueva-ventana-tipo-overlay">Paso 1: Crear una nueva ventana tipo overlay&lt;/h2>
&lt;p>Definir una nueva clase de ventana:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span> &lt;span class="kd">sealed&lt;/span> &lt;span class="kd">partial&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="nc">WidgetWindow&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">Window&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="n">WidgetWindow&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">InitializeComponent&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ExtendsContentIntoTitleBar&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SetWidgetStyle&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">private&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">SetWidgetStyle&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">hwnd&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">WinRT&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Interop&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WindowNative&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetWindowHandle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">hwndId&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">UI&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Win32Interop&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetWindowIdFromWindow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hwnd&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">appWindow&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">UI&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Windowing&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">AppWindow&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetFromWindowId&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hwndId&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">appWindow&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SetPresenter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AppWindowPresenterKind&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CompactOverlay&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// modo PiP&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">appWindow&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">IsShownInSwitchers&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto crea una ventana pequeña, sin ícono en barra de tareas ni Alt+Tab.&lt;/p>
&lt;h2 id="paso-2-configurar-tamaño-posición-y-transparencia">Paso 2: Configurar tamaño, posición y transparencia&lt;/h2>
&lt;p>En el constructor:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">appWindow&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Resize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">Windows&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Graphics&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SizeInt32&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Width&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">320&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Height&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">200&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">appWindow&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Move&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">Windows&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Graphics&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">PointInt32&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">X&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">1000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">60&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">appWindow&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Changed&lt;/span> &lt;span class="p">+=&lt;/span> &lt;span class="n">AppWindow_Changed&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Persistir posición en &lt;code>AppWindow_Changed&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">private&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">AppWindow_Changed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AppWindow&lt;/span> &lt;span class="n">sender&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">object&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">bounds&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">sender&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Position&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Settings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Default&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WidgetX&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">bounds&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">X&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Settings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Default&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WidgetY&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">bounds&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Y&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Settings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Default&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Save&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Leer posición previa al iniciar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="n">posX&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">Settings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Default&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WidgetX&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="n">posY&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">Settings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Default&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WidgetY&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">appWindow&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Move&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">Windows&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Graphics&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">PointInt32&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">X&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">posX&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">posY&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-3-eliminar-marco-y-ajustar-diseño">Paso 3: Eliminar marco y ajustar diseño&lt;/h2>
&lt;p>En XAML:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;Border&lt;/span> &lt;span class="na">Background=&lt;/span>&lt;span class="s">&amp;#34;White&amp;#34;&lt;/span> &lt;span class="na">CornerRadius=&lt;/span>&lt;span class="s">&amp;#34;10&amp;#34;&lt;/span> &lt;span class="na">Padding=&lt;/span>&lt;span class="s">&amp;#34;10&amp;#34;&lt;/span> &lt;span class="na">BorderBrush=&lt;/span>&lt;span class="s">&amp;#34;Gray&amp;#34;&lt;/span> &lt;span class="na">BorderThickness=&lt;/span>&lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;StackPanel&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;TextBlock&lt;/span> &lt;span class="na">Text=&lt;/span>&lt;span class="s">&amp;#34;Estado del sistema&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;ProgressBar&lt;/span> &lt;span class="na">Value=&lt;/span>&lt;span class="s">&amp;#34;70&amp;#34;&lt;/span> &lt;span class="na">Width=&lt;/span>&lt;span class="s">&amp;#34;200&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/StackPanel&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/Border&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Eliminar barra de título:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">appWindow&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TitleBar&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ExtendsContentIntoTitleBar&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">appWindow&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TitleBar&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SetPreferredHeight&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-4-mostrar-la-ventana-desde-la-app-principal">Paso 4: Mostrar la ventana desde la app principal&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">private&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">MostrarWidget_Click&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">object&lt;/span> &lt;span class="n">sender&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RoutedEventArgs&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">widget&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">WidgetWindow&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">widget&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Activate&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-5-mantener-siempre-visible-topmost">Paso 5: Mantener siempre visible (topmost)&lt;/h2>
&lt;p>Windows App SDK no expone directamente &lt;code>Topmost&lt;/code>. Usar Win32 interop:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="na">[DllImport(&amp;#34;user32.dll&amp;#34;)]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">static&lt;/span> &lt;span class="kd">extern&lt;/span> &lt;span class="kt">bool&lt;/span> &lt;span class="n">SetWindowPos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IntPtr&lt;/span> &lt;span class="n">hWnd&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">IntPtr&lt;/span> &lt;span class="n">hWndInsertAfter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">cx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">cy&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">uint&lt;/span> &lt;span class="n">uFlags&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">const&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">SWP_NOSIZE&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">0x0001&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">const&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">SWP_NOMOVE&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">0x0002&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">const&lt;/span> &lt;span class="kt">uint&lt;/span> &lt;span class="n">TOPMOST_FLAGS&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">SWP_NOMOVE&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="n">SWP_NOSIZE&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">SetWindowPos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hwnd&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">IntPtr&lt;/span>&lt;span class="p">(-&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">TOPMOST_FLAGS&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// HWND_TOPMOST&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto asegura que el widget flote sobre el resto.&lt;/p>
&lt;h2 id="casos-de-uso-reales">Casos de uso reales&lt;/h2>
&lt;ul>
&lt;li>Visualizadores de estado de sistema o recursos&lt;/li>
&lt;li>Paneles de control rápido (audio, energía, VPN)&lt;/li>
&lt;li>Asistentes flotantes de accesibilidad o IA&lt;/li>
&lt;li>Lectores de transcripción, traductores o anotadores&lt;/li>
&lt;li>Herramientas para streamers o grabación de pantalla&lt;/li>
&lt;/ul>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Permitir al usuario mover y cerrar la ventana fácilmente&lt;/li>
&lt;li>Guardar posición y tamaño de forma persistente&lt;/li>
&lt;li>No interferir con el foco de otras apps&lt;/li>
&lt;li>Proveer configuración de visibilidad (autoocultar, minimizar)&lt;/li>
&lt;li>No mostrar por defecto sin consentimiento del usuario&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Con &lt;strong>WinUI 3&lt;/strong> y &lt;strong>Windows App SDK&lt;/strong> es posible crear ventanas flotantes al estilo Widget que extienden la funcionalidad de la app más allá de la ventana principal. Este patrón de UI permite construir experiencias utilitarias, persistentes y altamente accesibles para los usuarios de &lt;strong>Windows 11&lt;/strong>, aprovechando al máximo las capacidades del sistema operativo moderno.&lt;/p></description></item><item><title>Uso de la nueva API de Shared Window Mode para apps multi-ventana en Windows 11</title><link>https://cmas.dev/posts/2025-02-14-winui-shared-window-multi-windows/</link><pubDate>Fri, 14 Feb 2025 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2025-02-14-winui-shared-window-multi-windows/</guid><description>&lt;p>&lt;strong>Windows 11&lt;/strong> introduce nuevas capacidades para la gestión de ventanas, entre ellas el &lt;strong>Shared Window Mode&lt;/strong>, que permite que las aplicaciones modernas compartan múltiples ventanas como parte de una misma experiencia multitarea. Esta característica mejora el soporte nativo para escenarios como edición paralela, múltiples vistas, comparaciones en paralelo y workflows de aplicaciones productivas.&lt;/p>
&lt;p>En este artículo se explora cómo utilizar esta API desde una aplicación moderna WinUI 3 utilizando &lt;strong>Windows App SDK&lt;/strong>, gestionando múltiples ventanas, compartiéndolas dentro de un contexto común y habilitando integración visual con Snap Layouts y Alt+Tab de forma coherente.&lt;/p>
&lt;h2 id="requisitos">Requisitos&lt;/h2>
&lt;ul>
&lt;li>Windows 11 build 22621 o superior&lt;/li>
&lt;li>Visual Studio 2022&lt;/li>
&lt;li>Windows App SDK 1.3+ (preferido 1.4+)&lt;/li>
&lt;li>Proyecto empaquetado (MSIX) con soporte multi-ventana&lt;/li>
&lt;/ul>
&lt;h2 id="fundamento-qué-es-shared-window-mode">Fundamento: ¿qué es Shared Window Mode?&lt;/h2>
&lt;p>Es un modo de presentación que permite agrupar múltiples ventanas dentro del mismo conjunto lógico del sistema operativo. A efectos del usuario, todas las ventanas se tratan como una única aplicación, tanto visualmente como en el sistema de tareas, Snap Layouts y la barra de tareas.&lt;/p>
&lt;h2 id="paso-1-crear-una-ventana-secundaria-en-winui-3">Paso 1: Crear una ventana secundaria en WinUI 3&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span> &lt;span class="kd">sealed&lt;/span> &lt;span class="kd">partial&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="nc">EditorWindow&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">Window&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="n">EditorWindow&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">InitializeComponent&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Title&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;Editor Avanzado&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Desde &lt;code>MainWindow.xaml.cs&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">private&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">AbrirNuevaVentana_Click&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">object&lt;/span> &lt;span class="n">sender&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RoutedEventArgs&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">ventana&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">EditorWindow&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ventana&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Activate&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto crea una segunda ventana independiente.&lt;/p>
&lt;h2 id="paso-2-declarar-el-grupo-de-presentación-compartida">Paso 2: Declarar el grupo de presentación compartida&lt;/h2>
&lt;p>Importar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="nn">Microsoft.UI.Windowing&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="nn">Windows.UI.WindowManagement&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Crear el grupo de ventana compartida:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">presenter&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">AppWindowPresenter&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CreateForContext&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;edicion&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">presenter&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GroupMode&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">AppWindowGroupMode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Shared&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A partir de Windows App SDK 1.4, se puede usar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">AppWindowGroup&lt;/span> &lt;span class="k">group&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="n">AppWindowGroup&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TryCreateAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">group&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">AddWindow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AppWindow&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetFromWindowId&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">windowId&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto agrupa ambas ventanas visualmente.&lt;/p>
&lt;h2 id="paso-3-activar-snap-layouts-compartidos">Paso 3: Activar Snap Layouts compartidos&lt;/h2>
&lt;p>El sistema operativo permite agrupar estas ventanas en Snap Layouts como si fueran parte de una sola app.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">mainAppWindow&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">AppWindow&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetFromWindowId&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GetWindowIdForWindow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MainWindow&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">secondaryAppWindow&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">AppWindow&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetFromWindowId&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GetWindowIdForWindow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">EditorWindow&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">await&lt;/span> &lt;span class="n">AppWindowGroup&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CreateFromAppWindowsAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">mainAppWindow&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">secondaryAppWindow&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto las unifica para minimizar, cerrar, agrupar en la barra de tareas y cambiar con Alt+Tab.&lt;/p>
&lt;h2 id="paso-4-controlar-comportamiento-individual">Paso 4: Controlar comportamiento individual&lt;/h2>
&lt;p>Cada ventana puede mantener sus controles independientes. Por ejemplo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">EditorWindow&lt;/span> &lt;span class="n">editor&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">EditorWindow&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">editor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ExtendsContentIntoTitleBar&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">editor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">AppWindow&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SetIcon&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Assets/editor.png&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">editor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">AppWindow&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Resize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">Windows&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Graphics&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SizeInt32&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Width&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">800&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Height&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">600&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">editor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Activate&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-5-comunicación-entre-ventanas">Paso 5: Comunicación entre ventanas&lt;/h2>
&lt;p>Usar &lt;code>static&lt;/code> o eventos para intercambio de datos:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span> &lt;span class="kd">static&lt;/span> &lt;span class="n">Action&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">&amp;gt;?&lt;/span> &lt;span class="n">OnGuardarNota&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">private&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">Guardar_Click&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">object&lt;/span> &lt;span class="n">sender&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RoutedEventArgs&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">OnGuardarNota&lt;/span>&lt;span class="p">?.&lt;/span>&lt;span class="n">Invoke&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">txtNota&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>En &lt;code>MainWindow&lt;/code>, suscribirse:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">EditorWindow&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">OnGuardarNota&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">nota&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="n">NotasList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Items&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nota&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="casos-de-uso-reales">Casos de uso reales&lt;/h2>
&lt;ul>
&lt;li>Aplicaciones con vista de edición y vista previa paralela&lt;/li>
&lt;li>Múltiples documentos (MDI) con organización automática&lt;/li>
&lt;li>Comparación de versiones, código o texto&lt;/li>
&lt;li>Edición por secciones o pestañas separadas&lt;/li>
&lt;/ul>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>No sobrecargar al usuario con muchas ventanas simultáneas&lt;/li>
&lt;li>Dar control claro para cerrar o reabrir ventanas&lt;/li>
&lt;li>Persistir tamaño y posición si es relevante&lt;/li>
&lt;li>Usar iconos y títulos descriptivos para distinguir roles&lt;/li>
&lt;li>Evitar bloquear el hilo principal con la creación de ventanas&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>El &lt;strong>Shared Window Mode&lt;/strong> en &lt;strong>Windows 11&lt;/strong> permite ofrecer una experiencia de usuario verdaderamente multitarea y flexible en apps modernas. Esta capacidad, combinada con &lt;strong>WinUI 3&lt;/strong> y &lt;strong>Windows App SDK&lt;/strong>, habilita escenarios productivos, colaborativos y visuales que antes requerían soluciones complejas. Gracias a su integración con &lt;em>AppWindowGroup&lt;/em> y &lt;em>Snap Layouts&lt;/em>, las apps modernas pueden comportarse como verdaderos entornos profesionales de trabajo múltiple.&lt;/p></description></item><item><title>Deep linking entre apps modernas y el sistema</title><link>https://cmas.dev/posts/2025-02-07-winui-deep-linking/</link><pubDate>Fri, 07 Feb 2025 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2025-02-07-winui-deep-linking/</guid><description>&lt;p>Una de las características más poderosas de &lt;strong>Windows App SDK&lt;/strong> es su capacidad para integrar aplicaciones modernas con el sistema operativo a través de mecanismos como &lt;strong>URI scheme handlers&lt;/strong> y &lt;strong>asociaciones de tipos de archivo&lt;/strong>. Esta integración permite a las apps &lt;strong>WinUI 3&lt;/strong> ser invocadas desde otras apps, scripts, accesos directos o enlaces web, facilitando flujos interconectados, automatización y mejores experiencias de usuario.&lt;/p>
&lt;p>En este artículo se aborda cómo habilitar el deep linking en aplicaciones modernas, tanto desde URI personalizados como desde archivos con extensiones registradas. Se incluyen ejemplos prácticos, manejo de activación, y recomendaciones de seguridad y diseño.&lt;/p>
&lt;h2 id="requisitos">Requisitos&lt;/h2>
&lt;ul>
&lt;li>Proyecto WinUI 3 empaquetado (MSIX) con Windows App SDK&lt;/li>
&lt;li>SDK mínimo: Windows 10 build 19041&lt;/li>
&lt;li>Acceso a &lt;code>Package.appxmanifest&lt;/code> en modo texto&lt;/li>
&lt;li>Conocimientos de activación y flujo de arranque en WinUI 3&lt;/li>
&lt;/ul>
&lt;h2 id="paso-1-registrar-esquema-uri-personalizado">Paso 1: Registrar esquema URI personalizado&lt;/h2>
&lt;p>Abrir &lt;code>Package.appxmanifest&lt;/code> y agregar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;Extensions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:Extension&lt;/span> &lt;span class="na">Category=&lt;/span>&lt;span class="s">&amp;#34;windows.protocol&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:Protocol&lt;/span> &lt;span class="na">Name=&lt;/span>&lt;span class="s">&amp;#34;miapp&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:DisplayName&amp;gt;&lt;/span>Mi App URI Handler&lt;span class="nt">&amp;lt;/uap:DisplayName&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/uap:Protocol&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/uap:Extension&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/Extensions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto permite que el sistema asocie &lt;code>miapp://&lt;/code> con tu aplicación.&lt;/p>
&lt;h2 id="paso-2-manejar-la-activación-uri">Paso 2: Manejar la activación URI&lt;/h2>
&lt;p>En &lt;code>App.xaml.cs&lt;/code>, implementar &lt;code>OnActivated&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">protected&lt;/span> &lt;span class="kd">override&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">OnActivated&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IActivatedEventArgs&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">args&lt;/span> &lt;span class="k">is&lt;/span> &lt;span class="n">ProtocolActivatedEventArgs&lt;/span> &lt;span class="n">protocolArgs&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">uri&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">protocolArgs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Uri&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">action&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">uri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Host&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">action&lt;/span> &lt;span class="p">==&lt;/span> &lt;span class="s">&amp;#34;abrirpanel&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">new&lt;/span> &lt;span class="n">PanelWindow&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">Activate&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">action&lt;/span> &lt;span class="p">==&lt;/span> &lt;span class="s">&amp;#34;detalle&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">uri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">QueryParsed&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetFirstValueByName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;id&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">new&lt;/span> &lt;span class="n">DetalleWindow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">Activate&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejemplo de enlace que abriría la app:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">miapp://abrirpanel
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">miapp://detalle?id=456
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Estos enlaces pueden usarse desde PowerShell, scripts, HTML o accesos directos.&lt;/p>
&lt;h2 id="paso-3-crear-acceso-directo-con-uri">Paso 3: Crear acceso directo con URI&lt;/h2>
&lt;p>Crear &lt;code>.url&lt;/code> o acceso directo con destino:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">miapp://abrirpanel
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>También es posible crear enlaces desde otras apps:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;miapp://abrirpanel&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Abrir Panel&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-4-registrar-tipo-de-archivo-personalizado">Paso 4: Registrar tipo de archivo personalizado&lt;/h2>
&lt;p>En el manifiesto:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;uap:Extension&lt;/span> &lt;span class="na">Category=&lt;/span>&lt;span class="s">&amp;#34;windows.fileTypeAssociation&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:FileTypeAssociation&lt;/span> &lt;span class="na">Name=&lt;/span>&lt;span class="s">&amp;#34;miformato&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:SupportedFileTypes&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:FileType&amp;gt;&lt;/span>.mif&lt;span class="nt">&amp;lt;/uap:FileType&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/uap:SupportedFileTypes&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:DisplayName&amp;gt;&lt;/span>Archivo personalizado&lt;span class="nt">&amp;lt;/uap:DisplayName&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/uap:FileTypeAssociation&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/uap:Extension&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto indica al sistema que tu app puede manejar archivos &lt;code>.mif&lt;/code>.&lt;/p>
&lt;h2 id="paso-5-manejar-apertura-de-archivos">Paso 5: Manejar apertura de archivos&lt;/h2>
&lt;p>Modificar &lt;code>OnFileActivated&lt;/code> en &lt;code>App.xaml.cs&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">protected&lt;/span> &lt;span class="kd">override&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">OnFileActivated&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">FileActivatedEventArgs&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">file&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Files&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">StorageFile&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">new&lt;/span> &lt;span class="n">FileViewerWindow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">Activate&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto permite que el usuario abra el archivo &lt;code>.mif&lt;/code> con doble clic desde el Explorador de Windows o desde línea de comandos.&lt;/p>
&lt;h2 id="paso-6-probar-invocación-desde-sistema">Paso 6: Probar invocación desde sistema&lt;/h2>
&lt;p>En PowerShell:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Start-Process&lt;/span> &lt;span class="s2">&amp;#34;miapp://detalle?id=123&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Para probar apertura de archivo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Start-Process&lt;/span> &lt;span class="s2">&amp;#34;C:\archivos\ejemplo.mif&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verificar que se abra tu app con la UI adecuada.&lt;/p>
&lt;h2 id="casos-de-uso-reales">Casos de uso reales&lt;/h2>
&lt;ul>
&lt;li>Invocar flujos internos de la app desde navegador o email&lt;/li>
&lt;li>Procesar archivos personalizados desde el explorador&lt;/li>
&lt;li>Integración entre apps de escritorio (ej. app CRM que abre visor externo)&lt;/li>
&lt;li>Automatización de tareas con URI para accesos rápidos&lt;/li>
&lt;li>Generar archivos &lt;code>.mif&lt;/code> desde otra app para abrirlos con tu app&lt;/li>
&lt;/ul>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Validar todos los parámetros recibidos vía URI para evitar inyección o ejecución no deseada&lt;/li>
&lt;li>No ejecutar automáticamente acciones peligrosas sin confirmación&lt;/li>
&lt;li>Documentar los URI soportados si se espera que otros sistemas los usen&lt;/li>
&lt;li>Mostrar mensajes útiles si la invocación está incompleta&lt;/li>
&lt;li>Versionar los esquemas y mantener compatibilidad hacia atrás si evolucionan&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>El soporte para esquemas URI personalizados y asociaciones de tipos de archivo en &lt;strong>Windows App SDK&lt;/strong> permite construir aplicaciones modernas que se integran profundamente con el sistema operativo, ofreciendo flujos más naturales y funcionales. Esta capacidad amplía el alcance y conectividad de una app, facilitando su uso en entornos automatizados, interoperables o colaborativos.&lt;/p></description></item><item><title>Implementación de Widgets personalizados para Windows 11 desde una app moderna</title><link>https://cmas.dev/posts/2025-01-31-winui-widget-windows11/</link><pubDate>Fri, 31 Jan 2025 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2025-01-31-winui-widget-windows11/</guid><description>&lt;p>&lt;strong>Windows 11&lt;/strong> ha reintroducido el concepto de widgets como parte central de su experiencia de usuario, permitiendo a las aplicaciones modernas integrar contenido interactivo directamente en el panel de Widgets. Con la reciente apertura del canal de desarrollo de widgets para terceros, los desarrolladores pueden crear experiencias ligeras, contextuales y persistentes ancladas al sistema operativo, todo desde una aplicación moderna basada en Windows App SDK.&lt;/p>
&lt;p>Este artículo detalla paso a paso cómo estructurar, registrar y mostrar un widget personalizado en Windows 11, partiendo de una aplicación moderna &lt;strong>WinUI 3&lt;/strong> empaquetada. Se incluye la configuración del manifiesto, diseño visual y manejo de datos dinámicos.&lt;/p>
&lt;h2 id="requisitos">Requisitos&lt;/h2>
&lt;ul>
&lt;li>Windows 11 22H2 (Build 22621+) o superior&lt;/li>
&lt;li>Visual Studio 2022 actualizado&lt;/li>
&lt;li>Windows App SDK 1.3 o superior&lt;/li>
&lt;li>Proyecto Packaged (MSIX)&lt;/li>
&lt;li>Microsoft Store para habilitar canal de publicación del widget&lt;/li>
&lt;li>Cuenta de desarrollador registrada&lt;/li>
&lt;/ul>
&lt;h2 id="paso-1-entender-el-modelo-de-widgets">Paso 1: Entender el modelo de Widgets&lt;/h2>
&lt;p>Los widgets de Windows 11 están construidos como una extensión de la app principal. Técnicamente son controles WebView2 renderizados como tarjetas, que viven en un host de sistema y son impulsados por Adaptive Cards o contenido HTML.&lt;/p>
&lt;p>La integración se realiza a través de un manifiesto especial &lt;code>WidgetsManifest.xml&lt;/code> y archivos de configuración complementarios.&lt;/p>
&lt;h2 id="paso-2-crear-el-paquete-del-widget">Paso 2: Crear el paquete del widget&lt;/h2>
&lt;p>Estructura típica:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">MyApp/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── App.xaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── MainWindow.xaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── Widgets/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── myWidget/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── index.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── widget.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── logo.png
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── WidgetsManifest.xml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>El archivo &lt;code>widget.json&lt;/code> define el contenido del widget:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;title&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Resumen diario&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;description&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Muestra tareas, clima y calendario&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;hostedAppId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;MyAppWidget&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;image&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;logo.png&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;defaultSize&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;medium&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;content&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;webview&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;url&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ms-appx-web:///Widgets/myWidget/index.html&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>index.html&lt;/code> contiene el contenido visible:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Mi widget&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Bienvenido, usuario&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-3-crear-widgetsmanifestxml">Paso 3: Crear WidgetsManifest.xml&lt;/h2>
&lt;p>Este manifiesto registra los widgets para la app:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;WidgetManifest&lt;/span> &lt;span class="na">xmlns=&lt;/span>&lt;span class="s">&amp;#34;http://schemas.microsoft.com/appx/2022/widgetmanifest&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;HostAppId&amp;gt;&lt;/span>MyAppWidget&lt;span class="nt">&amp;lt;/HostAppId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;Widgets&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;Widget&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;Id&amp;gt;&lt;/span>widget.resumen&lt;span class="nt">&amp;lt;/Id&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;Path&amp;gt;&lt;/span>ms-appx-web:///Widgets/myWidget/widget.json&lt;span class="nt">&amp;lt;/Path&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/Widget&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/Widgets&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/WidgetManifest&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Este archivo se incluye en el empaquetado MSIX.&lt;/p>
&lt;h2 id="paso-4-configurar-el-manifiesto-msix">Paso 4: Configurar el manifiesto MSIX&lt;/h2>
&lt;p>Editar &lt;code>Package.appxmanifest&lt;/code> y agregar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;Extensions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;Extension&lt;/span> &lt;span class="na">Category=&lt;/span>&lt;span class="s">&amp;#34;windows.widget&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;Widget&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;ManifestPath&amp;gt;&lt;/span>ms-appx:///WidgetsManifest.xml&lt;span class="nt">&amp;lt;/ManifestPath&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/Widget&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/Extension&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/Extensions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto indica que la app soporta widgets y dónde encontrar su configuración.&lt;/p>
&lt;h2 id="paso-5-publicar-e-instalar">Paso 5: Publicar e instalar&lt;/h2>
&lt;p>Actualmente, los widgets solo se activan para apps publicadas o en canal Insider con habilitación por parte de Microsoft. Para pruebas:&lt;/p>
&lt;ul>
&lt;li>Enviar a canal privado de Microsoft Store&lt;/li>
&lt;li>Solicitar habilitación del widget en tu cuenta desarrollador&lt;/li>
&lt;li>Instalar con &lt;code>Add-AppxPackage&lt;/code> local + flags de prueba de widgets&lt;/li>
&lt;/ul>
&lt;h2 id="paso-6-comunicación-entre-app-y-widget">Paso 6: Comunicación entre app y widget&lt;/h2>
&lt;p>Los widgets pueden enviar mensajes al proceso principal usando WebView2 o protocolos internos:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">chrome&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">webview&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">postMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;abrirApp&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Y desde la app:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">WebView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CoreWebView2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WebMessageReceived&lt;/span> &lt;span class="p">+=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">mensaje&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TryGetWebMessageAsString&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">mensaje&lt;/span> &lt;span class="p">==&lt;/span> &lt;span class="s">&amp;#34;abrirApp&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">App&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ShowMainWindow&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto permite que el widget lance secciones de la app o actualice información.&lt;/p>
&lt;h2 id="paso-7-actualización-de-datos-dinámica">Paso 7: Actualización de datos dinámica&lt;/h2>
&lt;p>Los widgets pueden obtener datos dinámicamente:&lt;/p>
&lt;ul>
&lt;li>Desde &lt;code>localStorage&lt;/code> o APIs JS&lt;/li>
&lt;li>Desde URI internas (ej. REST desde localhost)&lt;/li>
&lt;li>Desde la app principal usando canal de comunicación&lt;/li>
&lt;/ul>
&lt;p>Por ejemplo, un widget de clima puede actualizar su contenido vía JavaScript cada 10 minutos.&lt;/p>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Mantener el contenido mínimo y legible&lt;/li>
&lt;li>No sobrecargar visualmente el widget&lt;/li>
&lt;li>Usar Adaptive Cards o HTML accesible&lt;/li>
&lt;li>Probar en múltiples resoluciones (small, medium, large)&lt;/li>
&lt;li>Permitir configuración desde la app principal&lt;/li>
&lt;/ul>
&lt;h2 id="casos-de-uso-reales">Casos de uso reales&lt;/h2>
&lt;ul>
&lt;li>Widgets de calendario, clima, tareas, actividad&lt;/li>
&lt;li>Panel de control para apps de productividad&lt;/li>
&lt;li>Resumen de salud del sistema o estadísticas personales&lt;/li>
&lt;li>Entrada rápida de datos (notas, eventos)&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>La posibilidad de implementar widgets personalizados en &lt;strong>Windows 11&lt;/strong> abre nuevas puertas para la visibilidad, productividad e integración del usuario con una aplicación. Los widgets son ligeros, contextuales y permanecen visibles más allá del tiempo de ejecución de la app, reforzando su utilidad y presencia diaria. Gracias a &lt;strong>Windows App SDK&lt;/strong>, su implementación desde apps modernas es posible, estructurada y alineada con las mejores prácticas de experiencia de usuario en el ecosistema &lt;strong>Windows&lt;/strong> moderno.&lt;/p></description></item><item><title>Interacción con el portapapeles del sistema usando Windows.ApplicationModel.DataTransfer</title><link>https://cmas.dev/posts/2025-01-24-winui-clipboard-interaction/</link><pubDate>Fri, 24 Jan 2025 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2025-01-24-winui-clipboard-interaction/</guid><description>&lt;p>El portapapeles es una funcionalidad crítica para la experiencia del usuario en &lt;strong>Windows&lt;/strong>. Permite copiar y pegar texto, imágenes, URIs y otros datos entre aplicaciones. En las apps modernas desarrolladas con &lt;strong>WinUI 3&lt;/strong> y &lt;strong>Windows App SDK&lt;/strong>, se puede interactuar programáticamente con el portapapeles del sistema para mejorar la productividad, ofrecer funcionalidades avanzadas y controlar la experiencia de transferencia de contenido.&lt;/p>
&lt;p>Este artículo explica paso a paso cómo acceder, escribir y leer del portapapeles en aplicaciones modernas, así como técnicas para escuchar cambios en su contenido, realizar transformaciones y trabajar con múltiples formatos.&lt;/p>
&lt;h2 id="requisitos">Requisitos&lt;/h2>
&lt;ul>
&lt;li>Proyecto WinUI 3 empaquetado con Windows App SDK&lt;/li>
&lt;li>SDK mínimo: Windows 10 19041+&lt;/li>
&lt;li>Namespace clave: &lt;code>Windows.ApplicationModel.DataTransfer&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="escribir-texto-en-el-portapapeles">Escribir texto en el portapapeles&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="nn">Windows.ApplicationModel.DataTransfer&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">dataPackage&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DataPackage&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dataPackage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SetText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Texto copiado desde mi app WinUI 3&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Clipboard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SetContent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dataPackage&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>También se puede agregar metadatos:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dataPackage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Properties&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Title&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;Título de contenido&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dataPackage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Properties&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Description&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;Descripción opcional&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Para notificar explícitamente al sistema:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Clipboard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Flush&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="leer-texto-del-portapapeles">Leer texto del portapapeles&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">dataView&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">Clipboard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetContent&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">dataView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">StandardDataFormats&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">string&lt;/span> &lt;span class="n">texto&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="n">dataView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetTextAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ClipboardOutput&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">$&amp;#34;Contenido: {texto}&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Este método se puede invocar desde un botón o temporizador.&lt;/p>
&lt;h2 id="soporte-para-otros-formatos">Soporte para otros formatos&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dataPackage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SetUri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">Uri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;https://ejemplo.com&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dataPackage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SetHtmlFormat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;&amp;lt;b&amp;gt;HTML&amp;lt;/b&amp;gt; con formato&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dataPackage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SetBitmap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">RandomAccessStreamReference&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CreateFromUri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">Uri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ms-appx:///Assets/logo.png&amp;#34;&lt;/span>&lt;span class="p">)));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verificar formatos disponibles:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">formats&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">dataView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">AvailableFormats&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="detectar-cambios-en-el-portapapeles">Detectar cambios en el portapapeles&lt;/h2>
&lt;p>No hay un evento oficial en &lt;code>Clipboard&lt;/code>, pero se puede implementar polling:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">DispatcherQueueTimer&lt;/span> &lt;span class="n">timer&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">DispatcherQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CreateTimer&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">string&lt;/span> &lt;span class="n">ultimoTexto&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">timer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Interval&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">TimeSpan&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">FromSeconds&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">timer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Tick&lt;/span> &lt;span class="p">+=&lt;/span> &lt;span class="kd">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">contenido&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">Clipboard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetContent&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">contenido&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">StandardDataFormats&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">actual&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="n">contenido&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetTextAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">actual&lt;/span> &lt;span class="p">!=&lt;/span> &lt;span class="n">ultimoTexto&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ultimoTexto&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">actual&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ClipboardOutput&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">$&amp;#34;Nuevo texto: {actual}&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">timer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto permite detectar cuando el usuario copia nuevo contenido desde otra app.&lt;/p>
&lt;h2 id="restringir-formatos-permitidos">Restringir formatos permitidos&lt;/h2>
&lt;p>Para seguridad o control de flujo, verificar antes de aceptar contenido:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">dataView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">StandardDataFormats&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">&amp;amp;&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">!&lt;/span>&lt;span class="n">dataView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">StandardDataFormats&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Html&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Solo texto plano permitido&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="copiar-contenido-personalizado-json-archivos">Copiar contenido personalizado (JSON, archivos)&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dataPackage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SetData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;custom/json&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">jsonString&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Nota: se necesita compatibilidad en la app que reciba ese contenido para leer formatos personalizados.&lt;/p>
&lt;h2 id="ejemplo-de-uso-completo-en-ui">Ejemplo de uso completo en UI&lt;/h2>
&lt;p>XAML:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;StackPanel&lt;/span> &lt;span class="na">Padding=&lt;/span>&lt;span class="s">&amp;#34;20&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;TextBox&lt;/span> &lt;span class="na">x:Name=&lt;/span>&lt;span class="s">&amp;#34;ClipboardInput&amp;#34;&lt;/span> &lt;span class="na">Header=&lt;/span>&lt;span class="s">&amp;#34;Texto a copiar&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;Button&lt;/span> &lt;span class="na">Content=&lt;/span>&lt;span class="s">&amp;#34;Copiar al portapapeles&amp;#34;&lt;/span> &lt;span class="na">Click=&lt;/span>&lt;span class="s">&amp;#34;Copiar_Click&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;Button&lt;/span> &lt;span class="na">Content=&lt;/span>&lt;span class="s">&amp;#34;Leer portapapeles&amp;#34;&lt;/span> &lt;span class="na">Click=&lt;/span>&lt;span class="s">&amp;#34;Leer_Click&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;TextBlock&lt;/span> &lt;span class="na">x:Name=&lt;/span>&lt;span class="s">&amp;#34;ClipboardOutput&amp;#34;&lt;/span> &lt;span class="na">TextWrapping=&lt;/span>&lt;span class="s">&amp;#34;Wrap&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/StackPanel&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Code-behind:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">private&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">Copiar_Click&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">object&lt;/span> &lt;span class="n">sender&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RoutedEventArgs&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">DataPackage&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SetText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ClipboardInput&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Clipboard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SetContent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ClipboardOutput&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;Copiado.&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">private&lt;/span> &lt;span class="kd">async&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">Leer_Click&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">object&lt;/span> &lt;span class="n">sender&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RoutedEventArgs&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">contenido&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">Clipboard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetContent&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">contenido&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">StandardDataFormats&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">texto&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="n">contenido&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetTextAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ClipboardOutput&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">$&amp;#34;Leído: {texto}&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="casos-de-uso-reales">Casos de uso reales&lt;/h2>
&lt;ul>
&lt;li>Pegar contenido enriquecido en editores (markdown, HTML)&lt;/li>
&lt;li>Copiar información contextual como tokens, ID o URIs&lt;/li>
&lt;li>Integrar con “Copiar imagen” o “Copiar como JSON”&lt;/li>
&lt;li>Composición de snippets o macros desde múltiples fuentes&lt;/li>
&lt;li>Interacción fluida entre apps modernas y legacy&lt;/li>
&lt;/ul>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Siempre verificar que el contenido exista antes de leer&lt;/li>
&lt;li>No sobrescribir el portapapeles sin notificar al usuario&lt;/li>
&lt;li>Usar &lt;code>Clipboard.Clear()&lt;/code> solo si estrictamente necesario&lt;/li>
&lt;li>Adaptar al formato correcto según destino (no forzar HTML si no se soporta)&lt;/li>
&lt;li>Considerar privacidad al manipular datos sensibles&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>El acceso al portapapeles del sistema desde &lt;strong>WinUI 3&lt;/strong> permite a las apps modernas integrarse de forma directa con el flujo de trabajo del usuario. Esta capacidad desbloquea múltiples escenarios avanzados como composición de datos, interoperabilidad entre apps, lectura de contenido contextual y productividad mejorada. Gracias a Windows App SDK, estas operaciones son seguras, versátiles y completamente compatibles con el sistema operativo.&lt;/p></description></item><item><title>Consumo de información del sistema desde WinUI 3</title><link>https://cmas.dev/posts/2025-01-17-winui-system-information/</link><pubDate>Fri, 17 Jan 2025 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2025-01-17-winui-system-information/</guid><description>&lt;p>Una aplicación moderna que corre sobre Windows no tiene por qué operar de manera aislada. Gracias a las APIs del sistema operativo disponibles en &lt;strong>Windows App SDK&lt;/strong>, es posible acceder a múltiples fuentes de información contextual del sistema como el estado de la batería, conectividad de red, nivel de volumen y hasta el estado de energía. Esto permite que una app se adapte dinámicamente al entorno del usuario, optimizando la experiencia, reduciendo consumo o informando condiciones especiales.&lt;/p>
&lt;p>En este artículo se muestra cómo consumir información clave del sistema desde una app &lt;strong>WinUI 3&lt;/strong> usando C#, incluyendo suscriptores a eventos para obtener actualizaciones en tiempo real.&lt;/p>
&lt;h2 id="requisitos">Requisitos&lt;/h2>
&lt;ul>
&lt;li>Proyecto WinUI 3 Packaged con Windows App SDK&lt;/li>
&lt;li>Visual Studio 2022+&lt;/li>
&lt;li>SDK mínimo 10.0.18362&lt;/li>
&lt;li>Namespaces usados:
&lt;ul>
&lt;li>&lt;code>Windows.System.Power&lt;/code>&lt;/li>
&lt;li>&lt;code>Windows.Networking.Connectivity&lt;/code>&lt;/li>
&lt;li>&lt;code>Windows.Media.Devices&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="batería-estado-y-nivel-de-carga">Batería: estado y nivel de carga&lt;/h2>
&lt;p>Primero, importar el espacio de nombres:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="nn">Windows.System.Power&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Obtener el estado actual:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">level&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">PowerManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">RemainingChargePercent&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">state&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">PowerManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">EnergySaverStatus&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Suscribirse a cambios:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">PowerManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">RemainingChargePercentChanged&lt;/span> &lt;span class="p">+=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">updatedLevel&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">PowerManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">RemainingChargePercent&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">DispatcherQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TryEnqueue&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">BatteryText&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">$&amp;#34;Batería: {updatedLevel}%&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="red-conectividad-y-tipo-de-conexión">Red: conectividad y tipo de conexión&lt;/h2>
&lt;p>Importar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="nn">Windows.Networking.Connectivity&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Obtener el perfil actual:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">profile&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">NetworkInformation&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetInternetConnectionProfile&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">bool&lt;/span> &lt;span class="n">isConnected&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">profile&lt;/span>&lt;span class="p">?.&lt;/span>&lt;span class="n">GetNetworkConnectivityLevel&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">==&lt;/span> &lt;span class="n">NetworkConnectivityLevel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">InternetAccess&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">string&lt;/span> &lt;span class="n">interfaceType&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">profile&lt;/span>&lt;span class="p">?.&lt;/span>&lt;span class="n">NetworkAdapter&lt;/span>&lt;span class="p">?.&lt;/span>&lt;span class="n">IanaInterfaceType&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ToString&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejemplo de monitoreo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">NetworkInformation&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">NetworkStatusChanged&lt;/span> &lt;span class="p">+=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">current&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">NetworkInformation&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetInternetConnectionProfile&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">status&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">current&lt;/span>&lt;span class="p">?.&lt;/span>&lt;span class="n">GetNetworkConnectivityLevel&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">DispatcherQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TryEnqueue&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NetworkText&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">$&amp;#34;Conectado: {status}&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="volumen-nivel-actual-del-sistema">Volumen: nivel actual del sistema&lt;/h2>
&lt;p>Importar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="nn">Windows.Media.Devices&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Obtener el volumen de salida:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">volumeLevel&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">AudioEndpointVolume&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetVolume&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Nota: el acceso directo al volumen del sistema puede requerir componentes COM o APIs Win32 mediante &lt;code>CoreAudioAPI&lt;/code>. Alternativa:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">audioManager&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">MediaDevice&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetAudioRenderSelector&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Para actualizaciones en tiempo real, usar WinRT interop o bibliotecas externas como NAudio.&lt;/p>
&lt;h2 id="estado-de-energía-enchufado-o-batería">Estado de energía: enchufado o batería&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">status&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">PowerManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">PowerSupplyStatus&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Opciones posibles:&lt;/p>
&lt;ul>
&lt;li>&lt;code>PowerSupplyStatus.Inadequate&lt;/code>&lt;/li>
&lt;li>&lt;code>PowerSupplyStatus.Adequate&lt;/code>&lt;/li>
&lt;li>&lt;code>PowerSupplyStatus.NotPresent&lt;/code>&lt;/li>
&lt;li>&lt;code>PowerSupplyStatus.Unknown&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Ejemplo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">PowerManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">PowerSupplyStatusChanged&lt;/span> &lt;span class="p">+=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">pluggedIn&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">PowerManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">PowerSupplyStatus&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">DispatcherQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TryEnqueue&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">StatusText&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">$&amp;#34;Fuente de energía: {pluggedIn}&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="integración-ui">Integración UI&lt;/h2>
&lt;p>En &lt;code>MainWindow.xaml&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;StackPanel&lt;/span> &lt;span class="na">Spacing=&lt;/span>&lt;span class="s">&amp;#34;10&amp;#34;&lt;/span> &lt;span class="na">Padding=&lt;/span>&lt;span class="s">&amp;#34;20&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;TextBlock&lt;/span> &lt;span class="na">x:Name=&lt;/span>&lt;span class="s">&amp;#34;BatteryText&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;TextBlock&lt;/span> &lt;span class="na">x:Name=&lt;/span>&lt;span class="s">&amp;#34;NetworkText&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;TextBlock&lt;/span> &lt;span class="na">x:Name=&lt;/span>&lt;span class="s">&amp;#34;StatusText&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/StackPanel&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>En el constructor, inicializar datos actuales + suscripciones.&lt;/p>
&lt;h2 id="casos-de-uso-reales">Casos de uso reales&lt;/h2>
&lt;ul>
&lt;li>Modo ahorro de batería automático cuando baja del 20%&lt;/li>
&lt;li>Advertencia de red metered o limitada (para evitar descargas)&lt;/li>
&lt;li>Reducción de recursos gráficos cuando no hay energía alterna&lt;/li>
&lt;li>Silenciar notificaciones o sonidos si el volumen es 0&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Las apps modernas en &lt;strong>Windows&lt;/strong> pueden y deben responder al contexto del sistema operativo. Acceder a información como batería, conectividad, energía o audio permite desarrollar aplicaciones adaptativas, eficientes y conscientes del entorno. &lt;strong>WinUI 3&lt;/strong> permite hacerlo de forma natural, segura y en tiempo real gracias a los eventos y APIs disponibles a través de &lt;strong>Windows App SDK&lt;/strong>.&lt;/p></description></item><item><title>Uso avanzado de la Jump List API para apps modernas</title><link>https://cmas.dev/posts/2024-12-27-win-jump-list/</link><pubDate>Fri, 27 Dec 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-12-27-win-jump-list/</guid><description>&lt;p>Las &lt;em>Jump Lists&lt;/em> en &lt;strong>Windows&lt;/strong> son menús contextuales que aparecen cuando el usuario hace clic derecho sobre el icono de una aplicación anclada a la barra de tareas o en el menú de inicio. Estas listas permiten exponer accesos directos a tareas frecuentes o específicas dentro de la aplicación, mejorando la accesibilidad, productividad y personalización de la experiencia de usuario.&lt;/p>
&lt;p>Con &lt;strong>Windows App SDK&lt;/strong> y &lt;strong>WinUI 3&lt;/strong>, las apps modernas pueden crear y actualizar Jump Lists de forma dinámica, segmentarlas por grupos, incluir acciones personalizadas y manejar parámetros que activen flujos específicos al iniciarse la app.&lt;/p>
&lt;p>Este artículo describe paso a paso cómo implementar Jump Lists avanzadas con categorías, argumentos, iconos y comportamiento personalizado en apps &lt;strong>WinUI 3&lt;/strong> empaquetadas.&lt;/p>
&lt;h2 id="requisitos">Requisitos&lt;/h2>
&lt;ul>
&lt;li>Windows 11&lt;/li>
&lt;li>Visual Studio 2022 o superior&lt;/li>
&lt;li>Proyecto WinUI 3 (packaged) con Windows App SDK&lt;/li>
&lt;li>SDK mínimo: Windows 10 1903 (10.0.18362) o superior&lt;/li>
&lt;li>Referencia a &lt;code>Windows.UI.StartScreen&lt;/code> y &lt;code>Windows.Foundation.Collections&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="paso-1-verificar-soporte-de-jump-list">Paso 1: Verificar soporte de Jump List&lt;/h2>
&lt;p>Antes de cualquier operación, se debe verificar si la funcionalidad está habilitada en el sistema del usuario:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">bool&lt;/span> &lt;span class="n">isSupported&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="n">JumpList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">IsSupportedAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(!&lt;/span>&lt;span class="n">isSupported&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Mostrar mensaje o fallback&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-2-crear-una-jump-list-básica">Paso 2: Crear una Jump List básica&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">jumpList&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="n">JumpList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">LoadCurrentAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">jumpList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Items&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Clear&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">item&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">JumpListItem&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CreateWithArguments&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;abrirPanel&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Panel de control&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">item&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Description&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;Abrir el panel principal de la app&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">item&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Logo&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Uri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ms-appx:///Assets/panel.png&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">jumpList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Items&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">await&lt;/span> &lt;span class="n">jumpList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SaveAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Este ejemplo muestra cómo crear un acceso directo que aparecerá al hacer clic derecho en la app anclada.&lt;/p>
&lt;h2 id="paso-3-crear-múltiples-categorías-grupos">Paso 3: Crear múltiples categorías (grupos)&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">jumpList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Items&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">JumpListItem&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CreateSeparator&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">item1&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">JumpListItem&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CreateWithArguments&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;modoLectura&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Abrir en modo lectura&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">item1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GroupName&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;Modos de inicio&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">item2&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">JumpListItem&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CreateWithArguments&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;modoEdicion&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Abrir en modo edición&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">item2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GroupName&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;Modos de inicio&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">jumpList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Items&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">item1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">jumpList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Items&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">item2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">await&lt;/span> &lt;span class="n">jumpList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SaveAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Los elementos con el mismo &lt;code>GroupName&lt;/code> aparecerán agrupados bajo ese título.&lt;/p>
&lt;h2 id="paso-4-manejar-los-argumentos-en-el-arranque">Paso 4: Manejar los argumentos en el arranque&lt;/h2>
&lt;p>En &lt;code>App.xaml.cs&lt;/code>, sobrescribir &lt;code>OnLaunched&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">protected&lt;/span> &lt;span class="kd">override&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">OnLaunched&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Microsoft&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">UI&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Xaml&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">LaunchActivatedEventArgs&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">arguments&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Arguments&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">arguments&lt;/span> &lt;span class="p">==&lt;/span> &lt;span class="s">&amp;#34;modoLectura&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">new&lt;/span> &lt;span class="n">ReaderWindow&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">Activate&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">arguments&lt;/span> &lt;span class="p">==&lt;/span> &lt;span class="s">&amp;#34;modoEdicion&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">new&lt;/span> &lt;span class="n">EditorWindow&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">Activate&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">arguments&lt;/span> &lt;span class="p">==&lt;/span> &lt;span class="s">&amp;#34;abrirPanel&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">new&lt;/span> &lt;span class="n">PanelWindow&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">Activate&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_window&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">MainWindow&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Activate&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto permite que cada acceso directo ejecute una función distinta de la app.&lt;/p>
&lt;h2 id="paso-5-añadir-iconos-personalizados">Paso 5: Añadir iconos personalizados&lt;/h2>
&lt;p>Los íconos de cada elemento deben estar en formato &lt;code>.png&lt;/code> dentro del paquete MSIX (por ejemplo, en &lt;code>/Assets&lt;/code>).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">item&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Logo&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Uri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ms-appx:///Assets/lectura.png&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Tamaño recomendado: 32x32 o 64x64. Asegurarse de que estén incluidos en el proyecto como contenido con &amp;ldquo;Copy if newer&amp;rdquo;.&lt;/p>
&lt;h2 id="paso-6-añadir-separadores-visuales">Paso 6: Añadir separadores visuales&lt;/h2>
&lt;p>Para mejorar la jerarquía, usar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">jumpList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Items&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">JumpListItem&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CreateSeparator&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto crea una línea de separación visual entre grupos o categorías.&lt;/p>
&lt;h2 id="paso-7-actualización-dinámica-de-la-jump-list">Paso 7: Actualización dinámica de la Jump List&lt;/h2>
&lt;p>Las Jump Lists pueden ser actualizadas dinámicamente según el estado del usuario, datos recientes, documentos o permisos:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">usuarioEsAdmin&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">adminItem&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">JumpListItem&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CreateWithArguments&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;panelAdmin&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Panel de administración&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">adminItem&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GroupName&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;Herramientas&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">jumpList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Items&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">adminItem&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Después de modificar, recordar guardar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">await&lt;/span> &lt;span class="n">jumpList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SaveAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-8-limpiar-o-resetear-la-jump-list">Paso 8: Limpiar o resetear la Jump List&lt;/h2>
&lt;p>En algunos escenarios (cerrar sesión, cambiar de perfil), es útil limpiar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">jumpList&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="n">JumpList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">LoadCurrentAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">jumpList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Items&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Clear&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">await&lt;/span> &lt;span class="n">jumpList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SaveAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto garantiza que no haya entradas obsoletas.&lt;/p>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Usar textos cortos y descripciones claras&lt;/li>
&lt;li>Limitar la lista a 5–7 accesos para no sobrecargar&lt;/li>
&lt;li>Organizar por contexto (modos, herramientas, recientes)&lt;/li>
&lt;li>Evitar agregar funciones no disponibles para el usuario actual&lt;/li>
&lt;li>Actualizar en tiempo de ejecución si cambia el contexto del usuario&lt;/li>
&lt;/ul>
&lt;h2 id="casos-de-uso-reales">Casos de uso reales&lt;/h2>
&lt;ul>
&lt;li>Acceder directamente a secciones internas de una app (informes, configuración, contactos)&lt;/li>
&lt;li>Iniciar flujos especiales (cámara, escaneo, captura, conexión)&lt;/li>
&lt;li>Abrir documentos recientes o plantillas específicas&lt;/li>
&lt;li>Exponer acciones administrativas para perfiles con privilegios&lt;/li>
&lt;li>Soporte para herramientas multitarea sin cambiar ventana principal&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>La &lt;em>Jump List API&lt;/em> permite a las aplicaciones modernas &lt;strong>WinUI 3&lt;/strong> integrarse profundamente con la experiencia del escritorio en &lt;strong>Windows&lt;/strong>, ofreciendo accesos directos contextualizados, útiles y adaptables. Esta funcionalidad mejora la interacción del usuario con la aplicación y refuerza su presencia en el sistema operativo, permitiendo flujos más rápidos y naturales desde la barra de tareas o el menú inicio.&lt;/p>
&lt;p>A través de argumentos, iconos, agrupaciones y lógica condicional, las Jump Lists pueden convertirse en una poderosa extensión de la experiencia del usuario para cualquier aplicación moderna en &lt;strong>Windows&lt;/strong>.&lt;/p></description></item><item><title>Integración con la API de notificaciones nativas</title><link>https://cmas.dev/posts/2024-12-20-notification-api-integration/</link><pubDate>Fri, 20 Dec 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-12-20-notification-api-integration/</guid><description>&lt;p>Las notificaciones del sistema son uno de los mecanismos más eficaces para comunicar información al usuario sin interrumpir su flujo de trabajo. En &lt;strong>Windows&lt;/strong>, estas notificaciones pueden ser enriquecidas mediante el sistema de notificaciones nativas, que incluye soporte para contenido visual dinámico con Adaptive Cards y la posibilidad de recibir notificaciones push incluso cuando la aplicación no está en ejecución.&lt;/p>
&lt;p>Con &lt;strong>WinUI 3&lt;/strong> y &lt;strong>Windows App SDK&lt;/strong>, es posible crear y gestionar notificaciones enriquecidas, personalizadas y reactivas. Este artículo muestra cómo implementar notificaciones toast locales, cómo personalizarlas con Adaptive Cards, y cómo configurar notificaciones push para mantener al usuario informado en tiempo real.&lt;/p>
&lt;h2 id="requisitos">Requisitos&lt;/h2>
&lt;ul>
&lt;li>Windows 11&lt;/li>
&lt;li>Visual Studio 2022+&lt;/li>
&lt;li>Proyecto empaquetado con MSIX (WinUI 3)&lt;/li>
&lt;li>Windows App SDK 1.3 o superior&lt;/li>
&lt;li>Referencia a &lt;code>Microsoft.WindowsAppSDK&lt;/code> y &lt;code>Microsoft.Toolkit.Uwp.Notifications&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="paso-1-instalar-el-paquete-nuget-para-notificaciones">Paso 1: Instalar el paquete NuGet para notificaciones&lt;/h2>
&lt;p>Agregar al proyecto el paquete:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Install-Package Microsoft.Windows.SDK.Contracts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Install-Package Microsoft.Toolkit.Uwp.Notifications
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto habilita la construcción de notificaciones toast con contenido enriquecido.&lt;/p>
&lt;h2 id="paso-2-enviar-una-notificación-toast-simple">Paso 2: Enviar una notificación toast simple&lt;/h2>
&lt;p>Agregar esta llamada en un evento de botón o al iniciar la app:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">new&lt;/span> &lt;span class="n">ToastContentBuilder&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">AddText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Recordatorio&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">AddText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;No olvides guardar tus cambios&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">Show&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto mostrará una notificación estándar en el Centro de Actividades.&lt;/p>
&lt;h2 id="paso-3-notificación-enriquecida-con-adaptive-card">Paso 3: Notificación enriquecida con Adaptive Card&lt;/h2>
&lt;p>Construir una tarjeta adaptativa (JSON):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">string&lt;/span> &lt;span class="n">adaptiveJson&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">@&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;&amp;#34;type&amp;#34;&amp;#34;: &amp;#34;&amp;#34;AdaptiveCard&amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;&amp;#34;version&amp;#34;&amp;#34;: &amp;#34;&amp;#34;1.5&amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;&amp;#34;body&amp;#34;&amp;#34;: [
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;&amp;#34;type&amp;#34;&amp;#34;: &amp;#34;&amp;#34;TextBlock&amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;&amp;#34;text&amp;#34;&amp;#34;: &amp;#34;&amp;#34;Actualización disponible&amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;&amp;#34;weight&amp;#34;&amp;#34;: &amp;#34;&amp;#34;Bolder&amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;&amp;#34;size&amp;#34;&amp;#34;: &amp;#34;&amp;#34;Medium&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> },
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;&amp;#34;type&amp;#34;&amp;#34;: &amp;#34;&amp;#34;TextBlock&amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;&amp;#34;text&amp;#34;&amp;#34;: &amp;#34;&amp;#34;La versión 1.5 ya está lista para instalar.&amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;&amp;#34;wrap&amp;#34;&amp;#34;: true
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> ],
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;&amp;#34;actions&amp;#34;&amp;#34;: [
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;&amp;#34;type&amp;#34;&amp;#34;: &amp;#34;&amp;#34;Action.OpenUrl&amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;&amp;#34;title&amp;#34;&amp;#34;: &amp;#34;&amp;#34;Actualizar&amp;#34;&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;&amp;#34;url&amp;#34;&amp;#34;: &amp;#34;&amp;#34;https://miapp.com/update&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> ]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">}&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">toastContent&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ToastContent&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Visual&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ToastVisual&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">BindingGeneric&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">ToastBindingGeneric&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Children&lt;/span> &lt;span class="p">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">new&lt;/span> &lt;span class="n">AdaptiveCardJsonContent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">adaptiveJson&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ToastNotificationManagerCompat&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CreateToastNotifier&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">Show&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">ToastNotification&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">toastContent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetXml&lt;/span>&lt;span class="p">()));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Este código muestra una notificación visualmente rica y con botón de acción.&lt;/p>
&lt;h2 id="paso-4-manejar-la-activación-de-la-notificación">Paso 4: Manejar la activación de la notificación&lt;/h2>
&lt;p>Al pulsar sobre la notificación, se puede invocar código personalizado.&lt;/p>
&lt;p>Registrar manejador en &lt;code>App.xaml.cs&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ToastNotificationManagerCompat&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">OnActivated&lt;/span> &lt;span class="p">+=&lt;/span> &lt;span class="n">toastArgs&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ToastArguments&lt;/span> &lt;span class="n">args&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">toastArgs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Argument&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Lógica según argumentos&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;abrirPanel&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">DispatcherQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TryEnqueue&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">new&lt;/span> &lt;span class="n">PanelWindow&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">Activate&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Para enviar argumentos desde la notificación:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="n">AddArgument&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;abrirPanel&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;true&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-5-notificaciones-push-via-canal-wns">Paso 5: Notificaciones push (via canal WNS)&lt;/h2>
&lt;h3 id="crear-canal">Crear canal&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">channel&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="n">PushNotificationChannelManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CreatePushNotificationChannelForApplicationAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Debug&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WriteLine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;URI canal: &amp;#34;&lt;/span> &lt;span class="p">+&lt;/span> &lt;span class="n">channel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Uri&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Este URI se registra en el servidor para enviar push desde un backend.&lt;/p>
&lt;h3 id="recibir-notificaciones-push">Recibir notificaciones push&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">channel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">PushNotificationReceived&lt;/span> &lt;span class="p">+=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Mostrar notificación o actualizar UI&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">mensaje&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">RawNotification&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Content&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto permite recibir actualizaciones incluso si la app está suspendida (con restricciones).&lt;/p>
&lt;h2 id="paso-6-permisos-y-manifiesto">Paso 6: Permisos y manifiesto&lt;/h2>
&lt;p>Asegurarse de declarar lo siguiente en el &lt;code>Package.appxmanifest&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;Extensions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:Extension&lt;/span> &lt;span class="na">Category=&lt;/span>&lt;span class="s">&amp;#34;windows.toastNotificationActivation&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:ToastNotificationActivation&lt;/span> &lt;span class="na">ToastActivatorCLSID=&lt;/span>&lt;span class="s">&amp;#34;YOUR-CLSID-HERE&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/uap:Extension&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/Extensions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Y registrar el activador COM. Esto requiere el uso de un componente activador como &lt;code>AppNotificationActivator&lt;/code>.&lt;/p>
&lt;h2 id="paso-7-ejemplo-completo-con-interacción">Paso 7: Ejemplo completo con interacción&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">new&lt;/span> &lt;span class="n">ToastContentBuilder&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">AddArgument&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;abrirPanel&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">AddText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Nuevo mensaje recibido&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">AddText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Haz clic para abrir el panel de control&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">AddButton&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">ToastButton&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">SetContent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Abrir ahora&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">AddArgument&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;abrirPanel&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">Show&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Y en el manejador:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;action&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">==&lt;/span> &lt;span class="s">&amp;#34;abrirPanel&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">DispatcherQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">TryEnqueue&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">new&lt;/span> &lt;span class="n">PanelWindow&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">Activate&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>No abusar de las notificaciones para evitar fatiga del usuario&lt;/li>
&lt;li>Personalizar con íconos, logos e identidad visual&lt;/li>
&lt;li>Combinar con lógica de actividad para mostrar solo cuando el usuario está inactivo&lt;/li>
&lt;li>Permitir al usuario desactivar ciertos tipos de notificaciones&lt;/li>
&lt;li>Usar telemetría para medir tasa de clics y efectividad&lt;/li>
&lt;/ul>
&lt;h2 id="casos-de-uso">Casos de uso&lt;/h2>
&lt;ul>
&lt;li>Alertas de sistema o monitoreo en segundo plano&lt;/li>
&lt;li>Confirmaciones de procesos terminados&lt;/li>
&lt;li>Acciones rápidas desde el Centro de Actividades&lt;/li>
&lt;li>Integración con procesos push desde un backend o IoT&lt;/li>
&lt;li>UX reactiva sin abrir la ventana principal&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>La &lt;strong>API&lt;/strong> de notificaciones nativas de &lt;strong>Windows&lt;/strong>, junto con las Adaptive Cards y el soporte push, brinda una poderosa plataforma para interactuar con el usuario de manera contextual y no intrusiva. Usando &lt;strong>WinUI 3&lt;/strong> y &lt;strong>Windows App SDK&lt;/strong>, es posible ofrecer notificaciones enriquecidas, dinámicas y conectadas, reforzando el ciclo de comunicación entre la aplicación y el usuario.&lt;/p>
&lt;p>La integración adecuada de notificaciones no solo mejora la experiencia de usuario, sino que también posiciona a la aplicación como una parte activa del ecosistema Windows moderno.&lt;/p></description></item><item><title>Creación y gestión de accesos directos dinámicos en Start Menu y Taskbar</title><link>https://cmas.dev/posts/2024-12-13-winapp-dynamic-direct-access/</link><pubDate>Fri, 13 Dec 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-12-13-winapp-dynamic-direct-access/</guid><description>&lt;p>Una de las capacidades distintivas de las apps modernas en &lt;strong>Windows&lt;/strong> es la posibilidad de integrarse dinámicamente con la experiencia del sistema operativo. Esto incluye la creación de accesos directos personalizados en el menú de inicio (Start Menu), así como la integración con la barra de tareas (Taskbar), ofreciendo accesos rápidos a funciones internas de la aplicación.&lt;/p>
&lt;p>Gracias a &lt;strong>Windows App SDK&lt;/strong>, las apps desarrolladas con &lt;strong>WinUI 3&lt;/strong> pueden programáticamente crear y administrar accesos directos sin depender de métodos antiguos como acceso directo manual o scripts externos. Este artículo explora cómo crear accesos dinámicos con metadatos enriquecidos y cómo extender su funcionalidad mediante Jump Lists y pinning automático.&lt;/p>
&lt;h2 id="requisitos-previos">Requisitos previos&lt;/h2>
&lt;ul>
&lt;li>Windows 11&lt;/li>
&lt;li>Visual Studio 2022+&lt;/li>
&lt;li>Proyecto WinUI 3 empaquetado (MSIX) con Windows App SDK&lt;/li>
&lt;li>Conocimiento de archivos &lt;code>.lnk&lt;/code>, URIs internos y asociaciones de comandos&lt;/li>
&lt;/ul>
&lt;h2 id="escenario">Escenario&lt;/h2>
&lt;p>Una app de escritorio moderna llamada &amp;ldquo;NoteBoard&amp;rdquo; permite a los usuarios crear notas rápidas. El objetivo es ofrecer:&lt;/p>
&lt;ul>
&lt;li>Un acceso directo al menú inicio con el icono de la app&lt;/li>
&lt;li>Una opción adicional para crear una nueva nota desde la Jump List&lt;/li>
&lt;li>Pin automático a la barra de tareas al primer lanzamiento&lt;/li>
&lt;/ul>
&lt;h2 id="paso-1-configuración-de-acceso-directo-en-el-manifiesto-msix">Paso 1: Configuración de acceso directo en el manifiesto MSIX&lt;/h2>
&lt;p>Abrir el archivo &lt;code>Package.appxmanifest&lt;/code> en modo de texto y agregar la siguiente declaración dentro de &lt;code>&amp;lt;Applications&amp;gt;&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;Extensions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:Extension&lt;/span> &lt;span class="na">Category=&lt;/span>&lt;span class="s">&amp;#34;windows.appExecutionAlias&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:AppExecutionAlias&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:ExecutionAlias&lt;/span> &lt;span class="na">Alias=&lt;/span>&lt;span class="s">&amp;#34;noteboard.exe&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/uap:AppExecutionAlias&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/uap:Extension&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/Extensions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto crea un alias ejecutable que puede ser llamado desde consola (&lt;code>noteboard.exe&lt;/code>) y ayuda en el pin dinámico.&lt;/p>
&lt;h2 id="paso-2-crear-uri-handlers-para-acciones-internas">Paso 2: Crear URI handlers para acciones internas&lt;/h2>
&lt;p>Declarar un protocolo personalizado en el manifiesto:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;uap:Extension&lt;/span> &lt;span class="na">Category=&lt;/span>&lt;span class="s">&amp;#34;windows.protocol&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:Protocol&lt;/span> &lt;span class="na">Name=&lt;/span>&lt;span class="s">&amp;#34;noteboard&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;uap:DisplayName&amp;gt;&lt;/span>NoteBoard Protocol&lt;span class="nt">&amp;lt;/uap:DisplayName&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/uap:Protocol&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/uap:Extension&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Y en código (ej. en &lt;code>App.xaml.cs&lt;/code>), capturar el URI:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">protected&lt;/span> &lt;span class="kd">override&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">OnActivated&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IActivatedEventArgs&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">args&lt;/span> &lt;span class="k">is&lt;/span> &lt;span class="n">ProtocolActivatedEventArgs&lt;/span> &lt;span class="n">protocolArgs&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">uri&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">protocolArgs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Uri&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">uri&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Host&lt;/span> &lt;span class="p">==&lt;/span> &lt;span class="s">&amp;#34;newnote&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Abrir ventana para nueva nota&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">new&lt;/span> &lt;span class="n">MainWindow&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">Activate&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto permite abrir la app con comandos como &lt;code>noteboard://newnote&lt;/code>.&lt;/p>
&lt;h2 id="paso-3-añadir-accesos-rápidos-a-la-jump-list">Paso 3: Añadir accesos rápidos a la Jump List&lt;/h2>
&lt;p>Usar la clase &lt;code>JumpList&lt;/code> para registrar tareas adicionales:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="nn">Windows.UI.StartScreen&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span> &lt;span class="kd">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">ConfigurarJumpListAsync&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">await&lt;/span> &lt;span class="n">JumpList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">IsSupportedAsync&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">jumpList&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="n">JumpList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">LoadCurrentAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">jumpList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Items&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Clear&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">item&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">JumpListItem&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CreateWithArguments&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;noteboard://newnote&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Nueva Nota&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">item&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Description&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;Crear una nueva nota rápida&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">item&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Logo&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Uri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ms-appx:///Assets/plus-icon.png&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">item&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GroupName&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;Accesos rápidos&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">jumpList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Items&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">jumpList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SaveAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Invocar &lt;code>ConfigurarJumpListAsync()&lt;/code> en el primer inicio o durante la inicialización de la app.&lt;/p>
&lt;h2 id="paso-4-pin-a-la-barra-de-tareas-taskbar">Paso 4: Pin a la barra de tareas (Taskbar)&lt;/h2>
&lt;p>Este paso es más delicado. El pinning automático no está oficialmente soportado por la API pública, pero se puede sugerir mediante atajos:&lt;/p>
&lt;ul>
&lt;li>Crear un archivo &lt;code>.lnk&lt;/code> con destino a &lt;code>noteboard.exe&lt;/code>&lt;/li>
&lt;li>Usar &lt;code>ShellLink&lt;/code> con interop para crear el acceso&lt;/li>
&lt;li>Invitar al usuario a &amp;ldquo;Pin to taskbar&amp;rdquo; mediante UI o notificación&lt;/li>
&lt;/ul>
&lt;p>Ejemplo de creación del acceso directo vía &lt;code>IShellLink&lt;/code> (requiere COM interop):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Usar Shell32 o empaquetar un ejecutable auxiliar que cree el pin&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Alternativamente, al iniciar la app por primera vez, se puede mostrar una notificación:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">new&lt;/span> &lt;span class="n">ToastContentBuilder&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">AddText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;¿Usás NoteBoard frecuentemente?&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">AddText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Anclala a la barra de tareas para acceder más rápido.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">AddButton&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">ToastButton&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Anclar&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;pin-taskbar&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">Show&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>En el manejador de activación, abrir el menú contextual del acceso directo.&lt;/p>
&lt;h2 id="paso-5-verificar-resultado-en-sistema">Paso 5: Verificar resultado en sistema&lt;/h2>
&lt;p>Después de correr la app:&lt;/p>
&lt;ul>
&lt;li>Presionar la tecla Windows y escribir &amp;ldquo;NoteBoard&amp;rdquo;&lt;/li>
&lt;li>El acceso directo aparecerá con el ícono personalizado&lt;/li>
&lt;li>Clic derecho mostrará la Jump List con &amp;ldquo;Nueva Nota&amp;rdquo;&lt;/li>
&lt;li>Ejecutar desde PowerShell: &lt;code>Start-Process &amp;quot;noteboard://newnote&amp;quot;&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Usar logos diferenciados para cada JumpListItem&lt;/li>
&lt;li>No exceder los 5 accesos rápidos recomendados por Microsoft&lt;/li>
&lt;li>Localizar títulos y descripciones si la app es multilenguaje&lt;/li>
&lt;li>Guardar estado de pinning para evitar duplicados o repeticiones&lt;/li>
&lt;/ul>
&lt;h2 id="casos-de-uso">Casos de uso&lt;/h2>
&lt;ul>
&lt;li>Crear accesos directos para flujos frecuentes (crear nota, abrir calendario, iniciar reunión)&lt;/li>
&lt;li>Acciones rápidas en apps de productividad, CRM, helpdesk&lt;/li>
&lt;li>Activación de comandos por voz o scripts (via protocolo personalizado)&lt;/li>
&lt;li>Extensiones de UX sin necesidad de abrir UI completa&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Las apps modernas en &lt;strong>Windows&lt;/strong> pueden integrarse profundamente con el sistema operativo a través de accesos directos dinámicos, Jump Lists, protocolos personalizados y atajos enriquecidos. Usando &lt;strong>Windows App SDK&lt;/strong>, es posible ofrecer al usuario una experiencia nativa y fluida desde el inicio, mejorando la productividad y facilitando el acceso a las funcionalidades clave de la aplicación desde el menú de inicio o la barra de tareas.&lt;/p>
&lt;p>Esta integración es una forma efectiva de mejorar la adopción y visibilidad de una app, ofreciendo puntos de entrada estratégicos que van más allá de la simple ejecución principal.&lt;/p></description></item><item><title>Acceso a sensores del sistema desde WinUI 3 con Windows.Devices.Sensors</title><link>https://cmas.dev/posts/2024-12-06-winui3-sensors/</link><pubDate>Fri, 06 Dec 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-12-06-winui3-sensors/</guid><description>&lt;p>Las apps modernas desarrolladas con &lt;strong>WinUI 3&lt;/strong> y &lt;strong>Windows App SDK&lt;/strong> pueden aprovechar una amplia gama de sensores disponibles en el sistema operativo Windows. Esto incluye acelerómetro, giroscopio, brújula, inclinación, orientación y sensores de luz ambiental. Estas capacidades permiten que una app de escritorio moderna reaccione al entorno físico, lo cual es especialmente útil en dispositivos portátiles como tablets, convertibles, laptops o incluso PCs todo-en-uno con sensores.&lt;/p>
&lt;p>En este artículo se explora paso a paso cómo acceder a sensores desde una aplicación &lt;strong>WinUI 3&lt;/strong> utilizando la API &lt;code>Windows.Devices.Sensors&lt;/code>, incluyendo el manejo de eventos, actualización de UI en tiempo real y recomendaciones de uso avanzado para escenarios como logging, visualización de datos y adaptación dinámica de la interfaz.&lt;/p>
&lt;h2 id="requisitos-previos">Requisitos previos&lt;/h2>
&lt;p>Para este tutorial se asume que ya está configurado un entorno de desarrollo con:&lt;/p>
&lt;ul>
&lt;li>Windows 11&lt;/li>
&lt;li>Visual Studio 2022 o superior&lt;/li>
&lt;li>Windows App SDK 1.3+ instalado&lt;/li>
&lt;li>Proyecto WinUI 3 en C# (aplicación empaquetada con MSIX)&lt;/li>
&lt;/ul>
&lt;p>También es importante habilitar las capacidades necesarias en el manifiesto de la app si se va a distribuir. Para pruebas locales, basta con permisos de ejecución.&lt;/p>
&lt;h2 id="paso-1-crear-un-nuevo-proyecto-winui-3">Paso 1: Crear un nuevo proyecto WinUI 3&lt;/h2>
&lt;ol>
&lt;li>Abrir Visual Studio y crear un nuevo proyecto.&lt;/li>
&lt;li>Seleccionar &lt;strong>Blank App, Packaged (WinUI 3 in Desktop)&lt;/strong>.&lt;/li>
&lt;li>Asignar nombre: &lt;code>SensorReaderApp&lt;/code>&lt;/li>
&lt;li>Confirmar el uso de Windows App SDK y arquitectura x64.&lt;/li>
&lt;/ol>
&lt;p>Esto generará la estructura básica con &lt;code>MainWindow.xaml&lt;/code> y &lt;code>App.xaml&lt;/code>.&lt;/p>
&lt;h2 id="paso-2-agregar-namespaces-y-referencias">Paso 2: Agregar namespaces y referencias&lt;/h2>
&lt;p>Agregar las siguientes directivas al archivo &lt;code>MainWindow.xaml.cs&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="nn">Windows.Devices.Sensors&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="nn">Microsoft.UI.Xaml&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="nn">Microsoft.UI.Xaml.Controls&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="nn">Microsoft.UI.Dispatching&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Estas son necesarias para acceder a sensores, actualizar UI y trabajar con el hilo de UI en WinUI 3.&lt;/p>
&lt;h2 id="paso-3-declarar-sensores-en-la-clase-mainwindow">Paso 3: Declarar sensores en la clase MainWindow&lt;/h2>
&lt;p>En la clase &lt;code>MainWindow&lt;/code>, declarar los sensores que se desean utilizar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">private&lt;/span> &lt;span class="n">Accelerometer&lt;/span> &lt;span class="n">_accelerometer&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">private&lt;/span> &lt;span class="n">Gyrometer&lt;/span> &lt;span class="n">_gyrometer&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">private&lt;/span> &lt;span class="n">Compass&lt;/span> &lt;span class="n">_compass&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">private&lt;/span> &lt;span class="n">OrientationSensor&lt;/span> &lt;span class="n">_orientationSensor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">private&lt;/span> &lt;span class="n">LightSensor&lt;/span> &lt;span class="n">_lightSensor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>En el constructor, inicializar los sensores y registrar los eventos:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span> &lt;span class="n">MainWindow&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">InitializeComponent&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_accelerometer&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">Accelerometer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetDefault&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_gyrometer&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">Gyrometer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetDefault&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_compass&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">Compass&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetDefault&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_orientationSensor&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">OrientationSensor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetDefault&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_lightSensor&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">LightSensor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetDefault&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">_accelerometer&lt;/span> &lt;span class="p">!=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_accelerometer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ReadingChanged&lt;/span> &lt;span class="p">+=&lt;/span> &lt;span class="n">Accelerometer_ReadingChanged&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">_gyrometer&lt;/span> &lt;span class="p">!=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_gyrometer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ReadingChanged&lt;/span> &lt;span class="p">+=&lt;/span> &lt;span class="n">Gyrometer_ReadingChanged&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">_compass&lt;/span> &lt;span class="p">!=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_compass&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ReadingChanged&lt;/span> &lt;span class="p">+=&lt;/span> &lt;span class="n">Compass_ReadingChanged&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">_orientationSensor&lt;/span> &lt;span class="p">!=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_orientationSensor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ReadingChanged&lt;/span> &lt;span class="p">+=&lt;/span> &lt;span class="n">OrientationSensor_ReadingChanged&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">_lightSensor&lt;/span> &lt;span class="p">!=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_lightSensor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ReadingChanged&lt;/span> &lt;span class="p">+=&lt;/span> &lt;span class="n">LightSensor_ReadingChanged&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-4-manejar-los-eventos-de-lectura">Paso 4: Manejar los eventos de lectura&lt;/h2>
&lt;p>Cada evento entrega una estructura de datos con las lecturas. Por ejemplo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">private&lt;/span> &lt;span class="kd">async&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">Accelerometer_ReadingChanged&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Accelerometer&lt;/span> &lt;span class="n">sender&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">AccelerometerReadingChangedEventArgs&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">reading&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Reading&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">DispatcherQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">EnqueueAsync&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">txtAccel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">$&amp;#34;Accel X: {reading.AccelerationX:F2}, Y: {reading.AccelerationY:F2}, Z: {reading.AccelerationZ:F2}&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Repetir para los demás sensores. Ejemplo para el giroscopio:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">private&lt;/span> &lt;span class="kd">async&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">Gyrometer_ReadingChanged&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Gyrometer&lt;/span> &lt;span class="n">sender&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GyrometerReadingChangedEventArgs&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">reading&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Reading&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">DispatcherQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">EnqueueAsync&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">txtGyro&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">$&amp;#34;Gyro X: {reading.AngularVelocityX:F2}, Y: {reading.AngularVelocityY:F2}, Z: {reading.AngularVelocityZ:F2}&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Y para la orientación:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">private&lt;/span> &lt;span class="kd">async&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">OrientationSensor_ReadingChanged&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">OrientationSensor&lt;/span> &lt;span class="n">sender&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">OrientationSensorReadingChangedEventArgs&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">quaternion&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Reading&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Quaternion&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">DispatcherQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">EnqueueAsync&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">txtOrientation&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">$&amp;#34;Quaternion: X={quaternion.X:F2}, Y={quaternion.Y:F2}, Z={quaternion.Z:F2}, W={quaternion.W:F2}&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-5-diseño-de-la-interfaz-de-usuario">Paso 5: Diseño de la interfaz de usuario&lt;/h2>
&lt;p>En &lt;code>MainWindow.xaml&lt;/code>, agregar un StackPanel con TextBlocks:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;StackPanel&lt;/span> &lt;span class="na">Spacing=&lt;/span>&lt;span class="s">&amp;#34;10&amp;#34;&lt;/span> &lt;span class="na">Padding=&lt;/span>&lt;span class="s">&amp;#34;20&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;TextBlock&lt;/span> &lt;span class="na">x:Name=&lt;/span>&lt;span class="s">&amp;#34;txtAccel&amp;#34;&lt;/span> &lt;span class="na">FontSize=&lt;/span>&lt;span class="s">&amp;#34;14&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;TextBlock&lt;/span> &lt;span class="na">x:Name=&lt;/span>&lt;span class="s">&amp;#34;txtGyro&amp;#34;&lt;/span> &lt;span class="na">FontSize=&lt;/span>&lt;span class="s">&amp;#34;14&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;TextBlock&lt;/span> &lt;span class="na">x:Name=&lt;/span>&lt;span class="s">&amp;#34;txtCompass&amp;#34;&lt;/span> &lt;span class="na">FontSize=&lt;/span>&lt;span class="s">&amp;#34;14&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;TextBlock&lt;/span> &lt;span class="na">x:Name=&lt;/span>&lt;span class="s">&amp;#34;txtOrientation&amp;#34;&lt;/span> &lt;span class="na">FontSize=&lt;/span>&lt;span class="s">&amp;#34;14&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;TextBlock&lt;/span> &lt;span class="na">x:Name=&lt;/span>&lt;span class="s">&amp;#34;txtLight&amp;#34;&lt;/span> &lt;span class="na">FontSize=&lt;/span>&lt;span class="s">&amp;#34;14&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/StackPanel&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto mostrará las lecturas en tiempo real cada vez que cambien.&lt;/p>
&lt;h2 id="paso-6-consideraciones-de-rendimiento-y-energía">Paso 6: Consideraciones de rendimiento y energía&lt;/h2>
&lt;p>Los sensores pueden consumir energía. Se recomienda:&lt;/p>
&lt;ul>
&lt;li>Activar sensores solo cuando se necesita&lt;/li>
&lt;li>Detener sensores en &lt;code>OnSuspending&lt;/code> o al minimizar&lt;/li>
&lt;li>Utilizar &lt;code>ReportInterval&lt;/code> para reducir frecuencia de actualización&lt;/li>
&lt;/ul>
&lt;p>Ejemplo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">_accelerometer&lt;/span> &lt;span class="p">!=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_accelerometer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ReportInterval&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">500&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// milisegundos&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-7-aplicaciones-reales-y-escenarios-de-uso">Paso 7: Aplicaciones reales y escenarios de uso&lt;/h2>
&lt;p>Este tipo de integración es útil para:&lt;/p>
&lt;ul>
&lt;li>Apps de visualización de entorno (IoT, educación, ciencia)&lt;/li>
&lt;li>Adaptación de UI a inclinación o orientación&lt;/li>
&lt;li>Logging de movimiento para auditorías&lt;/li>
&lt;li>Control de juegos, cámaras o navegación mediante sensores&lt;/li>
&lt;li>Accesibilidad aumentada y experiencia context-aware&lt;/li>
&lt;/ul>
&lt;h2 id="paso-8-diagnóstico-de-compatibilidad">Paso 8: Diagnóstico de compatibilidad&lt;/h2>
&lt;p>No todos los equipos tienen todos los sensores. Se debe validar su disponibilidad:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">_accelerometer&lt;/span> &lt;span class="p">==&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">txtAccel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;Acelerómetro no disponible&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto mejora la experiencia del usuario final.&lt;/p>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Acceder a sensores desde una aplicación &lt;strong>WinUI 3&lt;/strong> es completamente posible y está bien soportado por Windows App SDK mediante las APIs de &lt;code>Windows.Devices.Sensors&lt;/code>. Con unos pocos pasos se pueden integrar funcionalidades contextuales que elevan la experiencia del usuario en dispositivos modernos. Ya sea para orientación, lectura de luz, movimiento o estado físico del dispositivo, los sensores ofrecen un puente natural entre hardware y software en el desarrollo de apps modernas para &lt;strong>Windows&lt;/strong>.&lt;/p>
&lt;p>Esta capacidad posiciona a WinUI 3 como una plataforma no solo estética, sino también funcional, lista para aprovechar al máximo la interacción con el sistema operativo y el hardware disponible en equipos modernos.&lt;/p></description></item><item><title>WSL3, integración con Windows AI y más allá</title><link>https://cmas.dev/posts/2024-11-29-wsl3-futuro/</link><pubDate>Fri, 29 Nov 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-11-29-wsl3-futuro/</guid><description>&lt;p>Desde su introducción, WSL (Windows Subsystem for Linux) ha transformado el desarrollo de software en Windows al proporcionar un entorno Linux completo, sin máquinas virtuales pesadas ni particiones duales. Con WSL2 se dio un salto significativo en rendimiento y compatibilidad al integrar un kernel Linux real y soporte para GPU. Ahora, las miradas están puestas en &lt;strong>WSL3&lt;/strong>, la convergencia con herramientas de inteligencia artificial y la evolución de entornos locales y distribuidos.&lt;/p>
&lt;p>Este artículo explora las posibles &lt;strong>tendencias futuras&lt;/strong> en el ecosistema WSL, su integración con tecnologías emergentes de Microsoft como Windows AI, DevHome, Azure Arc, y las proyecciones para flujos de trabajo híbridos en la próxima década.&lt;/p>
&lt;h2 id="wsl3-qué-podemos-esperar">WSL3: ¿Qué podemos esperar?&lt;/h2>
&lt;p>Aunque Microsoft no ha anunciado formalmente una versión WSL3, existen patrones y desarrollos que permiten anticipar:&lt;/p>
&lt;h3 id="1-integración-total-con-dev-drive-y-devhome">1. Integración total con Dev Drive y DevHome&lt;/h3>
&lt;p>WSL3 podría integrarse de forma nativa con las herramientas de productividad para desarrolladores anunciadas en Windows 11:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Dev Drive&lt;/strong>: almacenamiento optimizado para código y entornos de desarrollo.&lt;/li>
&lt;li>&lt;strong>DevHome&lt;/strong>: centro de configuración para flujos personalizados.&lt;/li>
&lt;/ul>
&lt;p>Esto implica acceso más rápido a archivos, menos latencia y mejor soporte para múltiples entornos paralelos.&lt;/p>
&lt;h3 id="2-contenedores-integrados-por-defecto">2. Contenedores integrados por defecto&lt;/h3>
&lt;p>WSL2 ya soporta contenedores con Docker. WSL3 podría incorporar:&lt;/p>
&lt;ul>
&lt;li>Soporte nativo para &lt;strong>BuildKit&lt;/strong>, OCI y Podman&lt;/li>
&lt;li>API directa para &lt;strong>containerd&lt;/strong> sin Docker Desktop&lt;/li>
&lt;li>Gestión unificada de entornos (devcontainers, containers, distros)&lt;/li>
&lt;/ul>
&lt;h3 id="3-systemd-completo--perfiles-extendidos">3. Systemd completo + perfiles extendidos&lt;/h3>
&lt;p>La llegada de systemd en WSL2 fue un hito. WSL3 podría ofrecer:&lt;/p>
&lt;ul>
&lt;li>Perfiles de distro (web, data science, AI, CI/CD)&lt;/li>
&lt;li>Autoinicio de servicios persistentes&lt;/li>
&lt;li>Compatibilidad completa con &lt;code>journalctl&lt;/code>, &lt;code>timers&lt;/code>, &lt;code>firewalld&lt;/code>, etc.&lt;/li>
&lt;/ul>
&lt;h2 id="integración-con-windows-ai">Integración con Windows AI&lt;/h2>
&lt;p>Windows 11 ya incorpora funciones de IA en el sistema operativo. Algunas líneas futuras podrían incluir:&lt;/p>
&lt;h3 id="1-acceso-a-npu-desde-wsl">1. Acceso a NPU desde WSL&lt;/h3>
&lt;ul>
&lt;li>Soporte para unidades de procesamiento neuronal (NPUs) desde Linux&lt;/li>
&lt;li>Frameworks como ONNX Runtime, TensorFlow Lite acelerados por hardware local&lt;/li>
&lt;/ul>
&lt;h3 id="2-inferencia-híbrida-localnube">2. Inferencia híbrida local/nube&lt;/h3>
&lt;ul>
&lt;li>Uso de Azure AI Services desde Bash/WSL&lt;/li>
&lt;li>Aceleración local con fallback a Azure&lt;/li>
&lt;li>SDKs de IA integrados por defecto en distros WSL oficiales&lt;/li>
&lt;/ul>
&lt;h3 id="3-ai-copilots-para-wsl">3. AI copilots para WSL&lt;/h3>
&lt;ul>
&lt;li>Ayudantes basados en modelos de lenguaje para comandos Bash, optimización de scripts y depuración en tiempo real&lt;/li>
&lt;/ul>
&lt;h2 id="hacia-una-arquitectura-unificada-beyond-wsl">Hacia una arquitectura unificada: Beyond WSL&lt;/h2>
&lt;p>En lugar de mantener dos mundos separados, Microsoft podría apostar a:&lt;/p>
&lt;h3 id="1-subsistema-linux-como-parte-de-windows-core">1. Subsistema Linux como parte de Windows Core&lt;/h3>
&lt;ul>
&lt;li>Instalación sin necesidad de terminal&lt;/li>
&lt;li>WSL como &amp;ldquo;modo Linux&amp;rdquo; en Windows&lt;/li>
&lt;li>Interoperabilidad total de procesos, archivos, sockets&lt;/li>
&lt;/ul>
&lt;h3 id="2-integración-con-azure-arc">2. Integración con Azure Arc&lt;/h3>
&lt;ul>
&lt;li>Exponer entornos WSL2 como recursos gestionados en Azure&lt;/li>
&lt;li>Telemetría, políticas y seguridad centralizadas&lt;/li>
&lt;li>Ejecutar WSL desde Edge o dispositivos ARM&lt;/li>
&lt;/ul>
&lt;h3 id="3-wsl-en-dispositivos-móviles-y-edge">3. WSL en dispositivos móviles y edge&lt;/h3>
&lt;ul>
&lt;li>Extensiones ligeras de WSL corriendo en Surface, HoloLens, IoT&lt;/li>
&lt;li>Flujos DevOps offline-local basados en contenedores y WSL&lt;/li>
&lt;/ul>
&lt;h2 id="prepararse-para-el-futuro">Prepararse para el futuro&lt;/h2>
&lt;h3 id="qué-puede-hacer-un-desarrollador-hoy">¿Qué puede hacer un desarrollador hoy?&lt;/h3>
&lt;ul>
&lt;li>Adoptar WSL2 como base de desarrollo principal&lt;/li>
&lt;li>Usar Dev Containers para garantizar portabilidad&lt;/li>
&lt;li>Automatizar entornos con GitHub Codespaces + WSL&lt;/li>
&lt;li>Familiarizarse con CLI de Azure, Windows AI, Winget y DevHome&lt;/li>
&lt;li>Seguir los proyectos open source de Microsoft relacionados: WSL, terminal, AI SDKs&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>El ecosistema WSL evoluciona rápidamente, y su futura versión (WSL3 o equivalente) promete una experiencia aún más integrada, potente y preparada para la IA y el desarrollo distribuido. La convergencia entre Linux, Windows y la nube está cada vez más cerca, y WSL será sin duda una pieza clave en esa arquitectura del futuro.&lt;/p>
&lt;p>Los desarrolladores que dominen hoy las herramientas y flujos modernos sobre WSL2 estarán listos para liderar los entornos del mañana.&lt;/p></description></item><item><title>How To: Ejecución de microservicios híbridos en WSL2 + Windows</title><link>https://cmas.dev/posts/2024-11-22-wsl2-hybrid-microservices/</link><pubDate>Fri, 22 Nov 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-11-22-wsl2-hybrid-microservices/</guid><description>&lt;p>Uno de los escenarios más potentes que habilita WSL2 es la capacidad de ejecutar arquitecturas &lt;strong>híbridas de microservicios&lt;/strong> donde algunos componentes corren sobre Linux (WSL2) y otros directamente sobre Windows. Esto permite integrar aplicaciones legadas, herramientas de escritorio, procesos en contenedores y servicios distribuidos desde una sola estación de trabajo, ideal para desarrollo, testing y validación de arquitecturas modernas.&lt;/p>
&lt;p>Este artículo presenta un caso real donde se ejecutan múltiples microservicios en ambos entornos, aprovechando la interoperabilidad de red y archivos entre Windows y WSL2.&lt;/p>
&lt;h2 id="objetivo">Objetivo&lt;/h2>
&lt;ul>
&lt;li>Ejecutar una arquitectura basada en microservicios con:
&lt;ul>
&lt;li>Backend y base de datos en WSL2 (Linux)&lt;/li>
&lt;li>Servicio de autenticación en contenedor Docker (Linux)&lt;/li>
&lt;li>Cliente de escritorio en Windows (Electron app simulada)&lt;/li>
&lt;li>Comunicación entre servicios vía localhost&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="paso-1-preparar-backend-y-base-de-datos-en-wsl2">Paso 1: Preparar backend y base de datos en WSL2&lt;/h2>
&lt;p>Desde WSL2:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir -p ~/proyectos/microservicios/backend
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ~/proyectos/microservicios/backend
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm init -y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm install express pg dotenv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Crear &lt;code>.env&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-env" data-lang="env">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">PORT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">5001&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">DB_USER&lt;/span>&lt;span class="o">=&lt;/span>dev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">DB_PASSWORD&lt;/span>&lt;span class="o">=&lt;/span>clave123
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">DB_HOST&lt;/span>&lt;span class="o">=&lt;/span>localhost
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">DB_PORT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">5432&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">DB_NAME&lt;/span>&lt;span class="o">=&lt;/span>ms_backend
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Configurar servicio básico en &lt;code>index.js&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">express&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;express&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">express&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/api/data&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">message&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;Hello from backend&amp;#34;&lt;/span> &lt;span class="p">}));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">listen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">env&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PORT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Backend WSL2 listo&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecutar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">node index.js
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-2-servicio-de-autenticación-en-docker">Paso 2: Servicio de autenticación en Docker&lt;/h2>
&lt;p>Crear directorio &lt;code>auth-service/&lt;/code> con un simple servidor Node.js en Docker.&lt;/p>
&lt;p>&lt;code>Dockerfile&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Dockerfile" data-lang="Dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> node:18&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> /app&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> . .&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> npm install&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;node&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;auth.js&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>auth.js&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">express&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;express&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">express&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/auth&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">token&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;abc123&amp;#34;&lt;/span> &lt;span class="p">}));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">listen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Servicio Auth en contenedor&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Construir y ejecutar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker build -t auth-service .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run -d --name auth --network host auth-service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-3-cliente-de-escritorio-en-windows">Paso 3: Cliente de escritorio en Windows&lt;/h2>
&lt;p>Desde Windows, crear una aplicación simulada con &lt;code>index.html&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Microservicio Híbrido&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">button&lt;/span> &lt;span class="na">onclick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;getData()&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Cargar datos&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">pre&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;output&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">pre&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">getData&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">res1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;http://localhost:5001/api/data&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">json1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">res1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">res2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;http://localhost:4000/auth&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">json2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">res2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;output&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">textContent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stringify&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">json1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">json2&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Abrir en navegador (&lt;code>file:///C:/ruta/a/index.html&lt;/code>).&lt;/p>
&lt;h2 id="paso-4-comunicación-entre-entornos">Paso 4: Comunicación entre entornos&lt;/h2>
&lt;p>Gracias al puente virtual de red que crea WSL2, los servicios escuchando en &lt;code>0.0.0.0&lt;/code> o &lt;code>localhost&lt;/code> dentro de WSL2 o Docker con &lt;code>--network host&lt;/code> son accesibles desde Windows.&lt;/p>
&lt;p>Verificar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">curl &lt;/span>&lt;span class="n">http&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="p">//&lt;/span>&lt;span class="n">localhost&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mf">5001&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">api&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">curl &lt;/span>&lt;span class="n">http&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="p">//&lt;/span>&lt;span class="n">localhost&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mf">4000&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">auth&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-5-monitoreo-y-orquestación-opcional">Paso 5: Monitoreo y orquestación opcional&lt;/h2>
&lt;p>Desde WSL2 o Windows:&lt;/p>
&lt;ul>
&lt;li>Monitorear contenedores con &lt;code>docker ps&lt;/code>, &lt;code>docker logs auth&lt;/code>&lt;/li>
&lt;li>Usar &lt;code>Postman&lt;/code> o &lt;code>curl&lt;/code> para validar endpoints&lt;/li>
&lt;li>Gestionar servicios con &lt;code>taskkill&lt;/code> (Windows) y &lt;code>kill&lt;/code> (Linux)&lt;/li>
&lt;/ul>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Usar &lt;code>.env&lt;/code> y &lt;code>.env.example&lt;/code> para configurar servicios&lt;/li>
&lt;li>Automatizar inicio de servicios con scripts Bash y PowerShell&lt;/li>
&lt;li>Mantener contenedores ligeros y separados por función&lt;/li>
&lt;li>Verificar puertos en uso para evitar conflictos (&lt;code>netstat -an&lt;/code>)&lt;/li>
&lt;li>Versionar cada microservicio en su propio repositorio si es necesario&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Con WSL2 y la interoperabilidad de red de Windows, es posible ejecutar arquitecturas híbridas reales con múltiples microservicios distribuidos en Linux y Windows desde una misma máquina. Esto permite validar integración, rendimiento, y colaboración entre equipos sin depender de infraestructura externa o entornos cloud.&lt;/p></description></item><item><title>How To: Desarrollo fullstack con WSL2 y PostgreSQL</title><link>https://cmas.dev/posts/2024-11-07-wsl2-fullstack-dev/</link><pubDate>Thu, 07 Nov 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-11-07-wsl2-fullstack-dev/</guid><description>&lt;p>WSL2 permite desarrollar aplicaciones backend completas desde un entorno Linux real sobre Windows, facilitando el uso de tecnologías como &lt;strong>Node.js&lt;/strong>, &lt;strong>Express&lt;/strong>, &lt;strong>PostgreSQL&lt;/strong> y herramientas modernas de frontend como &lt;strong>React&lt;/strong> o &lt;strong>Vue&lt;/strong>. Este caso real describe paso a paso cómo montar un entorno fullstack funcional, productivo y reproducible usando WSL2, PostgreSQL y herramientas de desarrollo frontend y backend.&lt;/p>
&lt;h2 id="objetivo">Objetivo&lt;/h2>
&lt;p>Construir y ejecutar una API REST con Express y PostgreSQL desde WSL2, accesible desde Windows y conectada a un cliente frontend moderno (React). Todo funcionando de forma local, con persistencia y debugging habilitado.&lt;/p>
&lt;h2 id="paso-1-preparar-entorno-base-en-wsl2">Paso 1: Preparar entorno base en WSL2&lt;/h2>
&lt;h3 id="crear-proyecto-y-entorno-de-trabajo">Crear proyecto y entorno de trabajo&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir ~/proyectos/fullstack-wsl2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ~/proyectos/fullstack-wsl2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Instalar dependencias comunes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install -y nodejs npm postgresql postgresql-contrib
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verificar PostgreSQL:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">psql --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verificar Node.js:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">node -v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm -v
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-2-configurar-base-de-datos-postgresql">Paso 2: Configurar base de datos PostgreSQL&lt;/h2>
&lt;h3 id="crear-base-de-datos-y-usuario">Crear base de datos y usuario&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo -u postgres psql
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Dentro de PostgreSQL:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DATABASE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">fullstack_dev&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">USER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">devuser&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WITH&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PASSWORD&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;clave123&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">GRANT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ALL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PRIVILEGES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ON&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DATABASE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">fullstack_dev&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">devuser&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Salir con &lt;code>\q&lt;/code>.&lt;/p>
&lt;h2 id="paso-3-crear-backend-con-nodejs-y-express">Paso 3: Crear backend con Node.js y Express&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir backend
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> backend
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm init -y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm install express pg dotenv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Crear archivo &lt;code>.env&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-env" data-lang="env">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">PORT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">5000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">DB_USER&lt;/span>&lt;span class="o">=&lt;/span>devuser
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">DB_PASSWORD&lt;/span>&lt;span class="o">=&lt;/span>clave123
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">DB_HOST&lt;/span>&lt;span class="o">=&lt;/span>localhost
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">DB_PORT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">5432&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">DB_NAME&lt;/span>&lt;span class="o">=&lt;/span>fullstack_dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Crear &lt;code>index.js&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">express&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;express&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Pool&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;pg&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;dotenv&amp;#39;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">config&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">express&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">port&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">env&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PORT&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">pool&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Pool&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">user&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">env&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">DB_USER&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">host&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">env&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">DB_HOST&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">password&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">env&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">DB_PASSWORD&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">database&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">env&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">DB_NAME&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">port&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">env&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">DB_PORT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">express&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/api/usuarios&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kr">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">pool&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">query&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;SELECT NOW()&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">result&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">rows&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">listen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">port&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`Servidor corriendo en http://localhost:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">port&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecutar backend:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">node index.js
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Probar desde navegador o &lt;code>curl&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">curl http://localhost:5000/api/usuarios
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-4-crear-cliente-frontend-react">Paso 4: Crear cliente frontend (React)&lt;/h2>
&lt;p>Desde el directorio raíz:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">npx create-react-app frontend
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> frontend
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Modificar &lt;code>package.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;proxy&amp;#34;&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="s2">&amp;#34;http://localhost:5000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Crear componente para consumir la API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-jsx" data-lang="jsx">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">useEffect&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">useState&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s2">&amp;#34;react&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">function&lt;/span> &lt;span class="nx">App&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">hora&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">setHora&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">useState&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">useEffect&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/api/usuarios&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">then&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">setHora&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">now&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span> &lt;span class="p">[]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Hora&lt;/span> &lt;span class="nx">desde&lt;/span> &lt;span class="nx">PostgreSQL&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">hora&lt;/span>&lt;span class="p">}&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">App&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecutar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">npm start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Acceder desde navegador a &lt;code>http://localhost:3000&lt;/code> para ver la integración.&lt;/p>
&lt;h2 id="paso-5-acceso-desde-windows">Paso 5: Acceso desde Windows&lt;/h2>
&lt;p>Tanto el backend (puerto 5000) como el frontend (puerto 3000) son accesibles desde navegador en Windows gracias al reenvío automático de puertos WSL2.&lt;/p>
&lt;p>Verificar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">curl &lt;/span>&lt;span class="n">http&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="p">//&lt;/span>&lt;span class="n">localhost&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mf">5000&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">api&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">usuarios&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">start &lt;/span>&lt;span class="n">http&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="p">//&lt;/span>&lt;span class="n">localhost&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mf">3000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Separar entorno de desarrollo y producción con variables de entorno&lt;/li>
&lt;li>Versionar código en Git desde WSL2 o integrado a GitHub&lt;/li>
&lt;li>Usar &lt;code>nodemon&lt;/code> para hot-reload del backend&lt;/li>
&lt;li>Crear scripts de inicio en &lt;code>package.json&lt;/code> para automatización&lt;/li>
&lt;li>Agregar middleware de CORS si frontend se ejecuta desde origen distinto&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>WSL2 permite desarrollar aplicaciones fullstack modernas combinando tecnologías de backend y frontend con base de datos PostgreSQL de manera fluida. Todo el entorno corre desde Linux real dentro de Windows, lo que permite depurar, escalar y trabajar colaborativamente sin comprometer el rendimiento ni la experiencia de desarrollo.&lt;/p></description></item><item><title>How To: Desarrollo fullstack con WSL2 y PostgreSQL</title><link>https://cmas.dev/posts/2024-11-15-wsl2-devsecops/</link><pubDate>Thu, 07 Nov 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-11-15-wsl2-devsecops/</guid><description>&lt;p>WSL2 se ha convertido en una herramienta clave para equipos DevSecOps que buscan una solución ligera, segura y flexible para automatizar la integración, entrega y operaciones de software. Su compatibilidad con herramientas de seguridad, contenedores, scripting y pipelines CI/CD, lo convierte en un puente ideal entre desarrollo y operaciones dentro del sistema operativo Windows.&lt;/p>
&lt;p>Este artículo detalla un caso real de integración de WSL2 en un entorno DevSecOps, con ejemplos de workflows que incluyen validación de código, escaneo de vulnerabilidades, despliegue automatizado y hardening de entornos desde una terminal Linux sobre Windows.&lt;/p>
&lt;h2 id="objetivo">Objetivo&lt;/h2>
&lt;p>Demostrar cómo un entorno WSL2 puede ser parte activa y segura en un flujo DevSecOps moderno, usando herramientas como Docker, GitHub Actions, Trivy, Ansible y más.&lt;/p>
&lt;h2 id="paso-1-preparar-entorno-de-trabajo-seguro-en-wsl2">Paso 1: Preparar entorno de trabajo seguro en WSL2&lt;/h2>
&lt;p>Instalar herramientas básicas:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> sudo apt install -y git curl build-essential python3-pip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Instalar Docker dentro de WSL2 o usar Docker Desktop con integración activa:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Instalar herramientas DevSecOps:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip install ansible
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh &lt;span class="p">|&lt;/span> sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-2-escaneo-de-vulnerabilidades-con-trivy">Paso 2: Escaneo de vulnerabilidades con Trivy&lt;/h2>
&lt;p>Escanear imágenes antes del despliegue:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker pull node:18
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">trivy image node:18
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Escanear un proyecto local:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">trivy fs .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Agregar esto a un script &lt;code>scan.sh&lt;/code> para automatizar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Escaneando vulnerabilidades...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">trivy fs ./backend
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-3-automatización-de-seguridad-con-ansible">Paso 3: Automatización de seguridad con Ansible&lt;/h2>
&lt;p>Playbook de hardening básico:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Aplicar hardening de sistema&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">localhost&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Asegurar permisos de logs&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/var/log&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">state&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">directory&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">mode&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;0750&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecutar desde WSL2:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ansible-playbook playbooks/hardening.yml -c &lt;span class="nb">local&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-4-cicd-con-github-actions-desde-wsl2">Paso 4: CI/CD con GitHub Actions desde WSL2&lt;/h2>
&lt;p>Simular el pipeline local con &lt;a href="https://github.com/nektos/act">&lt;code>act&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">brew install act
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">act -j &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejemplo de workflow:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">CI&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">push&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">test&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">npm install&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">npm test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Usar WSL2 para validar estos scripts antes de hacer push a producción.&lt;/p>
&lt;h2 id="paso-5-integración-de-análisis-de-código-estático">Paso 5: Integración de análisis de código estático&lt;/h2>
&lt;p>Instalar ESLint o Bandit (Python):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">npm install -g eslint
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pip install bandit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Escanear:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">eslint ./frontend
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bandit -r ./backend
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-6-política-de-seguridad-de-contenedores">Paso 6: Política de seguridad de contenedores&lt;/h2>
&lt;p>Definir un archivo &lt;code>Dockerfile&lt;/code> seguro:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Dockerfile" data-lang="Dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> node:18-alpine&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> addgroup -S app &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> adduser -S app -G app&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">USER&lt;/span>&lt;span class="s"> app&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> . .&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;node&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;index.js&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Validar con Trivy o Docker Scout:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">trivy image myimage:latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>No usar root dentro de contenedores&lt;/li>
&lt;li>Validar código con linters y analizadores de seguridad&lt;/li>
&lt;li>Versionar todos los scripts y playbooks en Git&lt;/li>
&lt;li>Usar variables de entorno cifradas para secrets&lt;/li>
&lt;li>Monitorear imágenes con alertas de vulnerabilidad&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>WSL2 permite simular y ejecutar flujos DevSecOps reales con herramientas de seguridad, automatización y despliegue en un entorno Linux completo dentro de Windows. Con acceso a Docker, Trivy, Ansible y GitHub Actions, es posible desarrollar y validar código seguro, auditable y productivo sin necesidad de servidores externos o máquinas virtuales.&lt;/p></description></item><item><title>Debugging remoto desde Windows a servicios en WSL2</title><link>https://cmas.dev/posts/2024-11-01-wsl2-remote-debugging/</link><pubDate>Fri, 01 Nov 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-11-01-wsl2-remote-debugging/</guid><description>&lt;p>Uno de los grandes beneficios de WSL2 es la integración fluida entre el sistema operativo Windows y el entorno Linux, lo que permite realizar debugging remoto de servicios que corren en WSL2 desde herramientas gráficas y editores del host. Esto es clave para flujos de desarrollo moderno, ya que permite aprovechar lo mejor de ambos mundos: servidores nativos de Linux y herramientas de análisis de Windows.&lt;/p>
&lt;p>Este artículo describe paso a paso cómo depurar servicios web, APIs, scripts Python, aplicaciones Node.js y otros procesos que corren en WSL2, accediéndolos remotamente desde Windows, especialmente con VS Code y otros entornos integrados.&lt;/p>
&lt;h2 id="requisitos">Requisitos&lt;/h2>
&lt;ul>
&lt;li>Windows 10/11 con WSL2&lt;/li>
&lt;li>Visual Studio Code con extensiones:
&lt;ul>
&lt;li>Remote - WSL&lt;/li>
&lt;li>Debuggers específicos (Python, Node.js, etc.)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Servicios corriendo dentro de la distro WSL2&lt;/li>
&lt;li>Conexión funcional entre host y entorno WSL (localhost)&lt;/li>
&lt;/ul>
&lt;h2 id="paso-1-abrir-el-entorno-con-remote-wsl">Paso 1: Abrir el entorno con Remote WSL&lt;/h2>
&lt;ol>
&lt;li>Iniciar WSL2 (&lt;code>wsl&lt;/code> en terminal).&lt;/li>
&lt;li>Ejecutar &lt;code>code .&lt;/code> desde el directorio del proyecto.&lt;/li>
&lt;li>VS Code se conectará directamente a la distro WSL2 y abrirá el proyecto allí.&lt;/li>
&lt;/ol>
&lt;p>Esto permite editar y ejecutar el código dentro de Linux, pero con acceso completo a las herramientas de VS Code.&lt;/p>
&lt;h2 id="paso-2-configurar-un-archivo-launchjson">Paso 2: Configurar un archivo &lt;code>launch.json&lt;/code>&lt;/h2>
&lt;p>Ejemplo para depurar un servidor Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;version&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0.2.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;configurations&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Python: Flask&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;python&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;request&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;launch&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;program&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;${workspaceFolder}/app.py&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;env&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;FLASK_APP&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;app.py&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;args&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;run&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;--no-debugger&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;--no-reload&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;--host=0.0.0.0&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;jinja&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejemplo para Node.js:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;node&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;request&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;launch&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Iniciar servidor Node&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;program&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;${workspaceFolder}/index.js&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;runtimeExecutable&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;node&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;skipFiles&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;node_internals&amp;gt;/**&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-3-exponer-servicios-a-windows">Paso 3: Exponer servicios a Windows&lt;/h2>
&lt;p>Si el servidor corre en &lt;code>0.0.0.0&lt;/code>, se puede acceder desde el navegador Windows vía &lt;code>http://localhost:&amp;lt;puerto&amp;gt;&lt;/code>.&lt;/p>
&lt;p>Ejemplo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">uvicorn app:app --host 0.0.0.0 --port &lt;span class="m">8000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verificar desde navegador: &lt;code>http://localhost:8000&lt;/code>&lt;/p>
&lt;h2 id="paso-4-conexión-desde-otras-herramientas-externas">Paso 4: Conexión desde otras herramientas externas&lt;/h2>
&lt;p>Desde Windows, se puede conectar a servicios que corren en WSL2 usando herramientas como:&lt;/p>
&lt;ul>
&lt;li>Postman&lt;/li>
&lt;li>Insomnia&lt;/li>
&lt;li>curl en PowerShell&lt;/li>
&lt;li>Navegador con consola DevTools&lt;/li>
&lt;/ul>
&lt;p>Ejemplo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">curl &lt;/span>&lt;span class="n">http&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="p">//&lt;/span>&lt;span class="n">localhost&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="mf">5000&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">api&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-5-inspección-remota-avanzada-node-chrome-devtools">Paso 5: Inspección remota avanzada (Node, Chrome DevTools)&lt;/h2>
&lt;p>Node.js puede ser depurado usando el puerto de inspección:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">node --inspect-brk&lt;span class="o">=&lt;/span>0.0.0.0:9229 index.js
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Desde Chrome:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">chrome://inspect
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Agregar target &lt;code>localhost:9229&lt;/code> y conectar al proceso remoto dentro de WSL2.&lt;/p>
&lt;h2 id="paso-6-breakpoints-y-variables-en-vs-code">Paso 6: Breakpoints y variables en VS Code&lt;/h2>
&lt;p>Con &lt;code>launch.json&lt;/code> correctamente configurado, es posible:&lt;/p>
&lt;ul>
&lt;li>Establecer breakpoints visuales&lt;/li>
&lt;li>Ver variables locales y globales&lt;/li>
&lt;li>Inspeccionar la pila&lt;/li>
&lt;li>Evaluar expresiones interactivamente&lt;/li>
&lt;/ul>
&lt;p>Todo esto funciona igual que si se depurara localmente desde Windows.&lt;/p>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Asegurar que los servicios escuchen en &lt;code>0.0.0.0&lt;/code>, no solo &lt;code>127.0.0.1&lt;/code>&lt;/li>
&lt;li>Evitar puertos restringidos (&amp;lt;1024) si no se ejecuta como root&lt;/li>
&lt;li>Usar &lt;code>--reload&lt;/code> solo en desarrollo para Flask/FastAPI&lt;/li>
&lt;li>Separar entornos de debug y producción en &lt;code>launch.json&lt;/code>&lt;/li>
&lt;li>Si el puerto no responde, reiniciar WSL con &lt;code>wsl --shutdown&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Con WSL2 y herramientas modernas como VS Code, es posible depurar de forma remota y fluida servicios Linux desde Windows. Esta capacidad permite flujos de desarrollo productivos, portables y multiplataforma, manteniendo el rendimiento y la fidelidad del entorno Linux sin salir del sistema operativo principal.&lt;/p></description></item><item><title>Machine learning local distribuido con WSL2 + containers</title><link>https://cmas.dev/posts/2024-10-25-wsl2-machine-learning/</link><pubDate>Fri, 25 Oct 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-10-25-wsl2-machine-learning/</guid><description>&lt;p>Una de las grandes ventajas de WSL2 es su compatibilidad con contenedores Docker y acceso a la GPU, lo que lo convierte en un entorno ideal para correr flujos de &lt;strong>machine learning distribuido&lt;/strong> desde una única máquina con múltiples contenedores Linux. Esto permite simular ambientes de entrenamiento paralelos, microservicios de inferencia o arquitecturas de orquestación como Ray o Dask desde el entorno Windows, sin necesidad de un clúster real o acceso a la nube.&lt;/p>
&lt;p>Este artículo describe cómo configurar y ejecutar cargas distribuidas de ML usando Docker, PyTorch, TensorFlow, y Ray sobre WSL2, aprovechando la integración con NVIDIA GPU y el rendimiento de Linux.&lt;/p>
&lt;h2 id="requisitos">Requisitos&lt;/h2>
&lt;ul>
&lt;li>Windows 11 con WSL2&lt;/li>
&lt;li>Docker Desktop con soporte WSL2 y GPU habilitado&lt;/li>
&lt;li>NVIDIA GPU compatible + drivers + WSL CUDA Toolkit&lt;/li>
&lt;li>Distro Ubuntu en WSL2&lt;/li>
&lt;/ul>
&lt;p>Verificar GPU:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">nvidia-smi
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verificar Docker:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker --version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker info
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-1-crear-red-de-contenedores-para-ml-distribuido">Paso 1: Crear red de contenedores para ML distribuido&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker network create ml-network
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto permite que contenedores se comuniquen por nombre dentro de la red.&lt;/p>
&lt;h2 id="paso-2-crear-imagen-base-de-entrenamiento-con-gpu">Paso 2: Crear imagen base de entrenamiento con GPU&lt;/h2>
&lt;p>Archivo &lt;code>Dockerfile&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Dockerfile" data-lang="Dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> pytorch/pytorch:2.1.0-cuda11.8-cudnn8-runtime&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> apt update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt install -y git iputils-ping&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> pip install ray&lt;span class="o">[&lt;/span>default&lt;span class="o">]&lt;/span> dask scikit-learn pandas matplotlib&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> /workspace&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Construir imagen:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker build -t ml-node .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-3-ejecutar-contenedores-coordinados-ray">Paso 3: Ejecutar contenedores coordinados (Ray)&lt;/h2>
&lt;p>Iniciar nodo principal:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker run -it --rm --gpus all --network ml-network --name ray-head ml-node ray start --head --port&lt;span class="o">=&lt;/span>&lt;span class="m">6379&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>En otra terminal, iniciar un nodo worker:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker run -it --rm --gpus all --network ml-network --name ray-worker ml-node ray start --address&lt;span class="o">=&lt;/span>ray-head:6379
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Validar desde un contenedor:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">ray&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ray&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">address&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;auto&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ray&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cluster_resources&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto habilita paralelismo local real, útil para prototipos, testing o benchmarking.&lt;/p>
&lt;h2 id="paso-4-alternativa-con-dask">Paso 4: Alternativa con Dask&lt;/h2>
&lt;p>Dask permite flujos similares con programación paralela y pandas-like API.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">dask.distributed&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Client&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Client&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;scheduler:8786&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-5-entrenamiento-distribuido-con-pytorch-o-tensorflow">Paso 5: Entrenamiento distribuido con PyTorch o TensorFlow&lt;/h2>
&lt;p>Utilizar &lt;code>torch.distributed&lt;/code> o &lt;code>tf.distribute&lt;/code> para paralelismo manual o con librerías de alto nivel.&lt;/p>
&lt;p>Ejemplo básico con &lt;code>torch.multiprocessing&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">torch.multiprocessing&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">mp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">train&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rank&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Proceso &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">rank&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> entrenando&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">spawn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">train&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nprocs&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Correr en un contenedor con múltiples procesos o GPUs según configuración.&lt;/p>
&lt;h2 id="casos-de-uso-prácticos">Casos de uso prácticos&lt;/h2>
&lt;ul>
&lt;li>Simulación de entrenamiento distribuido sin necesidad de Kubernetes&lt;/li>
&lt;li>Inferencia paralela desde varios servicios contenedorizados&lt;/li>
&lt;li>Microservicios de ML (FastAPI + modelo) en red local entre contenedores&lt;/li>
&lt;li>Pruebas de carga con frameworks de orquestación y métricas&lt;/li>
&lt;/ul>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Usar &lt;code>docker-compose&lt;/code> para definir múltiples nodos y servicios&lt;/li>
&lt;li>Configurar volúmenes compartidos con datasets&lt;/li>
&lt;li>Asegurar exposición de puertos entre servicios&lt;/li>
&lt;li>Monitorizar con herramientas como Ray Dashboard (&lt;code>--dashboard-host 0.0.0.0&lt;/code>)&lt;/li>
&lt;li>Usar contenedores separados por rol (data ingestion, training, inference)&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>WSL2, combinado con Docker y acceso a GPU, permite ejecutar flujos avanzados de machine learning distribuido desde una sola máquina. Esta capacidad potencia a desarrolladores, científicos de datos y equipos de investigación para testear y escalar soluciones ML de forma local, rápida y segura antes de llevarlas a producción.&lt;/p></description></item><item><title>Análisis de logs y observabilidad con herramientas Linux</title><link>https://cmas.dev/posts/2024-10-18-wsl2-logs-analysis/</link><pubDate>Fri, 18 Oct 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-10-18-wsl2-logs-analysis/</guid><description>&lt;p>Una ventaja clave de usar WSL2 es tener acceso completo al ecosistema de herramientas de Linux, incluyendo aquellas utilizadas para análisis de logs, monitoreo y observabilidad. Esto permite replicar entornos de producción o staging de forma local, validar configuraciones, depurar servicios y construir flujos completos de análisis desde la línea de comandos.&lt;/p>
&lt;p>Este artículo explora cómo aprovechar herramientas como &lt;code>journalctl&lt;/code>, &lt;code>logrotate&lt;/code>, &lt;code>grep&lt;/code>, &lt;code>htop&lt;/code>, &lt;code>iftop&lt;/code>, &lt;code>bmon&lt;/code>, &lt;code>dstat&lt;/code>, &lt;code>atop&lt;/code>, &lt;code>goaccess&lt;/code> y más, directamente desde una terminal en WSL2 para tener visibilidad del sistema, servicios y tráfico de red.&lt;/p>
&lt;h2 id="requisitos">Requisitos&lt;/h2>
&lt;ul>
&lt;li>WSL2 con distribución Ubuntu 20.04 o 22.04&lt;/li>
&lt;li>Acceso &lt;code>sudo&lt;/code> para instalar herramientas&lt;/li>
&lt;li>Servicios activos (nginx, PostgreSQL, Python web server, etc.)&lt;/li>
&lt;/ul>
&lt;h2 id="análisis-de-logs-clásicos-con-grep-awk-less">Análisis de logs clásicos con &lt;code>grep&lt;/code>, &lt;code>awk&lt;/code>, &lt;code>less&lt;/code>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /var/log
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo less syslog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo tail -f nginx/access.log
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo grep &lt;span class="s2">&amp;#34;error&amp;#34;&lt;/span> nginx/error.log
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Buscar patrones o errores:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">grep -i &lt;span class="s2">&amp;#34;fail&amp;#34;&lt;/span> auth.log
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">awk &lt;span class="s1">&amp;#39;{print $1, $2, $3, $5}&amp;#39;&lt;/span> nginx/access.log &lt;span class="p">|&lt;/span> sort &lt;span class="p">|&lt;/span> uniq -c &lt;span class="p">|&lt;/span> sort -nr
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="observabilidad-del-sistema">Observabilidad del sistema&lt;/h2>
&lt;h3 id="procesos-en-tiempo-real">Procesos en tiempo real&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">htop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Filtrar por nombre, CPU o RAM. Permite ordenar e identificar cuellos de botella.&lt;/p>
&lt;h3 id="uso-de-red-por-proceso">Uso de red por proceso&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo iftop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo bmon
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Monitorean el tráfico entrante y saliente en &lt;code>eth0&lt;/code> (interfaz de WSL).&lt;/p>
&lt;h2 id="uso-de-dstat-y-atop-para-análisis-extendido">Uso de &lt;code>dstat&lt;/code> y &lt;code>atop&lt;/code> para análisis extendido&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt install -y dstat atop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Visualizar métricas combinadas:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">dstat -cdnm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Para monitoreo prolongado:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo atop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="manejo-y-rotación-de-logs">Manejo y rotación de logs&lt;/h2>
&lt;p>Instalar &lt;code>logrotate&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt install -y logrotate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Configurar rotación para logs personalizados:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo nano /etc/logrotate.d/custom
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejemplo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">/home/usuario/proyecto/logs/*.log {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> weekly
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> rotate 4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> compress
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> missingok
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> notifempty
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> create 640 usuario usuario
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecutar rotación manual:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo logrotate -f /etc/logrotate.d/custom
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="visualización-de-logs-web-con-goaccess">Visualización de logs web con GoAccess&lt;/h2>
&lt;p>Instalar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt install -y goaccess
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Analizar logs de nginx:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo goaccess /var/log/nginx/access.log -o report.html --log-format&lt;span class="o">=&lt;/span>COMBINED
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Abrir &lt;code>report.html&lt;/code> en navegador para ver estadísticas de tráfico, IPs, status codes y más.&lt;/p>
&lt;h2 id="automatizar-análisis-con-scripts">Automatizar análisis con scripts&lt;/h2>
&lt;p>Ejemplo de script &lt;code>log-insights.sh&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Errores recientes:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tail -n &lt;span class="m">50&lt;/span> /var/log/nginx/error.log &lt;span class="p">|&lt;/span> grep -i &lt;span class="s2">&amp;#34;error&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;IPs más frecuentes:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">awk &lt;span class="s1">&amp;#39;{print $1}&amp;#39;&lt;/span> /var/log/nginx/access.log &lt;span class="p">|&lt;/span> sort &lt;span class="p">|&lt;/span> uniq -c &lt;span class="p">|&lt;/span> sort -nr &lt;span class="p">|&lt;/span> head -10
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Dar permisos:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">chmod +x log-insights.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecutar periódicamente o como parte de debugging.&lt;/p>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Evitar usar &lt;code>journalctl&lt;/code> (no disponible sin systemd en WSL2)&lt;/li>
&lt;li>Usar &lt;code>nohup&lt;/code> o &lt;code>tee&lt;/code> para guardar logs de procesos manuales&lt;/li>
&lt;li>Monitorear tráfico entre servicios con &lt;code>netstat&lt;/code>, &lt;code>ss&lt;/code> o &lt;code>lsof&lt;/code>&lt;/li>
&lt;li>Limitar permisos de lectura en logs sensibles (&lt;code>chmod 640&lt;/code>)&lt;/li>
&lt;li>Automatizar análisis postmortem con scripts por proyecto&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Con WSL2 es posible construir flujos completos de observabilidad y análisis de logs utilizando herramientas estándar de Linux. Esto permite a los equipos depurar localmente, simular entornos productivos, y aplicar técnicas profesionales de monitoreo sin salir de Windows. Un entorno ideal para desarrollo, QA, seguridad y debugging distribuido.&lt;/p></description></item><item><title>Integración con VS Code Dev Tunnels y Tailscale</title><link>https://cmas.dev/posts/2024-10-11-wsl2-vs-code-integration/</link><pubDate>Fri, 11 Oct 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-10-11-wsl2-vs-code-integration/</guid><description>&lt;p>WSL2 es una plataforma ideal para desarrollo distribuido y remoto gracias a su entorno Linux real y la capacidad de integrarse con herramientas modernas como &lt;strong>VS Code Dev Tunnels&lt;/strong> y &lt;strong>Tailscale&lt;/strong>. Estas soluciones permiten exponer servicios en desarrollo de forma segura a través de túneles públicos o redes privadas virtuales, sin abrir puertos en el router o usar VPNs corporativas complejas.&lt;/p>
&lt;p>Este artículo explica cómo configurar y usar ambas herramientas desde WSL2 para exponer APIs, servidores locales, entornos de testing o aplicaciones completas a otros miembros del equipo o entornos externos.&lt;/p>
&lt;h2 id="qué-son-vs-code-dev-tunnels-y-tailscale">¿Qué son VS Code Dev Tunnels y Tailscale?&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Dev Tunnels&lt;/strong>: una funcionalidad integrada en Visual Studio Code que permite exponer un puerto local a internet de forma segura, ideal para compartir un servidor local en segundos.&lt;/li>
&lt;li>&lt;strong>Tailscale&lt;/strong>: una VPN mesh que conecta dispositivos mediante WireGuard en una red privada segura, ideal para exponer servicios a otros dispositivos del equipo sin necesidad de configuración de red avanzada.&lt;/li>
&lt;/ul>
&lt;h2 id="paso-1-requisitos-previos">Paso 1: Requisitos previos&lt;/h2>
&lt;ul>
&lt;li>Windows 11 con WSL2 activo&lt;/li>
&lt;li>VS Code y la extensión &lt;strong>Remote - WSL&lt;/strong>&lt;/li>
&lt;li>Cuenta de GitHub o Microsoft para autenticación en Dev Tunnels&lt;/li>
&lt;li>Cuenta de Tailscale gratuita (&lt;a href="https://tailscale.com">https://tailscale.com&lt;/a>)&lt;/li>
&lt;li>Distro Ubuntu actualizada&lt;/li>
&lt;/ul>
&lt;h2 id="paso-2-usar-dev-tunnels-en-vs-code-con-wsl2">Paso 2: Usar Dev Tunnels en VS Code con WSL2&lt;/h2>
&lt;ol>
&lt;li>Abrir el proyecto en VS Code usando &lt;code>Remote - WSL&lt;/code>.&lt;/li>
&lt;li>Iniciar un servidor local en WSL2, por ejemplo:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">python3 -m http.server &lt;span class="m">8000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Desde la paleta de comandos (&lt;code>Ctrl+Shift+P&lt;/code>), ejecutar:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Dev Tunnels: Create Tunnel...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Elegir el puerto (ej. 8000) y tipo de acceso (authenticated/public).&lt;/li>
&lt;li>Copiar la URL generada (ej. &lt;code>https://&amp;lt;hash&amp;gt;.dev.tunnels.api.visualstudio.com&lt;/code>) y compartirla.&lt;/li>
&lt;/ol>
&lt;p>El túnel redirige tráfico HTTPS desde internet hacia tu entorno WSL2 local sin configuraciones de firewall ni puertos.&lt;/p>
&lt;h2 id="paso-3-instalar-tailscale-en-wsl2">Paso 3: Instalar Tailscale en WSL2&lt;/h2>
&lt;p>En la terminal de Ubuntu en WSL2:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">curl -fsSL https://tailscale.com/install.sh &lt;span class="p">|&lt;/span> sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo tailscale up
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto abrirá una URL de autenticación en el navegador. Una vez aceptado, tu máquina WSL2 estará conectada a la red privada de Tailscale.&lt;/p>
&lt;p>Ver dispositivos conectados:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">tailscale status
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-4-exponer-un-servicio-local-vía-tailscale">Paso 4: Exponer un servicio local vía Tailscale&lt;/h2>
&lt;p>Ejecutar un servidor dentro de WSL2:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">uvicorn main:app --host 0.0.0.0 --port &lt;span class="m">5000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Compartir la dirección &lt;code>http://&amp;lt;tailscale-ip&amp;gt;:5000&lt;/code> con otro miembro del equipo en la misma red Tailscale.&lt;/p>
&lt;p>Opcionalmente, habilitar el proxy MagicDNS de Tailscale para usar nombres como &lt;code>ubuntu-wsl2.tailnet-name.ts.net&lt;/code>.&lt;/p>
&lt;h2 id="paso-5-casos-de-uso-combinados">Paso 5: Casos de uso combinados&lt;/h2>
&lt;ul>
&lt;li>Exponer una API en desarrollo a un tester sin acceso al repositorio&lt;/li>
&lt;li>Probar una interfaz frontend desde una app móvil real vía Tailscale&lt;/li>
&lt;li>Compartir un notebook Jupyter ejecutado desde WSL2 con Dev Tunnels&lt;/li>
&lt;li>Simular múltiples entornos conectados entre sí (ej. base de datos + backend)&lt;/li>
&lt;/ul>
&lt;h2 id="seguridad">Seguridad&lt;/h2>
&lt;ul>
&lt;li>Dev Tunnels usa TLS y autenticación con tu cuenta GitHub o Microsoft&lt;/li>
&lt;li>Tailscale cifra todo el tráfico entre dispositivos con WireGuard&lt;/li>
&lt;li>Recomendado usar entornos virtuales o contenedores con puertos limitados&lt;/li>
&lt;li>Evitar exposición de &lt;code>/mnt/c&lt;/code> y no ejecutar como root innecesariamente&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>WSL2, combinado con VS Code Dev Tunnels y Tailscale, proporciona un entorno flexible y seguro para desarrollo distribuido. Permite exponer servicios en segundos, colaborar con otros sin complejidad de red y trabajar desde Windows con las ventajas de un entorno Linux real. Esta integración es clave para flujos modernos, equipos remotos y testing distribuido.&lt;/p></description></item><item><title>Automatización de entornos WSL2 para onboarding de equipos</title><link>https://cmas.dev/posts/2024-10-04-wsl2-automation-environment/</link><pubDate>Fri, 04 Oct 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-10-04-wsl2-automation-environment/</guid><description>&lt;p>El onboarding de nuevos miembros en un equipo técnico suele implicar configurar entornos complejos con múltiples herramientas, dependencias, claves, servicios y flujos específicos. WSL2 permite automatizar completamente esta experiencia, facilitando que cualquier integrante configure un entorno de desarrollo productivo en minutos, con mínima intervención y total reproducibilidad.&lt;/p>
&lt;p>Este artículo presenta estrategias y herramientas para automatizar la preparación de entornos WSL2, integrando scripting, dotfiles, Dev Containers, provisioning declarativo y prácticas de mantenimiento colaborativo.&lt;/p>
&lt;h2 id="objetivo">Objetivo&lt;/h2>
&lt;ul>
&lt;li>Establecer un entorno base reproducible en WSL2&lt;/li>
&lt;li>Reducir errores manuales durante onboarding&lt;/li>
&lt;li>Versionar configuraciones y automatizaciones&lt;/li>
&lt;li>Proveer una experiencia coherente entre dispositivos&lt;/li>
&lt;/ul>
&lt;h2 id="paso-1-script-de-instalación-wsl2--distro-personalizada">Paso 1: Script de instalación WSL2 + Distro personalizada&lt;/h2>
&lt;p>En una máquina limpia, desde PowerShell (Administrador):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="n">wsl&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-install&lt;/span> &lt;span class="n">-d&lt;/span> &lt;span class="n">Ubuntu&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Configurar distro:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> sudo apt upgrade -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Instalar herramientas comunes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt install -y git curl build-essential zsh python3-pip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Guardar este paso como &lt;code>setup.sh&lt;/code> en el repositorio del equipo.&lt;/p>
&lt;h2 id="paso-2-clonación-y-aplicación-de-dotfiles">Paso 2: Clonación y aplicación de dotfiles&lt;/h2>
&lt;p>Mantener configuraciones como &lt;code>.bashrc&lt;/code>, &lt;code>.zshrc&lt;/code>, &lt;code>.gitconfig&lt;/code>, alias y funciones personalizadas en un repositorio compartido:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git clone https://github.com/empresa/dotfiles ~/.dotfiles
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cp ~/.dotfiles/.zshrc ~/.zshrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cp ~/.dotfiles/.gitconfig ~/.gitconfig
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Usar herramientas como:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.chezmoi.io/">&lt;code>chezmoi&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/anishathalye/dotbot">&lt;code>dotbot&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;code>make install&lt;/code> con targets definidos&lt;/li>
&lt;/ul>
&lt;h2 id="paso-3-provisioning-automatizado-del-stack-de-herramientas">Paso 3: Provisioning automatizado del stack de herramientas&lt;/h2>
&lt;p>Ejemplo con &lt;code>Makefile&lt;/code> por proyecto:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-makefile" data-lang="makefile">&lt;span class="line">&lt;span class="cl">&lt;span class="nf">install&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> bash scripts/install-python-tools.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> bash scripts/install-node.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> bash scripts/setup-venv.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>También se pueden usar &lt;code>ansible-playbook&lt;/code> o &lt;code>bash setup.sh&lt;/code> con detección de sistema, instalación de dependencias y personalización por usuario.&lt;/p>
&lt;h2 id="paso-4-dev-containers-para-entornos-por-proyecto">Paso 4: Dev Containers para entornos por proyecto&lt;/h2>
&lt;p>Usar &lt;code>.devcontainer&lt;/code> para configurar el stack por repositorio:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;backend-node-postgres&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;image&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;mcr.microsoft.com/devcontainers/javascript-node:18&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;postCreateCommand&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;npm install &amp;amp;&amp;amp; npm run setup-db&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;customizations&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;vscode&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;extensions&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;dbaeumer.vscode-eslint&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto garantiza que todos los miembros usen las mismas versiones y herramientas al abrir el proyecto en VS Code con WSL2.&lt;/p>
&lt;h2 id="paso-5-automatizar-con-scripts-de-bootstrap">Paso 5: Automatizar con scripts de bootstrap&lt;/h2>
&lt;p>Estructura común para bootstrap completo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">onboarding/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── install.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── setup.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── dotfiles/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── devcontainer/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── Makefile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejemplo de &lt;code>install.sh&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Configurando entorno WSL2...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bash ./setup.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git clone https://github.com/org/dotfiles ~/.dotfiles
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ~/.dotfiles &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> ./install.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">code .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Usar scripts idempotentes (que se pueden correr múltiples veces)&lt;/li>
&lt;li>Documentar variables de entorno necesarias en &lt;code>.env.example&lt;/code>&lt;/li>
&lt;li>Versionar herramientas y librerías clave en &lt;code>requirements.txt&lt;/code>, &lt;code>package.json&lt;/code>, etc.&lt;/li>
&lt;li>Probar en entornos limpios y documentar prerequisitos (ej. Docker Desktop, VS Code)&lt;/li>
&lt;li>Incluir pruebas de validación (&lt;code>make check-env&lt;/code>)&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Automatizar la configuración de entornos WSL2 mejora el onboarding técnico, elimina fricciones y promueve la colaboración entre desarrolladores. Con un diseño reproducible y bien documentado, cada integrante del equipo puede empezar a trabajar con el stack completo en minutos, desde cualquier máquina con Windows, sin perder tiempo en configuraciones manuales.&lt;/p></description></item><item><title>WSL2 + Azure CLI: gestión de recursos cloud desde terminal Linux</title><link>https://cmas.dev/posts/2024-09-27-wsl2-azure-cli/</link><pubDate>Fri, 27 Sep 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-09-27-wsl2-azure-cli/</guid><description>&lt;p>&lt;strong>WSL2&lt;/strong> permite ejecutar un entorno &lt;strong>Linux&lt;/strong> real dentro de &lt;strong>Windows&lt;/strong>, lo que habilita el uso de herramientas nativas para gestión en la nube como &lt;strong>Azure CLI&lt;/strong>. Con esta combinación, los desarrolladores y administradores pueden trabajar cómodamente desde la terminal Linux para administrar recursos en &lt;strong>Azure&lt;/strong>, automatizar tareas, monitorear infraestructura y ejecutar scripts multiplataforma sin salir del entorno local.&lt;/p>
&lt;p>Este artículo explica paso a paso cómo instalar &lt;strong>Azure CLI&lt;/strong> en &lt;strong>WSL2&lt;/strong>, cómo autenticarse y gestionar recursos como máquinas virtuales, redes, contenedores y más.&lt;/p>
&lt;h2 id="requisitos">Requisitos&lt;/h2>
&lt;ul>
&lt;li>WSL2 activo con una distribución Ubuntu (recomendado)&lt;/li>
&lt;li>Cuenta activa de Azure con acceso de administrador&lt;/li>
&lt;li>Git y curl instalados&lt;/li>
&lt;li>Acceso a un navegador para autenticación&lt;/li>
&lt;/ul>
&lt;h2 id="paso-1-instalar-azure-cli-en-wsl2">Paso 1: Instalar Azure CLI en WSL2&lt;/h2>
&lt;p>Desde una terminal WSL2 (Ubuntu):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">curl -sL https://aka.ms/InstallAzureCLIDeb &lt;span class="p">|&lt;/span> sudo bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verificar instalación:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">az version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Debe mostrar la versión instalada y sus componentes.&lt;/p>
&lt;h2 id="paso-2-iniciar-sesión-en-azure">Paso 2: Iniciar sesión en Azure&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">az login
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto abrirá una URL en el navegador predeterminado de Windows. Se puede copiar y abrir manualmente si es necesario.&lt;/p>
&lt;p>Una vez autenticado, se mostrará la suscripción activa:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">az account show
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-3-comandos-básicos-para-gestión-de-recursos">Paso 3: Comandos básicos para gestión de recursos&lt;/h2>
&lt;h3 id="listar-grupos-de-recursos">Listar grupos de recursos&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">az group list --output table
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="crear-un-grupo-de-recursos">Crear un grupo de recursos&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">az group create --name demo-wsl --location eastus
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="crear-una-máquina-virtual">Crear una máquina virtual&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">az vm create --resource-group demo-wsl --name vmLinuxDemo --image UbuntuLTS --admin-username dev --generate-ssh-keys
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="abrir-puerto-ssh">Abrir puerto SSH&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">az vm open-port --resource-group demo-wsl --name vmLinuxDemo --port &lt;span class="m">22&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="conectarse-por-ssh">Conectarse por SSH&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ssh dev@&amp;lt;IP_PÚBLICA&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Obtener IP pública:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">az vm list-ip-addresses -g demo-wsl -n vmLinuxDemo --query &lt;span class="s2">&amp;#34;[].virtualMachine.network.publicIpAddresses[].ipAddress&amp;#34;&lt;/span> -o tsv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-4-gestión-de-almacenamiento-y-contenedores">Paso 4: Gestión de almacenamiento y contenedores&lt;/h2>
&lt;h3 id="crear-una-cuenta-de-almacenamiento">Crear una cuenta de almacenamiento&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">az storage account create --name almacendemowsl --resource-group demo-wsl --location eastus --sku Standard_LRS
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="crear-un-contenedor-en-azure-blob-storage">Crear un contenedor en Azure Blob Storage&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">az storage container create --name archivos --account-name almacendemowsl --auth-mode login
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="subir-un-archivo">Subir un archivo&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">az storage blob upload --account-name almacendemowsl --container-name archivos --name demo.txt --file ./demo.txt --auth-mode login
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-5-automatización-con-scripts-bash">Paso 5: Automatización con scripts Bash&lt;/h2>
&lt;p>Crear un script &lt;code>provisionar-vm.sh&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="nv">GRUPO&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;dev-wsl&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">NOMBRE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;vm-wsl2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">az group create --name &lt;span class="nv">$GRUPO&lt;/span> --location eastus
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">az vm create --resource-group &lt;span class="nv">$GRUPO&lt;/span> --name &lt;span class="nv">$NOMBRE&lt;/span> --image UbuntuLTS --admin-username dev --generate-ssh-keys
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Dar permisos y ejecutar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">chmod +x provisionar-vm.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./provisionar-vm.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Usar &lt;code>--output table&lt;/code> o &lt;code>--output yaml&lt;/code> para resultados legibles&lt;/li>
&lt;li>Almacenar scripts en Git y versionarlos por proyecto&lt;/li>
&lt;li>Usar &lt;code>az config set extension.use_dynamic_install=yes_without_prompt&lt;/code> para extensiones&lt;/li>
&lt;li>No compartir archivos &lt;code>.azure/&lt;/code> con otras máquinas sin cifrado&lt;/li>
&lt;li>Combinar con &lt;code>jq&lt;/code> para procesamiento de resultados en JSON&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Usar &lt;strong>Azure CLI&lt;/strong> desde &lt;strong>WSL2&lt;/strong> permite trabajar de forma profesional y segura con recursos cloud desde un entorno &lt;strong>Linux&lt;/strong>, combinando lo mejor de la nube con la productividad del terminal. Esto habilita flujos de automatización, integración CI/CD, administración remota y scripting robusto directamente desde &lt;strong>Windows&lt;/strong>.&lt;/p></description></item><item><title>Configuración de servicios persistentes en background en WSL2</title><link>https://cmas.dev/posts/2024-09-20-wsl2-background-services/</link><pubDate>Fri, 20 Sep 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-09-20-wsl2-background-services/</guid><description>&lt;p>Aunque &lt;strong>WSL2&lt;/strong> no ofrece un sistema de init tradicional como &lt;code>systemd&lt;/code> por defecto, es totalmente posible configurar y ejecutar servicios persistentes como &lt;strong>nginx&lt;/strong> o &lt;strong>PostgreSQL&lt;/strong> desde &lt;strong>WSL2&lt;/strong>. Esto permite simular entornos de producción, realizar pruebas completas o levantar microservicios sin contenedores ni VMs adicionales.&lt;/p>
&lt;p>Este artículo explica cómo instalar, configurar, automatizar y mantener servicios en segundo plano en WSL2 con enfoque práctico y seguro.&lt;/p>
&lt;h2 id="requisitos">Requisitos&lt;/h2>
&lt;ul>
&lt;li>Windows 10/11 con WSL2 habilitado&lt;/li>
&lt;li>Distro Ubuntu 22.04 (u otra basada en Debian)&lt;/li>
&lt;li>Acceso a &lt;code>sudo&lt;/code>&lt;/li>
&lt;li>Persistencia del sistema de archivos dentro de &lt;code>~&lt;/code> (no usar &lt;code>/mnt/c/&lt;/code>)&lt;/li>
&lt;/ul>
&lt;h2 id="paso-1-instalar-nginx-y-postgresql">Paso 1: Instalar nginx y PostgreSQL&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install -y nginx postgresql
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verificar que los servicios estén disponibles:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">nginx -v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">psql --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-2-iniciar-servicios-manualmente">Paso 2: Iniciar servicios manualmente&lt;/h2>
&lt;p>Como no hay &lt;code>systemd&lt;/code>, se inician desde la terminal:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo service nginx start
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo service postgresql start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verificar estado:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ps -ef &lt;span class="p">|&lt;/span> grep nginx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ps -ef &lt;span class="p">|&lt;/span> grep postgres
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ver puertos activos:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ss -tuln
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-3-hacer-que-los-servicios-se-inicien-automáticamente">Paso 3: Hacer que los servicios se inicien automáticamente&lt;/h2>
&lt;h3 id="opción-1-script-de-inicio-en-bashrc">Opción 1: Script de inicio en &lt;code>.bashrc&lt;/code>&lt;/h3>
&lt;p>Agregar al final de &lt;code>~/.bashrc&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Iniciar servicios al abrir WSL&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> ! pgrep nginx &amp;gt; /dev/null&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sudo service nginx start
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> ! pgrep postgres &amp;gt; /dev/null&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sudo service postgresql start
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>⚠️ Esto pedirá contraseña a menos que se configure &lt;code>sudo&lt;/code> sin contraseña para estos comandos.&lt;/p>
&lt;h3 id="opción-2-crear-alias-o-comandos-rápidos">Opción 2: Crear alias o comandos rápidos&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> start-services&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;sudo service nginx start &amp;amp;&amp;amp; sudo service postgresql start&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Guardar en &lt;code>.bash_aliases&lt;/code> o directamente en &lt;code>.bashrc&lt;/code>.&lt;/p>
&lt;h2 id="paso-4-configuración-básica-de-nginx">Paso 4: Configuración básica de nginx&lt;/h2>
&lt;p>Editar archivo principal:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo nano /etc/nginx/sites-available/default
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Configurar un servidor local:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-nginx" data-lang="nginx">&lt;span class="line">&lt;span class="cl">&lt;span class="k">server&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">listen&lt;/span> &lt;span class="mi">80&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">server_name&lt;/span> &lt;span class="s">localhost&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">location&lt;/span> &lt;span class="s">/&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">root&lt;/span> &lt;span class="s">/var/www/html&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">index&lt;/span> &lt;span class="s">index.html&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Reiniciar para aplicar cambios:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo service nginx restart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Probar en navegador: &lt;code>http://localhost&lt;/code>&lt;/p>
&lt;h2 id="paso-5-configurar-postgresql">Paso 5: Configurar PostgreSQL&lt;/h2>
&lt;p>Cambiar contraseña del usuario por defecto:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo -u postgres psql
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">\p&lt;/span>assword postgres
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Crear base de datos y usuario:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DATABASE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">testdb&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">USER&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dev&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">WITH&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ENCRYPTED&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PASSWORD&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;clave123&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">GRANT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ALL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PRIVILEGES&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ON&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">DATABASE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">testdb&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TO&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dev&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Conectarse:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">psql -U dev -d testdb -h localhost
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-6-acceso-desde-el-host-windows">Paso 6: Acceso desde el host (Windows)&lt;/h2>
&lt;p>Por defecto, los servicios expuestos en &lt;code>127.0.0.1&lt;/code> dentro de WSL2 son accesibles desde Windows como &lt;code>localhost&lt;/code>.&lt;/p>
&lt;p>Probar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">curl &lt;/span>&lt;span class="n">http&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="p">//&lt;/span>&lt;span class="n">localhost&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">psql&lt;/span> &lt;span class="n">-h&lt;/span> &lt;span class="n">localhost&lt;/span> &lt;span class="n">-U&lt;/span> &lt;span class="n">dev&lt;/span> &lt;span class="n">-d&lt;/span> &lt;span class="n">testdb&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Ejecutar servicios en &lt;code>~/&lt;/code> o &lt;code>/etc&lt;/code> dentro del FS Linux, nunca desde &lt;code>/mnt/c/&lt;/code>&lt;/li>
&lt;li>Automatizar con scripts &lt;code>start-services.sh&lt;/code>&lt;/li>
&lt;li>Usar &lt;code>pgAdmin&lt;/code>, &lt;code>DBeaver&lt;/code> o VS Code para conexión visual a PostgreSQL&lt;/li>
&lt;li>Para múltiples distros, considerar nginx reverse proxy o Docker&lt;/li>
&lt;li>Evitar usar &lt;code>nohup&lt;/code> o &lt;code>&amp;amp;&lt;/code> sin monitoreo de procesos (usar &lt;code>tmux&lt;/code> si es necesario)&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Con unos pocos ajustes, es completamente posible ejecutar servicios persistentes como nginx y PostgreSQL en WSL2 sin contenedores. Esta configuración es ideal para desarrolladores que necesitan replicar entornos de servidor localmente con flexibilidad, rendimiento y compatibilidad total con Linux desde Windows.&lt;/p></description></item><item><title>Sincronización de entornos WSL2 en múltiples dispositivos</title><link>https://cmas.dev/posts/2024-09-13-wsl2-sync-environments/</link><pubDate>Fri, 13 Sep 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-09-13-wsl2-sync-environments/</guid><description>&lt;p>Uno de los desafíos más comunes en equipos distribuidos o desarrolladores con múltiples dispositivos es mantener entornos consistentes entre máquinas. Gracias a las capacidades de exportación de distribuciones, el uso de &lt;strong>Dev Containers&lt;/strong>, gestión de configuraciones declarativas y herramientas de backup, &lt;strong>WSL2&lt;/strong> puede sincronizarse entre diferentes sistemas Windows de forma confiable y productiva.&lt;/p>
&lt;p>Este artículo explora las mejores estrategias para mantener la coherencia de entornos WSL2 en múltiples PCs o notebooks, incluyendo ejemplos prácticos.&lt;/p>
&lt;h2 id="estrategia-1-exportar-y-restaurar-distribuciones-wsl2">Estrategia 1: Exportar y restaurar distribuciones WSL2&lt;/h2>
&lt;p>WSL2 permite exportar una distribución completa a un archivo &lt;code>.tar&lt;/code> que puede transferirse y reinstalarse en otra máquina.&lt;/p>
&lt;h3 id="exportar-distro-actual">Exportar distro actual&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wsl --export Ubuntu ubuntu-backup.tar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="importar-en-otra-máquina">Importar en otra máquina&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wsl --import UbuntuRestaurado D:&lt;span class="se">\W&lt;/span>SL&lt;span class="se">\U&lt;/span>buntu ubuntu-backup.tar --version &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto restaura una copia exacta del entorno, incluyendo paquetes, usuarios y configuraciones personalizadas.&lt;/p>
&lt;h2 id="estrategia-2-usar-dotfiles-y-scripts-de-inicialización">Estrategia 2: Usar dotfiles y scripts de inicialización&lt;/h2>
&lt;p>Versionar archivos de configuración personal (&lt;code>.bashrc&lt;/code>, &lt;code>.gitconfig&lt;/code>, &lt;code>.profile&lt;/code>, etc.) en un repositorio &lt;code>dotfiles&lt;/code>.&lt;/p>
&lt;h3 id="clonar-y-aplicar-dotfiles">Clonar y aplicar dotfiles&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git clone https://github.com/tuusuario/dotfiles ~/.dotfiles
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cp ~/.dotfiles/.bashrc ~/.bashrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> ~/.bashrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>También se pueden automatizar con herramientas como:&lt;/p>
&lt;ul>
&lt;li>&lt;code>chezmoi&lt;/code>&lt;/li>
&lt;li>&lt;code>dotbot&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="estrategia-3-reproducir-entornos-con-dev-containers-o-nix">Estrategia 3: Reproducir entornos con Dev Containers o Nix&lt;/h2>
&lt;p>Usar archivos &lt;code>devcontainer.json&lt;/code> para definir entornos que pueden ser abiertos en VS Code o Codespaces:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">.devcontainer/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── devcontainer.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── Dockerfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>También se puede usar &lt;code>shell.nix&lt;/code> o &lt;code>Dockerfile&lt;/code> si se trabaja con entornos reproducibles.&lt;/p>
&lt;h2 id="estrategia-4-sincronización-de-paquetes-con-scripts">Estrategia 4: Sincronización de paquetes con scripts&lt;/h2>
&lt;p>Guardar listas de paquetes instalados:&lt;/p>
&lt;h3 id="debianubuntu">Debian/Ubuntu:&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">dpkg --get-selections &amp;gt; packages.list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>En la otra máquina:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo dpkg --set-selections &amp;lt; packages.list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get dselect-upgrade
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="python">Python:&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip freeze &amp;gt; requirements.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pip install -r requirements.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="estrategia-5-usar-github-codespaces-como-entorno-espejo">Estrategia 5: Usar GitHub Codespaces como entorno espejo&lt;/h2>
&lt;p>Subir estructura del proyecto con &lt;code>.devcontainer&lt;/code> a un repositorio permite ejecutarlo directamente en la nube con GitHub Codespaces, asegurando un entorno 100% idéntico.&lt;/p>
&lt;p>Acceder desde cualquier máquina con solo iniciar sesión en GitHub.&lt;/p>
&lt;h2 id="recomendaciones-de-sincronización-segura">Recomendaciones de sincronización segura&lt;/h2>
&lt;ul>
&lt;li>Almacenar &lt;code>.tar&lt;/code> exportados en nube cifrada o con contraseña&lt;/li>
&lt;li>Evitar sincronizar &lt;code>/mnt/c/&lt;/code> o rutas externas entre máquinas&lt;/li>
&lt;li>No exportar claves privadas ni &lt;code>.ssh&lt;/code> en entornos compartidos&lt;/li>
&lt;li>Automatizar con scripts &lt;code>setup.sh&lt;/code> y &lt;code>make bootstrap&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Mantener entornos WSL2 sincronizados entre varios dispositivos es completamente factible con herramientas estándar del ecosistema Linux y Windows. Ya sea a través de exportaciones manuales, entornos declarativos o integración con GitHub Codespaces, se puede lograr coherencia, productividad y portabilidad en cualquier máquina.&lt;/p></description></item><item><title>Entrenamiento de modelos de ML en WSL2 con CUDA y cuDNN</title><link>https://cmas.dev/posts/2024-09-06-wsl2-ssh-agents/</link><pubDate>Fri, 06 Sep 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-09-06-wsl2-ssh-agents/</guid><description>&lt;p>En entornos de desarrollo modernos, la autenticación segura es fundamental. Ya sea para acceder a servidores remotos, clonar repositorios privados o firmar commits y correos electrónicos, herramientas como &lt;strong>SSH&lt;/strong> y &lt;strong>GPG&lt;/strong> son imprescindibles. &lt;strong>WSL2&lt;/strong> permite integrarlas con el entorno &lt;strong>Windows&lt;/strong>, pero también operar de forma autónoma con control completo sobre claves y agentes.&lt;/p>
&lt;p>Este artículo explica cómo gestionar agentes &lt;strong>SSH&lt;/strong> y &lt;strong>GPG&lt;/strong> en &lt;strong>WSL2&lt;/strong> de forma segura, cómo compartir claves entre &lt;strong>Windows&lt;/strong> y &lt;strong>Linux&lt;/strong>, y cómo evitar fugas o mal uso de identidades criptográficas.&lt;/p>
&lt;h2 id="objetivo">Objetivo&lt;/h2>
&lt;ul>
&lt;li>Configurar agentes SSH y GPG funcionales en WSL2&lt;/li>
&lt;li>Compartir claves o usar claves propias dentro del entorno Linux&lt;/li>
&lt;li>Asegurar el uso exclusivo desde WSL2 o compartirlo con Windows&lt;/li>
&lt;li>Firmar commits, acceder a GitHub, y cifrar archivos de forma segura&lt;/li>
&lt;/ul>
&lt;h2 id="ssh-desde-wsl2">SSH desde WSL2&lt;/h2>
&lt;h3 id="opción-1-claves-generadas-en-wsl2-recomendado-para-aislamiento">Opción 1: Claves generadas en WSL2 (recomendado para aislamiento)&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ssh-keygen -t ed25519 -C &lt;span class="s2">&amp;#34;dev@ejemplo.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Por defecto se guardan en &lt;code>~/.ssh/id_ed25519&lt;/code>.&lt;/p>
&lt;p>Agregar clave al agente:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">eval&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>ssh-agent -s&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ssh-add ~/.ssh/id_ed25519
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Copiar clave pública a GitHub:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat ~/.ssh/id_ed25519.pub
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="opción-2-compartir-agente-ssh-de-windows">Opción 2: Compartir agente SSH de Windows&lt;/h3>
&lt;p>Para esto, se necesita habilitar OpenSSH Agent en Windows y compartir el socket. Requiere herramientas adicionales como &lt;code>npiperelay&lt;/code> y &lt;code>socat&lt;/code>.&lt;/p>
&lt;h2 id="agente-ssh-persistente-en-wsl2">Agente SSH persistente en WSL2&lt;/h2>
&lt;p>Agregar esto al &lt;code>.bashrc&lt;/code> o &lt;code>.zshrc&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">SSH_AUTH_SOCK&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$HOME&lt;/span>&lt;span class="s2">/.ssh/ssh-agent.sock&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> ! pgrep -u &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$USER&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> ssh-agent &amp;gt; /dev/null&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">eval&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>ssh-agent -a &lt;span class="nv">$SSH_AUTH_SOCK&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &amp;gt; /dev/null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto evita tener que ejecutar &lt;code>ssh-agent&lt;/code> cada vez.&lt;/p>
&lt;h2 id="gpg-en-wsl2">GPG en WSL2&lt;/h2>
&lt;h3 id="generar-clave-nueva">Generar clave nueva&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">gpg --full-generate-key
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Usar tipo RSA, al menos 4096 bits, con email asociado a GitHub.&lt;/p>
&lt;h3 id="ver-claves-disponibles">Ver claves disponibles&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">gpg --list-secret-keys --keyid-format LONG
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="firmar-commits-de-git">Firmar commits de Git&lt;/h3>
&lt;p>Configurar firma:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git config --global user.signingkey ABCD123456789DEF
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git config --global commit.gpgsign &lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="habilitar-gpg-agent-persistente">Habilitar GPG-agent persistente&lt;/h3>
&lt;p>Agregar a &lt;code>~/.gnupg/gpg-agent.conf&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">enable-ssh-support
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">default-cache-ttl 600
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">max-cache-ttl 7200
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Reiniciar agente:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">gpgconf --kill gpg-agent
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gpgconf --launch gpg-agent
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="uso-conjunto-ssh--gpg-para-github">Uso conjunto: SSH + GPG para GitHub&lt;/h2>
&lt;ul>
&lt;li>Claves SSH para acceso remoto a repositorios&lt;/li>
&lt;li>Claves GPG para firma de commits y verificación de autoría&lt;/li>
&lt;li>Configuraciones almacenadas por separado para mayor seguridad&lt;/li>
&lt;/ul>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Usar passphrase en las claves privadas&lt;/li>
&lt;li>Mantener &lt;code>.ssh&lt;/code> y &lt;code>.gnupg&lt;/code> con permisos &lt;code>700&lt;/code>&lt;/li>
&lt;li>No compartir sockets SSH/GPG con Windows si no es necesario&lt;/li>
&lt;li>Automatizar carga de claves en &lt;code>.bashrc&lt;/code> o &lt;code>direnv&lt;/code>&lt;/li>
&lt;li>Backups seguros con cifrado de claves privadas&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Con &lt;strong>WSL2&lt;/strong> se puede configurar un entorno &lt;strong>Linux&lt;/strong> completamente funcional y seguro para autenticación con &lt;strong>SSH&lt;/strong> y &lt;strong>GPG&lt;/strong>, manteniendo control total sobre las claves sin comprometer la seguridad del sistema &lt;strong>Windows&lt;/strong>. Esta integración permite flujos de trabajo modernos y seguros para desarrollo, automatización y colaboración con sistemas remotos y plataformas como &lt;strong>GitHub&lt;/strong>.&lt;/p></description></item><item><title>Entrenamiento de modelos de ML en WSL2 con CUDA y cuDNN</title><link>https://cmas.dev/posts/2024-08-30-wsl2-ml-model-training/</link><pubDate>Fri, 30 Aug 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-08-30-wsl2-ml-model-training/</guid><description>&lt;p>Con la llegada del soporte oficial de GPU a WSL2, Windows se transforma en una plataforma viable y potente para desarrollo de inteligencia artificial desde un entorno Linux real. Gracias a la integración de CUDA y cuDNN, es posible entrenar modelos intensivos directamente desde WSL2, sin necesidad de usar máquinas virtuales completas ni infraestructura en la nube.&lt;/p>
&lt;p>Este artículo guía el proceso completo de habilitación de GPU, instalación de herramientas y entrenamiento con PyTorch, incluyendo consideraciones prácticas, troubleshooting y optimización de recursos.&lt;/p>
&lt;h2 id="arquitectura-cómo-funciona-la-gpu-en-wsl2">Arquitectura: cómo funciona la GPU en WSL2&lt;/h2>
&lt;ul>
&lt;li>WSL2 ejecuta un kernel Linux real dentro de una VM gestionada por Windows&lt;/li>
&lt;li>NVIDIA desarrolló un stack que permite exponer la GPU del host Windows al kernel Linux de WSL2&lt;/li>
&lt;li>La interfaz expuesta es &lt;code>libcuda.so&lt;/code>, compatible con CUDA Toolkit y cuDNN&lt;/li>
&lt;li>Desde Linux, se puede usar &lt;code>nvidia-smi&lt;/code>, &lt;code>nvcc&lt;/code> y cualquier framework ML compatible con CUDA&lt;/li>
&lt;/ul>
&lt;h2 id="verificar-drivers-nvidia-en-windows">Verificar drivers NVIDIA en Windows&lt;/h2>
&lt;p>Es importante instalar la versión correcta del driver para CUDA en WSL2:&lt;/p>
&lt;ol>
&lt;li>Descargar desde: &lt;a href="https://developer.nvidia.com/cuda/wsl">https://developer.nvidia.com/cuda/wsl&lt;/a>&lt;/li>
&lt;li>Verificar en PowerShell:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">nvidia-smi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Se debe ver la versión del driver y el modelo de la GPU (ej: RTX 3080).&lt;/p>
&lt;h2 id="preparar-el-entorno-wsl2">Preparar el entorno WSL2&lt;/h2>
&lt;p>Crear una distro Ubuntu específica para ML:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wsl --install -d Ubuntu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>O usar una distro existente y prepararla:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> sudo apt upgrade -y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install -y python3 python3-venv build-essential nvidia-cuda-toolkit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verificar acceso:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">nvidia-smi
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Si aparece “No devices were found”, cerrar con &lt;code>wsl --shutdown&lt;/code> y reiniciar.&lt;/p>
&lt;h2 id="crear-entorno-virtual-para-ml">Crear entorno virtual para ML&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">python3 -m venv ~/.venvs/ml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> ~/.venvs/ml/bin/activate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pip install --upgrade pip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Instalar bibliotecas de IA con soporte CUDA:&lt;/p>
&lt;h3 id="pytorch-cuda-118">PyTorch (CUDA 11.8):&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="tensorflow-cuda-112">TensorFlow (CUDA 11.2+):&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip install tensorflow
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="validar-entorno-con-pytorch">Validar entorno con PyTorch&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">torch&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cuda&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">is_available&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;GPU detectada:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cuda&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_device_name&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;CUDA no está disponible.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="caso-práctico-entrenamiento-con-gpu">Caso práctico: entrenamiento con GPU&lt;/h2>
&lt;h3 id="código-completo-pytorch">Código completo (PyTorch)&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">torch&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">torch&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">nn&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">torch.utils.data&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">DataLoader&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">TensorDataset&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Datos sintéticos&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Dataset&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ds&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TensorDataset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">loader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DataLoader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ds&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">batch_size&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Modelo simple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">model&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">nn&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Sequential&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nn&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Linear&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">128&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">nn&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ReLU&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">nn&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Linear&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">128&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cuda&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">loss_fn&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">nn&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">MSELoss&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">optimizer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">optim&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Adam&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">model&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parameters&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Entrenamiento&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">epoch&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">batch_x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">batch_y&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">loader&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">batch_x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">batch_y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">batch_x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cuda&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">batch_y&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cuda&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pred&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">model&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">batch_x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">loss&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">loss_fn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">batch_y&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">optimizer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">zero_grad&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">loss&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">backward&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">optimizer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">step&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Epoch &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">epoch&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">, Loss: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">loss&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">.4f&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="optimización-y-monitoreo">Optimización y monitoreo&lt;/h2>
&lt;h3 id="monitoreo-de-gpu">Monitoreo de GPU&lt;/h3>
&lt;p>Desde WSL2:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">watch -n &lt;span class="m">1&lt;/span> nvidia-smi
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>O usar &lt;code>gpustat&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip install gpustat
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gpustat
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="control-de-dispositivos">Control de dispositivos&lt;/h3>
&lt;p>Si se desea usar una sola GPU en multi-GPU:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">CUDA_VISIBLE_DEVICES&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span> python train.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="configurar-uso-mixto-de-cpugpu">Configurar uso mixto de CPU/GPU&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">device&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">device&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;cuda&amp;#34;&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cuda&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">is_available&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="s2">&amp;#34;cpu&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">model&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">model&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">device&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Activar entorno virtual siempre (&lt;code>source ~/.venvs/ml/bin/activate&lt;/code>)&lt;/li>
&lt;li>Mantener requirements.txt actualizado (&lt;code>pip freeze &amp;gt; requirements.txt&lt;/code>)&lt;/li>
&lt;li>Usar notebooks desde VS Code con Remote WSL + Jupyter&lt;/li>
&lt;li>Evitar ejecutar entrenamiento desde &lt;code>/mnt/c/&lt;/code> (mejor rendimiento en &lt;code>~/&lt;/code>)&lt;/li>
&lt;li>Desactivar reenvíos de puertos innecesarios en WSL para liberar recursos&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>WSL2 con soporte CUDA y cuDNN permite ejecutar flujos completos de entrenamiento de IA con aceleración por GPU directamente desde Windows. Esta arquitectura híbrida simplifica el desarrollo y la depuración, al mismo tiempo que mantiene la potencia y flexibilidad del ecosistema Linux para ciencia de datos y machine learning avanzado.&lt;/p></description></item><item><title>CI/CD desde WSL2 usando GitHub Actions y Azure Pipelines</title><link>https://cmas.dev/posts/2024-08-26-cicd-form-wsl2/</link><pubDate>Mon, 26 Aug 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-08-26-cicd-form-wsl2/</guid><description>&lt;p>Uno de los principales beneficios de usar &lt;strong>WSL2&lt;/strong> como entorno de desarrollo es la posibilidad de trabajar con herramientas de integración y entrega continua (CI/CD) de forma local antes de empujarlas a producción. Esto permite validar scripts, simular pipelines y ajustar flujos sin depender de entornos remotos. &lt;strong>GitHub Actions&lt;/strong> y &lt;strong>Azure Pipelines&lt;/strong> son dos de las plataformas más populares y compatibles con &lt;strong>WSL2&lt;/strong>.&lt;/p>
&lt;p>Este artículo explica cómo configurar y ejecutar pipelines CI/CD localmente desde WSL2, tanto para testing como automatización de despliegues, con ejemplos prácticos y buenas prácticas.&lt;/p>
&lt;h2 id="ventajas-de-usar-cicd-en-wsl2">Ventajas de usar CI/CD en WSL2&lt;/h2>
&lt;ul>
&lt;li>Simulación fiel de Linux en un entorno Windows&lt;/li>
&lt;li>Ahorro de tiempo y validación previa al push&lt;/li>
&lt;li>Compatibilidad con herramientas como Docker, Node.js, Python, etc.&lt;/li>
&lt;li>Integración directa con Git y GitHub desde Linux&lt;/li>
&lt;/ul>
&lt;h2 id="paso-1-preparar-entorno-en-wsl2">Paso 1: Preparar entorno en WSL2&lt;/h2>
&lt;p>Asegurarse de tener:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install -y git curl build-essential
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Configurar Git con tus credenciales:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git config --global user.name &lt;span class="s2">&amp;#34;Tu Nombre&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git config --global user.email &lt;span class="s2">&amp;#34;tu@correo.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Clonar un repositorio con flujo CI/CD:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git clone https://github.com/tuusuario/tu-repo.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> tu-repo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-2-ejecutar-github-actions-localmente-con-act">Paso 2: Ejecutar GitHub Actions localmente con &lt;code>act&lt;/code>&lt;/h2>
&lt;p>&lt;a href="https://github.com/nektos/act">&lt;code>act&lt;/code>&lt;/a> es una herramienta que permite ejecutar workflows de GitHub Actions localmente usando contenedores Docker.&lt;/p>
&lt;p>Instalar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">brew install act
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Si no tenés Homebrew:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">curl https://raw.githubusercontent.com/nektos/act/master/install.sh &lt;span class="p">|&lt;/span> sudo bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verificar workflows disponibles:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">act -l
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecutar un job:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">act -j build
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto ejecuta el workflow &lt;code>.github/workflows/build.yml&lt;/code> usando el runner predeterminado (&lt;code>ubuntu-latest&lt;/code> por defecto).&lt;/p>
&lt;p>Ejemplo de workflow para Node.js:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">push]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Install deps&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">npm install&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Run tests&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">npm test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-3-usar-azure-pipelines-desde-wsl2">Paso 3: Usar Azure Pipelines desde WSL2&lt;/h2>
&lt;p>Crear un pipeline en el portal de Azure DevOps y vincular el repositorio.&lt;/p>
&lt;p>Dentro del repo, usar un archivo &lt;code>azure-pipelines.yml&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">trigger&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">main&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">pool&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vmImage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">|&lt;/span>&lt;span class="sd">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> echo &amp;#34;Instalando dependencias&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> pip install -r requirements.txt
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> pytest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">displayName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Run tests&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Podés simular los pasos desde WSL2 para validar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip install -r requirements.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pytest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto garantiza que el script funcionará igual en el agente remoto de Azure.&lt;/p>
&lt;h2 id="paso-4-automatizar-desde-wsl2-usando-git">Paso 4: Automatizar desde WSL2 usando Git&lt;/h2>
&lt;p>Hacer commit de cambios en workflows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git add .github/workflows/build.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git commit -m &lt;span class="s2">&amp;#34;Agrega flujo de build CI&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push origin main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto disparará automáticamente el pipeline en GitHub o Azure según esté configurado.&lt;/p>
&lt;h2 id="buenas-prácticas-para-cicd-desde-wsl2">Buenas prácticas para CI/CD desde WSL2&lt;/h2>
&lt;ul>
&lt;li>Usar &lt;code>.env&lt;/code> y &lt;code>secrets&lt;/code> en Actions/Azure para no exponer claves&lt;/li>
&lt;li>Validar localmente antes de subir&lt;/li>
&lt;li>Usar &lt;code>matrix&lt;/code> para probar múltiples versiones (ej: Node.js 16 y 18)&lt;/li>
&lt;li>Versionar &lt;code>scripts/&lt;/code> de build y test para integrarlos en pipelines&lt;/li>
&lt;li>Ejecutar pruebas localmente con &lt;code>act&lt;/code> o manualmente desde terminal&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>&lt;strong>WSL2&lt;/strong> no solo es útil para desarrollo local, sino también para integrar y probar flujos CI/CD antes de llevarlos a producción. Gracias a herramientas como &lt;code>act&lt;/code> y la compatibilidad con pipelines &lt;strong>YAML&lt;/strong> de &lt;strong>GitHub&lt;/strong> y &lt;strong>Azure&lt;/strong>, es posible simular, depurar y optimizar procesos automatizados desde un entorno &lt;strong>Linux&lt;/strong> real, sin salir de &lt;strong>Windows&lt;/strong>.&lt;/p></description></item><item><title>Networking avanzado con WSL2: puertos, servicios y redes privadas</title><link>https://cmas.dev/posts/2024-08-16-wsl2-advanced-networking/</link><pubDate>Fri, 16 Aug 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-08-16-wsl2-advanced-networking/</guid><description>&lt;p>&lt;strong>WSL2&lt;/strong> proporciona un entorno &lt;strong>Linux&lt;/strong> completo ejecutándose dentro de una &lt;strong>VM&lt;/strong> ligera sobre &lt;strong>Windows&lt;/strong>. Esto cambia sustancialmente el comportamiento de red respecto a &lt;strong>WSL1&lt;/strong>. Para muchos desarrolladores, entender cómo funciona el networking en &lt;strong>WSL2&lt;/strong> es esencial para ejecutar servicios, exponer APIs, trabajar con contenedores, y simular entornos de red en pruebas más complejas.&lt;/p>
&lt;p>Este artículo explica en profundidad el modelo de red de &lt;strong>WSL2&lt;/strong>, cómo manejar puertos, exponer servicios, realizar redirecciones avanzadas y configurar redes privadas para flujos DevOps, testing y desarrollo de aplicaciones distribuidas.&lt;/p>
&lt;h2 id="introducción-al-modelo-de-red-en-wsl2">Introducción al modelo de red en WSL2&lt;/h2>
&lt;p>WSL2 ejecuta cada instancia de Linux dentro de una máquina virtual utilizando Hyper-V. A diferencia de WSL1, que compartía la pila de red del host Windows, en WSL2 la red está virtualizada:&lt;/p>
&lt;ul>
&lt;li>Cada distro tiene su propia interfaz (&lt;code>eth0&lt;/code>)&lt;/li>
&lt;li>Tiene su propia IP interna asignada por DHCP&lt;/li>
&lt;li>Los puertos que se abren dentro de WSL2 no están disponibles automáticamente en Windows, aunque se configuran redirecciones automáticas para &lt;code>localhost&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Ver IP del entorno WSL2:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ip a &lt;span class="p">|&lt;/span> grep inet
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="exposición-de-servicios-en-wsl2">Exposición de servicios en WSL2&lt;/h2>
&lt;p>Al ejecutar un servidor en WSL2, por ejemplo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">python3 -m http.server &lt;span class="m">8000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Este se expone dentro del entorno Linux. Si se accede desde el mismo WSL, la URL &lt;code>http://localhost:8000&lt;/code> funcionará correctamente. Para acceder desde Windows o el navegador, WSL2 crea automáticamente reglas de reenvío de puertos a &lt;code>localhost&lt;/code>.&lt;/p>
&lt;p>Esto es transparente para la mayoría de los usos básicos.&lt;/p>
&lt;h2 id="reenvío-avanzado-con-netsh-y-puertos-personalizados">Reenvío avanzado con netsh y puertos personalizados&lt;/h2>
&lt;p>Si el reenvío automático no funciona, o se quiere más control, se pueden definir reglas manualmente desde PowerShell en Windows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="n">netsh&lt;/span> &lt;span class="n">interface&lt;/span> &lt;span class="n">portproxy&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="n">v4tov4&lt;/span> &lt;span class="n">listenport&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="mf">8888&lt;/span> &lt;span class="n">connectport&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="mf">8000&lt;/span> &lt;span class="n">connectaddress&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="nb">WSL-IP&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verificar IP WSL:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ip addr show eth0 &lt;span class="p">|&lt;/span> grep inet
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Listar reglas activas:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="n">netsh&lt;/span> &lt;span class="n">interface&lt;/span> &lt;span class="n">portproxy&lt;/span> &lt;span class="n">show&lt;/span> &lt;span class="n">all&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Eliminar una regla:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="n">netsh&lt;/span> &lt;span class="n">interface&lt;/span> &lt;span class="n">portproxy&lt;/span> &lt;span class="n">delete&lt;/span> &lt;span class="n">v4tov4&lt;/span> &lt;span class="n">listenport&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="mf">8888&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configuración-de-múltiples-distros-en-red-privada-simulada">Configuración de múltiples distros en red privada simulada&lt;/h2>
&lt;p>Para simular una red privada local, se puede trabajar con varias distros en WSL2:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wsl --list --verbose
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecutar dos distros (por ejemplo, Ubuntu y Debian), y desde una hacer ping a la otra vía su IP interna.&lt;/p>
&lt;p>Si no responde, asegurarse de habilitar tráfico ICMP dentro de WSL y verificar que ambas estén activas al mismo tiempo.&lt;/p>
&lt;h2 id="comunicación-con-contenedores-docker">Comunicación con contenedores Docker&lt;/h2>
&lt;p>Si Docker Desktop está configurado para trabajar con WSL2, se puede usar la red de &lt;code>docker0&lt;/code> para conectar servicios:&lt;/p>
&lt;ol>
&lt;li>Correr un contenedor dentro del entorno WSL2&lt;/li>
&lt;li>Exponerlo con &lt;code>--network host&lt;/code> (si es compatible) o &lt;code>--publish&lt;/code>&lt;/li>
&lt;li>Usar &lt;code>localhost&lt;/code> o la IP del contenedor desde otro servicio en WSL2&lt;/li>
&lt;/ol>
&lt;p>Ejemplo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker run -d -p 5432:5432 --name pg postgres
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">psql -h localhost -p &lt;span class="m">5432&lt;/span> -U postgres
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="simulación-de-red-privada-con-herramientas-adicionales">Simulación de red privada con herramientas adicionales&lt;/h2>
&lt;h3 id="opción-1-tailscale-en-wsl2">Opción 1: Tailscale en WSL2&lt;/h3>
&lt;p>Tailscale permite crear una VPN mesh entre máquinas. Instalarlo en WSL2 permite acceder a servicios entre distros, otras PC o incluso entornos cloud.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">curl -fsSL https://tailscale.com/install.sh &lt;span class="p">|&lt;/span> sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo tailscale up
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="opción-2-tun2socks-y-redes-virtuales-personalizadas">Opción 2: tun2socks y redes virtuales personalizadas&lt;/h3>
&lt;p>Para flujos más complejos o tests con proxies, se pueden usar herramientas como:&lt;/p>
&lt;ul>
&lt;li>&lt;code>socat&lt;/code>&lt;/li>
&lt;li>&lt;code>ngrok&lt;/code>&lt;/li>
&lt;li>&lt;code>dnsmasq&lt;/code>&lt;/li>
&lt;li>&lt;code>iptables&lt;/code> con NAT y routing avanzado&lt;/li>
&lt;/ul>
&lt;p>Estas herramientas requieren experiencia en networking de Linux, pero funcionan perfectamente en WSL2.&lt;/p>
&lt;h2 id="buenas-prácticas-para-servicios-y-redes">Buenas prácticas para servicios y redes&lt;/h2>
&lt;ul>
&lt;li>Usar puertos por encima de 1024 para evitar privilegios root&lt;/li>
&lt;li>Mantener los servicios dentro del FS Linux (&lt;code>~/&lt;/code>) para evitar problemas de rendimiento&lt;/li>
&lt;li>Automatizar redirecciones en PowerShell o Bash con scripts&lt;/li>
&lt;li>Para uso profesional, evitar confiar en reenvíos automáticos y configurar manualmente&lt;/li>
&lt;li>Evitar trabajar con IPs cambiantes: usar DNS locales (&lt;code>/etc/hosts&lt;/code> o resolvers)&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>&lt;strong>WSL2&lt;/strong> ofrece una red aislada, pero accesible y flexible, ideal para desarrollo y pruebas. Comprender su arquitectura y cómo manipular puertos y conexiones permite simular redes privadas, trabajar con múltiples servicios y ejecutar entornos avanzados de forma profesional desde &lt;strong>Windows&lt;/strong> con un núcleo &lt;strong>Linux&lt;/strong> real.&lt;/p></description></item><item><title>Dev Containers con WSL2: casos reales con VS Code y GitHub Codespaces</title><link>https://cmas.dev/posts/2024-08-09-wsl2-dev-container/</link><pubDate>Fri, 09 Aug 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-08-09-wsl2-dev-container/</guid><description>&lt;p>Los &lt;strong>Dev Containers&lt;/strong> son entornos de desarrollo preconfigurados definidos por archivo, que permiten a cualquier persona trabajar con el mismo stack, dependencias y configuraciones. Combinados con &lt;strong>WSL2&lt;/strong> y &lt;strong>VS Code&lt;/strong>, permiten construir entornos reproducibles que funcionan tanto localmente como en la nube a través de GitHub Codespaces.&lt;/p>
&lt;p>Este artículo explica cómo trabajar con &lt;strong>Dev Containers&lt;/strong> en &lt;strong>WSL2&lt;/strong>, con ejemplos prácticos y recomendaciones para distintos escenarios.&lt;/p>
&lt;h1 id="qué-es-un-dev-container">Qué es un Dev Container&lt;/h1>
&lt;p>Un Dev Container se define mediante un archivo &lt;code>.devcontainer/devcontainer.json&lt;/code> y opcionalmente un &lt;code>Dockerfile&lt;/code>. Permite:&lt;/p>
&lt;ul>
&lt;li>Usar una imagen base o personalizada&lt;/li>
&lt;li>Instalar dependencias automáticamente&lt;/li>
&lt;li>Configurar extensiones y settings del editor&lt;/li>
&lt;li>Automatizar comandos post-configuración&lt;/li>
&lt;/ul>
&lt;h2 id="requisitos">Requisitos&lt;/h2>
&lt;ul>
&lt;li>Windows 10/11 con WSL2&lt;/li>
&lt;li>Docker Desktop instalado con integración WSL2 habilitada&lt;/li>
&lt;li>Visual Studio Code&lt;/li>
&lt;li>Extensiones:
&lt;ul>
&lt;li>Remote - Containers&lt;/li>
&lt;li>Dev Containers&lt;/li>
&lt;li>GitHub Codespaces (opcional)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="crear-un-proyecto-con-dev-container">Crear un proyecto con Dev Container&lt;/h2>
&lt;p>Estructura mínima:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">proyecto/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── .devcontainer/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── devcontainer.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └── Dockerfile (opcional)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejemplo básico de &lt;code>devcontainer.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;python-dev&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;image&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;mcr.microsoft.com/devcontainers/python:3.10&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;features&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;ghcr.io/devcontainers/features/git:1&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;postCreateCommand&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;pip install -r requirements.txt&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;customizations&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;vscode&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;extensions&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;ms-python.python&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;ms-toolsai.jupyter&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="abrir-el-entorno-con-vs-code">Abrir el entorno con VS Code&lt;/h2>
&lt;p>Desde VS Code:&lt;/p>
&lt;ol>
&lt;li>Abrir la carpeta del proyecto&lt;/li>
&lt;li>Ir al menú Command Palette (&lt;code>Ctrl+Shift+P&lt;/code>)&lt;/li>
&lt;li>Ejecutar: &lt;code>Dev Containers: Reopen in Container&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>Esto lanzará el contenedor dentro del entorno WSL2, montado como si fuera local.&lt;/p>
&lt;h2 id="caso-real-1-data-science-colaborativo">Caso real 1: Data Science colaborativo&lt;/h2>
&lt;p>Un equipo define un entorno con &lt;em>Python&lt;/em>, &lt;em>Jupyter&lt;/em>, &lt;em>pandas&lt;/em>, &lt;em>seaborn&lt;/em> y &lt;em>VS Code&lt;/em>. Todos trabajan con el mismo entorno en Windows vía WSL2 o en Codespaces, sin diferencias en comportamiento o dependencias.&lt;/p>
&lt;h2 id="caso-real-2-backend-con-nodejs-y-postgresql">Caso real 2: Backend con Node.js y PostgreSQL&lt;/h2>
&lt;p>El contenedor incluye Node.js y se conecta a una base PostgreSQL que corre en otro contenedor. Toda la infraestructura de desarrollo se define en &lt;code>docker-compose.yml&lt;/code> y el Dev Container se integra automáticamente.&lt;/p>
&lt;h2 id="sincronización-con-github-codespaces">Sincronización con GitHub Codespaces&lt;/h2>
&lt;p>El archivo &lt;code>.devcontainer/&lt;/code> funciona igual en la nube. Al crear un Codespace desde un repositorio con esta estructura, GitHub construye automáticamente el mismo entorno.&lt;/p>
&lt;p>Esto permite:&lt;/p>
&lt;ul>
&lt;li>Switch sin fricción entre local y nube&lt;/li>
&lt;li>Reproducibilidad garantizada&lt;/li>
&lt;li>Onboarding instantáneo de nuevos colaboradores&lt;/li>
&lt;/ul>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Usar imágenes base oficiales (&lt;code>devcontainers/&lt;/code>)&lt;/li>
&lt;li>Versionar &lt;code>.devcontainer&lt;/code> completo en el repositorio&lt;/li>
&lt;li>Automatizar instalaciones en &lt;code>postCreateCommand&lt;/code>&lt;/li>
&lt;li>Usar &lt;code>devcontainer.json&lt;/code> + &lt;code>docker-compose.yml&lt;/code> para múltiples servicios&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>&lt;strong>WSL2&lt;/strong> y &lt;strong>Dev Containers&lt;/strong> con &lt;strong>VS Code&lt;/strong> ofrecen un entorno portátil y reproducible para desarrollo moderno. Cuando se combinan con &lt;strong>GitHub Codespaces&lt;/strong>, permiten trabajar desde cualquier lugar con el mismo entorno, reduciendo errores, facilitando colaboración y acelerando el desarrollo en equipos distribuidos.&lt;/p></description></item><item><title>Implementación de clusters Kubernetes locales con k3s sobre WSL2</title><link>https://cmas.dev/posts/2024-08-02-wsl2-kubernetes-k3s/</link><pubDate>Fri, 02 Aug 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-08-02-wsl2-kubernetes-k3s/</guid><description>&lt;p>Para entornos de desarrollo y pruebas, contar con un cluster &lt;strong>Kubernetes&lt;/strong> liviano y funcional es clave. &lt;strong>k3s&lt;/strong>, una distribución de &lt;strong>Kubernetes&lt;/strong> simplificada, se puede ejecutar perfectamente sobre &lt;strong>WSL2&lt;/strong>, permitiendo crear un cluster local completo sin necesidad de herramientas pesadas como &lt;strong>Minikube&lt;/strong> o &lt;strong>Docker Desktop&lt;/strong>.&lt;/p>
&lt;p>Este artículo describe paso a paso cómo instalar y configurar &lt;strong>k3s&lt;/strong> en &lt;strong>WSL2&lt;/strong>, con recomendaciones prácticas para flujos &lt;strong>DevOps&lt;/strong> y testing de microservicios.&lt;/p>
&lt;h2 id="requisitos">Requisitos&lt;/h2>
&lt;ul>
&lt;li>Windows 10/11 con WSL2 habilitado&lt;/li>
&lt;li>Distro Linux instalada (Ubuntu 22.04 recomendado)&lt;/li>
&lt;li>Usuario con privilegios &lt;code>sudo&lt;/code>&lt;/li>
&lt;li>Docker (opcional para algunos complementos)&lt;/li>
&lt;/ul>
&lt;h2 id="paso-1-preparar-el-entorno">Paso 1: Preparar el entorno&lt;/h2>
&lt;p>Actualizar paquetes e instalar herramientas necesarias:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> sudo apt install -y curl wget gnupg lsb-release
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verificar la red de WSL2:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ip addr show eth0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-2-instalar-k3s-en-modo-single-node">Paso 2: Instalar k3s en modo single-node&lt;/h2>
&lt;p>Ejecutar el script oficial:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">curl -sfL https://get.k3s.io &lt;span class="p">|&lt;/span> sh -
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto instalará k3s como un servicio y arrancará automáticamente.&lt;/p>
&lt;p>Verificar que el cluster esté en funcionamiento:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo kubectl get nodes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Debería verse un nodo en estado &lt;code>Ready&lt;/code>.&lt;/p>
&lt;h2 id="paso-3-acceder-a-kubectl-sin-sudo">Paso 3: Acceder a &lt;code>kubectl&lt;/code> sin &lt;code>sudo&lt;/code>&lt;/h2>
&lt;p>Para facilitar el acceso:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo cp /etc/rancher/k3s/k3s.yaml ~/.kube/config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo chown &lt;span class="k">$(&lt;/span>id -u&lt;span class="k">)&lt;/span>:&lt;span class="k">$(&lt;/span>id -g&lt;span class="k">)&lt;/span> ~/.kube/config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Comprobar acceso:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get pods -A
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-4-desplegar-una-aplicación-de-prueba">Paso 4: Desplegar una aplicación de prueba&lt;/h2>
&lt;p>Ejemplo: servidor NGINX&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create deployment nginx --image&lt;span class="o">=&lt;/span>nginx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kubectl expose deployment nginx --port&lt;span class="o">=&lt;/span>&lt;span class="m">80&lt;/span> --type&lt;span class="o">=&lt;/span>NodePort
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ver el servicio expuesto:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get svc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Usar el puerto asignado (ej: 30001) para acceder desde el navegador:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">http://localhost:30001
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="paso-5-usar-k3s-en-entornos-multi-node-avanzado">Paso 5: Usar k3s en entornos multi-node (avanzado)&lt;/h2>
&lt;p>También es posible crear múltiples distros WSL2 y configurar nodos worker usando direcciones IP locales, aunque este flujo requiere túneles, sincronización SSH y scripts personalizados.&lt;/p>
&lt;p>Para la mayoría de los casos de desarrollo, el nodo único es suficiente.&lt;/p>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Configurar &lt;code>.kube/config&lt;/code> con perfiles personalizados&lt;/li>
&lt;li>Automatizar la instalación con Makefiles o scripts&lt;/li>
&lt;li>Agregar namespaces para separar proyectos: &lt;code>kubectl create ns desarrollo&lt;/code>&lt;/li>
&lt;li>Usar &lt;code>k9s&lt;/code> para una visualización tipo TUI&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>&lt;strong>k3s&lt;/strong> permite implementar clusters &lt;strong>Kubernetes&lt;/strong> funcionales en segundos, ideal para desarrollo de microservicios, CI/CD local o pruebas en pipelines. Ejecutarlo sobre &lt;strong>WSL2&lt;/strong> combina rendimiento, facilidad y compatibilidad total con &lt;strong>Linux&lt;/strong> sin salir de &lt;strong>Windows&lt;/strong>.&lt;/p></description></item><item><title>Benchmark de performance entre WSL2 y Hyper-V para cargas intensivas</title><link>https://cmas.dev/posts/2024-07-26-wsl2-performance-benchmark/</link><pubDate>Fri, 26 Jul 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-07-26-wsl2-performance-benchmark/</guid><description>&lt;p>&lt;strong>WSL2&lt;/strong> y &lt;strong>Hyper-V&lt;/strong> son tecnologías de virtualización de Microsoft que permiten ejecutar entornos Linux sobre Windows. Aunque WSL2 internamente utiliza Hyper-V, existen diferencias en cómo se gestionan los recursos, lo que puede impactar el rendimiento en tareas intensivas como compilación, procesamiento de datos o entrenamiento de modelos.&lt;/p>
&lt;p>Este artículo presenta un enfoque comparativo y práctico para medir el rendimiento de ambos entornos en escenarios de carga pesada.&lt;/p>
&lt;h2 id="objetivo">Objetivo&lt;/h2>
&lt;ul>
&lt;li>Comparar rendimiento de CPU, disco y memoria en WSL2 vs VM Hyper-V&lt;/li>
&lt;li>Ejecutar pruebas reproducibles con herramientas estándar&lt;/li>
&lt;li>Identificar ventajas y limitaciones de cada entorno según la carga&lt;/li>
&lt;/ul>
&lt;h2 id="preparación-del-entorno">Preparación del entorno&lt;/h2>
&lt;p>En ambos casos se utiliza Ubuntu 22.04 como sistema base, con los mismos paquetes y configuración.&lt;/p>
&lt;h3 id="para-wsl2">Para WSL2:&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> sudo apt install -y sysbench stress-ng fio build-essential
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="para-hyper-v">Para Hyper-V:&lt;/h3>
&lt;ul>
&lt;li>Crear una máquina virtual con Ubuntu 22.04&lt;/li>
&lt;li>Asignar igual cantidad de CPU (por ejemplo, 4) y memoria (8 GB)&lt;/li>
&lt;li>Instalar los mismos paquetes para benchmark&lt;/li>
&lt;/ul>
&lt;h2 id="prueba-1-cpu-sysbench">Prueba 1: CPU (sysbench)&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sysbench cpu --threads&lt;span class="o">=&lt;/span>&lt;span class="m">4&lt;/span> --time&lt;span class="o">=&lt;/span>&lt;span class="m">10&lt;/span> run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Mide la cantidad de operaciones realizadas por segundo. Ejecutar la misma prueba en ambos entornos y anotar el throughput.&lt;/p>
&lt;h2 id="prueba-2-io-en-disco-fio">Prueba 2: I/O en disco (fio)&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">fio --name&lt;span class="o">=&lt;/span>seqwrite --size&lt;span class="o">=&lt;/span>512M --rw&lt;span class="o">=&lt;/span>write --bs&lt;span class="o">=&lt;/span>4k --numjobs&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> --runtime&lt;span class="o">=&lt;/span>&lt;span class="m">30&lt;/span> --group_reporting
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esta prueba mide el rendimiento de escritura secuencial. También se puede hacer con lectura (&lt;code>--rw=read&lt;/code>) o mezcla (&lt;code>--rw=randrw&lt;/code>).&lt;/p>
&lt;h2 id="prueba-3-memoria-stress-ng">Prueba 3: Memoria (stress-ng)&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">stress-ng --vm &lt;span class="m">2&lt;/span> --vm-bytes 1G --timeout 20s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Simula presión de memoria con dos workers asignados a 1 GB cada uno.&lt;/p>
&lt;h2 id="prueba-4-compilación-intensiva">Prueba 4: Compilación intensiva&lt;/h2>
&lt;p>Clonar y compilar un proyecto grande, por ejemplo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git clone https://github.com/rust-lang/rust.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> rust
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./x.py build
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Comparar el tiempo de compilación completo.&lt;/p>
&lt;h2 id="resultados-esperados">Resultados esperados&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Prueba&lt;/th>
&lt;th>WSL2&lt;/th>
&lt;th>Hyper-V VM&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>CPU&lt;/td>
&lt;td>Similar&lt;/td>
&lt;td>Similar&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Disco (escritura)&lt;/td>
&lt;td>Mejor en Hyper-V*&lt;/td>
&lt;td>Peor en WSL2*&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>RAM (uso intensivo)&lt;/td>
&lt;td>Similar&lt;/td>
&lt;td>Similar&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Compilación&lt;/td>
&lt;td>Mejor en WSL2 (menos overhead de VM)&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>*El rendimiento de disco en WSL2 depende de si se trabaja dentro del FS Linux (&lt;code>~/&lt;/code>) o en &lt;code>/mnt/c/&lt;/code>, donde es mucho más lento.&lt;/p>
&lt;h2 id="buenas-prácticas-para-benchmarking">Buenas prácticas para benchmarking&lt;/h2>
&lt;ul>
&lt;li>Reiniciar ambos entornos antes de cada prueba&lt;/li>
&lt;li>Usar cronómetro o &lt;code>time&lt;/code> para medir duración total&lt;/li>
&lt;li>Evitar procesos en segundo plano que alteren los resultados&lt;/li>
&lt;li>Repetir pruebas y tomar promedio&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>WSL2 ofrece un excelente rendimiento para la mayoría de las cargas intensivas, con ventajas en integración con Windows y facilidad de uso. Hyper-V ofrece más aislamiento y control de hardware, con mejor I/O de disco en algunos casos. La elección depende del tipo de carga y necesidades específicas del entorno de trabajo.&lt;/p></description></item><item><title>Seguridad avanzada en WSL2: sandboxing y seccomp</title><link>https://cmas.dev/posts/2024-07-19-wsl2-advanced-security/</link><pubDate>Fri, 19 Jul 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-07-19-wsl2-advanced-security/</guid><description>&lt;p>WSL2, al ejecutar un kernel Linux completo dentro de Windows, hereda capacidades de seguridad del subsistema Linux y del entorno de Windows. Esto permite aplicar técnicas avanzadas como sandboxing y control de llamadas al sistema mediante &lt;code>seccomp&lt;/code>, protegiendo aplicaciones y conteniendo procesos potencialmente inseguros.&lt;/p>
&lt;h2 id="entendiendo-el-modelo-de-seguridad-de-wsl2">Entendiendo el modelo de seguridad de WSL2&lt;/h2>
&lt;ul>
&lt;li>WSL2 corre dentro de una VM ligera sobre Hyper-V&lt;/li>
&lt;li>Tiene su propio espacio de usuarios, red y sistema de archivos&lt;/li>
&lt;li>Puede acceder al sistema de archivos Windows, pero de forma controlada&lt;/li>
&lt;li>Hereda los permisos y restricciones del usuario de Windows anfitrión&lt;/li>
&lt;/ul>
&lt;p>Aunque no es un contenedor, se puede aplicar aislamiento similar con herramientas del ecosistema Linux.&lt;/p>
&lt;h2 id="usar-seccomp-para-limitar-llamadas-al-sistema">Usar seccomp para limitar llamadas al sistema&lt;/h2>
&lt;p>&lt;code>seccomp&lt;/code> permite definir qué llamadas al sistema (&lt;code>syscalls&lt;/code>) puede hacer un proceso. Esto es útil para bloquear funcionalidades peligrosas o limitar comportamientos.&lt;/p>
&lt;p>Instalar herramientas necesarias:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt install -y seccomp libseccomp-dev strace
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejemplo de script bloqueando &lt;code>execve&lt;/code> (ejecución de procesos):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;linux/seccomp.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;linux/filter.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;linux/audit.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;sys/prctl.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">prctl&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PR_SET_SECCOMP&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SECCOMP_MODE_STRICT&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hola, mundo seguro!&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">execl&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/bin/ls&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;ls&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// Esta llamada será bloqueada
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Compilar y ejecutar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">gcc secure.c -o secure
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./secure
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>El intento de ejecutar &lt;code>/bin/ls&lt;/code> fallará, mostrando que &lt;code>execve&lt;/code> fue bloqueado.&lt;/p>
&lt;h2 id="usar-firejail-para-sandboxing-de-procesos">Usar Firejail para sandboxing de procesos&lt;/h2>
&lt;p>&lt;strong>Firejail&lt;/strong> crea entornos aislados para correr procesos sin acceso a partes sensibles del sistema.&lt;/p>
&lt;p>Instalar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt install -y firejail
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecutar un programa con aislamiento:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">firejail --private gedit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto corre &lt;code>gedit&lt;/code> en un entorno aislado, sin acceso al home del usuario.&lt;/p>
&lt;p>Configurar perfiles personalizados para más control:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">firejail --profile&lt;span class="o">=&lt;/span>mi_perfil.profile programa
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="reforzar-seguridad-con-permisos-de-archivo">Reforzar seguridad con permisos de archivo&lt;/h2>
&lt;p>Aplicar técnicas tradicionales:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">chmod -R go-rwx ~/proyecto_secreto
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chattr +i archivo.conf &lt;span class="c1"># Evita que sea modificado&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>También se pueden usar &lt;em>namespaces&lt;/em> y &lt;em>cgroups&lt;/em> para limitar CPU, RAM y accesos.&lt;/p>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Usar usuarios no privilegiados por defecto&lt;/li>
&lt;li>Aislar procesos críticos con &lt;code>firejail&lt;/code> o seccomp&lt;/li>
&lt;li>Limitar accesos al sistema de archivos de Windows desde &lt;code>/mnt/c/&lt;/code>&lt;/li>
&lt;li>Auditar procesos con &lt;code>strace&lt;/code> o &lt;code>auditd&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>WSL2 no solo ofrece potencia para desarrollo, sino también mecanismos de seguridad avanzados para proteger datos y procesos. Con herramientas como seccomp, Firejail y permisos reforzados, se puede alcanzar un alto nivel de aislamiento sin perder flexibilidad, incluso en entornos compartidos o productivos.&lt;/p></description></item><item><title>Nix + WSL2: gestión declarativa de entornos</title><link>https://cmas.dev/posts/2024-07-12-wsl2-nix/</link><pubDate>Fri, 12 Jul 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-07-12-wsl2-nix/</guid><description>&lt;p>&lt;strong>Nix&lt;/strong> es un sistema de gestión de paquetes y configuración que permite definir entornos de desarrollo de forma &lt;strong>declarativa y reproducible&lt;/strong>. Al combinar Nix con WSL2, se obtiene lo mejor de ambos mundos: control total sobre las dependencias y entornos aislados, con la eficiencia de Linux corriendo dentro de Windows.&lt;/p>
&lt;h2 id="por-qué-usar-nix-en-wsl2">Por qué usar Nix en WSL2&lt;/h2>
&lt;ul>
&lt;li>Configuración de entornos por proyecto&lt;/li>
&lt;li>Reproducibilidad exacta entre máquinas y desarrolladores&lt;/li>
&lt;li>Aislamiento sin necesidad de contenedores&lt;/li>
&lt;li>Compatibilidad total con herramientas Linux&lt;/li>
&lt;/ul>
&lt;p>Esto es especialmente útil en equipos, en proyectos de investigación, o en flujos DevOps que exigen entornos estables.&lt;/p>
&lt;h2 id="instalar-nix-en-wsl2">Instalar Nix en WSL2&lt;/h2>
&lt;p>Desde una terminal en Ubuntu o Debian:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sh &amp;lt;&lt;span class="o">(&lt;/span>curl -L https://nixos.org/nix/install&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Al finalizar, activar el entorno:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">. ~/.nix-profile/etc/profile.d/nix.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verificar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">nix-env --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="crear-entorno-declarativo-con-shellnix">Crear entorno declarativo con &lt;code>shell.nix&lt;/code>&lt;/h2>
&lt;p>Ejemplo: entorno Python con NumPy y Pandas.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-nix" data-lang="nix">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># shell.nix&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span> &lt;span class="n">pkgs&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="sr">&amp;lt;nixpkgs&amp;gt;&lt;/span> &lt;span class="p">{}&lt;/span> &lt;span class="p">}:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">pkgs&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">mkShell&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">buildInputs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="n">pkgs&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">python310&lt;/span> &lt;span class="n">pkgs&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">python310Packages&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">numpy&lt;/span> &lt;span class="n">pkgs&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">python310Packages&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pandas&lt;/span> &lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Activar el entorno:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">nix-shell
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Una vez dentro, las herramientas estarán disponibles sin afectar el sistema.&lt;/p>
&lt;h2 id="caso-práctico-entorno-para-ciencia-de-datos">Caso práctico: entorno para ciencia de datos&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-nix" data-lang="nix">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># shell.nix&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span> &lt;span class="n">pkgs&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="sr">&amp;lt;nixpkgs&amp;gt;&lt;/span> &lt;span class="p">{}&lt;/span> &lt;span class="p">}:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">pkgs&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">mkShell&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;data-env&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">buildInputs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pkgs&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">python310&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pkgs&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">python310Packages&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">numpy&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pkgs&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">python310Packages&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">scipy&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pkgs&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">python310Packages&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">matplotlib&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pkgs&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">python310Packages&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">jupyter&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Iniciar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">nix-shell
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jupyter notebook
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto lanza un entorno Jupyter funcional desde WSL2.&lt;/p>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Incluir &lt;code>shell.nix&lt;/code> en control de versiones&lt;/li>
&lt;li>Usar &lt;code>direnv&lt;/code> para cargar entornos automáticamente&lt;/li>
&lt;li>Combinar con &lt;code>lorri&lt;/code> o &lt;code>nix-direnv&lt;/code> para flujos más eficientes&lt;/li>
&lt;li>Actualizar paquetes vía &lt;code>nix-channel --update&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>&lt;strong>Nix&lt;/strong> permite declarar entornos portables y estables para desarrollo, ciencia de datos o DevOps. Junto a WSL2, ofrece una solución poderosa para definir, compartir y automatizar configuraciones sin depender de contenedores o configuraciones globales, todo desde un entorno Linux dentro de Windows.&lt;/p></description></item><item><title>Desarrollo Rust en WSL2: toolchain, testing y empaquetado</title><link>https://cmas.dev/posts/2024-07-05-wsl2-rust-development/</link><pubDate>Fri, 05 Jul 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-07-05-wsl2-rust-development/</guid><description>&lt;p>&lt;strong>Rust&lt;/strong> es un lenguaje moderno y seguro por diseño, ideal para crear aplicaciones de alto rendimiento y sistemas embebidos. Combinado con WSL2, permite a los desarrolladores trabajar en un entorno &lt;strong>Linux&lt;/strong> desde &lt;strong>Windows&lt;/strong>, aprovechando herramientas como &lt;code>cargo&lt;/code>, &lt;code>rustup&lt;/code>, pruebas automatizadas y sistemas de empaquetado como &lt;code>cargo-deb&lt;/code>.&lt;/p>
&lt;h2 id="instalar-rust-en-wsl2">Instalar Rust en WSL2&lt;/h2>
&lt;p>Desde la terminal WSL2:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">curl --proto &lt;span class="s1">&amp;#39;=https&amp;#39;&lt;/span> --tlsv1.2 -sSf https://sh.rustup.rs &lt;span class="p">|&lt;/span> sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> &lt;span class="nv">$HOME&lt;/span>/.cargo/env
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verificar la instalación:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">rustc --version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cargo --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="crear-un-proyecto-rust-básico">Crear un proyecto Rust básico&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cargo new mi_app
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> mi_app
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cargo run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto crea una estructura de proyecto estándar con &lt;code>Cargo.toml&lt;/code> y un archivo &lt;code>main.rs&lt;/code> en &lt;code>src/&lt;/code>.&lt;/p>
&lt;h2 id="usar-componentes-adicionales-del-toolchain">Usar componentes adicionales del toolchain&lt;/h2>
&lt;p>Instalar herramientas comunes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">rustup component add clippy rustfmt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verificar y formatear el código:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cargo clippy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cargo fmt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="escribir-y-ejecutar-tests-automatizados">Escribir y ejecutar tests automatizados&lt;/h2>
&lt;p>Agregar una función de prueba en &lt;code>src/lib.rs&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#[cfg(test)]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">mod&lt;/span> &lt;span class="nn">tests&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">use&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">super&lt;/span>::&lt;span class="o">*&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cp">#[test]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">suma_funciona&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">assert_eq!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecutar tests:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cargo &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Se obtiene un resumen detallado del resultado, cobertura y errores si existen.&lt;/p>
&lt;h2 id="empaquetado-del-proyecto-con-cargo-deb">Empaquetado del proyecto con cargo-deb&lt;/h2>
&lt;p>Instalar herramienta para generar paquetes &lt;code>.deb&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cargo install cargo-deb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Empaquetar la aplicación:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cargo deb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto genera un archivo &lt;code>.deb&lt;/code> listo para distribuir e instalar en sistemas basados en Debian.&lt;/p>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Usar &lt;code>cargo watch&lt;/code> para recompilar automáticamente al guardar cambios&lt;/li>
&lt;li>Separar lógica en módulos reutilizables dentro de &lt;code>src/&lt;/code>&lt;/li>
&lt;li>Mantener documentación con &lt;code>cargo doc --open&lt;/code>&lt;/li>
&lt;li>Publicar paquetes en crates.io solo si están documentados y testeados&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Desarrollar con Rust en WSL2 brinda una experiencia fluida y potente, integrando el ecosistema Linux sin salir de Windows. Herramientas como &lt;code>cargo&lt;/code>, &lt;code>rustfmt&lt;/code>, &lt;code>clippy&lt;/code> y &lt;code>cargo-deb&lt;/code> permiten construir, probar y empaquetar software profesionalmente desde un entorno moderno y reproducible.&lt;/p></description></item><item><title>Uso de WSLg: apps gráficas Linux en Windows con casos reales</title><link>https://cmas.dev/posts/2024-06-28-wsl2-wslg/</link><pubDate>Fri, 28 Jun 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-06-28-wsl2-wslg/</guid><description>&lt;p>WSLg (Windows Subsystem for Linux GUI) permite ejecutar aplicaciones gráficas de Linux directamente en Windows, sin necesidad de configurar un servidor X manualmente. Esta funcionalidad, incluida en WSL2 desde Windows 11, abre nuevas posibilidades para desarrolladores que utilizan herramientas Linux de escritorio como editores, simuladores, navegadores o visores de datos científicos.&lt;/p>
&lt;h2 id="qué-es-wslg">Qué es WSLg&lt;/h2>
&lt;p>WSLg es una capa que permite renderizar interfaces gráficas de aplicaciones Linux en el entorno Windows, utilizando una integración nativa de RDP (Remote Desktop Protocol) entre la VM de WSL2 y el host de Windows. No requiere instalación adicional en Windows 11.&lt;/p>
&lt;h2 id="verificar-que-wslg-esté-activo">Verificar que WSLg esté activo&lt;/h2>
&lt;p>Ejecutar una app gráfica como &lt;code>xeyes&lt;/code> o &lt;code>gedit&lt;/code> desde la terminal WSL2:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install -y x11-apps gedit
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xeyes &lt;span class="p">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gedit &lt;span class="p">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Si la ventana se muestra correctamente, WSLg está funcionando.&lt;/p>
&lt;h2 id="caso-real-visualización-de-datos-científicos">Caso real: Visualización de datos científicos&lt;/h2>
&lt;p>Instalar herramientas como &lt;code>matplotlib&lt;/code> o &lt;code>plotly&lt;/code> en Python y mostrar gráficos interactivos directamente desde Linux:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip install matplotlib
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Código de ejemplo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">matplotlib.pyplot&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">plt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Gráfico de prueba en WSLg&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>La ventana gráfica se abrirá automáticamente en Windows usando WSLg.&lt;/p>
&lt;h2 id="caso-real-uso-de-herramientas-gtk-o-qt">Caso real: Uso de herramientas GTK o Qt&lt;/h2>
&lt;p>Aplicaciones como GIMP, Inkscape, Kdenlive o editores como Geany se pueden instalar directamente desde el gestor de paquetes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt install -y gimp inkscape kdenlive geany
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Útiles para diseñadores, editores de video o usuarios que necesitan herramientas visuales sin salir del entorno Linux.&lt;/p>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Usar una distro actualizada (Ubuntu 22.04 o superior)&lt;/li>
&lt;li>Evitar abrir decenas de ventanas para no saturar el canal RDP&lt;/li>
&lt;li>Asegurarse de tener aceleración gráfica habilitada (con &lt;code>glxinfo | grep &amp;quot;OpenGL renderer&amp;quot;&lt;/code>)&lt;/li>
&lt;li>Para rendimiento óptimo, correr apps que no demanden gráficos 3D complejos&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>WSLg extiende las capacidades de WSL2 al permitir ejecutar aplicaciones gráficas Linux de forma nativa en Windows. Esto simplifica flujos de trabajo mixtos, mejora la productividad y elimina la necesidad de usar máquinas virtuales o dual boot para tareas visuales o científicas complejas.&lt;/p></description></item><item><title>Compilación cruzada para Linux y Windows desde WSL2</title><link>https://cmas.dev/posts/2024-06-21-wsl2-cross-compiling/</link><pubDate>Fri, 21 Jun 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-06-21-wsl2-cross-compiling/</guid><description>&lt;p>Uno de los beneficios clave de WSL2 es la posibilidad de compilar binarios para Linux dentro de un entorno Linux completo, mientras se sigue trabajando desde Windows. Además, es posible configurar &lt;strong>compilación cruzada&lt;/strong> para generar ejecutables de Windows (&lt;code>.exe&lt;/code>) directamente desde WSL2, lo cual es útil para flujos de trabajo DevOps, empaquetado o testing multiplataforma.&lt;/p>
&lt;h3 id="-objetivo">🎯 Objetivo&lt;/h3>
&lt;ul>
&lt;li>Compilar aplicaciones para Linux directamente en WSL2&lt;/li>
&lt;li>Generar ejecutables &lt;code>.exe&lt;/code> de Windows desde WSL2 usando MinGW&lt;/li>
&lt;li>Compilar con CMake y Go para ambos entornos&lt;/li>
&lt;li>Automatizar la compilación multiplataforma&lt;/li>
&lt;/ul>
&lt;h2 id="-paso-1-preparar-entorno-de-compilación-en-wsl2">⚙️ Paso 1: Preparar entorno de compilación en WSL2&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install -y build-essential cmake mingw-w64 gcc g++ git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verificar toolchains:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">gcc --version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">x86_64-w64-mingw32-gcc --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-paso-2-compilar-binario-nativo-para-linux">🧪 Paso 2: Compilar binario nativo para Linux&lt;/h2>
&lt;p>Crear archivo &lt;code>hello.c&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hola desde Linux&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Compilar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">gcc hello.c -o hello-linux
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./hello-linux
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-paso-3-compilar-para-windows-exe-desde-wsl2">🪟 Paso 3: Compilar para Windows (.exe) desde WSL2&lt;/h2>
&lt;p>Usar MinGW para compilar en formato Windows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">x86_64-w64-mingw32-gcc hello.c -o hello.exe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Mover el binario a Windows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cp hello.exe /mnt/c/Users/tuusuario/Desktop/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecutar desde PowerShell:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="n">C:&lt;/span>&lt;span class="p">\&lt;/span>&lt;span class="n">Users&lt;/span>&lt;span class="p">\&lt;/span>&lt;span class="n">tuusuario&lt;/span>&lt;span class="p">\&lt;/span>&lt;span class="n">Desktop&lt;/span>&lt;span class="p">\&lt;/span>&lt;span class="n">hello&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">exe&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-paso-4-compilación-cruzada-con-cmake">🛠️ Paso 4: Compilación cruzada con CMake&lt;/h2>
&lt;p>Estructura de proyecto:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">miapp/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── CMakeLists.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── main.c
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>CMakeLists.txt:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cmake" data-lang="cmake">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cmake_minimum_required&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">VERSION&lt;/span> &lt;span class="s">3.10&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="nb">project&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">miapp&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="nb">add_executable&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">miapp&lt;/span> &lt;span class="s">main.c&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Build Linux:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir build-linux &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">cd&lt;/span> build-linux
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cmake ..
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Build Windows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir build-win &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">cd&lt;/span> build-win
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cmake -DCMAKE_SYSTEM_NAME&lt;span class="o">=&lt;/span>Windows -DCMAKE_C_COMPILER&lt;span class="o">=&lt;/span>x86_64-w64-mingw32-gcc ..
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-paso-5-compilar-con-go-para-ambos-entornos">💡 Paso 5: Compilar con Go para ambos entornos&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt install -y golang
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Go detecta plataforma con variables &lt;code>GOOS&lt;/code> y &lt;code>GOARCH&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Linux nativo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">go build -o hello-linux main.go
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Windows desde WSL2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">GOOS&lt;/span>&lt;span class="o">=&lt;/span>windows &lt;span class="nv">GOARCH&lt;/span>&lt;span class="o">=&lt;/span>amd64 go build -o hello.exe main.go
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-conclusión">✅ Conclusión&lt;/h2>
&lt;p>WSL2 permite compilar aplicaciones para Linux y Windows sin salir del entorno de desarrollo, facilitando pruebas, empaquetado y automatización de builds multiplataforma. Con herramientas como MinGW, CMake y Go, es posible mantener un flujo productivo y coherente desde una única máquina.&lt;/p></description></item><item><title>Deno, Go y Python en WSL2 para flujos mixtos de backend + AI</title><link>https://cmas.dev/posts/2024-06-14-wsl2-backend-ai/</link><pubDate>Fri, 14 Jun 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-06-14-wsl2-backend-ai/</guid><description>&lt;p>Combinar lenguajes modernos como &lt;strong>Deno&lt;/strong>, &lt;strong>Go&lt;/strong> y &lt;strong>Python&lt;/strong> permite crear soluciones backend de alto rendimiento con componentes de inteligencia artificial de forma modular y eficiente. Gracias a &lt;strong>WSL2&lt;/strong>, es posible configurar este stack en Linux desde Windows, integrando herramientas, librerías y entornos de ejecución en un mismo flujo de trabajo.&lt;/p>
&lt;h2 id="-objetivo">🎯 Objetivo&lt;/h2>
&lt;ul>
&lt;li>Instalar Deno, Go y Python en WSL2&lt;/li>
&lt;li>Ejecutar servidores backend ligeros con Deno y Go&lt;/li>
&lt;li>Usar Python para lógica de IA (modelo, predicción)&lt;/li>
&lt;li>Comunicar los componentes entre sí usando HTTP/REST&lt;/li>
&lt;/ul>
&lt;h2 id="-paso-1-instalar-entornos-en-wsl2">⚙️ Paso 1: Instalar entornos en WSL2&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Python&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> sudo apt install -y python3 python3-pip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Go&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install -y golang
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Deno&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">curl -fsSL https://deno.land/install.sh &lt;span class="p">|&lt;/span> sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;export DENO_INSTALL=&amp;#34;$HOME/.deno&amp;#34;&amp;#39;&lt;/span> &amp;gt;&amp;gt; ~/.bashrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;export PATH=&amp;#34;$DENO_INSTALL/bin:$PATH&amp;#34;&amp;#39;&lt;/span> &amp;gt;&amp;gt; ~/.bashrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> ~/.bashrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verificar versiones:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">python3 --version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">go version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">deno --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-paso-2-crear-backend-http-con-deno">🧪 Paso 2: Crear backend HTTP con Deno&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// api.ts
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">serve&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s2">&amp;#34;https://deno.land/std@0.178.0/http/server.ts&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">serve&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Response&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Hola desde Deno API&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">port&lt;/span>: &lt;span class="kt">8000&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecutar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">deno run --allow-net api.ts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-paso-3-crear-servicio-go-para-procesamiento">⚙️ Paso 3: Crear servicio Go para procesamiento&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// server.go
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">HandleFunc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/go&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ResponseWriter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Request&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Hola desde Go service&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ListenAndServe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;:8080&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Compilar y correr:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">go run server.go
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-paso-4-python-como-motor-de-ia">🤖 Paso 4: Python como motor de IA&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># model.py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">flask&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Flask&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">jsonify&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">numpy&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">np&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Flask&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="vm">__name__&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/predict&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">methods&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;POST&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">predict&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">json&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;input&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pred&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log1p&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># lógica simulada&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">jsonify&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="s1">&amp;#39;result&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">pred&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tolist&lt;/span>&lt;span class="p">()})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">5000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Instalar dependencias y correr:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip install flask numpy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">python3 model.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-paso-5-comunicación-entre-servicios">🔗 Paso 5: Comunicación entre servicios&lt;/h2>
&lt;p>Desde Deno o Go se puede consumir el endpoint de Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">curl -X POST http://localhost:5000/predict -H &lt;span class="s2">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> -d &lt;span class="s1">&amp;#39;{&amp;#34;input&amp;#34;: [1, 2, 3]}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Respuesta:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>&lt;span class="nt">&amp;#34;result&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mf">0.6931&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0986&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.3862&lt;/span>&lt;span class="p">]}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-conclusión">✅ Conclusión&lt;/h2>
&lt;p>Con WSL2 es posible combinar de forma eficiente lenguajes especializados para backend (Go, Deno) y lógica de IA (Python), manteniendo un entorno ligero y modular. Esta arquitectura híbrida mejora la productividad y facilita el mantenimiento en equipos multidisciplinarios que desarrollan APIs inteligentes.&lt;/p></description></item><item><title>Telemetría y monitoreo de procesos WSL2 con herramientas como Prometheus</title><link>https://cmas.dev/posts/2024-06-07-wsl2-prometheus/</link><pubDate>Fri, 07 Jun 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-06-07-wsl2-prometheus/</guid><description>&lt;p>El monitoreo de recursos y procesos es clave en cualquier entorno de desarrollo o pruebas. Gracias a la compatibilidad de WSL2 con herramientas Linux estándar, es posible usar soluciones de &lt;strong>observabilidad como Prometheus&lt;/strong> y &lt;strong>Node Exporter&lt;/strong> para visualizar el rendimiento del entorno WSL2 de forma clara y eficiente.&lt;/p>
&lt;h2 id="-objetivo">🎯 Objetivo&lt;/h2>
&lt;ul>
&lt;li>Exponer métricas del entorno Linux en WSL2&lt;/li>
&lt;li>Instalar y configurar &lt;strong>Node Exporter&lt;/strong>&lt;/li>
&lt;li>Usar &lt;strong>Prometheus&lt;/strong> para recolectar y visualizar métricas&lt;/li>
&lt;li>Explorar métricas útiles para desarrolladores y DevOps&lt;/li>
&lt;/ul>
&lt;h2 id="-paso-1-preparar-entorno-wsl2">⚙️ Paso 1: Preparar entorno WSL2&lt;/h2>
&lt;p>Instalar paquetes esenciales:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> sudo apt install -y wget curl tar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Crear carpeta de monitoreo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir -p ~/monitoring &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">cd&lt;/span> ~/monitoring
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-paso-2-instalar-node-exporter">📦 Paso 2: Instalar Node Exporter&lt;/h2>
&lt;p>Descargar binarios oficiales:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget https://github.com/prometheus/node_exporter/releases/download/v1.7.0/node_exporter-1.7.0.linux-amd64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar xvf node_exporter-1.7.0.linux-amd64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> node_exporter-1.7.0.linux-amd64
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecutar Node Exporter:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">./node_exporter
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Por defecto se expone en &lt;code>http://localhost:9100/metrics&lt;/code>&lt;/p>
&lt;h2 id="-paso-3-verificar-métricas">🔍 Paso 3: Verificar métricas&lt;/h2>
&lt;p>Acceder desde el navegador o con &lt;code>curl&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">curl http://localhost:9100/metrics &lt;span class="p">|&lt;/span> grep cpu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Métricas disponibles incluyen:&lt;/p>
&lt;ul>
&lt;li>CPU usage&lt;/li>
&lt;li>Memory&lt;/li>
&lt;li>Disk I/O&lt;/li>
&lt;li>Network stats&lt;/li>
&lt;li>Load average&lt;/li>
&lt;/ul>
&lt;h2 id="-paso-4-configurar-prometheus-para-recolectar-datos">📈 Paso 4: Configurar Prometheus para recolectar datos&lt;/h2>
&lt;p>Crear archivo &lt;code>prometheus.yml&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">global&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">scrape_interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">5s&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">scrape_configs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">job_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;wsl2-node&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">static_configs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">targets&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;localhost:9100&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Descargar y ejecutar Prometheus:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget https://github.com/prometheus/prometheus/releases/download/v2.48.0/prometheus-2.48.0.linux-amd64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar xvf prometheus-2.48.0.linux-amd64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> prometheus-2.48.0.linux-amd64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./prometheus --config.file&lt;span class="o">=&lt;/span>prometheus.yml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Interfaz disponible en &lt;code>http://localhost:9090&lt;/code>&lt;/p>
&lt;h2 id="-integración-con-docker-opcional">🛠️ Integración con Docker (opcional)&lt;/h2>
&lt;p>Se puede ejecutar &lt;strong>Node Exporter&lt;/strong> y &lt;strong>Prometheus&lt;/strong> como contenedores:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker run -d -p 9100:9100 --name node_exporter prom/node-exporter
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run -d -p 9090:9090 -v &lt;span class="nv">$PWD&lt;/span>/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-conclusión">✅ Conclusión&lt;/h2>
&lt;p>WSL2 permite monitorizar recursos de manera profesional usando herramientas estándar como &lt;strong>Prometheus&lt;/strong>. Esto es ideal para desarrolladores que necesitan observar el uso de CPU, RAM y procesos intensivos sin salir de su entorno &lt;strong>Windows&lt;/strong>, facilitando la implementación de prácticas &lt;strong>DevOps&lt;/strong> y &lt;strong>DataOps&lt;/strong>.&lt;/p></description></item><item><title>WSL2 como entorno para desarrollo MLOps</title><link>https://cmas.dev/posts/2024-05-31-wsl2-mlops/</link><pubDate>Fri, 31 May 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-05-31-wsl2-mlops/</guid><description>&lt;p>El ciclo de vida del machine learning moderno no solo involucra entrenar modelos, sino también automatizar, versionar y desplegar esos modelos en producción. Esto es lo que define el enfoque de &lt;strong>MLOps&lt;/strong>. Gracias a su compatibilidad con herramientas de Linux, contenedores, aceleración GPU y pipelines reproducibles, &lt;strong>WSL2 es ideal para este tipo de desarrollo desde Windows&lt;/strong>.&lt;/p>
&lt;h2 id="-objetivo">🎯 Objetivo&lt;/h2>
&lt;ul>
&lt;li>Crear un entorno de desarrollo MLOps usando WSL2&lt;/li>
&lt;li>Integrar herramientas como DVC, MLflow, Docker y Python&lt;/li>
&lt;li>Automatizar pipelines de entrenamiento y evaluación&lt;/li>
&lt;li>Ejecutar tareas reproducibles y escalables localmente&lt;/li>
&lt;/ul>
&lt;h2 id="-paso-1-preparar-entorno-base-en-wsl2">⚙️ Paso 1: Preparar entorno base en WSL2&lt;/h2>
&lt;p>Instalar Python y herramientas básicas:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install -y python3-pip python3-venv git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pip install --upgrade pip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Clonar un proyecto de ejemplo o iniciar uno nuevo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">git clone https://github.com/iterative/example-get-started-mlops.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd example-get-started-mlops
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-paso-2-instalar-dvc-para-control-de-datos-y-pipelines">🔁 Paso 2: Instalar DVC para control de datos y pipelines&lt;/h2>
&lt;p>&lt;a href="https://dvc.org/">DVC&lt;/a> es una herramienta fundamental en MLOps para manejar datos y etapas de procesamiento.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pip install dvc[gs] dvc[ssh]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dvc init
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Agregar un pipeline:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dvc run -n preprocess -d src/preprocess.py -o data/processed python src/preprocess.py data/raw data/processed
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-paso-3-automatizar-experimentos-con-mlflow">🧪 Paso 3: Automatizar experimentos con MLflow&lt;/h2>
&lt;p>Instalar MLflow:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pip install mlflow
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecutar un experimento:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">mlflow run .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lanzar la interfaz de MLflow:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">mlflow ui
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ver resultados desde el navegador en &lt;code>http://localhost:5000&lt;/code>&lt;/p>
&lt;h2 id="-paso-4-contenerizar-el-flujo-con-docker">🐳 Paso 4: Contenerizar el flujo con Docker&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> python:3.10-slim&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> /app&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> . /app&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> pip install -r requirements.txt&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">ENTRYPOINT&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;python&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;src/train.py&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Construir y correr el contenedor:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker build -t mlops-model .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run --rm mlops-model
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-buenas-prácticas-mlops-en-wsl2">🛠️ Buenas prácticas MLOps en WSL2&lt;/h2>
&lt;ul>
&lt;li>Usar &lt;code>make&lt;/code> para correr pipelines: &lt;code>make train&lt;/code>, &lt;code>make evaluate&lt;/code>&lt;/li>
&lt;li>Controlar recursos con &lt;code>.wslconfig&lt;/code>&lt;/li>
&lt;li>Versionar modelos con &lt;code>dvc push&lt;/code> y &lt;code>git tag&lt;/code>&lt;/li>
&lt;li>Integrar &lt;code>act&lt;/code> para correr GitHub Actions localmente&lt;/li>
&lt;li>Usar &lt;code>conda&lt;/code> o &lt;code>pip-tools&lt;/code> para entornos reproducibles&lt;/li>
&lt;/ul>
&lt;h2 id="-conclusión">✅ Conclusión&lt;/h2>
&lt;p>&lt;strong>WSL2&lt;/strong> permite construir un entorno completo de &lt;strong>MLOps&lt;/strong> directamente sobre &lt;strong>Windows&lt;/strong>, integrando control de versiones, contenedores, entrenamiento y despliegue en pipelines reproducibles. Es una solución ideal para equipos que necesitan compatibilidad con Linux pero prefieren trabajar desde Windows.&lt;/p></description></item><item><title>Automatización de tareas con Makefiles y Bash avanzado en WSL2</title><link>https://cmas.dev/posts/2024-05-24-wsl2-automation-makefiles-bash/</link><pubDate>Fri, 24 May 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-05-24-wsl2-automation-makefiles-bash/</guid><description>&lt;p>Una de las ventajas más potentes de WSL2 es la posibilidad de usar herramientas Linux como &lt;code>make&lt;/code> y Bash para automatizar tareas en proyectos de desarrollo, ciencia de datos, o DevOps. Este artículo detalla cómo crear scripts avanzados con Bash y cómo estructurar &lt;code>Makefiles&lt;/code> efectivos para ejecutar tareas complejas con un solo comando.&lt;/p>
&lt;h2 id="-objetivo">🎯 Objetivo&lt;/h2>
&lt;ul>
&lt;li>Crear scripts Bash reutilizables y robustos&lt;/li>
&lt;li>Diseñar &lt;code>Makefiles&lt;/code> para tareas como tests, builds o pipelines&lt;/li>
&lt;li>Integrar la automatización en entornos reproducibles bajo WSL2&lt;/li>
&lt;/ul>
&lt;h2 id="-paso-1-preparar-entorno-en-wsl2">⚙️ Paso 1: Preparar entorno en WSL2&lt;/h2>
&lt;p>Instalar dependencias básicas:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt update &amp;amp;&amp;amp; sudo apt install -y make build-essential
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Organizar proyecto:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">mi-proyecto/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── scripts/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── build.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── test.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── Makefile
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── README.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-paso-2-crear-scripts-bash-reutilizables">🧪 Paso 2: Crear scripts Bash reutilizables&lt;/h2>
&lt;h3 id="buildsh">build.sh&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="nb">set&lt;/span> -e
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Compilando proyecto...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gcc src/main.c -o bin/app
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Build completado con éxito.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="testsh">test.sh&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="nb">set&lt;/span> -e
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Ejecutando tests...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pytest tests/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Dar permisos de ejecución:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">chmod +x scripts/*.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-paso-3-diseñar-un-makefile">📦 Paso 3: Diseñar un Makefile&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">.PHONY: build test clean all
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">build:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> bash scripts/build.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">test:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> bash scripts/test.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">clean:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> rm -rf bin/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">all: clean build test
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ahora se pueden ejecutar tareas fácilmente:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">make build
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make test
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make all
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-paso-4-automatización-avanzada">🔁 Paso 4: Automatización avanzada&lt;/h2>
&lt;p>Agregar detección de entorno, logs o argumentos en los scripts:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="nb">set&lt;/span> -e
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Sistema operativo: &lt;/span>&lt;span class="k">$(&lt;/span>uname -a&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">DATE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>date +%Y-%m-%d&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">LOG&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;build_&lt;/span>&lt;span class="nv">$DATE&lt;/span>&lt;span class="s2">.log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Iniciando build...&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> tee &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$LOG&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gcc src/main.c -o bin/app &amp;gt;&amp;gt; &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$LOG&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> 2&amp;gt;&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>O usar variables en &lt;code>Makefile&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">DATE := $(shell date +%F)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">LOGFILE := logs/build_$(DATE).log
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">logbuild:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mkdir -p logs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> bash scripts/build.sh | tee $(LOGFILE)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-buenas-prácticas">🛠️ Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Validar argumentos (&lt;code>&amp;quot;$#&amp;quot;&lt;/code> y &lt;code>&amp;quot;$1&amp;quot;&lt;/code>) en scripts&lt;/li>
&lt;li>Documentar cada tarea con comentarios o &lt;code>README.md&lt;/code>&lt;/li>
&lt;li>Usar &lt;code>.PHONY&lt;/code> para evitar conflictos con archivos&lt;/li>
&lt;li>Versionar scripts y &lt;code>Makefile&lt;/code> en Git para control de cambios&lt;/li>
&lt;/ul>
&lt;h2 id="-conclusión">✅ Conclusión&lt;/h2>
&lt;p>Con Bash avanzado y Makefiles bien diseñados, es posible automatizar completamente tareas comunes de desarrollo en WSL2, mejorando la productividad, reduciendo errores y asegurando reproducibilidad en equipos o entornos compartidos.&lt;/p></description></item><item><title>VS Code Remote WSL para flujos de trabajo Data Science</title><link>https://cmas.dev/posts/2024-05-17-wsl2-remote-data-science/</link><pubDate>Fri, 17 May 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-05-17-wsl2-remote-data-science/</guid><description>&lt;p>El desarrollo de proyectos de ciencia de datos desde Windows puede beneficiarse enormemente del uso de &lt;strong>WSL2 con VS Code Remote&lt;/strong>. Esta combinación permite aprovechar herramientas y entornos Linux directamente desde el editor, manteniendo la flexibilidad de Windows en tareas cotidianas como análisis, visualización o modelado de datos.&lt;/p>
&lt;h2 id="-objetivo">🎯 Objetivo&lt;/h2>
&lt;ul>
&lt;li>Configurar un entorno Linux para ciencia de datos dentro de WSL2&lt;/li>
&lt;li>Integrarlo con &lt;strong>Visual Studio Code&lt;/strong> mediante la extensión &lt;strong>Remote - WSL&lt;/strong>&lt;/li>
&lt;li>Usar Jupyter Notebooks, entornos virtuales y bibliotecas científicas desde VS Code&lt;/li>
&lt;li>Trabajar con flujos reproducibles usando pip, conda y notebooks&lt;/li>
&lt;/ul>
&lt;h2 id="-requisitos-previos">🧰 Requisitos previos&lt;/h2>
&lt;ul>
&lt;li>Windows 10/11 con WSL2 activado&lt;/li>
&lt;li>Distro Linux instalada (Ubuntu 22.04 recomendado)&lt;/li>
&lt;li>VS Code con la extensión &lt;strong>Remote - WSL&lt;/strong>&lt;/li>
&lt;li>Python 3, pip y/o conda&lt;/li>
&lt;/ul>
&lt;h2 id="-paso-1-instalar-dependencias-en-la-distro-wsl2">⚙️ Paso 1: Instalar dependencias en la distro WSL2&lt;/h2>
&lt;p>Desde tu terminal WSL:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install -y python3-pip python3-venv git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Instalar bibliotecas de ciencia de datos:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pip install numpy pandas matplotlib seaborn scikit-learn jupyter
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Opcional: usar &lt;code>miniconda&lt;/code> si se prefiere conda como gestor de entornos.&lt;/p>
&lt;h2 id="-paso-2-abrir-wsl-desde-vs-code">💻 Paso 2: Abrir WSL desde VS Code&lt;/h2>
&lt;ol>
&lt;li>Abrí &lt;strong>VS Code&lt;/strong>&lt;/li>
&lt;li>Presioná &lt;code>Ctrl+Shift+P&lt;/code> y escribí: &lt;code>Remote-WSL: New Window&lt;/code>&lt;/li>
&lt;li>Seleccioná tu distribución (ej: Ubuntu)&lt;/li>
&lt;/ol>
&lt;p>Ahora estás en una sesión remota con acceso completo a la terminal, Python, Jupyter y entorno Linux desde el editor.&lt;/p>
&lt;h2 id="-paso-3-usar-jupyter-notebooks-dentro-de-vs-code">📓 Paso 3: Usar Jupyter Notebooks dentro de VS Code&lt;/h2>
&lt;p>Instalar extensión oficial de &lt;strong>Jupyter&lt;/strong> en VS Code.&lt;/p>
&lt;p>Crear un nuevo notebook (&lt;code>.ipynb&lt;/code>) y seleccioná el kernel Python correspondiente desde el entorno WSL.&lt;/p>
&lt;p>Verificá que ejecutás en WSL:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">import platform
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">print(platform.system(), platform.release())
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-ejemplo-práctico-análisis-exploratorio">🧪 Ejemplo práctico: Análisis exploratorio&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="n">pandas&lt;/span> &lt;span class="n">as&lt;/span> &lt;span class="n">pd&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="n">seaborn&lt;/span> &lt;span class="n">as&lt;/span> &lt;span class="n">sns&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">import&lt;/span> &lt;span class="n">matplotlib&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pyplot&lt;/span> &lt;span class="n">as&lt;/span> &lt;span class="n">plt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">df&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sns&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">load_dataset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;penguins&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sns&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pairplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">df&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hue&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;species&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Este script corre directamente en el entorno WSL, usando la GPU (si está disponible), y sin overhead de traducción de entornos.&lt;/p>
&lt;h2 id="-buenas-prácticas">🛠️ Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Guardar los proyectos en el sistema de archivos Linux (&lt;code>~/proyectos&lt;/code>, no en &lt;code>/mnt/c/&lt;/code>) para mayor rendimiento&lt;/li>
&lt;li>Usar entornos virtuales (&lt;code>python3 -m venv .venv&lt;/code>) para evitar conflictos&lt;/li>
&lt;li>Versionar notebooks y scripts con Git (&lt;code>git init&lt;/code>)&lt;/li>
&lt;li>Añadir &lt;code>requirements.txt&lt;/code> para reproducibilidad:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pip freeze &amp;gt; requirements.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-conclusión">✅ Conclusión&lt;/h2>
&lt;p>&lt;strong>VS Code&lt;/strong> + R&lt;strong>emote WSL&lt;/strong> ofrece una experiencia fluida para la ciencia de datos en &lt;strong>Windows&lt;/strong>, combinando la potencia de &lt;strong>Linux&lt;/strong> con la comodidad de un entorno gráfico moderno. Con Jupyter, Python y bibliotecas científicas listas para usar, es posible construir, visualizar y entrenar modelos de manera productiva, eficiente y reproducible.&lt;/p></description></item><item><title>WSL2 + NVIDIA GPU: configuración óptima para workloads de IA</title><link>https://cmas.dev/posts/2024-05-10-wsl2-nvidia-gpu/</link><pubDate>Fri, 10 May 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-05-10-wsl2-nvidia-gpu/</guid><description>&lt;p>Desde mediados de 2020, WSL2 ofrece soporte oficial para &lt;strong>aceleración por GPU con NVIDIA&lt;/strong>. Esto permite ejecutar frameworks como &lt;strong>[PyTorch]&lt;/strong>(&lt;a href="https://pytorch.org/get-started/locally/">https://pytorch.org/get-started/locally/&lt;/a>) o &lt;strong>TensorFlow&lt;/strong> con &lt;strong>[CUDA]&lt;/strong>(&lt;a href="https://docs.nvidia.com/cuda/wsl-user-guide/index.html">https://docs.nvidia.com/cuda/wsl-user-guide/index.html&lt;/a>) directamente desde &lt;strong>Linux&lt;/strong> en &lt;strong>Windows&lt;/strong>, ideal para tareas de entrenamiento y prueba de modelos de inteligencia artificial.&lt;/p>
&lt;h2 id="-objetivo">🎯 Objetivo&lt;/h2>
&lt;p>Configurar un entorno de desarrollo basado en WSL2 con soporte GPU, incluyendo:&lt;/p>
&lt;ul>
&lt;li>Acceso a GPU NVIDIA desde el subsistema Linux&lt;/li>
&lt;li>Instalación de CUDA Toolkit y cuDNN&lt;/li>
&lt;li>Ejecución de scripts con PyTorch y verificación del entorno&lt;/li>
&lt;li>Prácticas recomendadas para aprovechar la aceleración por hardware&lt;/li>
&lt;/ul>
&lt;h2 id="-requisitos-previos">🧰 Requisitos previos&lt;/h2>
&lt;ul>
&lt;li>Windows 11 (o Windows 10 21H2 en adelante)&lt;/li>
&lt;li>WSL2 instalado y actualizado (&lt;code>wsl --update&lt;/code>)&lt;/li>
&lt;li>GPU NVIDIA compatible (preferentemente RTX)&lt;/li>
&lt;li>Driver de GPU actualizado: &lt;a href="https://www.nvidia.com/Download/index.aspx">nvidia.com/Download&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Verificación del entorno desde PowerShell:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">nvidia-smi
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-paso-1-activar-wsl2-con-soporte-gpu">⚙️ Paso 1: Activar WSL2 con soporte GPU&lt;/h2>
&lt;p>Instalar WSL y una distribución como Ubuntu 22.04:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">wsl --install -d Ubuntu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Actualizar WSL a la última versión:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">wsl --update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wsl --shutdown
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-paso-2-instalar-cuda-y-herramientas-base-en-wsl2">🚀 Paso 2: Instalar CUDA y herramientas base en WSL2&lt;/h2>
&lt;p>Desde la terminal Linux en WSL2:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install -y build-essential dkms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Agregar repositorios oficiales de NVIDIA:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">distribution&lt;/span>&lt;span class="o">=$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">os&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">release&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">echo&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="n">ID&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">VERSION_ID&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">curl&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">L&lt;/span> &lt;span class="n">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">nvidia&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">github&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">io&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">libnvidia&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">container&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">gpgkey&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">sudo&lt;/span> &lt;span class="n">apt&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">key&lt;/span> &lt;span class="n">add&lt;/span> &lt;span class="o">-&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">curl&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">L&lt;/span> &lt;span class="n">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">nvidia&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">github&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">io&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">libnvidia&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">container&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ubuntu&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">distribution&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">libnvidia&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">container&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">list&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">sudo&lt;/span> &lt;span class="n">tee&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">apt&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sources&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">list&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">nvidia&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">container&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">list&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">apt&lt;/span> &lt;span class="n">update&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">apt&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="n">nvidia&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">driver&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">535&lt;/span> &lt;span class="n">nvidia&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">cuda&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">toolkit&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-paso-3-verificar-acceso-a-la-gpu-desde-wsl2">🧪 Paso 3: Verificar acceso a la GPU desde WSL2&lt;/h2>
&lt;p>Dentro del entorno WSL2:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">nvidia-smi
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>El sistema debe mostrar la tarjeta gráfica, memoria y uso actual.&lt;/p>
&lt;h2 id="-paso-4-instalar-pytorch-con-soporte-cuda">🧠 Paso 4: Instalar PyTorch con soporte CUDA&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">pip&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="n">torch&lt;/span> &lt;span class="n">torchvision&lt;/span> &lt;span class="n">torchaudio&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">url&lt;/span> &lt;span class="n">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">download&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pytorch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">whl&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">cu118&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Verificar el acceso a la GPU desde un script:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">import torch
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">print(&amp;#34;CUDA disponible:&amp;#34;, torch.cuda.is_available())
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">print(&amp;#34;GPU:&amp;#34;, torch.cuda.get_device_name(0))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-solución-de-problemas-comunes">🛠️ Solución de problemas comunes&lt;/h2>
&lt;ul>
&lt;li>Si &lt;code>nvidia-smi&lt;/code> no detecta la GPU, asegurarse de tener los drivers y WSL actualizados.&lt;/li>
&lt;li>No se recomienda instalar CUDA directamente desde la web de NVIDIA; es preferible utilizar los repos oficiales para WSL.&lt;/li>
&lt;li>Es importante reiniciar el entorno después de cambios: &lt;code>wsl --shutdown&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="-buenas-prácticas">📈 Buenas prácticas&lt;/h2>
&lt;ul>
&lt;li>Utilizar distribuciones ligeras como Debian o Ubuntu minimal para reducir el uso de recursos.&lt;/li>
&lt;li>Configurar límites de recursos en &lt;code>.wslconfig&lt;/code> si se comparte la GPU con otros procesos.&lt;/li>
&lt;li>Monitorear la temperatura y uso con &lt;code>nvidia-smi&lt;/code>.&lt;/li>
&lt;li>Emplear &lt;code>tmux&lt;/code> o &lt;code>screen&lt;/code> para mantener tareas de entrenamiento corriendo en segundo plano.&lt;/li>
&lt;/ul>
&lt;h2 id="-conclusión">✅ Conclusión&lt;/h2>
&lt;p>Configurar &lt;strong>WSL2&lt;/strong> con acceso a &lt;strong>GPU NVIDIA&lt;/strong> representa una alternativa práctica y poderosa para ejecutar flujos de trabajo de &lt;strong>IA&lt;/strong> desde un entorno &lt;strong>Linux&lt;/strong> en &lt;strong>Windows&lt;/strong>. Esta solución permite acelerar el desarrollo y pruebas de modelos, aprovechando la compatibilidad de herramientas modernas con &lt;strong>CUDA&lt;/strong> y &lt;strong>PyTorch&lt;/strong>.&lt;/p></description></item><item><title>Uso de systemd en WSL2: servicios persistentes y supervisión</title><link>https://cmas.dev/posts/2024-05-03-wsl2-systemd/</link><pubDate>Fri, 03 May 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-05-03-wsl2-systemd/</guid><description>&lt;p>Desde 2022, &lt;strong>WSL2&lt;/strong> incluye soporte para &lt;code>systemd&lt;/code>, el sistema de inicialización y gestión de servicios usado en la mayoría de las distros &lt;strong>Linux&lt;/strong> modernas. Esto habilita la ejecución de servicios persistentes, como &lt;code>ssh&lt;/code>, &lt;code>postgresql&lt;/code> o &lt;code>docker&lt;/code>, directamente en el entorno &lt;strong>WSL2&lt;/strong>&amp;hellip;&lt;/p>
&lt;h2 id="-activar-systemd-en-wsl2">⚙️ Activar systemd en WSL2&lt;/h2>
&lt;ol>
&lt;li>Asegurarse de tener WSL actualizado:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">wsl --update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Editar el archivo &lt;code>/etc/wsl.conf&lt;/code> en la distro:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[boot]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemd=true
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Cerrar todas las instancias WSL y ejecutar:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">wsl --shutdown
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Verificar que systemd esté activo:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">systemctl list-units --type=service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-ejecutar-servicios">🧪 Ejecutar servicios&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo systemctl enable postgresql
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl start postgresql
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>También se puede usar &lt;code>journalctl&lt;/code> para logs persistentes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">journalctl -xe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-consideraciones">🔒 Consideraciones&lt;/h2>
&lt;ul>
&lt;li>Algunas distros necesitan reconfigurar permisos o reinstalar servicios tras activar systemd.&lt;/li>
&lt;li>&lt;code>sudo&lt;/code> se vuelve más importante para manejar correctamente el árbol de procesos.&lt;/li>
&lt;/ul>
&lt;h2 id="-conclusión">✅ Conclusión&lt;/h2>
&lt;p>Con &lt;strong>systemd&lt;/strong> habilitado en &lt;strong>WSL2&lt;/strong>, se puede correr y supervisar servicios como si estuviera en un servidor &lt;strong>Linux&lt;/strong> real. Esto hace que &lt;strong>WSL2&lt;/strong> sea una herramienta aún más poderosa para flujos &lt;strong>DevOps&lt;/strong>, testing y desarrollo backend.&lt;/p></description></item><item><title>Integración avanzada con Docker Desktop y contenedores cruzados</title><link>https://cmas.dev/posts/2024-04-25-wsl2-docker-integration/</link><pubDate>Thu, 25 Apr 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-04-25-wsl2-docker-integration/</guid><description>&lt;p>&lt;strong>Docker&lt;/strong> y &lt;strong>WSL2&lt;/strong> trabajan juntos de forma nativa desde 2020. &lt;strong>Docker Desktop&lt;/strong> para &lt;strong>Windows&lt;/strong> ahora se basa completamente en &lt;strong>WSL2&lt;/strong>, permitiendo ejecutar contenedores &lt;strong>Linux&lt;/strong> sin la necesidad de &lt;strong>Hyper-V&lt;/strong> por separado.&lt;/p>
&lt;h2 id="-cómo-funciona-docker-con-wsl2">🐳 Cómo funciona Docker con WSL2&lt;/h2>
&lt;p>&lt;strong>Docker&lt;/strong> instala una distro especial llamada &lt;code>docker-desktop&lt;/code> que actúa como backend de ejecución.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">wsl --list --verbose
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Deberías ver:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># docker-desktop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># docker-desktop-data
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-activar-integración-con-tu-distro">🛠️ Activar integración con tu distro&lt;/h2>
&lt;p>Desde &lt;strong>Docker Desktop&lt;/strong> → &lt;strong>Settings&lt;/strong> → &lt;strong>Resources&lt;/strong> → &lt;strong>WSL Integration&lt;/strong>&lt;/p>
&lt;p>Habilitá tu distro personalizada (Ubuntu, Debian, etc.).&lt;/p>
&lt;p>Una vez activada, podés correr Docker directamente:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">docker run --rm alpine echo &amp;#34;Hola desde Alpine en WSL2&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-contenedores-cruzados-windows--linux">🔄 Contenedores cruzados (Windows ↔ Linux)&lt;/h2>
&lt;p>Si activás también la integración de &lt;strong>Docker Desktop&lt;/strong> con &lt;strong>PowerShell&lt;/strong>, podés correr contenedores &lt;strong>Linux&lt;/strong> desde &lt;strong>Windows&lt;/strong> y viceversa.&lt;/p>
&lt;h3 id="ejemplo-build-en-wsl2-deploy-desde-windows">Ejemplo: build en WSL2, deploy desde Windows&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># WSL2: construir imagen&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">docker&lt;/span> &lt;span class="n">build&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">t&lt;/span> &lt;span class="n">myapp&lt;/span> &lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Windows: ejecutar desde PowerShell&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">docker&lt;/span> &lt;span class="n">run&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">rm&lt;/span> &lt;span class="n">myapp&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-conclusión">✅ Conclusión&lt;/h2>
&lt;p>&lt;strong>WSL2&lt;/strong> + &lt;strong>Docker Desktop&lt;/strong> brinda un entorno potente para desarrollo con contenedores, permitiendo compartir imágenes y redes entre sistemas. Esta integración elimina muchas barreras y mejora la productividad para desarrolladores de backend, DevOps y microservicios.&lt;/p></description></item><item><title>Gestión avanzada de múltiples distros en WSL2</title><link>https://cmas.dev/posts/2024-04-19-wsl2-multiple-distros/</link><pubDate>Fri, 19 Apr 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-04-19-wsl2-multiple-distros/</guid><description>&lt;p>Una de las grandes ventajas de WSL2 es la posibilidad de instalar y ejecutar múltiples distribuciones de Linux simultáneamente, cada una con su propio sistema de archivos, paquetes y configuraciones.&lt;/p>
&lt;h2 id="-listar-distros-disponibles">🔍 Listar distros disponibles&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">wsl --list --verbose
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto muestra las distros instaladas, su estado actual y versión de WSL (1 o 2).&lt;/p>
&lt;h2 id="-instalar-múltiples-distros">📦 Instalar múltiples distros&lt;/h2>
&lt;p>Desde Microsoft Store o usando una imagen &lt;code>.tar&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">wsl --import Debian-Dev D:\WSL\Debian-Dev debian-rootfs.tar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="-crear-un-backup-de-una-distro">🛠️ Crear un backup de una distro&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">wsl&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">export&lt;/span> &lt;span class="n">Ubuntu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Dev&lt;/span> &lt;span class="n">ubuntu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">dev&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">backup&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tar&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="-restaurar-o-clonar-una-distro">🔄 Restaurar o clonar una distro&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">wsl --import Ubuntu-Clon D:\WSL\Ubuntu-Clon ubuntu-dev-backup.tar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-sincronizar-configuraciones">🔁 Sincronizar configuraciones&lt;/h2>
&lt;p>Se puede mantener las configuraciones con &lt;code>dotfiles&lt;/code>, scripts de provisión o herramientas como Ansible o chezmoi.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># Ejemplo simple con Git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git clone https://github.com/tuusuario/dotfiles ~/.dotfiles
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bash ~/.dotfiles/setup.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-automatización-de-flujos-entre-distros">⚙️ Automatización de flujos entre distros&lt;/h2>
&lt;p>Usar scripts Bash para pasar configuraciones, instalar paquetes o incluso ejecutar pruebas cruzadas entre distros.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">for distro in Ubuntu-Dev Debian-Dev; do
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> wsl -d $distro -- bash -c &amp;#34;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">done
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-conclusión">✅ Conclusión&lt;/h2>
&lt;p>Gestionar múltiples distros con WSL2 permite aislar entornos, probar configuraciones específicas o crear pipelines DevOps más robustos. Con herramientas de exportación, scripting y dotfiles, se puede mantener un stack alineado en todos los equipos o contextos.&lt;/p></description></item><item><title>Automatización avanzada de distros WSL2 con wsl.conf y cloud-init</title><link>https://cmas.dev/posts/2024-04-12-wsl2-advanced-distro-automation/</link><pubDate>Fri, 12 Apr 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-04-12-wsl2-advanced-distro-automation/</guid><description>&lt;p>Uno de los beneficios clave de &lt;strong>WSL2&lt;/strong> es la capacidad de automatizar la configuración del entorno Linux que corre sobre Windows. Esto permite establecer comportamientos predefinidos y provisionar distros listas para el trabajo sin intervención manual. En este artículo exploramos dos mecanismos clave: &lt;code>wsl.conf&lt;/code> y &lt;code>cloud-init&lt;/code>.&lt;/p>
&lt;h2 id="-qué-es-wslconf">⚙️ ¿Qué es &lt;code>wsl.conf&lt;/code>?&lt;/h2>
&lt;p>Es un archivo de configuración ubicado en &lt;code>/etc/wsl.conf&lt;/code> dentro de cada distro. Permite modificar cómo WSL monta discos, configura redes y gestiona el entorno.&lt;/p>
&lt;h3 id="ejemplo-básico">Ejemplo básico:&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[automount]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">enabled = true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">root = /mnt/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">options = &amp;#34;metadata,umask=22,fmask=11&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[network]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">generateResolvConf = false
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[user]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">default = devuser
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Monta unidades de Windows con metadatos de permisos.&lt;/li>
&lt;li>Previene conflictos DNS con &lt;code>resolv.conf&lt;/code>.&lt;/li>
&lt;li>Define el usuario predeterminado al iniciar la terminal.&lt;/li>
&lt;/ul>
&lt;p>✅ Ideal para escenarios donde múltiples usuarios usan la misma distro o cuando se quiere mantener un entorno consistente.&lt;/p>
&lt;h2 id="-qué-es-cloud-init">☁️ ¿Qué es &lt;code>cloud-init&lt;/code>?&lt;/h2>
&lt;p>Originalmente pensado para entornos cloud como EC2 o Azure VM, &lt;code>cloud-init&lt;/code> también funciona en algunas distros WSL2 (por ejemplo, Ubuntu). Permite definir:&lt;/p>
&lt;ul>
&lt;li>Paquetes a instalar&lt;/li>
&lt;li>Archivos de configuración&lt;/li>
&lt;li>Comandos post-instalación&lt;/li>
&lt;li>Creación de usuarios&lt;/li>
&lt;/ul>
&lt;h3 id="ejemplo-yaml">Ejemplo YAML:&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># /etc/cloud/cloud.cfg.d/01-wsl-autoconfig.cfg
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">packages:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - zsh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - build-essential
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">runcmd:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - echo &amp;#34;WSL2 provisionado automáticamente&amp;#34; &amp;gt;&amp;gt; /etc/motd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - chsh -s $(which zsh) devuser
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="activación">Activación:&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo cloud-init init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cloud-init status --long
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>🧠 Tip: Se puede combinar esto con &lt;code>setup.sh&lt;/code> para instalar temas, dotfiles y CLI personales.&lt;/p>
&lt;h2 id="-ejemplo-de-flujo-automatizado-para-onboarding">🛠️ Ejemplo de flujo automatizado para onboarding&lt;/h2>
&lt;ol>
&lt;li>Crear distro base con &lt;code>wsl --import&lt;/code>&lt;/li>
&lt;li>Configurar &lt;code>wsl.conf&lt;/code> y archivos de &lt;code>cloud-init&lt;/code>&lt;/li>
&lt;li>Ejecutar provisioning&lt;/li>
&lt;li>Compartir imagen exportada (&lt;code>.tar&lt;/code>) con otros desarrolladores&lt;/li>
&lt;/ol></description></item><item><title>Introducción avanzada a WSL2</title><link>https://cmas.dev/posts/2024-04-05-wsl2-advanced-intro/</link><pubDate>Fri, 05 Apr 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-04-05-wsl2-advanced-intro/</guid><description>&lt;p>Desde su lanzamiento, WSL2 (Windows Subsystem for Linux 2) ha transformado el panorama del desarrollo en Windows, ofreciendo una integración casi nativa con Linux sin necesidad de usar máquinas virtuales tradicionales. A diferencia de WSL1, que traducía llamadas del sistema de Linux a Windows, WSL2 ejecuta un kernel Linux completo dentro de una VM optimizada y ligera. Esta diferencia técnica lo convierte en una herramienta poderosa para desarrolladores modernos, DevOps, científicos de datos y más.&lt;/p>
&lt;h2 id="-diferencias-clave-entre-wsl1-y-wsl2">🔍 Diferencias clave entre WSL1 y WSL2&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Característica&lt;/th>
&lt;th>WSL1&lt;/th>
&lt;th>WSL2&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Kernel Linux&lt;/td>
&lt;td>No (traducción de llamadas)&lt;/td>
&lt;td>Sí (kernel completo real)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Compatibilidad syscall&lt;/td>
&lt;td>Limitada&lt;/td>
&lt;td>Total&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Performance en filesystem&lt;/td>
&lt;td>Más rápido en &lt;code>/mnt/c/&lt;/code>&lt;/td>
&lt;td>Más rápido en &lt;code>/home/&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Soporte para Docker&lt;/td>
&lt;td>Parcial&lt;/td>
&lt;td>Completo con Docker Desktop y systemd&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Uso de memoria&lt;/td>
&lt;td>Bajo&lt;/td>
&lt;td>Mayor (usa VM)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="-arquitectura-de-wsl2">🧱 Arquitectura de WSL2&lt;/h2>
&lt;ul>
&lt;li>Utiliza una máquina virtual ligera basada en Hyper-V, completamente administrada por Windows.&lt;/li>
&lt;li>El kernel Linux es compilado y mantenido por Microsoft, lo que garantiza compatibilidad y actualizaciones.&lt;/li>
&lt;li>Usa un sistema de archivos virtual (ext4) por cada distro, que puede residir en un archivo &lt;code>.vhdx&lt;/code>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># Ver distros instaladas con su estado
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wsl --list --verbose
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-flujos-de-trabajo-avanzados">⚙️ Flujos de trabajo avanzados&lt;/h2>
&lt;h3 id="-casos-de-uso-reales">🧪 Casos de uso reales&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>DevOps híbrido&lt;/strong>: Ejecutar herramientas de infraestructura (Terraform, Ansible) nativamente en Linux.&lt;/li>
&lt;li>&lt;strong>Desarrollo Backend&lt;/strong>: Node, Rust, Python o Go sobre distros Linux con acceso directo a servicios como PostgreSQL o Redis.&lt;/li>
&lt;li>&lt;strong>Data Science &amp;amp; AI&lt;/strong>: Compatibilidad con CUDA para entrenamiento de modelos con GPU.&lt;/li>
&lt;li>&lt;strong>CI/CD local&lt;/strong>: Crear pipelines reproducibles desde scripts Bash antes de subirlos a GitHub Actions o Azure Pipelines.&lt;/li>
&lt;/ol>
&lt;h2 id="-consideraciones-y-tips">⚠️ Consideraciones y tips&lt;/h2>
&lt;ul>
&lt;li>Evita trabajar en archivos dentro de &lt;code>/mnt/c/&lt;/code> si quieres máxima performance.&lt;/li>
&lt;li>Usa &lt;code>.wslconfig&lt;/code> para limitar recursos (CPU, memoria, swap) usados por la VM.&lt;/li>
&lt;li>Configura &lt;code>~/.wslconfig&lt;/code> para tunear el entorno global.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[wsl2]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">memory=4GB
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">processors=2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">swap=2GB
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>XAML para cambio de orientación de pantalla</title><link>https://cmas.dev/posts/2023-12-15-maui-xaml-orientation-screen/</link><pubDate>Fri, 15 Dec 2023 18:30:00 -0400</pubDate><guid>https://cmas.dev/posts/2023-12-15-maui-xaml-orientation-screen/</guid><description>&lt;p>En este artículo veremos la posibilidad de crear un diseño que se adapte a la orientación de pantalla en &lt;strong>.NET MAUI&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22635.2915&lt;/strong>&lt;/em>&lt;/p>
&lt;p>La idea central aquí es aprender a crear un diseño responsivo para brindar la mejor experiencia de usuario con controles que se adapten a la orientación de la pantalla (anteriormente se lograba esto haciendo cambios por plataforma), para ellos adaptaremos una solución presentada por un desarrollador experto en la materia.&lt;/p>
&lt;h2 id="bloquear-orientación-de-pantalla">Bloquear orientación de pantalla&lt;/h2>
&lt;p>Primeramente, debemos mencionar que tenemos la opción de bloquear el cambio de orientación de pantalla. Esto se da cuando, por ejemplo, queremos que nuestro diseño sólo quede en posición vertical. Para ello, debemos preparar código para cada plataforma (aquí veremos &lt;strong>Android&lt;/strong> y &lt;strong>Windows&lt;/strong>):&lt;/p>
&lt;h3 id="windows">Windows&lt;/h3>
&lt;p>Se realiza mediante el gestor de manifiesto &lt;strong>Package.appxmanifest&lt;/strong>:
&lt;img src="https://i.ibb.co/0jQZXvN/Orientation1.png" alt="">&lt;/p>
&lt;h3 id="android">Android&lt;/h3>
&lt;p>En la clase &lt;strong>MainActivity&lt;/strong> de la plataforma &lt;strong>Android&lt;/strong> se agrega el decorado:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ScreenOrientation = ScreenOrientation.Portrait
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>La clase quedaría así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">using Android.App;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">using Android.Content.PM;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">namespace MauiApp1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Activity(Theme = &amp;#34;@style/Maui.SplashTheme&amp;#34;, MainLauncher = true, ConfigurationChanges = ConfigChanges.ScreenSize | ConfigChanges.Orientation | ConfigChanges.UiMode | ConfigChanges.ScreenLayout | ConfigChanges.SmallestScreenSize | ConfigChanges.Density, ScreenOrientation = ScreenOrientation.Portrait)]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public class MainActivity : MauiAppCompatActivity
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="diseño-responsivo">Diseño responsivo&lt;/h2>
&lt;p>En &lt;strong>.NET MAUI&lt;/strong> esto se logra utilziando de manera criteriosa alguno de los elementos (controles) &lt;strong>Layout&lt;/strong> nativos que nos presenta la plataforma. En este caso nos enfocaremos en en control &lt;strong>Grid&lt;/strong> (disculpen pero soy un fanático de este control).&lt;/p>
&lt;h3 id="opción-1">Opción 1&lt;/h3>
&lt;p>En esta opción adaptaremos los controles utilizando el Grid y utilizando código &lt;strong>C#&lt;/strong> para reorientar los objetos (básicamente se cambian filas por columnas, por describirlo de una manera). Entonces, el XAML quedaría así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;ContentPage xmlns=&amp;#34;http://schemas.microsoft.com/dotnet/2021/maui&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2009/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Class=&amp;#34;MauiApp1.MainPage&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ScrollView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid x:Name=&amp;#34;grillaCompleta&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RowDefinition Height=&amp;#34;*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid x:Name=&amp;#34;grillaInterna&amp;#34; Grid.Row=&amp;#34;0&amp;#34; Padding=&amp;#34;10&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RowDefinition Height=&amp;#34;*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid.ColumnDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ColumnDefinition Width=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ColumnDefinition Width=&amp;#34;*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid.ColumnDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Image Source=&amp;#34;dotnet_bot.png&amp;#34; Grid.Row=&amp;#34;0&amp;#34; Grid.Column=&amp;#34;0&amp;#34; HeightRequest=&amp;#34;100&amp;#34; WidthRequest=&amp;#34;100&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid x:Name=&amp;#34;grillaControles&amp;#34; Grid.Row=&amp;#34;0&amp;#34; Grid.Column=&amp;#34;1&amp;#34; &amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RowDefinition Height=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RowDefinition Height=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RowDefinition Height=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid.ColumnDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ColumnDefinition Width=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ColumnDefinition Width=&amp;#34;*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid.ColumnDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label Text=&amp;#34;Nombre:&amp;#34; Grid.Row=&amp;#34;0&amp;#34; Grid.Column=&amp;#34;0&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label Text=&amp;#34;Fecha:&amp;#34; Grid.Row=&amp;#34;1&amp;#34; Grid.Column=&amp;#34;0&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label Text=&amp;#34;Etiquetas:&amp;#34; Grid.Row=&amp;#34;2&amp;#34; Grid.Column=&amp;#34;0&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Entry Grid.Row=&amp;#34;0&amp;#34; Grid.Column=&amp;#34;1&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Entry Grid.Row=&amp;#34;1&amp;#34; Grid.Column=&amp;#34;1&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Entry Grid.Row=&amp;#34;2&amp;#34; Grid.Column=&amp;#34;1&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/ScrollView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/ContentPage&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Sobre-escribimos el método &lt;strong>OnSizeAllocated&lt;/strong> en el código C# que presta atención al cambio (de tamaño del contenedor de página, orientación, de alguna forma) quedaría así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">protected override void OnSizeAllocated(double width, double height)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> base.OnSizeAllocated(width, height);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (width != this.width || height != this.height)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> this.width = width;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> this.height = height;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (width &amp;gt; height)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.RowDefinitions.Clear();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.ColumnDefinitions.Clear();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.RowDefinitions.Add(new RowDefinition { Height = new GridLength(1, GridUnitType.Star) });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.ColumnDefinitions.Add(new ColumnDefinition { Width = new GridLength(1, GridUnitType.Star) });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.ColumnDefinitions.Add(new ColumnDefinition { Width = new GridLength(1, GridUnitType.Star) });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.Children.Remove(grillaControles);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.Add(grillaControles, 1, 0);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> else
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.RowDefinitions.Clear();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.ColumnDefinitions.Clear();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.ColumnDefinitions.Add(new ColumnDefinition { Width = new GridLength(1, GridUnitType.Star) });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.RowDefinitions.Add(new RowDefinition { Height = new GridLength(1, GridUnitType.Auto) });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.RowDefinitions.Add(new RowDefinition { Height = new GridLength(1, GridUnitType.Star) });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.Children.Remove(grillaControles);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> grillaInterna.Add(grillaControles, 0, 1);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>El resultado Horizontal es:
&lt;img src="https://i.ibb.co/bKnfKs6/Orientation2.png" alt="">&lt;/p>
&lt;p>El resultado Vertical es:
&lt;img src="https://i.ibb.co/3132hFy/Orientation3.png" alt="">&lt;/p>
&lt;p>Me ha funcionado este método, pero hay algunos problemas reportados en GitHub sobre el tema &lt;a href="https://github.com/dotnet/maui/issues/9795">aquí&lt;/a>&lt;/p>
&lt;h3 id="opción-2-extraída-de-otro-blog">Opción 2 (extraída de otro Blog)&lt;/h3>
&lt;p>Definimos el &lt;strong>XAML&lt;/strong> de la página agregando Manejadores de eventos visuales, en este caso, &lt;strong>OrientationStateTrigger&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;ContentPage.Resources&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ResourceDictionary&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Style TargetType=&amp;#34;Grid&amp;#34; x:Key=&amp;#34;grillaInternaStyle&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;VisualStateManager.VisualStateGroups&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualStateGroupList&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualStateGroup&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState x:Name=&amp;#34;Portrait&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState.StateTriggers&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;OrientationStateTrigger Orientation=&amp;#34;Portrait&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState.StateTriggers&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState.Setters&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;RowDefinitions&amp;#34; Value=&amp;#34;*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;ColumnDefinitions&amp;#34; Value=&amp;#34;*,*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState.Setters&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState x:Name=&amp;#34;Landscape&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState.StateTriggers&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;OrientationStateTrigger Orientation=&amp;#34;Landscape&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState.StateTriggers&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState.Setters&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;RowDefinitions&amp;#34; Value=&amp;#34;Auto,*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;ColumnDefinitions&amp;#34; Value=&amp;#34;*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState.Setters&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualStateGroup&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualStateGroupList&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Setter&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Style&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/ResourceDictionary&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/ContentPage.Resources&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>De esta manera, el código completo quedaría así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;ContentPage xmlns=&amp;#34;http://schemas.microsoft.com/dotnet/2021/maui&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2009/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Class=&amp;#34;MauiApp1.MainPage&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ContentPage.Resources&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ResourceDictionary&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Style TargetType=&amp;#34;Grid&amp;#34; x:Key=&amp;#34;grillaInternaStyle&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;VisualStateManager.VisualStateGroups&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualStateGroupList&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualStateGroup&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState x:Name=&amp;#34;Portrait&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState.StateTriggers&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;OrientationStateTrigger Orientation=&amp;#34;Portrait&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState.StateTriggers&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState.Setters&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;RowDefinitions&amp;#34; Value=&amp;#34;*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;ColumnDefinitions&amp;#34; Value=&amp;#34;*,*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState.Setters&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState x:Name=&amp;#34;Landscape&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState.StateTriggers&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;OrientationStateTrigger Orientation=&amp;#34;Landscape&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState.StateTriggers&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VisualState.Setters&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;RowDefinitions&amp;#34; Value=&amp;#34;Auto,*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;ColumnDefinitions&amp;#34; Value=&amp;#34;*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState.Setters&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualState&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualStateGroup&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VisualStateGroupList&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Setter&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Style&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/ResourceDictionary&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/ContentPage.Resources&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid x:Name=&amp;#34;grillaCompleta&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RowDefinition Height=&amp;#34;*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid x:Name=&amp;#34;grillaInterna&amp;#34; Grid.Row=&amp;#34;0&amp;#34; Padding=&amp;#34;10&amp;#34; Style=&amp;#34;{StaticResource grillaInternaStyle}&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Image Source=&amp;#34;dotnet_bot.png&amp;#34; Grid.Row=&amp;#34;0&amp;#34; Grid.Column=&amp;#34;0&amp;#34; HeightRequest=&amp;#34;100&amp;#34; WidthRequest=&amp;#34;100&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid x:Name=&amp;#34;grillaControles&amp;#34; Grid.Row=&amp;#34;0&amp;#34; Grid.Column=&amp;#34;1&amp;#34; &amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RowDefinition Height=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RowDefinition Height=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RowDefinition Height=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid.ColumnDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ColumnDefinition Width=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ColumnDefinition Width=&amp;#34;*&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid.ColumnDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label Text=&amp;#34;Nombre:&amp;#34; Grid.Row=&amp;#34;0&amp;#34; Grid.Column=&amp;#34;0&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label Text=&amp;#34;Fecha:&amp;#34; Grid.Row=&amp;#34;1&amp;#34; Grid.Column=&amp;#34;0&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label Text=&amp;#34;Etiquetas:&amp;#34; Grid.Row=&amp;#34;2&amp;#34; Grid.Column=&amp;#34;0&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Entry Grid.Row=&amp;#34;0&amp;#34; Grid.Column=&amp;#34;1&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Entry Grid.Row=&amp;#34;1&amp;#34; Grid.Column=&amp;#34;1&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Entry Grid.Row=&amp;#34;2&amp;#34; Grid.Column=&amp;#34;1&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/ContentPage&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Logrando así el mismo efecto que la Opción 1 (con la diferencia que esta solución me funcionó en &lt;strong>Android&lt;/strong> y &lt;strong>Windows&lt;/strong>).&lt;/p>
&lt;p>La opción 2 se encuentra perfectamente explicada en &lt;a href="https://blog.ewers-peters.de/add-responsive-layouts-to-your-maui-app">este blog&lt;/a> gracias a &lt;a href="https://github.com/ewerspej">Julian Ewers-Peters&lt;/a>&lt;/p>
&lt;p>Recuerden que durante todo este mes de Diciembre estamos en el &lt;strong>&lt;a href="https://elcamino.dev/calendario-adviento-net-maui-espanol-23">Calendario de Adviento .NET MAUI&lt;/a>&lt;/strong>&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Novedades en .NET MAUI con .NET 8</title><link>https://cmas.dev/posts/2023-12-01-whats-new-in-maui-net-8/</link><pubDate>Fri, 01 Dec 2023 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2023-12-01-whats-new-in-maui-net-8/</guid><description>&lt;p>En este artículo mostraré algunas novedades de .NET 8 en &lt;strong>.NET MAUI&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22635.2776&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;strong>.NET 8&lt;/strong> se ha lanzado con muchas novedades y también han sufrido cambios (para bien) en la plataforma &lt;strong>.NET MAUI&lt;/strong>. Es muy fácili dirigirnos al &lt;a href="https://learn.microsoft.com/es-es/dotnet/maui/whats-new/dotnet-8?view=net-maui-8.0">sitio oficial&lt;/a> y leer ahí las novedades pero me interesa probarlas novedades y contarles un poco lo que se viene, pero en mayor detalle lo que voy probando. ¡Así que manos a la obra!&lt;/p>
&lt;h2 id="novedades-generales">Novedades generales&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Diseño de derecha a izquierda&lt;/strong>: Gracias a las mejoras de performance de .NET 8 se logra que los diseños para idiomas que van de derecha a izquierda ahora se vean correctamente además de responder en tiempo y forma.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Comportamiento de teclado&lt;/strong>: Se han mejorado las disposiciones de teclado, que responden más rápidamente al ingreso de texto por parte del usuario, además el scroll responde más rápido ante la aparición/desaparición del teclado.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Gestión de memoria&lt;/strong>: Esto viene atado a las mejoras introducidas en general dentro de .NET 8.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="cómo-habilito-net-maui-8">¿Cómo habilito .NET MAUI 8?&lt;/h2>
&lt;p>Primero, debemos descargar e instalar el &lt;strong>SDK&lt;/strong> de &lt;strong>.NET 8&lt;/strong>, eso lo encontramos &lt;a href="https://dotnet.microsoft.com/en-us/download/dotnet/thank-you/sdk-8.0.100-windows-x64-installer">aquí&lt;/a>.&lt;/p>
&lt;p>Luego, debemos actualizar &lt;strong>Visual Studio 2022&lt;/strong> a su versión &lt;strong>17.8.0&lt;/strong> o superior (acabo de ver disponible la versión &lt;strong>17.8.2&lt;/strong>) que se puede descargar desde &lt;a href="https://visualstudio.microsoft.com/downloads/">aquí&lt;/a>.&lt;/p>
&lt;p>Iniciamos el instalador de &lt;strong>Visual Studio&lt;/strong> e indicamos la opción de &lt;strong>.NET Multi-platform App UI development&lt;/strong>:
&lt;img src="https://i.ibb.co/7bnx4RQ/1.png" alt="">&lt;/p>
&lt;h2 id="creando-un-proyecto-net-maui-8">Creando un proyecto .NET MAUI 8&lt;/h2>
&lt;p>Al abrir &lt;strong>Visual Studio&lt;/strong> procedemos a crear un nuevo proyecto y definimos el &lt;em>Tipo&lt;/em> &lt;strong>MAUI&lt;/strong> (en mi caso tengo &lt;a href="https://www.telerik.com/maui-ui">Telerik UI for .NET MAUI&lt;/a> instalado):
&lt;img src="https://i.ibb.co/QDyvX8v/2.png" alt="">&lt;/p>
&lt;p>Seleccionamos la versión de .NET (en este caso ya seleccionamos el 8):
&lt;img src="https://i.ibb.co/LCZv5vc/3.png" alt="">&lt;/p>
&lt;p>Nos dirigimos a las &lt;strong>Propiedades&lt;/strong> del proyecto y verificamos que todo corresponda al &lt;strong>.NET 8&lt;/strong>:
&lt;img src="https://i.ibb.co/L0NYJSx/4.png" alt="">&lt;/p>
&lt;p>Con estos pasos tenemos un nuevo proyecto creado en &lt;strong>.NET MAUI 8&lt;/strong> ;)&lt;/p>
&lt;h2 id="cambio-en-mauiprogramcs">Cambio en MauiProgram.cs&lt;/h2>
&lt;p>En el archivo de arranque de un proyecto &lt;strong>.NET MAUI&lt;/strong> se ingresa una línea de código nueva:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">#if DEBUG
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">builder.Logging.AddDebug();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#endif
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>El código completo queda así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Extensions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Logging&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">namespace&lt;/span> &lt;span class="n">MauiApp1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="k">static&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">MauiProgram&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="k">static&lt;/span> &lt;span class="n">MauiApp&lt;/span> &lt;span class="n">CreateMauiApp&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">builder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">MauiApp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CreateBuilder&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">builder&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">UseMauiApp&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">App&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">ConfigureFonts&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fonts&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fonts&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddFont&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;OpenSans-Regular.ttf&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;OpenSansRegular&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fonts&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddFont&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;OpenSans-Semibold.ttf&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;OpenSansSemibold&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#if DEBUG&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Logging&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddDebug&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#endif&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Build&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Básicamente, se registran los eventos y éstos se agregan a la ventana del depurar (pero sólo durante la depuración no así en Release).&lt;/p>
&lt;h2 id="keyboard-acelerator">Keyboard Acelerator&lt;/h2>
&lt;p>Para dar una explicación rápida, podemos decir que son atajos de teclado que nos permiten realiar una acción dentro de la aplicación:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;ContentPage.MenuBarItems&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;MenuBarItem Text=&amp;#34;File&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;MenuFlyoutItem Text=&amp;#34;Exit&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Clicked=&amp;#34;MenuFlyoutItem_Clicked&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/MenuBarItem&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;MenuBarItem Text=&amp;#34;Locations&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;MenuFlyoutSeparator /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;MenuFlyoutItem Text=&amp;#34;Add Location&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Clicked=&amp;#34;MenuFlyoutItem_Clicked_1&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;MenuFlyoutItem.KeyboardAccelerators&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;KeyboardAccelerator Modifiers=&amp;#34;Ctrl&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Key=&amp;#34;L&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/MenuFlyoutItem.KeyboardAccelerators&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/MenuFlyoutItem&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;MenuFlyoutItem Text=&amp;#34;Edit Location&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;MenuFlyoutItem Text=&amp;#34;Remove Location&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/MenuBarItem&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/ContentPage.MenuBarItems&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Arrancamos la App y vemos el Menú:
&lt;img src="https://i.ibb.co/FWRFggx/5.png" alt="">&lt;/p>
&lt;p>Hacemos clic o bien utilizamos el atajo &lt;strong>Ctrl&lt;/strong>+&lt;strong>L&lt;/strong> y veremos:
&lt;img src="https://i.ibb.co/dGNdZDc/6.png" alt="">&lt;/p>
&lt;p>Estas son las novedades que quería compartir con ustedes en estas primeras pruebas que estoy realizando (de hecho estoy actualmente en un proyecto &lt;strong>.NET MAUI 8&lt;/strong>). Iré avanzando en las novedades de &lt;strong>.NET MAUI&lt;/strong> en todo este mes de Diciembre ya que nos encontramos en pleno &lt;strong>&lt;a href="https://elcamino.dev/calendario-adviento-net-maui-espanol-23">Calendario de Adviento .NET MAUI&lt;/a>&lt;/strong>&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>ChatGPT en WPF</title><link>https://cmas.dev/posts/2023-03-19-chatgpt-wpf/</link><pubDate>Sun, 19 Mar 2023 09:01:00 -0400</pubDate><guid>https://cmas.dev/posts/2023-03-19-chatgpt-wpf/</guid><description>&lt;p>En este artículo veremos cómo crear un Chat con la API de &lt;strong>ChatGPT&lt;/strong> y &lt;strong>WPF&lt;/strong> con controles &lt;strong>Telerik&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25314&lt;/strong>&lt;/em>&lt;/p>
&lt;p>En el articulo de &lt;a href="https://cmas.dev/posts/2023-03-15-creating-chat-app-wpf-using-telerik/">la semana pasada&lt;/a> hemos visto cómo crear una pequeña aplicación tipo Chat con &lt;strong>Telerik&lt;/strong>. El viernes, &lt;a href="https://cmas.dev/posts/2023-03-17-chatgpt-from-paraguay/">vimos cómo habilitar &lt;strong>ChatGPT&lt;/strong>&lt;/a> en Paraguay (teniendo en cuenta que no está habilitado oficialmente aún).&lt;/p>
&lt;h2 id="creando-una-aplicación">Creando una aplicación&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Abrimos &lt;strong>Visual Studio Professional 2022&lt;/strong> (va servir la edición &lt;strong>Community&lt;/strong>).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Agregamos los paquetes &lt;strong>NuGet&lt;/strong> necesarios para nuestro proyecto:
&lt;img src="https://i.ibb.co/H7GLDJk/1.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Agregar configuraciones de la aplicación:
&lt;img src="https://i.ibb.co/F5pTW4J/2.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Adicionar las configuraciones en el archivo creado:
&lt;img src="https://i.ibb.co/XCPVnmR/3.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Vamos a trabajar con &lt;strong>RadChat&lt;/strong> de &lt;strong>Telerik for WPF&lt;/strong>, así que debemos agregar el modelo para &lt;strong>TextMessage&lt;/strong>. Entonces, agregamos la clase en cuestión:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">using System;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">using Telerik.Windows.Controls.ConversationalUI;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">namespace TelerikWpfChat
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public class TextMessageModel
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public string Text { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public Author Author { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public DateTime CreationDate { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>Dentro del &lt;em>Framework&lt;/em> que utiliza &lt;strong>Telerik Conversational UI&lt;/strong> y &lt;strong>WPF&lt;/strong> se hace muy común el uso de conversores para manipalutación de datos que se modifican a nivel visual. Entonces, aplicamos el conversor:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Telerik&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Windows&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Controls&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ConversationalUI&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">namespace&lt;/span> &lt;span class="n">TelerikWpfChat&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">MessageConverter&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">IMessageConverter&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">MessageBase&lt;/span> &lt;span class="n">ConvertItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">object&lt;/span> &lt;span class="n">item&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">messageModel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">TextMessageModel&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">TextMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">messageModel&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Author&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">messageModel&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Text&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">messageModel&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CreationDate&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">object&lt;/span> &lt;span class="n">ConvertMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MessageBase&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">textMessage&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">TextMessage&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">TextMessageModel&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Author&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">textMessage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Author&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">textMessage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Text&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">CreationDate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">textMessage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CreationDate&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Creamos el &lt;em>ViewModel&lt;/em> que va interactuar entre el &lt;strong>ChatGPT&lt;/strong> y &lt;strong>WPF&lt;/strong>. Tener en cuenta que aquí se encuentra la llamada a la API de &lt;strong>GPT&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Collections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ObjectModel&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Telerik&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Windows&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Controls&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ConversationalUI&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Threading&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Tasks&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Net&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Http&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Windows&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Threading&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Windows&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Newtonsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Json&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">namespace&lt;/span> &lt;span class="n">TelerikWpfChat&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">ChatViewModel&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">ObservableCollection&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">TextMessageModel&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">Messages&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">Author&lt;/span> &lt;span class="n">CurrentAuthor&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">private&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">Author&lt;/span> &lt;span class="n">OtherAuthor&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">private&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">ChatViewModel&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CurrentAuthor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Author&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Christian&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">OtherAuthor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Author&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;GPT&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Messages&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">null&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Messages&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">ObservableCollection&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">TextMessageModel&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">internal&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">SendCurrentMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">prompt&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span>&lt;span class="n">Agregamos&lt;/span> &lt;span class="n">nuestra&lt;/span> &lt;span class="n">interacción&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Messages&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new&lt;/span> &lt;span class="n">TextMessageModel&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">prompt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Author&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">CurrentAuthor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">CreationDate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DateTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Now&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span>&lt;span class="n">Llamamos&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">la&lt;/span> &lt;span class="n">API&lt;/span> &lt;span class="n">de&lt;/span> &lt;span class="n">GPT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">sendToGpt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">prompt&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">null&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">MessageBox&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Show&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Error en la Matrix!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span>&lt;span class="n">Obtenemos&lt;/span> &lt;span class="n">los&lt;/span> &lt;span class="n">resultados&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="n">le&lt;/span> &lt;span class="n">pasamos&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">la&lt;/span> &lt;span class="n">interfaz&lt;/span> &lt;span class="n">en&lt;/span> &lt;span class="n">un&lt;/span> &lt;span class="n">hilo&lt;/span> &lt;span class="n">separado&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">Dispatcher&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CurrentDispatcher&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">BeginInvoke&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">Action&lt;/span>&lt;span class="p">)(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Messages&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new&lt;/span> &lt;span class="n">TextMessageModel&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Author&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">OtherAuthor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">CreationDate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DateTime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Now&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">sendToGpt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">prompt&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">apiKey&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Properties&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Settings&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Default&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ApiGPTChat&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">model&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Properties&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Settings&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Default&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Model&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">maxTokens&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">500&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">using&lt;/span> &lt;span class="k">var&lt;/span> &lt;span class="n">client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">HttpClient&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DefaultRequestHeaders&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Authorization&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="s2">&amp;#34;Bearer {apiKey}&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;https://api.openai.com/v1/completions&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">requestBody&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">prompt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">prompt&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">model&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">model&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temperature&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">max_tokens&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">maxTokens&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">postJson&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Text&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">JsonSerializer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Serialize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">requestBody&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">PostAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">new&lt;/span> &lt;span class="n">StringContent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">postJson&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Text&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Encoding&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">UTF8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;application/json&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">responseBody&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Content&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ReadAsStringAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dynamic&lt;/span> &lt;span class="n">responseData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">JsonConvert&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DeserializeObject&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">dynamic&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">responseBody&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ne">int&lt;/span> &lt;span class="n">lastChoice&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">responseData&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">choices&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Count&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">responseData&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">choices&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">lastChoice&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>Creamos el diseño de nuestro Chat inteligente:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;Window x:Class=&amp;#34;TelerikWpfChat.MainWindow&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns=&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:telerik=&amp;#34;http://schemas.telerik.com/2008/xaml/presentation&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:local=&amp;#34;clr-namespace:TelerikWpfChat&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Title=&amp;#34;ChatGPT on WPF&amp;#34; Height=&amp;#34;600&amp;#34; Width=&amp;#34;800&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;telerik:RadChat Margin=&amp;#34;10&amp;#34; CurrentAuthor=&amp;#34;{Binding CurrentAuthor}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> DataSource=&amp;#34;{Binding Messages}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SendMessage=&amp;#34;chat_SendMessage&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;telerik:RadChat.DataContext&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;local:ChatViewModel /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/telerik:RadChat.DataContext&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;telerik:RadChat.MessageConverter&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;local:MessageConverter /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/telerik:RadChat.MessageConverter&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/telerik:RadChat&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/Window&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://i.ibb.co/HHMzpp3/4.png" alt="">&lt;/p>
&lt;ol start="6">
&lt;li>Agregamos la llamada al evento que envía mensaje en nuestra página &lt;strong>WPF&lt;/strong> (incluye trabajo asíncronos y multihilo):&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Windows&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Telerik&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Windows&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Controls&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Telerik&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Windows&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Controls&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ConversationalUI&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">namespace&lt;/span> &lt;span class="n">TelerikWpfChat&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">partial&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">MainWindow&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">Window&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">MainWindow&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">InitializeComponent&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">chat_SendMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">object&lt;/span> &lt;span class="n">sender&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SendMessageEventArgs&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">e&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Handled&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">chat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sender&lt;/span> &lt;span class="n">as&lt;/span> &lt;span class="n">RadChat&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">model&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ChatViewModel&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">chat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DataContext&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">mensaje&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Message&lt;/span> &lt;span class="n">as&lt;/span> &lt;span class="n">TextMessage&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">chat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TypingIndicatorVisibility&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Visibility&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Visible&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">chat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TypingIndicatorText&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Esperando respuesta de &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">model&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">OtherAuthor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">model&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SendCurrentMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mensaje&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Text&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">chat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TypingIndicatorVisibility&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Visibility&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Collapsed&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">chat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TypingIndicatorText&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Empty&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="7">
&lt;li>Volvemos a ejecutar con &lt;em>F5&lt;/em> y disfrutamos del chat.&lt;/li>
&lt;/ol>
&lt;h2 id="cómo-interactúa">¿Cómo interactúa?&lt;/h2>
&lt;p>Jugando un poco con la &lt;em>API&lt;/em> de &lt;strong>ChatGPT&lt;/strong> logramos esta funcionalidad:&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>El código fuente completo &lt;a href="https://github.com/cmasdev/TelerikWpfChatGPT">se encuentra en GitHub&lt;/a>.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Ingresando a ChatGPT desde Paraguay</title><link>https://cmas.dev/posts/2023-03-17-chatgpt-from-paraguay/</link><pubDate>Fri, 17 Mar 2023 21:25:00 -0400</pubDate><guid>https://cmas.dev/posts/2023-03-17-chatgpt-from-paraguay/</guid><description>&lt;p>En este artículo veremos cómo crear una cuenta en OpenAI para utilizar su famoso producto &lt;strong>ChatGPT&lt;/strong> y obtener acceso a su API para usarlo en nuestros desarrollos de &lt;strong>Windows&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25314&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Debemos crear una cuenta en OpenAI para poder utilizar el ChatGPT que está revolucionando el mercado tecnológico en los últimos días. ¡El famoso chat que sabe todo!&lt;/p>
&lt;h2 id="instalar-vpn">Instalar VPN&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Buscamos la extensión para &lt;strong>Microsoft Edge&lt;/strong> con el nombre &lt;strong>Free VPN for Edge&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2023/03/17/1.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Agregamos la extensión:
&lt;img src="https://cmas.dev/img/posts/2023/03/17/2.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Siguiente a toda la publicidad:
&lt;img src="https://cmas.dev/img/posts/2023/03/17/3.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Seleccionamos un país como EEUU o Francia (en Paraguay) y hacemos clic en el botón de encendido:
&lt;img src="https://cmas.dev/img/posts/2023/03/17/4.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Listo. Debemos ingresar al sitio oficial del chat sin problemas&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="chatgpt">ChatGPT&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Ir al sitio oficial del &lt;a href="https://chat.openai.com/chat">chat&lt;/a> e iniciar sesión:
&lt;img src="https://cmas.dev/img/posts/2023/03/17/5.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Colocar los datos personales:
&lt;img src="https://cmas.dev/img/posts/2023/03/17/6.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Verificar el número de teléfono:
&lt;img src="https://cmas.dev/img/posts/2023/03/17/7.png" alt="">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Para este caso no funciona un número de Paraguay, debe ser un número que corresponda a algunos de los &lt;a href="https://platform.openai.com/docs/supported-countries">países habilitados&lt;/a> pero lo podemos hacer con algunas herramientas que se encuentran gracias a &lt;strong>Microsoft Bing&lt;/strong>.&lt;/p>
&lt;ol start="4">
&lt;li>Luego de la verificación, podremos ingresar a la plataforma:
&lt;img src="https://cmas.dev/img/posts/2023/03/17/8.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Creando una aplicación tipo Chat en WPF usando Telerik</title><link>https://cmas.dev/posts/2023-03-15-creating-chat-app-wpf-using-telerik/</link><pubDate>Wed, 15 Mar 2023 20:57:00 -0400</pubDate><guid>https://cmas.dev/posts/2023-03-15-creating-chat-app-wpf-using-telerik/</guid><description>&lt;p>En este artículo veremos cómo crear una aplicación de Chat en &lt;strong>WPF&lt;/strong> con &lt;strong>Telerik&lt;/strong>. (Antesala de todo el tema de &lt;a href="https://openai.com/blog/chatgpt/">ChatGPT&lt;/a>)&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25290&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Es raro, que después de tantos años vuelva a escribir un artículo sobre WPF (el último fue &lt;a href="https://cmasdevnet.blogspot.com/2016/03/wpf-how-to-notificaciones-en-bandeja-de.html">este&lt;/a>) pero amerita hacerlo pues encontré un botón muy práctico para todo lo relacionado con este nuevo ¡BOOM! que es el ChatGPT.&lt;/p>
&lt;p>El control en cuestión es &lt;a href="https://docs.telerik.com/devtools/wpf/controls/radchat/overview">RadChat&lt;/a> que es parte del &lt;a href="https://www.telerik.com/conversational-ui">&lt;strong>ConversationalUI&lt;/strong>&lt;/a> de &lt;strong>Telerik&lt;/strong>. Esto representa un Chat agnóstico para casi todas sus plataformas (aún no disponible para &lt;strong>WinUI&lt;/strong> ni &lt;strong>Blazor&lt;/strong> que me interesan muchísimo).&lt;/p>
&lt;h2 id="proyecto-wpf">Proyecto WPF&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Vamos a crear un proyecto de tipo &lt;strong>WPF&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2023/03/15/1.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Colocamos un nombre descriptivo:
&lt;img src="https://cmas.dev/img/posts/2023/03/15/2.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Seguimos los pasos en pantalla.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Agregamos las librerías necesarias:
&lt;img src="https://cmas.dev/img/posts/2023/03/15/3.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Insertamos el control &lt;strong>XAML&lt;/strong>:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;Window x:Class=&amp;#34;TelerikWpfChat.MainWindow&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns=&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:telerik=&amp;#34;http://schemas.telerik.com/2008/xaml/presentation&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Title=&amp;#34;MainWindow&amp;#34; Height=&amp;#34;350&amp;#34; Width=&amp;#34;525&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;telerik:RadChat Name=&amp;#34;chat&amp;#34; SendMessage=&amp;#34;chat_SendMessage&amp;#34; &amp;gt;&amp;lt;/telerik:RadChat&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/Window&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>
&lt;p>Probamos la aplicación:
&lt;img src="https://cmas.dev/img/posts/2023/03/15/4.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Entonces, el código C# nos quedaría así:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Windows&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Telerik&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Windows&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Controls&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ConversationalUI&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">namespace&lt;/span> &lt;span class="n">TelerikWpfChat&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">///&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">summary&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">///&lt;/span> &lt;span class="n">Interaction&lt;/span> &lt;span class="n">logic&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">MainWindow&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xaml&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">///&lt;/span> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">summary&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">partial&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">MainWindow&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">Window&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span>&lt;span class="n">Creamos&lt;/span> &lt;span class="n">los&lt;/span> &lt;span class="n">objetos&lt;/span> &lt;span class="n">que&lt;/span> &lt;span class="n">interactúan&lt;/span> &lt;span class="n">en&lt;/span> &lt;span class="n">el&lt;/span> &lt;span class="n">Chat&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">Author&lt;/span> &lt;span class="n">currentAuthor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">Author&lt;/span> &lt;span class="n">externalAuthor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">MainWindow&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">InitializeComponent&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span>&lt;span class="n">Asignamos&lt;/span> &lt;span class="n">nombres&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">currentAuthor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Author&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Christian&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">externalAuthor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Author&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;External&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">chat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CurrentAuthor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">currentAuthor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">chat_SendMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">object&lt;/span> &lt;span class="n">sender&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SendMessageEventArgs&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">e&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Handled&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span>&lt;span class="n">El&lt;/span> &lt;span class="n">texto&lt;/span> &lt;span class="n">que&lt;/span> &lt;span class="n">escribimos&lt;/span> &lt;span class="n">en&lt;/span> &lt;span class="n">el&lt;/span> &lt;span class="n">chat&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">updatedMessageText&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Message&lt;/span> &lt;span class="n">as&lt;/span> &lt;span class="n">TextMessage&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Text&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">chat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">chat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CurrentAuthor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">updatedMessageText&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span>&lt;span class="n">La&lt;/span> &lt;span class="n">respuesta&lt;/span> &lt;span class="n">que&lt;/span> &lt;span class="n">obtenemos&lt;/span> &lt;span class="n">acada&lt;/span> &lt;span class="n">interacción&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">chat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CurrentAuthor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">externalAuthor&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">chat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">chat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CurrentAuthor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;¡No tengo respuestas aún!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Listo, de esta forma logramos hacer un pequeño Chat (que puede convertirse en ChatBot). Y nos queda algo así:
&lt;img src="https://cmas.dev/img/posts/2023/03/15/5.png" alt="">&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Django sobre WSL</title><link>https://cmas.dev/posts/2022-12-21-django-on-wsl/</link><pubDate>Wed, 21 Dec 2022 19:39:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-12-21-django-on-wsl/</guid><description>&lt;p>En este corto artículo veremos cómo desarrollar sobre &lt;strong>WSL (Windows Subsystem for Linux)&lt;/strong> con &lt;strong>Python&lt;/strong> y &lt;strong>Django&lt;/strong>. Ya hemos visto que lo podemos hacer con &lt;a href="https://cmas.dev/posts/2022-06-29-java-with-wsl-part-2/">Java&lt;/a>&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25267&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;strong>WSL&lt;/strong> nos ofrece demasiadas ventajas a la hora de desarrollar software sobre el sistema operativo Linux, en este caso &lt;strong>Ubuntu&lt;/strong>. Hoy en día Python es un lenguaje demasiado difundido y muy utilizado en varios ámbitos, con sus ventajas y desventajas como todas las plataformas existentes. A eso le sumaron un Framework muy potente y completo &amp;ldquo;&lt;strong>Django&lt;/strong>&amp;rdquo;.&lt;/p>
&lt;p>Aquí veremos como instalar y ejecutar una aplicación web &lt;strong>Django&lt;/strong> utilizando &lt;strong>Visual Studio Code&lt;/strong>.&lt;/p>
&lt;h2 id="instalar-django-en-wslubuntu">Instalar Django en &lt;strong>WSL:Ubuntu&lt;/strong>&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Abrimos &lt;strong>Windows Terminal&lt;/strong> con el perfil &lt;strong>Ubuntu&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/12/21/1.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Procedemos a instalar &lt;strong>Django&lt;/strong> con el siguiente comando:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt install python3-django
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>
&lt;p>Seguimos las instrucciones en pantalla y listo.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Verificamos la instalación con el siguiente comando:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">django-admin --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://cmas.dev/img/posts/2022/12/21/2.png" alt="">&lt;/p>
&lt;h2 id="crear-proyecto-django-y-empezar-a-trabajar">Crear proyecto Django y empezar a trabajar&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Ir a la carpeta donde debe estar nuestro proyecto:
&lt;img src="https://cmas.dev/img/posts/2022/12/21/3.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Crear un ambiente virtual de &lt;strong>Python&lt;/strong>:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ python3 -m venv pythonTest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Activar el ambiente virtual:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ source pythonTest/bin/activate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Instalar &lt;strong>Django&lt;/strong> en el ambiente virtual:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">(pythonTest) $ pip install django
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>Se crea el proyecto en la carpeta actual:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">(pythonTest) $ django-admin startproject testproject .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>Migramos la base de datos inicial:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">(pythonTest) $ python manage.py migrate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="7">
&lt;li>Se crea la administracion de la Web:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">(pythonTest) $ python manage.py createsuperuser
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="8">
&lt;li>
&lt;p>Completamos los datos y listo:
&lt;img src="https://cmas.dev/img/posts/2022/12/21/4.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Abrimos la carpeta donde alojamos el proyecto y empezamos a desarrollar:
&lt;img src="https://cmas.dev/img/posts/2022/12/21/5.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Activamos el ambiernte virtual de Python y ejecutamos el servidor de Django:
&lt;img src="https://cmas.dev/img/posts/2022/12/21/6.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Veremos la página principal de Django:
&lt;img src="https://cmas.dev/img/posts/2022/12/21/7.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Si accedemos a la URL con el contexto &lt;em>/admin&lt;/em> veremos lo siguiente:
&lt;img src="https://cmas.dev/img/posts/2022/12/21/8.png" alt="">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2022/12/21/9.png" alt="">&lt;/p>
&lt;p>Listo para desarrollar aplicaciones web con &lt;strong>Django&lt;/strong> y &lt;strong>Python&lt;/strong> sobre &lt;strong>Visual Studio Code&lt;/strong> y &lt;strong>WSL&lt;/strong>.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Desarrollo con Python sobre WSL</title><link>https://cmas.dev/posts/2022-12-14-developing-python-on-wsl/</link><pubDate>Wed, 14 Dec 2022 21:12:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-12-14-developing-python-on-wsl/</guid><description>&lt;p>En este corto artículo veremos cómo desarrollar sobre &lt;strong>WSL (Windows Subsystem for Linux)&lt;/strong> con &lt;strong>Python&lt;/strong>. Ya hemos visto que lo podemos hacer con &lt;a href="https://cmas.dev/posts/2022-06-29-java-with-wsl-part-2/">Java&lt;/a>&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25267&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;strong>WSL&lt;/strong> nos ofrece demasiadas ventajas a la hora de desarrollar software sobre el sistema operativo Linux, en este caso &lt;strong>Ubuntu&lt;/strong>. Hoy en día Python es un lenguaje demasiado difundido y muy utilizado en varios ámbitos, con sus ventajas y desventajas como todas las plataformas existentes.&lt;/p>
&lt;p>Aquí veremos como instalar y ejecutar un pequeño código utilizando &lt;strong>Visual Studio Code&lt;/strong>.&lt;/p>
&lt;h2 id="python-en-wsl">Python en WSL&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Abrimos Visual Studio Code (pero en WSL):
&lt;img src="https://cmas.dev/img/posts/2022/12/14/1.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>En extensiones, buscamos &amp;ldquo;python&amp;rdquo; y lo instalamos (el fabricante debe ser Microsoft):
&lt;img src="https://cmas.dev/img/posts/2022/12/14/2.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Luego de la instalación, procedemos a crear un nuevo archivo:
&lt;img src="https://cmas.dev/img/posts/2022/12/14/3.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Seleccionamos el archivo de tipo Python, colocamos en el lugar de preferencia (dentro del WSL):
&lt;img src="https://cmas.dev/img/posts/2022/12/14/4.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Crear un archivo nuevo &lt;strong>pythonTest.py&lt;/strong> (en mi caso) y escribir el siguiente código.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">print(&amp;#34;Hello, World from VS Code and WSL&amp;#34;)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>
&lt;p>Casi hacemos &lt;em>F5&lt;/em> pero notamos que falta algo:
&lt;img src="https://cmas.dev/img/posts/2022/12/14/5.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Seleccionamos el Intérprete recomendado:
&lt;img src="https://cmas.dev/img/posts/2022/12/14/6.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Seleccionamos la configuración del depurador (porque es un archivo suelto):
&lt;img src="https://cmas.dev/img/posts/2022/12/14/7.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ejecutamos nuestro archivo &lt;strong>.py&lt;/strong> y listo:
&lt;img src="https://cmas.dev/img/posts/2022/12/14/8.png" alt="">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Figma y Windows Fluent Design System</title><link>https://cmas.dev/posts/2022-12-07-figma-and-windows-fluent-design-system/</link><pubDate>Wed, 07 Dec 2022 21:12:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-12-07-figma-and-windows-fluent-design-system/</guid><description>&lt;p>En este corto artículo trataremos de entender las directrices de diseño y analizaremos código de interfaz de usuario para crear experiencias de aplicaciones de &lt;strong>Windows&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25252&lt;/strong>&lt;/em>&lt;/p>
&lt;p>En el título hay dos temas, uno de ellos lo hemos visto &lt;a href="https://cmas.dev/posts/2022-04-25-introduction-to-windows-fluent-system/">aquí&lt;/a> para tratar de entenderlo. Ahora que eso quedó claro, nos queda enteder que es &lt;strong>&lt;a href="https://www.figma.com/">Figma&lt;/a>&lt;/strong>.&lt;/p>
&lt;p>Como he escrito varios artículos del tipo &amp;ldquo;HowTo&amp;rdquo; debemos tener en claro los lineamientos de diseño para la plataforma Windows, pues el próximo año nos enfocaremos en &lt;strong>WinUI&lt;/strong>&lt;/p>
&lt;p>Dejo a cargo de los lectores la investigación de los temas relacionados a lineamientos de diseño (es bastante largo y completo por lo que no entraría en un solo artículo). A decir verdad, no me llevo bien con diseño de aplicaciones (para eso están los diseñadores). Puedes leer todo &lt;a href="https://learn.microsoft.com/es-es/windows/apps/design/">aquí&lt;/a>&lt;/p>
&lt;h2 id="qué-es-figma">¿Qué es Figma?&lt;/h2>
&lt;p>&lt;strong>Figma&lt;/strong> es una herramienta de diseño de interfaces que permite la colaboración en tiempo real entre equipos. Se pueden crear sitios web, gráficos y más.&lt;/p>
&lt;p>&lt;strong>Figma&lt;/strong> tiene muchas características que la hacen una herramienta de diseño muy útil y versátil. Algunas de ellas son:&lt;/p>
&lt;ul>
&lt;li>Es una aplicación web, lo que significa que se puede acceder a ella desde cualquier navegador y dispositivo.&lt;/li>
&lt;li>Permite la creación de prototipos interactivos y realistas, que se puede compartir y probar con tu equipo o clientes.&lt;/li>
&lt;li>Facilita la colaboración entre diseñadores y desarrolladores, ya que se puede exportar el código CSS, SVG o React de tus diseños.&lt;/li>
&lt;li>Tiene un sistema de componentes y estilos que ayuda a crear interfaces consistentes y reutilizables.&lt;/li>
&lt;/ul>
&lt;h3 id="qué-tiene-que-ver-figma-con-windows-app-sdk">¿Qué tiene que ver Figma con Windows App SDK?&lt;/h3>
&lt;p>Con &lt;strong>Figma&lt;/strong> se pueden crear diseños de interfaces para aplicaciones de escritorio de &lt;strong>Windows&lt;/strong> usando el &lt;strong>Windows App SDK&lt;/strong>, un conjunto de componentes y herramientas que te permiten usar las APIs y funcionalidades de &lt;strong>Windows 11&lt;/strong> y versiones anteriores.&lt;/p>
&lt;p>Se puede descargar la aplicación de escritorio de &lt;strong>Figma&lt;/strong> para &lt;strong>Windows&lt;/strong> desde su &lt;a href="https://www.figma.com/download/desktop/win">sitio web&lt;/a> y usarla para diseñar, prototipar y colaborar en los proyectos. También se puede usar la plataforma de desarrolladores de &lt;strong>Figma&lt;/strong> para crear plugins o integraciones con otras herramientas.&lt;/p>
&lt;h2 id="empezar-a-trabajar-con-figma-y-windows-fluent-design-system">Empezar a trabajar con Figma y Windows Fluent Design System&lt;/h2>
&lt;p>Y nada, rápidamente debemos empezar en &lt;a href="https://learn.microsoft.com/es-es/windows/apps/design/downloads/">esta página&lt;/a> y ¡manos a la obra!&lt;/p>
&lt;p>Deberías instalarlo desde Microsoft Store para probar.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Usando MAUI con Windows App SDK</title><link>https://cmas.dev/posts/2022-11-02-windows-app-using-maui/</link><pubDate>Wed, 02 Nov 2022 23:42:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-11-02-windows-app-using-maui/</guid><description>&lt;p>En este artículo veremos cómo &lt;strong>.NET MAUI&lt;/strong> interactúa con &lt;strong>Windows 11&lt;/strong> sin necesidad de funciones extras ni código para llegar a ese resultado.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25236&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Hemos visto en varios artículos anteriores, detalles sobre &lt;strong>.NET MAUI&lt;/strong>, pero aquí me surge la necesidad de saber qué pasa en el caso de Windows cuando, por ejemplo, necesitamos acceder al sistema de archivos. ¿Qué pasa? Comparando con &lt;strong>Android&lt;/strong> ¿Cómo se comporta? Seguí leyendo y veamos.&lt;/p>
&lt;h2 id="abrir-imagen-en-windows-11">Abrir imagen en Windows 11&lt;/h2>
&lt;p>Con estos pasos lograremos abrir un archivo y cargarlo en nuestro diseño.&lt;/p>
&lt;ol>
&lt;li>Creamos el método que permite abrir los archivos en el Windows:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">private&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">FileResult&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">PickAndShow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PickOptions&lt;/span> &lt;span class="n">options&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">try&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">FilePicker&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Default&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">PickAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">options&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">null&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">FileName&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">EndsWith&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;jpg&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">StringComparison&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">OrdinalIgnoreCase&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">FileName&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">EndsWith&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;png&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">StringComparison&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">OrdinalIgnoreCase&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">using&lt;/span> &lt;span class="k">var&lt;/span> &lt;span class="n">stream&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">OpenReadAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">image&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ImageSource&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">FromStream&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">stream&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Exception&lt;/span> &lt;span class="n">ex&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">throw&lt;/span> &lt;span class="n">ex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Hacemos la llamada al método y el resultado lo exponemos en la imagen principal:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">private&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">OnCounterClicked&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">object&lt;/span> &lt;span class="n">sender&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">EventArgs&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">resultado&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">PickAndShow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PickOptions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Images&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">imgLogo&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Source&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ImageSource&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">ImageSourceConverter&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ConvertFromString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">resultado&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">FullPath&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Hicimos un cambio en el XAML, colocamos un nombre a la imagen para poder reemplazar el &lt;em>Source&lt;/em> de dicha imagen:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;Image
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Name=&amp;#34;imgLogo&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Source=&amp;#34;dotnet_bot.png&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.Description=&amp;#34;Cute dot net bot waving hi to you!&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HeightRequest=&amp;#34;200&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Ejecutamos la aplicación y vemos los resultados:
&lt;img src="https://cmas.dev/img/posts/2022/11/02/1.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2022/11/02/2.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2022/11/02/3.png" alt="">&lt;/p>
&lt;h2 id="abrir-imagen-en-android">Abrir imagen en Android&lt;/h2>
&lt;p>Como todo esto lo hicimos con &lt;strong>.NET MAUI&lt;/strong>, debemos hacer ¡NADA!&lt;/p>
&lt;ol>
&lt;li>Ejecutamos en &lt;strong>Android&lt;/strong> y&amp;hellip;
&lt;img src="https://cmas.dev/img/posts/2022/11/02/4.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2022/11/02/5.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2022/11/02/6.png" alt="">&lt;/p>
&lt;p>Con una única línea de código pudimos realizar esta tarea sencilla sin necesidad de solicitar permisos ni nada desde la aplicación. esa es una de las ventajas que me gusta de &lt;strong>.NET MAUI&lt;/strong>&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Windows Terminal en Windows 11</title><link>https://cmas.dev/posts/2022-10-26-windows-terminal-in-windows-11/</link><pubDate>Wed, 26 Oct 2022 13:01:14 -0400</pubDate><guid>https://cmas.dev/posts/2022-10-26-windows-terminal-in-windows-11/</guid><description>&lt;p>En este artículo explicaré detalles sobre &lt;strong>Windows Terminal&lt;/strong> (que forma parte del sistema operativo &lt;strong>Windows 11&lt;/strong>).&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25227&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;strong>Windows Terminal&lt;/strong> es una nueva aplicación de terminal moderna, rápida, eficiente y productiva para usuarios de herramientas y shells de línea de comandos como el &lt;strong>símbolo del sistema&lt;/strong>, &lt;strong>PowerShell&lt;/strong> y &lt;strong>WSL&lt;/strong>. Tiene múltiples pestañas, soporte para caracteres &lt;em>Unicode&lt;/em> y &lt;em>UTF-8&lt;/em>, un motor de renderizado de texto acelerado por &lt;em>GPU&lt;/em> y temas personalizados.&lt;/p>
&lt;h2 id="beneficios">Beneficios&lt;/h2>
&lt;p>&lt;strong>Windows Terminal&lt;/strong> tiene muchos beneficios para los usuarios de &lt;strong>línea de comandos&lt;/strong> y &lt;strong>WSL&lt;/strong>. Algunos de ellos son:&lt;/p>
&lt;ul>
&lt;li>Modo de pantalla completa.&lt;/li>
&lt;li>Interfaz con pestañas para abrir múltiples instancias de las herramientas.&lt;/li>
&lt;li>Teclas de acceso rápido para abrir nuevas pestañas.&lt;/li>
&lt;li>Zoom con el ratón.&lt;/li>
&lt;li>Soporte para caracteres &lt;em>Unicode&lt;/em> y &lt;em>UTF-8&lt;/em>, como emoji y caracteres de diferentes idiomas.&lt;/li>
&lt;li>Motor de renderizado de texto acelerado por &lt;em>GPU&lt;/em>.&lt;/li>
&lt;li>Temas y estilos personalizados.&lt;/li>
&lt;li>Soporte para stylus.&lt;/li>
&lt;li>Acceso a sistemas remotos o ejecución de scripts en ellos.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Windows Terminal&lt;/strong> también tiene algunas desventajas que debes tener en cuenta antes de instalarlo. Algunas de ellas son:&lt;/p>
&lt;ul>
&lt;li>Limitaciones en la reproducción de vídeo HD a través del terminal.&lt;/li>
&lt;li>Falta de soporte para dispositivos USB como cámaras y almacenamiento externo.&lt;/li>
&lt;li>No es ideal para requerimientos gráficos pesados.&lt;/li>
&lt;/ul>
&lt;h2 id="cómo-instalarlo">¿Cómo instalarlo?&lt;/h2>
&lt;p>A partir de windows 11 22H2 no es necesario instalarlo, pues ya forma parte del sistema operativo. Aquí es donde se puede ver eso:
&lt;img src="https://cmas.dev/img/posts/2022/10/26/1.png" alt="">&lt;/p>
&lt;p>Pero, para versiones anteriores a la mencionada debemos seguir los siguientes pasos:&lt;/p>
&lt;ul>
&lt;li>Abrir *&lt;em>Microsoft Store&lt;/em> y buscar &lt;strong>Windows Terminal&lt;/strong>.&lt;/li>
&lt;li>Seleccionar &lt;strong>Obtener&lt;/strong> o &lt;strong>Instalar&lt;/strong> para descargar e instalar la aplicación.&lt;/li>
&lt;li>Una vez instalada, se puede abrir &lt;strong>Windows Terminal&lt;/strong> desde el menú Inicio o la barra de tareas.&lt;/li>
&lt;li>También se puede configurar la terminal predeterminada en &lt;strong>Configuración&lt;/strong> &amp;gt; &lt;strong>Privacidad y seguridad&lt;/strong> &amp;gt; &lt;strong>Para desarrolladores&lt;/strong> &amp;gt; &lt;strong>Terminal&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="funciones">Funciones&lt;/h2>
&lt;h3 id="perfiles">Perfiles&lt;/h3>
&lt;p>Los perfiles en &lt;strong>Windows Terminal&lt;/strong> son configuraciones que determinan la apariencia y el comportamiento de cada shell o aplicación que se ejecuta en el terminal. Se pueden personalizar los perfiles para cambiar el color, la fuente, el icono y otras opciones de cada shell. También se pueden ocultar o deshabilitar los perfiles que se no quieran ver en el menú desplegable del terminal. Además, puedes agregar perfiles de terceros como &lt;strong>Git Bash&lt;/strong> o &lt;strong>Azure Cloud Shell&lt;/strong> (como tengo instalados los compnentede de desarrollo Azure de Visual Studio viene activado de manera predeterminada).&lt;/p>
&lt;p>En mi máquina se ve así:
&lt;img src="https://cmas.dev/img/posts/2022/10/26/2.png" alt="">&lt;/p>
&lt;h3 id="pestañas-y-paneles">Pestañas y paneles&lt;/h3>
&lt;p>Las pestañas y los paneles son formas de organizar las diferentes shells o aplicaciones que se ejecutan en el terminal. Se pueden abrir varias pestañas con diferentes perfiles y cambiar entre ellas con &lt;strong>Ctrl&lt;/strong> + &lt;strong>Tab&lt;/strong> o haciendo clic en el nombre de la pestaña. También se puede dividir una pestaña en varios paneles para ver varias shells al mismo tiempo. Se pueden crear, mover, cambiar el tamaño y cerrar los paneles con el teclado o el ratón.&lt;/p>
&lt;p>Aquí vemos detalles de lo que explicamos más arriba:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Apertura de pestañas del mismo perfil o de otro perfil necesario (Todo desde el mimso terminal):
&lt;video width=100% controls autoplay>
&lt;source src="https://cmas.dev/img/posts/2022/10/26/3.mp4" type="video/mp4">
Your browser does not support the video tag.
&lt;/video>
&lt;img src="" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Apertura de paneles (en la misma pestaña) utilizando las teclas &lt;strong>Alt&lt;/strong>+ hacer clic en el icono &amp;ldquo;+&amp;rdquo;:
&lt;video width=100% controls autoplay>
&lt;source src="https://cmas.dev/img/posts/2022/10/26/4.mp4" type="video/mp4">
Your browser does not support the video tag.
&lt;/video>
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="paleta-de-comandos">Paleta de comandos&lt;/h3>
&lt;p>La paleta de comandos permite visualizar y ejecutar las acciones que se puede hacer dentro de &lt;strong>Windows Terminal&lt;/strong>. Se puede invocar la paleta de comandos con &lt;strong>Ctrl&lt;/strong> + &lt;strong>Shift&lt;/strong> + &lt;strong>P&lt;/strong> o personalizar el atajo de teclado. También se puede usar el modo de línea de comandos para escribir un comando &lt;em>&lt;strong>wt&lt;/strong>&lt;/em> directamente en la paleta. Además, se pueden agregar iconos, comandos anidados, comandos iterables y ocultar los comandos que no se quiera ver.&lt;/p>
&lt;p>Una vez presionadas las teclas mencionadas arriba veremos lo siguiente:
&lt;img src="https://cmas.dev/img/posts/2022/10/26/5.png" alt="">&lt;/p>
&lt;h3 id="personalización">Personalización&lt;/h3>
&lt;p>&lt;strong>Windows Terminal&lt;/strong> permite personalizar muchos aspectos de su apariencia y funcionamiento. Se puede acceder a la configuración de &lt;strong>Windows Terminal&lt;/strong> desde el menú desplegable o con &lt;strong>Ctrl&lt;/strong> + &lt;strong>,&lt;/strong>. Algunas de las opciones de personalización que se pueden encontrar son:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Idioma&lt;/strong>: se puede cambiar el idioma preferido de la aplicación.&lt;/li>
&lt;li>&lt;strong>Tema&lt;/strong>: se puede elegir entre un tema claro, oscuro o basado en el sistema.&lt;/li>
&lt;li>&lt;strong>Posición de las pestañas&lt;/strong>: se puede decidir si las nuevas pestañas se abren al principio o al final.&lt;/li>
&lt;li>&lt;strong>Barra de título&lt;/strong>: se puede ocultar la barra de título para ahorrar espacio.&lt;/li>
&lt;li>&lt;strong>Acrílico&lt;/strong>: se puede activar o desactivar el efecto acrílico en la fila de pestañas.&lt;/li>
&lt;li>&lt;strong>Título de la aplicación&lt;/strong>: se puede usar el título del terminal activo como título de la aplicación.&lt;/li>
&lt;li>&lt;strong>Siempre visible&lt;/strong>: se puede hacer que Windows Terminal permanezca siempre encima de otras ventanas.&lt;/li>
&lt;li>&lt;strong>Modo de ancho de las pestañas&lt;/strong>: se puede ajustar el ancho de las pestañas según tu preferencia.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2022/10/26/6.png" alt="">&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Visual Studio Code Server WSL</title><link>https://cmas.dev/posts/2022-10-19-visual-studio-code-server-wsl/</link><pubDate>Wed, 19 Oct 2022 22:35:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-10-19-visual-studio-code-server-wsl/</guid><description>&lt;p>En este artículo corto, pero preciso, mostraré cómo utilizar &lt;strong>Visual Studio Code&lt;/strong> como servidor de &lt;strong>WSL&lt;/strong> para facilitarnos la vida en ciertas pruebas que tenemos como desarrolladores.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25227&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;strong>Visual Studio Code Server&lt;/strong> es un servicio que se puede ejecutar en una máquina de desarrollo remota, como la PC de escritorio o una máquina virtual (VM). Permite conectar de forma segura a esa máquina remota desde cualquier lugar a través de un cliente local de &lt;strong>VS Code&lt;/strong>, sin la necesidad de &lt;strong>SSH&lt;/strong>. También se puede acceder al servidor a través del navegador usando &lt;strong>VS Code&lt;/strong> para la Web (también conocido como &lt;strong>vscode.dev&lt;/strong>).&lt;/p>
&lt;p>La arquitectura del servicio lo expone Microsoft en su web:
&lt;img src="https://code.visualstudio.com/assets/docs/remote/vscode-server/server-arch-latest.png" alt="">&lt;/p>
&lt;h2 id="configurar-acceso">Configurar acceso&lt;/h2>
&lt;p>Para que esto funcione se debe enlazar con &lt;strong>GitHub&lt;/strong> para que nos cree el &lt;strong>CodeSpace&lt;/strong> necesario.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Se accede al entorno de &lt;strong>WSL:Ubuntu&lt;/strong> para hacer las gestiones:
&lt;img src="https://cmas.dev/img/posts/2022/10/19/1.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Una vez allí se verifica que el Visual Studio Code corresponda a &lt;strong>Ubuntu&lt;/strong>:&lt;br>
&lt;img src="https://cmas.dev/img/posts/2022/10/19/2.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Accedemos al menú contextual de &amp;ldquo;Turn on Remote Tunnel Access&amp;hellip;&amp;rdquo;:
&lt;img src="https://cmas.dev/img/posts/2022/10/19/3.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Seguimos las instrucciones en pantalla para Iniciar sesión en &lt;strong>GitHub&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Habilitar el Tunnel Remoto:
&lt;img src="https://cmas.dev/img/posts/2022/10/19/4.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Copiar el enlace que se muestra en la ventana emergente:
&lt;img src="https://cmas.dev/img/posts/2022/10/19/5.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Acceder al navegador de prefrencia y veremos nuestro Visual Studio remoto (que mantiene el enlace con nuestro Visual Studio WSL local):
&lt;img src="https://cmas.dev/img/posts/2022/10/19/6.png" alt="">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Aplicación multilingüe en MAUI</title><link>https://cmas.dev/posts/2022-10-05-multi-language-app-maui/</link><pubDate>Wed, 05 Oct 2022 17:48:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-10-05-multi-language-app-maui/</guid><description>&lt;p>En este artículo mostraré cómo crear una aplicación &lt;strong>.NET MAUI&lt;/strong> multilingüe sobre &lt;strong>Windows 11&lt;/strong> utilizando archivos de recursos.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22621&lt;/strong>&lt;/em>&lt;/p>
&lt;p>En un &lt;a href="https://cmas.dev/posts/2022-09-21-data-binding-in-maui/">artículo anterior&lt;/a> hemos creado un proyecto donde vimos cómo utilizar la técnica de &lt;em>Data binding&lt;/em> (usaremos ese mismo proyecto).&lt;/p>
&lt;p>Necesitamos crear archivos de recuros y enlazarlos al XAML para que éstos funcionen. Vamos a enfocarnos en el idioma inglés (ya que el proyecto viene así).&lt;/p>
&lt;h2 id="crear-archivos-de-recursos">Crear archivos de recursos&lt;/h2>
&lt;p>Para empezar con la localización,&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Crear una carpeta con el nombre &lt;em>Localization&lt;/em> (puede tener cualquier nombre) y colocarla dentro de la carpeta &lt;em>Resources&lt;/em>:
&lt;img src="https://cmas.dev/img/posts/2022/10/05/1.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Dentro de dicha carpeta, se crear el archivo de tipo Recurso(.resx):&lt;br>
&lt;img src="https://cmas.dev/img/posts/2022/10/05/2.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Completamos las filas con los registros necesarios (deben ser nombres descriptivos sin espacios ni caracteres especiales):
&lt;img src="https://cmas.dev/img/posts/2022/10/05/3.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Repetimos el paso 2, pero le colocamos las iniciales del idioma que queremos utilizar (en mi caso &lt;strong>es&lt;/strong>) y completamos las fials con las traducciones:
&lt;img src="https://cmas.dev/img/posts/2022/10/05/4.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>¡Listo! Es hora de código &lt;strong>XAML&lt;/strong> y &lt;strong>C#&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="localizar-aplicaciones-net-maui">Localizar aplicaciones .NET MAUI&lt;/h2>
&lt;p>Aquí es donde se realiza el trabajo, los cuatro(4) primeros pasos corresponden a configuraciones generales, es decir, que se realizan de la misma forma para todos los proyectos multilingüe que queramos. Luego, el código &lt;strong>XAML&lt;/strong> ya puede variar según cada caso.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Instalar el paquete &lt;strong>NuGet&lt;/strong> con el nombre &lt;strong>Microsoft.Extensions.Localization&lt;/strong> (lo puedes descargar &lt;a href="https://www.nuget.org/packages/Microsoft.Extensions.Localization">aquí&lt;/a>):&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Crear (en la raíz del proyecto) el archivo &lt;strong>ServiceHelper.cs&lt;/strong> que permite identificar cada plataforma y obtener el servicio (relacionado a la &lt;em>Dependency Injection&lt;/em>):&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">namespace Maui_DataBinding
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public static class ServiceHelper
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public static TService GetService&amp;lt;TService&amp;gt;() =&amp;gt; Current.GetService&amp;lt;TService&amp;gt;();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public static IServiceProvider Current =&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#if WINDOWS
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> MauiWinUIApplication.Current.Services;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#elif ANDROID
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> MauiApplication.Current.Services;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#elif IOS || MACCATALYST
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> MauiUIApplicationDelegate.Current.Services;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#else
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> null;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#endif
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Crear una extension de método para poder utilizarla en cualquier página &lt;strong>XAML&lt;/strong> que necesitemos:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">using Maui_DataBinding.Resources.Localization;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">using Microsoft.Extensions.Localization;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">namespace Maui_DataBinding
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [ContentProperty(nameof(Key))]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public class LocalizeExtension : IMarkupExtension
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> IStringLocalizer&amp;lt;AppLocalize&amp;gt; _localizer;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public string Key { get; set; } = string.Empty;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public LocalizeExtension()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> _localizer = ServiceHelper.GetService&amp;lt;IStringLocalizer&amp;lt;AppLocalize&amp;gt;&amp;gt;();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public object ProvideValue(IServiceProvider serviceProvider)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> string localizedText = _localizer[Key];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return localizedText;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> object IMarkupExtension.ProvideValue(IServiceProvider serviceProvider) =&amp;gt; ProvideValue(serviceProvider);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Por último, el el archivo &lt;strong>MauiProgram.cs&lt;/strong> se agregar el servicio de Localización:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">builder.Services.AddLocalization();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>La clase completa, queda así:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Extensions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Logging&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">namespace&lt;/span> &lt;span class="n">Maui_DataBinding&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="k">static&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">MauiProgram&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="k">static&lt;/span> &lt;span class="n">MauiApp&lt;/span> &lt;span class="n">CreateMauiApp&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">builder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">MauiApp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CreateBuilder&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">builder&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">UseMauiApp&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">App&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">.&lt;/span>&lt;span class="n">ConfigureFonts&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fonts&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fonts&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddFont&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;OpenSans-Regular.ttf&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;OpenSansRegular&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fonts&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddFont&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;OpenSans-Semibold.ttf&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;OpenSansSemibold&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddLocalization&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#if DEBUG&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Logging&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddDebug&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#endif&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Build&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>Modificamos nuestro código XAML, donde agregamos el espacio de nombre de nuestro proyecto y agregamos las extensiones en las propiedades de texto:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34; ?&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;ContentPage xmlns=&amp;#34;http://schemas.microsoft.com/dotnet/2021/maui&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2009/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:local=&amp;#34;clr-namespace:Maui_DataBinding&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Class=&amp;#34;Maui_DataBinding.MainPage&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ScrollView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VerticalStackLayout
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Spacing=&amp;#34;25&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Padding=&amp;#34;30,0&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> VerticalOptions=&amp;#34;Center&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Image
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Source=&amp;#34;dotnet_bot.png&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.Description=&amp;#34;{local:Localize Key=BotImage}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HeightRequest=&amp;#34;200&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;{local:Localize Key=HelloText}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.HeadingLevel=&amp;#34;Level1&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FontSize=&amp;#34;32&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;{local:Localize Key=WelcomeText}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.HeadingLevel=&amp;#34;Level2&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.Description=&amp;#34;{local:Localize Key=WelcomeDescriptionText}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FontSize=&amp;#34;18&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Button
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Name=&amp;#34;CounterBtn&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;{Binding CounterBtnText}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.Hint=&amp;#34;{local:Localize Key=ButtonTextHint}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Clicked=&amp;#34;OnCounterClicked&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Button
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Name=&amp;#34;LangBtn&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;Change language&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Clicked=&amp;#34;OnLangBtnClicked&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VerticalStackLayout&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/ScrollView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/ContentPage&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>En vista, que hemos modificado el código &lt;strong>C#&lt;/strong> para la técnica de &lt;em>Data Binding&lt;/em>, debemos modificarla también:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">public string CounterBtnText
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> get
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (Count == 0)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return AppLocalize.ButtonTextInitial;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (Count == 1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return AppLocalize.ButtonTextSingular.Replace(&amp;#34;{Count}&amp;#34;, Count.ToString());
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return AppLocalize.ButtonTextPlural.Replace(&amp;#34;{Count}&amp;#34;, Count.ToString());
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="7">
&lt;li>&lt;strong>EXTRA&lt;/strong> aquí se muestra como cambiar el idioma sin reiniciar la aplicación:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">private void OnLangBtnClicked(object sender, EventArgs e)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> (App.Current as App).MainPage.Dispatcher.Dispatch(() =&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo(&amp;#34;es-PY&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Thread.CurrentThread.CurrentUICulture = new System.Globalization.CultureInfo(&amp;#34;es-PY&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> (App.Current as App).MainPage = new AppShell();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="8">
&lt;li>
&lt;p>Ejecutamos la aplicación presionando &lt;em>F5&lt;/em> y veremos en Inglés así:
&lt;img src="https://cmas.dev/img/posts/2022/10/05/5.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Hacemo clic en el botón &amp;ldquo;Change language&amp;rdquo; y debemos ver el español:
&lt;img src="https://cmas.dev/img/posts/2022/10/05/6.png" alt="">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Aplicando modelo MVVM con MAUI</title><link>https://cmas.dev/posts/2022-09-28-mvvm-in-maui/</link><pubDate>Wed, 28 Sep 2022 21:06:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-09-28-mvvm-in-maui/</guid><description>&lt;p>En este artículo mostraré cómo aplicar el modelo MVVM en &lt;strong>.NET MAUI&lt;/strong> sobre &lt;strong>Windows 11&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25206&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;strong>MVVM&lt;/strong> en &lt;strong>.NET MAUI&lt;/strong> para &lt;strong>Windows&lt;/strong> es un patrón que permite crear aplicaciones de escritorio con una interfaz de usuario basada en &lt;strong>XAML&lt;/strong> y una lógica de negocio separada en el modelo de vista. &lt;strong>MVVM&lt;/strong> es un patrón bien establecido en &lt;strong>.NET&lt;/strong> y hay muchos marcos que facilitan su desarrollo. Uno de ellos es el &lt;strong>MVVM Toolkit&lt;/strong>, que es parte del &lt;strong>.NET Community Toolkit&lt;/strong>.&lt;/p>
&lt;p>Así que me puse a leer la documentación oficial (deberías hacer lo mismo) que se encuentra &lt;a href="https://learn.microsoft.com/es-es/dotnet/architecture/maui/mvvm">aquí&lt;/a>.&lt;/p>
&lt;p>Para el ejemplo, crearemos una lista de &amp;ldquo;Alumnos&amp;rdquo; (Nombre y Apellido con fotos) que aplicaremos en un modelo &lt;em>MVVM&lt;/em>.&lt;/p>
&lt;h2 id="creando-el-código">Creando el código&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Descargamos el paquete &lt;strong>NuGet&lt;/strong> para &lt;em>MVVM&lt;/em> que se encuentra &lt;a href="https://www.nuget.org/packages/CommunityToolkit.Mvvm/">aquí&lt;/a>(obviamente es mejor hacerlo desde Visual Studio 2022) y lo instalamos.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Agregamos una nueva clase con el nombre &lt;strong>Alumno.cs&lt;/strong> y lo colocamos en la raiz del proyecto con el siguiente código:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">namespace MauiMvvm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public class Alumno
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public string FirstName { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public string LastName { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public string ImageUrl { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Agregamos una nueva clase con el nombre &lt;strong>AlumnoViewModel.cs&lt;/strong> y lo colocamos en la raiz del proyecto con el siguiente código:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">using CommunityToolkit.Mvvm.ComponentModel;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">namespace MauiMvvm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [INotifyPropertyChanged]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public partial class AlumnoViewModel
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [ObservableProperty]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public List&amp;lt;Alumno&amp;gt; alumnos = new List&amp;lt;Alumno&amp;gt;();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public AlumnoViewModel()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> alumnos.Add(new Alumno() { FirstName = &amp;#34;Eliseo&amp;#34;, LastName = &amp;#34;Ortega&amp;#34;, ImageUrl = &amp;#34;mugpy.jpg&amp;#34; });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> alumnos.Add(new Alumno() { FirstName = &amp;#34;Dulce&amp;#34;, LastName = &amp;#34;Barrios&amp;#34;, ImageUrl = &amp;#34;profile.jpg&amp;#34; });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> alumnos.Add(new Alumno() { FirstName = &amp;#34;Microsoft&amp;#34;, LastName = &amp;#34;DotNet&amp;#34;, ImageUrl = &amp;#34;dotnet_bot.png&amp;#34; });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> alumnos.Add(new Alumno() { FirstName = &amp;#34;Christian&amp;#34;, LastName = &amp;#34;Amado&amp;#34;, ImageUrl = &amp;#34;amado.jpg&amp;#34; });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>En la página principal &lt;strong>MainPage.xaml&lt;/strong> generamos una lista:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34; ?&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;ContentPage xmlns=&amp;#34;http://schemas.microsoft.com/dotnet/2021/maui&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2009/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Class=&amp;#34;MauiMvvm.MainPage&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ListView ItemsSource=&amp;#34;{Binding Alumnos}&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ListView.ItemTemplate&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;DataTemplate&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ViewCell&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid Padding=&amp;#34;10&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RowDefinition Height=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RowDefinition Height=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid.RowDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid.ColumnDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ColumnDefinition Width=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ColumnDefinition Width=&amp;#34;Auto&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid.ColumnDefinitions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Image Grid.RowSpan=&amp;#34;2&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Source=&amp;#34;{Binding ImageUrl}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Aspect=&amp;#34;AspectFill&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HeightRequest=&amp;#34;60&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> WidthRequest=&amp;#34;60&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label Grid.Column=&amp;#34;1&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;{Binding FirstName}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FontAttributes=&amp;#34;Bold&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label Grid.Row=&amp;#34;1&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Grid.Column=&amp;#34;1&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;{Binding LastName}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FontAttributes=&amp;#34;Italic&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> VerticalOptions=&amp;#34;End&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/ViewCell&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/DataTemplate&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/ListView.ItemTemplate&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/ListView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/ContentPage&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>El código &lt;strong>C#&lt;/strong> que se encuentra en &lt;strong>MainPage.xaml.cs&lt;/strong> se encuentra aquí:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">namespace MauiMvvm;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">public partial class MainPage : ContentPage
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> int count = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public MainPage()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> InitializeComponent();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> BindingContext = new AlumnoViewModel();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>Ejecutamos el código con &lt;em>F5&lt;/em> y&amp;hellip;
&lt;img src="https://cmas.dev/img/posts/2022/09/28/1.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>De esta manera implementamos el modelo MVVM de manera muy rápida y sencilla gracias al paquete &lt;strong>MVVM Toolkit&lt;/strong>.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Data Binding en MAUI</title><link>https://cmas.dev/posts/2022-09-21-data-binding-in-maui/</link><pubDate>Wed, 21 Sep 2022 20:32:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-09-21-data-binding-in-maui/</guid><description>&lt;p>En este artículo mostraré cómo utilizar la técnica de &lt;em>Data Binding&lt;/em> en una aplicación &lt;strong>.NET MAUI&lt;/strong> sobre &lt;strong>Windows 11&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25206&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;em>Data binding&lt;/em> en &lt;strong>XAML&lt;/strong> es un mecanismo que permite vincular propiedades de dos objetos dentro de una página, o entre objetos visuales y datos subyacentes. Se declara usando una extensión de marcado llamada &lt;strong>Binding&lt;/strong>. La declaración de &lt;em>data binding&lt;/em> consiste en una serie de cláusulas que siguen la palabra clave &lt;strong>Binding&lt;/strong> y se separan por comas (,). Las cláusulas pueden estar en cualquier orden y existen muchas combinaciones posibles.&lt;/p>
&lt;h2 id="preparar-el-proyecto">Preparar el proyecto&lt;/h2>
&lt;p>Primeramente, debemos crear el proyecto &lt;strong>.NET MAUI&lt;/strong> y tenerlo listo para la plataforma &lt;strong>Windows 11&lt;/strong>:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Creamos el proyecto en Visual Studio 2022:
&lt;img src="https://cmas.dev/img/posts/2022/09/21/1.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Colocamos un nombre descriptivo al proyecto nuevo:
&lt;img src="https://cmas.dev/img/posts/2022/09/21/2.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Seleccionamos el .NET Core que deseamos utilizar:
&lt;img src="https://cmas.dev/img/posts/2022/09/21/3.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>En el archivo &lt;strong>MainPage.xaml&lt;/strong> verificamos el código &lt;strong>XAML&lt;/strong>:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34; ?&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;ContentPage xmlns=&amp;#34;http://schemas.microsoft.com/dotnet/2021/maui&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2009/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Class=&amp;#34;Maui_DataBinding.MainPage&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ScrollView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VerticalStackLayout
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Spacing=&amp;#34;25&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Padding=&amp;#34;30,0&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> VerticalOptions=&amp;#34;Center&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Image
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Source=&amp;#34;dotnet_bot.png&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.Description=&amp;#34;Cute dot net bot waving hi to you!&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HeightRequest=&amp;#34;200&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;Hello, World!&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.HeadingLevel=&amp;#34;Level1&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FontSize=&amp;#34;32&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;Welcome to .NET Multi-platform App UI&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.HeadingLevel=&amp;#34;Level2&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.Description=&amp;#34;Welcome to dot net Multi platform App U I&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FontSize=&amp;#34;18&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Button
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Name=&amp;#34;CounterBtn&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;Click me&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.Hint=&amp;#34;Counts the number of times you click&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Clicked=&amp;#34;OnCounterClicked&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VerticalStackLayout&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/ScrollView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/ContentPage&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>Prestemos atención al código del botón &lt;strong>XAML&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;Button
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Name=&amp;#34;CounterBtn&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;Click me&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.Hint=&amp;#34;Counts the number of times you click&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Clicked=&amp;#34;OnCounterClicked&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>También verifiquemos al código del botón &lt;strong>C#&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">namespace Maui_DataBinding;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">public partial class MainPage : ContentPage
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> int count = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public MainPage()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> InitializeComponent();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private void OnCounterClicked(object sender, EventArgs e)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> count++;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (count == 1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CounterBtn.Text = $&amp;#34;Clicked {count} time&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> else
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CounterBtn.Text = $&amp;#34;Clicked {count} times&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticScreenReader.Announce(CounterBtn.Text);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="7">
&lt;li>Ejecutamos el código con &lt;em>F5&lt;/em> y veremos la aplicación Windows:
&lt;img src="https://cmas.dev/img/posts/2022/09/21/4.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>Bien hasta aquí no hay nada extraño en ningún lado.&lt;/p>
&lt;h2 id="databinding-en-net-maui">DataBinding en .NET MAUI&lt;/h2>
&lt;p>&lt;strong>Data binding&lt;/strong> es una técnica que permite vincular dos propiedades entre dos objetos, al menos uno de los cuales suele ser un objeto de interfaz de usuario. Estos dos objetos se llaman el destino y la fuente. &lt;strong>Data binding&lt;/strong> facilita la actualización automática de los datos entre los objetos.&lt;/p>
&lt;p>Ahora vamos a adaptar nuestro código para que nuestra técnica funcione.&lt;/p>
&lt;ol>
&lt;li>En el constructor de la clase (en MainPage.xaml.cs) colocaremos el contexto de enlace:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">public MainPage()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> InitializeComponent();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> BindingContext = this;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Debemos crear una nueva propiedad (para hacer uso del atributo &lt;em>count&lt;/em>):&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">int count = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public int Count
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> get
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return count;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> set
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> count = value;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> OnPropertyChanged();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> OnPropertyChanged(&amp;#34;CounterBtnText&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Ahora, debemos colocar la lógica en una propiedad para que se produzca el cambio (en este caso la propeidad será &lt;strong>CounterBtnText&lt;/strong>):&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">public string CounterBtnText
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> get
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (Count == 0)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return &amp;#34;Click Here&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (Count == 1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return $&amp;#34;Clicked {Count} time&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return $&amp;#34;Clicked {Count} times&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Nuestro evento &lt;strong>Click&lt;/strong> del botón sufre modificaciones debido a que la lógica está en la nueva propiedad:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">private void OnCounterClicked(object sender, EventArgs e)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Count++;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>Por último modificamos nuestra definición del botón en el código &lt;strong>XAML&lt;/strong> dentro del archivo &lt;strong>MainPage.xaml&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;Button
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Name=&amp;#34;CounterBtn&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;{Binding CounterBtnText}&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SemanticProperties.Hint=&amp;#34;Counts the number of times you click&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Clicked=&amp;#34;OnCounterClicked&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>Ejecutamos la aplicación y nos queda así:
&lt;img src="https://cmas.dev/img/posts/2022/09/21/5.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Primeros pasos con XAML en MAUI</title><link>https://cmas.dev/posts/2022-09-14-first-step-xaml-in-maui/</link><pubDate>Wed, 14 Sep 2022 23:18:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-09-14-first-step-xaml-in-maui/</guid><description>&lt;p>En este artículo mostraré cómo iniciar los pasos con el lenguaje &lt;strong>XAML&lt;/strong> en &lt;strong>.NET MAUI&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25201&lt;/strong>&lt;/em>&lt;/p>
&lt;p>En este pequeño artículo vamos a utilizar controles de Telerik para &lt;strong>.NET MAUI&lt;/strong>. En un &lt;a href="">artículo anterior&lt;/a> vimos cómo crear una aplicación &lt;strong>.NET MAUI&lt;/strong> y aquí haremos otra basada en otra plantilla (&lt;a href="https://www.telerik.com/support/whats-new/maui-ui/release-history/telerik-ui-for-net-maui-%28version-3-0-0%29">Telerik&lt;/a>).
&lt;img src="https://cmas.dev/img/posts/2022/09/14/1.png" alt="">&lt;/p>
&lt;h2 id="telerik-sidedrawer">Telerik SideDrawer&lt;/h2>
&lt;p>Este control (conocido como Menú Hamburguesa) se utiliza para hacer la navegación muy amigable debido a que el menú queda al costado de nuestro diseño y permite una visualización completa del mismo. En Windows 11 se refiere a &lt;a href="https://learn.microsoft.com/en-us/windows/apps/design/controls/navigationview">NavigationView&lt;/a>.&lt;/p>
&lt;p>La definición del control, en lenguaje &lt;strong>XAML&lt;/strong>, sería:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;ContentPage xmlns=&amp;#34;http://schemas.microsoft.com/dotnet/2021/maui&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2009/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:telerik=&amp;#34;http://schemas.telerik.com/2022/xaml/maui&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Class=&amp;#34;TelerikMauiApp1.MainPage&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;ScrollView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;telerik:RadSideDrawer x:Name=&amp;#34;drawer&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> DrawerLength=&amp;#34;200&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;telerik:RadSideDrawer.MainContent&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label Text=&amp;#34;Main content on CMASDEV BLOG&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/telerik:RadSideDrawer.MainContent&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;telerik:RadSideDrawer.DrawerContent&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VerticalStackLayout Spacing=&amp;#34;10&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Padding=&amp;#34;10, 10, 0, 0&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;VerticalStackLayout.Resources&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Style x:Key=&amp;#34;DefaultButtonStyle&amp;#34; TargetType=&amp;#34;Button&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;WidthRequest&amp;#34; Value=&amp;#34;180&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;HeightRequest&amp;#34; Value=&amp;#34;40&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;BackgroundColor&amp;#34; Value=&amp;#34;#b1b1b1&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Setter Property=&amp;#34;TextColor&amp;#34; Value=&amp;#34;Black&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Style&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VerticalStackLayout.Resources&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Button Text=&amp;#34;Mail&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Style=&amp;#34;{StaticResource DefaultButtonStyle}&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Button Text=&amp;#34;Calendar&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Style=&amp;#34;{StaticResource DefaultButtonStyle}&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Button Text=&amp;#34;People&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Style=&amp;#34;{StaticResource DefaultButtonStyle}&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Button Text=&amp;#34;Tasks&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Style=&amp;#34;{StaticResource DefaultButtonStyle}&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/VerticalStackLayout&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/telerik:RadSideDrawer.DrawerContent&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/telerik:RadSideDrawer&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/ScrollView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/ContentPage&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Con esta definición declarativa logramos que el control tenga todos los detalles necesarios para su funcionamiento.&lt;/p>
&lt;p>Visualmente, el resultado del código XAML es:
&lt;img src="https://cmas.dev/img/posts/2022/09/14/2.png" alt="">&lt;br>
&lt;img src="https://cmas.dev/img/posts/2022/09/14/3.png" alt="">&lt;/p>
&lt;p>Si realmente necesitas aprender &lt;strong>XAML&lt;/strong>, la documentación de Microsft &lt;a href="https://learn.microsoft.com/es-es/dotnet/maui/xaml/fundamentals/get-started?view=net-maui-7.0">aquí&lt;/a> está muy completa.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Mi primera aplicación con Windows App SDK</title><link>https://cmas.dev/posts/2022-09-07-first-windows-app-reactjs/</link><pubDate>Wed, 07 Sep 2022 19:14:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-09-07-first-windows-app-reactjs/</guid><description>&lt;p>En este artículo mostraré cómo crear una aplicación con &lt;strong>Windows App SDK&lt;/strong> en &lt;strong>React&lt;/strong>. &lt;em>Ojo&lt;/em>: Es mi primera prueba con React (nunca lo he usado).&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25188&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Existen algunas opciones válidas para crear aplicaciones para Windows 11, entre ellas, las siguientes:&lt;/p>
&lt;ul>
&lt;li>WinUI (más adelante entraremos en detalle en esto).&lt;/li>
&lt;li>.NET MAUI (que me agrada bastante)&lt;/li>
&lt;li>PWA (Progressive WEb Applications)&lt;/li>
&lt;li>React para Windows (que usaremos en este artículo)&lt;/li>
&lt;/ul>
&lt;p>Como es la primera vez que trabaremos con React, debemos preparar el entorno.&lt;/p>
&lt;h2 id="instalación-de-react-native-for-windows">Instalación de React Native for Windows&lt;/h2>
&lt;ol>
&lt;li>Creamos la carpeta en el directorio de preferencia.&lt;/li>
&lt;li>Accedemos a él desde Power Shell:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd C:\Users\chris\source\repos\LocalOnly\ReactNativeWin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npx react-native init TestApp --template react-native@^0.70.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>La instalación quedará algo así:
&lt;img src="https://cmas.dev/img/posts/2022/09/07/1.png" alt="">&lt;/li>
&lt;li>Ir a la carpeta creada:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd TestApp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>Instalar la extensión de Windows:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npx react-native-windows-init --overwrite
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>Creamos el enlace con las dependencias:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npx react-native autolink-windows
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="7">
&lt;li>Fin de la instalación&lt;/li>
&lt;/ol>
&lt;h2 id="creación-de-aplicación">Creación de aplicación&lt;/h2>
&lt;ol>
&lt;li>Abrir un proyecto existente desde Visual studoo 2022:
&lt;img src="https://cmas.dev/img/posts/2022/09/07/2.png" alt="">&lt;/li>
&lt;li>En Power Shell, escribir lo siguiente (para arrancar el servidorcillo):&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Ejecutamos la aplicación desde Visual Studio 2022 (la compilación demora un poco dependiendo de la capacidad del equipo de desarrollo):
&lt;img src="https://cmas.dev/img/posts/2022/09/07/3.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>Y con esto tenemos nuestra primera aplciación &lt;strong>Windows App SDK&lt;/strong> con &lt;strong>React&lt;/strong>.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Preparando entorno para desarrollo con Windows App SDK</title><link>https://cmas.dev/posts/2022-08-31-preparing-windows-app-sdk/</link><pubDate>Wed, 31 Aug 2022 22:36:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-08-31-preparing-windows-app-sdk/</guid><description>&lt;p>En este artículo mostraré cómo preparar el entorno para el desarrollo de aplicaciones con &lt;strong>Windows App SDK&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25188&lt;/strong>&lt;/em>&lt;/p>
&lt;p>La preparación del entorno es simple para este caso, sólo debemos instalar el SDK como tal y la extensión para Visual Studio 2022 (para C# en este caso).&lt;/p>
&lt;h2 id="pasos-para-la-instalación">Pasos para la instalación&lt;/h2>
&lt;p>Primeramente, debemos instalar el SDK desde el sitio oficial de Microsoft:&lt;/p>
&lt;ol>
&lt;li>Descargamos el SDK (la versión actual es 1.1.5) desde &lt;a href="https://aka.ms/windowsappsdk/1.1/1.1.5/windowsappruntimeinstall-x64.exe">aquí&lt;/a>&lt;/li>
&lt;li>Descargamos la extensión de C# para Visual Studio 2022 desde &lt;a href="https://aka.ms/windowsappsdk/1.1/1.1.5/WindowsAppSDK.Cs.Extension.Dev17.Standalone.vsix">aquí&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>Con estos pasos hemos cumplido el objetivo, pero para asegurarnos debemos ir al instalador de Visual Studio 2022 y verificar que esté seleccionada la opción de .NET Desktop Applications:
&lt;img src="https://cmas.dev/img/posts/2022/08/31/1.png" alt="">&lt;/p>
&lt;p>Con esta opción podemos empezar a desarrollar aplicaciones para Windows 11 (10 también pero ya es obsoleto jaja)&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Mi Primera Aplicación MAUI</title><link>https://cmas.dev/posts/2022-08-24-first-app-in-maui/</link><pubDate>Wed, 24 Aug 2022 21:04:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-08-24-first-app-in-maui/</guid><description>&lt;p>En este artículo mostraré cómo crear la primera aplicación &lt;strong>.NET MAUI&lt;/strong> preparada para Android y Windows 11.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25188&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Para crear un proyecto .NET MAUI no se necesitan demasiados pasos para lograr el objetivo, basta con seguir estos sencillos pasos que se muestran a continuación.&lt;/p>
&lt;ol>
&lt;li>Crear un nuevo proyecto:
&lt;img src="https://cmas.dev/img/posts/2022/08/24/1.png" alt="">&lt;/li>
&lt;li>Colocar un nombre descriptivo:
&lt;img src="https://cmas.dev/img/posts/2022/08/24/2.png" alt="">&lt;/li>
&lt;li>Seleccionar el Framework y creamos el proyecto:
&lt;img src="https://cmas.dev/img/posts/2022/08/24/3.png" alt="">&lt;/li>
&lt;li>Verificamos la estructura del proyecto y las plataformas habilitadas:
&lt;img src="https://cmas.dev/img/posts/2022/08/24/4.png" alt="">&lt;/li>
&lt;li>Ejecutamos la aplicación en Windows (usa Windows App SDK):
&lt;img src="https://cmas.dev/img/posts/2022/08/24/5.png" alt="">&lt;/li>
&lt;li>Cambiamos el escenario a un emulador Android:
&lt;img src="https://cmas.dev/img/posts/2022/08/24/6.png" alt="">&lt;/li>
&lt;li>Lo ejecutamos para probar:
&lt;img src="https://cmas.dev/img/posts/2022/08/24/7.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>¡Listo! Así hemos creado nuestro proyecto &lt;strong>.NET MAUI&lt;/strong> sin demasiado esfuerzo.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Estructura básica de un proyecto MAUI</title><link>https://cmas.dev/posts/2022-08-17-basic-struct-of-maui-project/</link><pubDate>Wed, 17 Aug 2022 18:07:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-08-17-basic-struct-of-maui-project/</guid><description>&lt;p>En este artículo mostraré cómo es la estructura básica de un proyecto &lt;strong>.NET MAUI&lt;/strong> .&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25179&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Primeramente, debemos conocer la estructura en sí de &lt;strong>.NET MAUI&lt;/strong> que se encuentra en el sitio oficial de Microsoft. La documentación oficial se encuentra &lt;a href="https://learn.microsoft.com/es-es/dotnet/maui/what-is-maui?view=net-maui-7.0">aquí&lt;/a>&lt;/p>
&lt;p>Funcionalmente, .NET MAUI opera de la siguiente manera:
&lt;img src="https://cmas.dev/img/posts/2022/08/17/1.png" alt="">&lt;/p>
&lt;h2 id="estructura-del-proyecto-net-maui">Estructura del proyecto .NET MAUI&lt;/h2>
&lt;p>El proyecto que se crea en &lt;strong>.NET MAUI&lt;/strong> posee la siguiente estructura:
&lt;img src="https://cmas.dev/img/posts/2022/08/17/2.png" alt="">&lt;/p>
&lt;h3 id="dependencias-dependencies">Dependencias (Dependencies)&lt;/h3>
&lt;p>Las dependencias son los paquetes (librerías) disponibles para cada plataforma soportada en &lt;strong>.NET MAUI&lt;/strong>.&lt;/p>
&lt;p>En este caso serían:&lt;/p>
&lt;ul>
&lt;li>Android.&lt;/li>
&lt;li>iOS.&lt;/li>
&lt;li>Mac Catalyst.&lt;/li>
&lt;li>Windows 10 (pues tiene en cuenta la versión mínima soportada).&lt;/li>
&lt;/ul>
&lt;h3 id="plataformas-platforms">Plataformas (Platforms)&lt;/h3>
&lt;p>Esta carpeta indica las configuraciones específicas de cada plataforma. Cada una de ellas posee su propia configuración dependiendo de las necesidades de la aplicación.&lt;/p>
&lt;h3 id="recursos-resources">Recursos (Resources)&lt;/h3>
&lt;p>Son los recursos compartidos entre las plataformas, de esta manera se pueden reutilizar elementos en todas las plataformas sin repetirlos.)&lt;/p>
&lt;p>Con esta estructura definida, creamos y desarrollamos las aplicaciones en &lt;strong>.NET MAUI&lt;/strong>&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Instalando .NET MAUI en Visual Studio 2022</title><link>https://cmas.dev/posts/2022-08-10-installing-maui-on-visual-studio-2022/</link><pubDate>Wed, 10 Aug 2022 19:19:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-08-10-installing-maui-on-visual-studio-2022/</guid><description>&lt;p>En este artículo mostraré cómo instalar los componentes necesarios para el desarrollo en &lt;strong>.NET MAUI&lt;/strong> para Windows 11 y Android.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25179&lt;/strong>&lt;/em>&lt;/p>
&lt;p>La instalación de componentes en Visual Studio siempre ha sido sencilla y esta no es la excepción.&lt;/p>
&lt;h2 id="desinstalar-visual-studio-2022-preview">Desinstalar Visual Studio 2022 Preview&lt;/h2>
&lt;p>Ya estuvimos probando .NET MAUI desde hace rato así que es tiempo de eliminar la versión Preview e instalar la versión oficial. Para ellos debemos realizar dos pasos sencillos:&lt;/p>
&lt;ol>
&lt;li>Ir a &lt;strong>Panel de control&lt;/strong> &amp;gt; &lt;strong>Desinstalar programas&lt;/strong>.&lt;/li>
&lt;li>Seleccionar &lt;strong>Microsoft Visual Studio 2022 Preview&lt;/strong> y listo.&lt;/li>
&lt;/ol>
&lt;h2 id="instalar-visual-studio-2022">Instalar Visual Studio 2022&lt;/h2>
&lt;p>Instalar Visual Studio 2022 es bien sencillo.&lt;/p>
&lt;ol>
&lt;li>Descargar el instalador nuevo &lt;a href="https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=Professional&amp;amp;channel=Release&amp;amp;version=VS2022&amp;amp;source=VSLandingPage&amp;amp;cid=2030&amp;amp;passive=false">aquí&lt;/a>&lt;/li>
&lt;li>Ejecutar el instalador y seguir los pasos en pantalla hasta la selección de componente, allí debemos seleccionar la opción correspondiente a &lt;strong>.NET MAUI&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/08/10/1.png" alt="">&lt;/li>
&lt;li>Aguardamos que finalice la instalación y listo.&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>.NET MAUI&lt;/strong> instalará la última API de Android disponible y preparará Windows 11 para que podamos ejecutar nuestra Applicación.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>MAUI ¿Qué? ¿Por qué? ¿Para qué?</title><link>https://cmas.dev/posts/2022-08-03-maui-some-questions/</link><pubDate>Wed, 03 Aug 2022 22:12:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-08-03-maui-some-questions/</guid><description>&lt;p>En este artículo intentaré explicar o dar a entender que es &lt;strong>.NET MAUI&lt;/strong> y otras cuestiones relacionada a esta plaforma que básicamente reemplaza al viejo conocido de &lt;strong>Xamarin.Forms&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25174&lt;/strong>&lt;/em>&lt;/p>
&lt;h2 id="qué-es-net-maui-flutter-es-mejor">¿Qué es .NET MAUI? Flutter es mejor&amp;hellip;&lt;/h2>
&lt;p>&lt;strong>.NET MAUI&lt;/strong> es un marco de trabajo multiplataforma para crear aplicaciones nativas móviles y de escritorio con C# y XAML. Con &lt;strong>.NET MAUI&lt;/strong>, se puede desarrollar aplicaciones que pueden ejecutarse en &lt;em>&lt;strong>Android&lt;/strong>&lt;/em>, &lt;em>&lt;strong>iOS&lt;/strong>&lt;/em>, &lt;em>&lt;strong>macOS&lt;/strong>&lt;/em> y &lt;em>&lt;strong>Windows&lt;/strong>&lt;/em> desde un solo código compartido. Es la evolución de &lt;em>Xamarin.Forms&lt;/em> que amplía las capacidades más allá de los dispositivos móviles.&lt;/p>
&lt;p>&lt;strong>.NET MAUI&lt;/strong> es para desarrolladores que quieren:&lt;/p>
&lt;ol>
&lt;li>Escribir aplicaciones multiplataforma en XAML y C#, desde un solo código compartido en Visual Studio.&lt;/li>
&lt;li>Compartir el diseño y la disposición de la interfaz de usuario entre plataformas.&lt;/li>
&lt;li>Compartir código, pruebas y lógica de negocio entre plataformas.&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>.NET MAUI&lt;/strong> proporciona una colección de controles que se pueden usar para mostrar datos, iniciar acciones, indicar actividad, mostrar colecciones, elegir datos y más. Además de una colección de controles, &lt;strong>.NET MAUI&lt;/strong> también ofrece: Un motor de diseño elaborado para diseñar páginas. Un proyecto único compartido que puede apuntar a &lt;em>&lt;strong>Android&lt;/strong>&lt;/em>, &lt;em>&lt;strong>iOS&lt;/strong>&lt;/em>, &lt;em>&lt;strong>macOS&lt;/strong>&lt;/em> y &lt;em>&lt;strong>Windows&lt;/strong>&lt;/em>. Una selección simplificada del objetivo de depuración para ejecutar las aplicaciones &lt;strong>.NET MAUI&lt;/strong>.&lt;/p>
&lt;p>Ya escuché comentarios sobre ¡&lt;em>Flutter&lt;/em> es mucho mejor!. Pero ¿Es realmente así?&lt;/p>
&lt;p>No hay una respuesta definitiva a esta pregunta, ya que depende de las preferencias y necesidades de cada desarrollador y proyecto. Sin embargo, se pueden mencionar algunas diferencias y ventajas de cada plataforma:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Flutter&lt;/strong> usa &lt;strong>Dart&lt;/strong>, un lenguaje desarrollado por &lt;em>Google&lt;/em>, mientras que &lt;strong>.NET MAUI&lt;/strong> usa &lt;strong>C#&lt;/strong>, un lenguaje ampliamente usado en el ecosistema &lt;strong>.NET&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Flutter&lt;/strong> ofrece una interfaz de usuario más rápida y fluida, gracias a su compilación anticipada que reduce el tamaño del código compilado. Además, &lt;strong>Flutter&lt;/strong> soporta &lt;em>Material Design&lt;/em> para &lt;em>&lt;strong>Android&lt;/strong>&lt;/em> y &lt;em>Cupertino&lt;/em> para &lt;em>&lt;strong>iOS&lt;/strong>&lt;/em>, lo que permite crear aplicaciones con aspecto nativo para cada plataforma.&lt;/li>
&lt;li>&lt;strong>.NET MAUI&lt;/strong> es una buena opción para los desarrolladores que ya están familiarizados con la plataforma &lt;strong>.NET&lt;/strong> y quieren crear aplicaciones multiplataforma usando &lt;strong>C#&lt;/strong>. También ofrece una mayor integración con &lt;em>Visual Studio&lt;/em> y otras herramientas de desarrollo.&lt;/li>
&lt;li>&lt;strong>Flutter&lt;/strong> soporta el desarrollo web y &lt;em>Linux&lt;/em>, mientras que &lt;strong>.NET MAUI&lt;/strong> no. Sin embargo, los desarrolladores de &lt;strong>.NET MAUI&lt;/strong> pueden utilizar el marco &lt;em>&lt;strong>Blazor&lt;/strong>&lt;/em> para proporcionar un puente para usar recursos de &lt;strong>MAUI&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;p>En conclusión, ambas plataformas tienen sus pros y contras, y la elección dependerá de factores como el lenguaje de programación preferido, el tipo de aplicación que se quiere crear, el público objetivo y el presupuesto disponible.&lt;/p>
&lt;h2 id="qué-puedo-hacer-con-esto">¿Qué puedo hacer con esto?&lt;/h2>
&lt;p>Con &lt;strong>.NET MAUI&lt;/strong> se puede desarrollar aplicaciones nativas para &lt;strong>Windows&lt;/strong>, &lt;em>macOS&lt;/em>, &lt;em>iOS&lt;/em> y &lt;strong>Android&lt;/strong>, usando un solo código compartido en &lt;strong>C#&lt;/strong> y &lt;strong>XAML&lt;/strong>. Se puede crear aplicaciones que se adapten al aspecto y la funcionalidad de cada plataforma, aprovechando las últimas tecnologías de desarrollo.&lt;/p>
&lt;p>Algunos ejemplos de tipos de aplicaciones que se pueden crear con &lt;strong>.NET MAUI&lt;/strong> son:&lt;/p>
&lt;ul>
&lt;li>Aplicaciones de productividad que permitan gestionar tareas, calendarios, correos electrónicos, etc.&lt;/li>
&lt;li>Aplicaciones de entretenimiento que ofrezcan juegos, música, vídeos, etc.&lt;/li>
&lt;li>Aplicaciones de educación que faciliten el aprendizaje interactivo y el acceso a recursos didácticos.&lt;/li>
&lt;li>Aplicaciones de negocios que integren servicios web, bases de datos, análisis de datos, etc.&lt;/li>
&lt;/ul>
&lt;h2 id="un-poco-de-código">Un poco de código&lt;/h2>
&lt;p>Primero, veamos el código &lt;strong>XAML&lt;/strong> que se utiliza para la visual:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;ContentPage xmlns=&amp;#34;http://schemas.microsoft.com/dotnet/2021/maui&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2009/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Class=&amp;#34;ButtonSample.MainPage&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;StackLayout&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Button Text=&amp;#34;Click Me!&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Clicked=&amp;#34;OnCounterClicked&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Label x:Name=&amp;#34;CounterLabel&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Text=&amp;#34;Welcome to .NET MAUI!&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HorizontalOptions=&amp;#34;Center&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> VerticalOptions=&amp;#34;CenterAndExpand&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/StackLayout&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/ContentPage&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Luego, vemos el código &lt;strong>C#&lt;/strong> para poder realizar las acciones necesarias:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">using Microsoft.Maui;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">using Microsoft.Maui.Controls;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">using Microsoft.Maui.Essentials;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">namespace ButtonSample
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public partial class MainPage : ContentPage
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> int count = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public MainPage()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> InitializeComponent();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> void OnCounterClicked(object sender, EventArgs e)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> count++;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CounterLabel.Text = $&amp;#34;Contador actual: {count}&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CounterLabel.FontSize = Device.GetNamedSize(NamedSize.Large, typeof(Label));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CounterLabel.TextColor = Color.FromHex(&amp;#34;#FF0000&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>&lt;strong>.NET MAUI&lt;/strong> es una plataforma multiplataforma que ofrece muchas ventajas para los desarrolladores que quieren crear aplicaciones nativas con un solo código compartido en &lt;strong>C#&lt;/strong> y &lt;strong>XAML&lt;/strong>. Sin embargo, también tiene algunos inconvenientes y limitaciones que se debe tener en cuenta.&lt;/p>
&lt;p>En este contexto, se recomienda &lt;strong>.NET MAUI&lt;/strong> si:&lt;/p>
&lt;ul>
&lt;li>Ya se tiene experiencia con la plataforma &lt;strong>.NET&lt;/strong> y el lenguaje &lt;strong>C#&lt;/strong>.&lt;/li>
&lt;li>Se quiere crear aplicaciones para &lt;strong>Windows&lt;/strong>, &lt;em>macOS&lt;/em>, &lt;em>iOS&lt;/em> y &lt;strong>Android&lt;/strong> con una interfaz de usuario consistente y personalizable.&lt;/li>
&lt;li>Se quiere aprovechar las herramientas de desarrollo de &lt;em>Visual Studio&lt;/em> y otras librerías del ecosistema &lt;strong>.NET&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>No se recomienda &lt;strong>.NET MAUI&lt;/strong> si:&lt;/p>
&lt;ul>
&lt;li>Se prefiere usar otro lenguaje de programación como &lt;em>Dart&lt;/em> o &lt;em>JavaScript&lt;/em>.&lt;/li>
&lt;li>Se quiere crear aplicaciones web o para &lt;em>Linux&lt;/em> sin usar &lt;strong>Blazor&lt;/strong>.&lt;/li>
&lt;li>Se quiere usar las últimas características y tecnologías de cada plataforma nativa.&lt;/li>
&lt;/ul>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Hospedar Web App en UWP</title><link>https://cmas.dev/posts/2022-07-20-host-web-app-in-uwp/</link><pubDate>Wed, 20 Jul 2022 23:01:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-07-20-host-web-app-in-uwp/</guid><description>&lt;p>En este artículo mostraré cómo hospedar/mostrar una aplicación &lt;strong>ASP.NET Core&lt;/strong> dentro de una aplicación &lt;strong>UWP&lt;/strong> en Windows.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25126&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Muchas veces ya tenemos una aplicación desarrollada utilizando todos los estándares posibles de su mundo (HTML, CSS, JavaScript, ASP.NET, etc.). Entonces, aquí veremos cómo reutilizar esto dentro de una app UWP (inclusive se podría publicar la app UWP con la URL publicada dentro).&lt;/p>
&lt;h2 id="aplicación-aspnet-core">Aplicación ASP.NET Core&lt;/h2>
&lt;p>Primeramente, crearemos la aplicación &lt;strong>ASP.NET Core&lt;/strong> básica y la ejecutaremos para verla en el navegador.&lt;/p>
&lt;ol>
&lt;li>Creamos un nuevo proyecto &lt;strong>ASP.NET Core&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/07/20/1.png" alt="">&lt;/li>
&lt;li>Colocamos un nombre al proyecto:
&lt;img src="https://cmas.dev/img/posts/2022/07/20/2.png" alt="">&lt;/li>
&lt;li>Seleccionamos el Framework que se ajusta a nuestras necesidades:
&lt;img src="https://cmas.dev/img/posts/2022/07/20/3.png" alt="">&lt;/li>
&lt;li>Ejecutamos la aplicación (presionando la tecla &lt;em>F5&lt;/em>), veremos el servidor y la web funcionando:
&lt;img src="https://cmas.dev/img/posts/2022/07/20/4.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>Listo, ya tenemos nuestra aplicación Web.&lt;/p>
&lt;h2 id="aplicación-uwp-univesal-windows-platform">Aplicación UWP (Univesal Windows Platform)&lt;/h2>
&lt;p>Crearemos la aplicación &lt;strong>UWP&lt;/strong> apuntando a &lt;strong>Windows 11&lt;/strong> como Sistema operativo.&lt;/p>
&lt;ol>
&lt;li>Creamos un nuevo proyecto &lt;strong>Universal Windows&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/07/20/5.png" alt="">&lt;/li>
&lt;li>Colocamos un nombre al proyecto:
&lt;img src="https://cmas.dev/img/posts/2022/07/20/6.png" alt="">&lt;/li>
&lt;li>Seleccionamos las versiones para Windows que estarán disponibles:
&lt;img src="https://cmas.dev/img/posts/2022/07/20/7.png" alt="">&lt;/li>
&lt;li>Escribimos el código necesario para que nuestra web app pueda verse:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;Page
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Class=&amp;#34;UWP_Emb.MainPage&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns=&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:local=&amp;#34;using:UWP_Emb&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:d=&amp;#34;http://schemas.microsoft.com/expression/blend/2008&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:mc=&amp;#34;http://schemas.openxmlformats.org/markup-compatibility/2006&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mc:Ignorable=&amp;#34;d&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Background=&amp;#34;{ThemeResource ApplicationPageBackgroundThemeBrush}&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;WebView Source=&amp;#34;https://localhost:7106/&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/Page&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>
&lt;p>Ejecutamos la aplicación (presionando la tecla &lt;em>F5&lt;/em>), veremos&amp;hellip; nada:
&lt;img src="https://cmas.dev/img/posts/2022/07/20/8.png" alt="">&lt;br>
Esto debido a que la librería no está soportada y necesita la nueva versión (acaba de ser lanzada &lt;a href="https://www.nuget.org/packages/Microsoft.UI.Xaml/2.8.0">aquí&lt;/a>).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Procedemos a cargar el nuevo paquete desde &lt;strong>Nuget&lt;/strong>, para ellos vamos a **** &amp;gt; &amp;gt; :
&lt;img src="https://cmas.dev/img/posts/2022/07/20/9.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Colocamos el código nuevo para que esto nos funcione:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;Page
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Class=&amp;#34;UWP_Emb.MainPage&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns=&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:local=&amp;#34;using:UWP_Emb&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:d=&amp;#34;http://schemas.microsoft.com/expression/blend/2008&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:mc=&amp;#34;http://schemas.openxmlformats.org/markup-compatibility/2006&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mc:Ignorable=&amp;#34;d&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:controls=&amp;#34;using:Microsoft.UI.Xaml.Controls&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Background=&amp;#34;{ThemeResource ApplicationPageBackgroundThemeBrush}&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;controls:WebView2 Source=&amp;#34;https://localhost:7106/&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/Page&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="7">
&lt;li>Ejecutamos la aplicación (presionando la tecla &lt;em>F5&lt;/em>), veremos nuestra web app funcionando:
&lt;img src="https://cmas.dev/img/posts/2022/07/20/10.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>Parece algo muy sencillo, pero me tomó algunos días poder encontrar que el problema estaba en la actualización de la librería &lt;strong>Microsoft.UI&lt;/strong>&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>¿Por qué elegir aplicaciones de escritorio en 2022?</title><link>https://cmas.dev/posts/2022-07-13-why-desktop-apps-in-2022/</link><pubDate>Wed, 13 Jul 2022 23:16:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-07-13-why-desktop-apps-in-2022/</guid><description>&lt;p>En este corto artículo intentaré convencerlos de por qué sigue siendo bueno y rentable crear aplicaciones de escritorio en 2022.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25158&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Pueden existir muchas razones por las cuales ya no es necesario desarrollar aplicaciones de escritorio en pleno siglo XXI, pero creo que es interesante por las siguientes razones:&lt;/p>
&lt;ol>
&lt;li>Las aplicaciones de escritorio interactúan mejor con el equipo del usuario.&lt;/li>
&lt;li>El rendimiento de las aplicaciones de escritorio para cálculos complejos es mucho mayor que el de las aplicaciones web.&lt;/li>
&lt;li>La ejecución de lógica personalizada en el lado cliente es posible, pero mucho más difícil, con una aplicación web.&lt;/li>
&lt;/ol>
&lt;p>Existen diferentes marcos y kits de herramientas para desarrollar aplicaciones de escritorio, dependiendo de tus preferencias y necesidades. Algunos de los más populares son:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Electronjs&lt;/strong>: un marco que usa &lt;strong>HTML&lt;/strong>, &lt;strong>JavaScript&lt;/strong> y &lt;strong>CSS&lt;/strong> para crear aplicaciones nativas multiplataforma.&lt;/li>
&lt;li>&lt;strong>Tauri&lt;/strong>: una opción ligera y segura que usa &lt;strong>Rust&lt;/strong> y webview para crear aplicaciones de escritorio para todos los principales sistemas operativos.&lt;/li>
&lt;li>&lt;strong>Windows Forms&lt;/strong>, &lt;strong>WPF&lt;/strong>, &lt;strong>UWP&lt;/strong> y &lt;strong>WinUI3&lt;/strong>: las tecnologías más populares para crear aplicaciones de escritorio de &lt;em>Windows&lt;/em> con &lt;strong>C#&lt;/strong> o &lt;strong>Visual Basic&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="qué-es-winui-3">¿Qué es WinUI 3?&lt;/h2>
&lt;p>&lt;strong>WinUI 3&lt;/strong> es la plataforma de interfaz de usuario nativa que se envía con el &lt;strong>Windows App SDK&lt;/strong>. &lt;strong>Windows App SDK&lt;/strong> proporciona un conjunto de &lt;strong>API&lt;/strong> y herramientas que se pueden usar para crear aplicaciones de escritorio que se ejecutan en &lt;em>Windows 10&lt;/em> o posterior. &lt;strong>WinUI 3&lt;/strong> ofrece un rendimiento óptimo, una larga duración de la batería y una interactividad receptiva.&lt;/p>
&lt;h2 id="cuál-debería-elegir">¿Cuál debería elegir?&lt;/h2>
&lt;p>Eso depende del público objetivo y de los requisitos de la aplicación. Si se desea crear una aplicación que funcione en diferentes sistemas operativos, se puede optar por &lt;strong>Electronjs&lt;/strong> o &lt;strong>Tauri&lt;/strong>. Si se quiere crear una aplicación que se integre con &lt;strong>Windows&lt;/strong> y se publique en &lt;strong>Microsoft Store&lt;/strong>, se puede optar por &lt;strong>UWP&lt;/strong> o &lt;strong>WinUI 3&lt;/strong>.&lt;/p>
&lt;p>En mi caso quiero desarrollar una aplicación de escritorio para Windows 11, entonces puedo usar las mismas tecnologías que en &lt;strong>Windows 10&lt;/strong>: &lt;strong>Windows Forms&lt;/strong>, &lt;strong>WPF&lt;/strong>, &lt;strong>UWP&lt;/strong> o &lt;strong>WinUI 3&lt;/strong>. Estas aplicaciones se pueden adaptar al nuevo diseño y funcionalidades de &lt;strong>Windows 11&lt;/strong>. También se pueden usar los escritorios virtuales para organizar tus aplicaciones en diferentes contextos (como con &lt;strong>WSL&lt;/strong>).&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Migración UWP a WinUI 3</title><link>https://cmas.dev/posts/2022-07-06-upgrade-uwp-to-winui3/</link><pubDate>Wed, 06 Jul 2022 00:12:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-07-06-upgrade-uwp-to-winui3/</guid><description>&lt;p>¡Feliz cumple para mí! Arranco mi día con un artículo (es día de festejo así que será complicado cumplir con la comunidad).&lt;/p>
&lt;p>En este artículo haré una migración de &lt;strong>UWP&lt;/strong> a &lt;strong>WinUI 3&lt;/strong> sin que se complique demasiado.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25151&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Microsoft ha anunciado oficialmente la depreciación de &lt;strong>UWP&lt;/strong> (Plataforma Universal de Windows) y que no se actualizaría en el nuevo sistema &lt;strong>Windows 11&lt;/strong>. Sin embargo, todavía hay algunas formas de usar &lt;strong>UWP&lt;/strong> en proyectos existentes o nuevos.&lt;/p>
&lt;blockquote>
&lt;p>Microsoft continues to baby-step around the obvious, but it has officially deprecated the Universal Windows Platform (UWP) as it pushes the desktop-focused Windows App SDK (formerly called Project Reunion) and WinUI 3 as the future of Windows application development.&lt;/p>
&lt;/blockquote>
&lt;p>Esto lo expresó Paul Thurrott en su blog (&lt;a href="https://www.thurrott.com/paul">quién es él&lt;/a>) donde nos lleva al enlace de &lt;strong>GitHub&lt;/strong> del proyecto &lt;strong>Windows App SDK&lt;/strong>. Aunque esta noticia no es nueva ahora, en este momento abandono &lt;strong>UWP&lt;/strong> antes que me ocurra lo mismo que con mis desarrollos &lt;strong>Windows Phone&lt;/strong> 🫶&lt;/p>
&lt;h2 id="cómo-proceder-con-la-migración">¿Cómo proceder con la migración?&lt;/h2>
&lt;p>Como la ansiedad me gana, abrí un proyecto de &lt;strong>UWP&lt;/strong> que tenía (no lo puedo exponer porque es de la empresa donde trabajaba) y decidí crear un nuevo proyecto de tipo &lt;strong>WinUI3&lt;/strong> para adelantarme a los hechos &amp;hellip;&lt;/p>
&lt;p>Me encontré con dos maneras de hacer la migración:&lt;/p>
&lt;h3 id="la-migración-manual">La migración &amp;ldquo;manual&amp;rdquo;&lt;/h3>
&lt;p>Al migrar, en la mayoría de los casos, el código de la interfaz de usuario solo necesita algunos cambios en el espacio de nombres. Gran parte del código de su plataforma seguirá siendo el mismo. Se tiene que modificar o cambiar algún código en función de las diferentes funcionalidades/disponibilidades de las aplicaciones de escritorio frente a las aplicaciones para &lt;strong>UWP&lt;/strong>.&lt;/p>
&lt;p>A nivel general se deben realizar estas tareas:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Crear un nuevo proyecto de escritorio empaquetado de &lt;strong>WinUI 3&lt;/strong> en la solución existente.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Copiar el código &lt;strong>XAML&lt;/strong> para la &lt;strong>UI&lt;/strong> (esto debido a cambios en los nombres de espacios de nombres).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Copiar el código lógico de la aplicación (clases diferentes y/o diferencias de APIs).&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Debemos seguir los pasos indicados &lt;a href="https://learn.microsoft.com/es-es/windows/apps/windows-app-sdk/migrate-to-windows-app-sdk/migrate-to-windows-app-sdk-ovw">aquí&lt;/a>&lt;/p>
&lt;h3 id="la-migración-con-una-herramienta">La migración con una herramienta&lt;/h3>
&lt;p>Para migrar una aplicación UWP a &lt;strong>WinUI 3&lt;/strong>, se puede usar el &lt;strong>.NET Upgrade Assistant&lt;/strong>, que es una herramienta que automatiza gran parte del proceso de migración. Antes de migrar, se recomienda revisar la siguiente lista de características que aún no son compatibles con &lt;strong>WinUI 3&lt;/strong>.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Característica de &lt;strong>UWP&lt;/strong>&lt;/th>
&lt;th>Estado de &lt;strong>WinUI 3&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Controles comunes de la interfaz de usuario&lt;/td>
&lt;td>✅ Soportado&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MSIX&lt;/td>
&lt;td>✅ Soportado&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Notificaciones del sistema&lt;/td>
&lt;td>✅ Soportado&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Iconos dinámicos (en Windows 10)&lt;/td>
&lt;td>✅ Soportado&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Distribución a través de la Tienda&lt;/td>
&lt;td>✅ Soportado&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Biblioteca MSAL&lt;/td>
&lt;td>✅ Soportado&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Visual Studio App Center&lt;/td>
&lt;td>✅ Soportado&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Creación de instancias únicas&lt;/td>
&lt;td>✅ Soportado&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tareas en segundo plano&lt;/td>
&lt;td>✅ Compatible con C++ ⚠️ Compatible parcialmente con C# (se admiten tareas en segundo plano de OOP)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CameraCaptureUI&lt;/td>
&lt;td>❌ No se admite en la versión 1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CoreTextServicesManager&lt;/td>
&lt;td>⚠️ Solo se admite en Windows 11&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>InkCanvas&lt;/td>
&lt;td>❌ No se admite en la versión 1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MapControl&lt;/td>
&lt;td>❌ No se admite en la versión 1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MediaElement&lt;/td>
&lt;td>❌ No se admite en la versión 1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PrintManager&lt;/td>
&lt;td>❌ No se admite en la versión 1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>WebAuthenticationBroker&lt;/td>
&lt;td>❌ No se admite en la versión 1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Acrílico en el fondo&lt;/td>
&lt;td>❌ No se admite en la versión 1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Quiosco de una sola aplicación&lt;/td>
&lt;td>❌ No se admite en la versión 1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TaskbarManager API&lt;/td>
&lt;td>❌ No se admite en la versión 1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Contenedorización completa de la aplicación&lt;/td>
&lt;td>❌ No se admite en la versión 1.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Mejor velocidad y rendimiento de lanzamiento&lt;/td>
&lt;td>⚠️ Ligera desventaja, consulte consideraciones de rendimiento.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Más información sobre la migración, se encuentra en la documentación oficial de &lt;strong>Microsoft&lt;/strong> &lt;a href="https://learn.microsoft.com/es-es/windows/apps/windows-app-sdk/migrate-to-windows-app-sdk/upgrade-assistant">aquí&lt;/a>&lt;/p>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>En general, el proceso de migración es sencillo si se utiliza el &lt;strong>.NET Upgrade Assistant&lt;/strong>, que guía paso a paso y realiza los cambios necesarios en el código. Sin embargo, puede haber algunos casos en los que se tenga que hacer ajustes manuales o buscar alternativas a algunas características que no son compatibles con &lt;strong>WinUI 3&lt;/strong>.&lt;/p>
&lt;p>En líneas generales seguí &lt;a href="https://learn.microsoft.com/es-es/dotnet/core/porting/upgrade-assistant-uwp-framework">el ejemplo de la documentación de Microsoft&lt;/a> y logramos terminar la migración sin problemas en 2 días (14 horas en total).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">upgrade-assistant upgrade XX.sln
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>¡No modificamos nada!&lt;/p>
&lt;p>Es hora de ir a tomar un poco de tequila 😋&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Desarrollo de aplicaciones NodeJs en WSL</title><link>https://cmas.dev/posts/2022-06-08-app-nodejs-in-wsl/</link><pubDate>Wed, 08 Jun 2022 18:07:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-06-08-app-nodejs-in-wsl/</guid><description>&lt;p>En este artículo mostraré como instalar &lt;strong>Node.js&lt;/strong> en &lt;strong>WSL&lt;/strong>. También, veremos como escribir código, compilar y ejecutarlo en &lt;strong>WSL&lt;/strong> desde &lt;strong>Visual Studio Code&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25131&lt;/strong>&lt;/em>&lt;/p>
&lt;p>En Windows 11, especificamente gracias a &lt;strong>WSL - Windows Subssytem for Linux&lt;/strong> podemos instalar y ejecutar aplicaciones desarrolladas con &lt;strong>Node.js&lt;/strong> de manera bastante sencilla y rápida.&lt;/p>
&lt;h2 id="instalar-nodejs-en-wsl">Instalar Node.js en WSL&lt;/h2>
&lt;p>Preparamos WSL para la instalación de Node.js&lt;/p>
&lt;ol>
&lt;li>Verificamos las versiones de Node.js y NVM que tenemos instaladas (se supone que no las tenemos):
&lt;img src="https://cmas.dev/img/posts/2022/06/08/1.png" alt="">&lt;/li>
&lt;li>Procedemos a instalar NVM (Node Version Manager):&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Ahora, instalamos la última versión de Node.js:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">nvm install node
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Verificamos las versiones y listo:
&lt;img src="https://cmas.dev/img/posts/2022/06/08/2.png" alt="">&lt;/li>
&lt;/ol>
&lt;h2 id="aplicacion-en-visual-studio-code">Aplicacion en Visual Studio Code&lt;/h2>
&lt;p>Dentro del Visual Studio Code creamos la aplicación y procedemos a ejecutarla normalmente.&lt;/p>
&lt;ol>
&lt;li>Creamos un archivo &lt;strong>app.js&lt;/strong>&lt;/li>
&lt;li>Escribimos las siguientes líneas de código:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">http&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;http&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">createServer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">writeHead&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">200&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;Content-Type&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;text/plain&amp;#39;&lt;/span>&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Hola desde cmas.dev!&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">listen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8080&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Presionamos la tecla &lt;em>F5&lt;/em> y seleccionamos la opción &lt;strong>Node.js&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/06/08/4.png" alt="">&lt;/li>
&lt;li>Veremos los controles de depuración y en la consola veremos que ha creado la aplicación:
&lt;img src="https://cmas.dev/img/posts/2022/06/08/5.png" alt="">&lt;/li>
&lt;li>En el navegador de preferencia, colocamos la URL definida en el código y vermeos nuestro pequeña applicación:
&lt;img src="https://cmas.dev/img/posts/2022/06/08/6.png" alt="">&lt;/li>
&lt;/ol>
&lt;h2 id="aplicacion-en-visual-studio-code-con-wsl">Aplicacion en Visual Studio Code con WSL&lt;/h2>
&lt;p>Dentro del Visual Studio Code creamos la aplicación y procedemos a ejecutarla en WSL.&lt;/p>
&lt;ol>
&lt;li>Descargar la extensión para desarrollo remoto &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-wsl">aquí&lt;/a>&lt;/li>
&lt;li>Abrimos una nueva ventana de Visual Studio Code y hacemos clicn en el icono de acceso remoto:
&lt;img src="https://cmas.dev/img/posts/2022/06/08/7.png" alt="">&lt;/li>
&lt;li>Seleccionamos la opción de distro para WSL:
&lt;img src="https://cmas.dev/img/posts/2022/06/08/8.png" alt="">&lt;/li>
&lt;li>Marcamos la opción Ubuntu:
&lt;img src="https://cmas.dev/img/posts/2022/06/08/9.png" alt="">&lt;/li>
&lt;li>Abrimos la carpeta donde almacenaremos el proyecto (en Ubuntu):
&lt;img src="https://cmas.dev/img/posts/2022/06/08/10.png" alt="">&lt;/li>
&lt;li>Escribimos las siguientes líneas de código (con algunas diferencias del código anterior):&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">http&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;http&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">createServer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">writeHead&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">200&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;Content-Type&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;text/plain&amp;#39;&lt;/span>&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">res&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;¡Hola desde cmas.dev y WSL!&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">listen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8081&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="7">
&lt;li>Ejecutamos la aplicación desde la Terminal de &lt;strong>Ubuntu&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/06/08/12.png" alt="">&lt;/li>
&lt;li>Abrimos el navegador y colocamos la dirección que especificamos en el código:
&lt;img src="https://cmas.dev/img/posts/2022/06/08/13.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>De esta manera hemos realizado una aplicación NodeJs en &lt;strong>Windows&lt;/strong> directamente así como en &lt;strong>WSL&lt;/strong>. Ambas opciones son válidas, nada más depende de la elección del desarrollador.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>WSL: Ejecutar aplicaciones con GUI Linux</title><link>https://cmas.dev/posts/2022-06-01-wsl-run-apps-gui-ubuntu/</link><pubDate>Wed, 01 Jun 2022 18:32:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-06-01-wsl-run-apps-gui-ubuntu/</guid><description>&lt;p>En este artículo mostraré cómo utilizar aplicaciones Linux (con interfaz de usuario) gracias a &lt;strong>Windows Subsystem for Linux&lt;/strong> .&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22621&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Es cierto que &lt;strong>Windows&lt;/strong> posee muchas y muy buenas aplicaciones gráficas (de hecho está basado en eso), pero Ubuntu también tiene aplicaciones muy buenas y con performance mejorada.&lt;/p>
&lt;h2 id="instalar-vlc">Instalar VLC&lt;/h2>
&lt;p>En este caso instalaremos el reproductor multimedia VLC:&lt;/p>
&lt;ol>
&lt;li>Nos dirigimos a Ubuntu &lt;strong>Windows Subsystem for Linux&lt;/strong>
&lt;img src="https://cmas.dev/img/posts/2022/06/01/1.png" alt="">&lt;/li>
&lt;li>Colocamos el comando que instala la aplicación con &lt;strong>apt&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt install vlc -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Procede a instalar y nos arroja el resultado:
&lt;img src="https://cmas.dev/img/posts/2022/06/01/2.png" alt="">&lt;/li>
&lt;li>Colocamos el comando que ejecuta la aplicación y&amp;hellip;&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">vlc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>Veremos la aplicación ejecutada:
&lt;img src="https://cmas.dev/img/posts/2022/06/01/3.png" alt="">&lt;/li>
&lt;li>Si buscamos la App desde el Menú Inicio de &lt;strong>Windows&lt;/strong> la encontraremos:
&lt;img src="https://cmas.dev/img/posts/2022/06/01/4.png" alt="">&lt;/li>
&lt;li>La aplicación se ejecuta de manera nativa en &lt;strong>Windows&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/06/01/5.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Estructura básica de un proyecto con Windows App SDK</title><link>https://cmas.dev/posts/2022-05-25-basic-struct-of-windows-app-sdk-project/</link><pubDate>Wed, 25 May 2022 18:45:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-05-25-basic-struct-of-windows-app-sdk-project/</guid><description>&lt;p>En este artículo intentaré explicar lo que entiendo es la estructura básica de &lt;strong>Windows App SDK&lt;/strong>, pues resulta algo nuevo para mí (en el pasado desarrollaba con WPF y después con UWP en sus inicios). En un &lt;a href="https://cmas.dev/posts/2022-05-18-windows-app-sdk-development/">artículo anterior&lt;/a> hemos visto los primeros pasos en esta plataforma.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25126&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Según la definición tenemos que esta definición:&lt;/p>
&lt;blockquote>
&lt;p>Windows App SDK es un conjunto de nuevos componentes y herramientas para desarrolladores que representan la próxima evolución en la plataforma de desarrollo de aplicaciones de Windows. Windows App SDK proporciona un conjunto unificado de API y herramientas que se pueden usar de manera consistente por cualquier aplicación de escritorio en Windows 11 y versiones anteriores hasta Windows 10, versión 1809&lt;/p>
&lt;/blockquote>
&lt;p>Rápidamente podemos entender que su estructura básica se compone de:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Foundation&lt;/strong>: es la capa que ofrece las &lt;em>API&lt;/em> básicas para acceder a las características y servicios de &lt;em>Windows&lt;/em>, como la configuración del sistema, el almacenamiento de datos, la red y la seguridad.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>UI&lt;/strong>: es la capa que ofrece los controles y componentes de interfaz de usuario para crear aplicaciones modernas y atractivas en &lt;em>Windows&lt;/em>, como &lt;em>XAML Islands&lt;/em>, &lt;em>WinUI 3&lt;/em> y &lt;em>WebView2&lt;/em>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Frameworks&lt;/strong>: es la capa que ofrece los marcos de trabajo y patrones para facilitar el desarrollo de aplicaciones en &lt;em>Windows&lt;/em>, como &lt;em>App Lifecycle&lt;/em>, &lt;em>Push Notifications&lt;/em> y &lt;em>Reunion Windowing&lt;/em>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Tools&lt;/strong>: es la capa que ofrece las extensiones y plantillas para Visual Studio 2022 que permiten usar los componentes de &lt;strong>Windows App SDK&lt;/strong> en proyectos nuevos o existentes. También incluye un paquete &lt;em>NuGet&lt;/em> que contiene las bibliotecas de Windows App SDK.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="diferencias-entre-win32-apis-y-uwp-apis">Diferencias entre Win32 APIs y UWP APIs&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Win32 APIs&lt;/strong>: son las API de &lt;em>Windows&lt;/em> que se usan para crear aplicaciones de escritorio tradicionales en C++ o C#. Algunas de estas &lt;em>API&lt;/em> son: &lt;em>CreateWindowEx&lt;/em>, &lt;em>MessageBox&lt;/em>, &lt;em>ShellExecute&lt;/em>, etc.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>UWP APIs&lt;/strong>: son las API de &lt;em>Windows&lt;/em> que se usan para crear aplicaciones universales que pueden ejecutarse en diferentes dispositivos con &lt;strong>Windows 11&lt;/strong>. Algunas de estas API son: &lt;em>Windows.UI.Xaml.Controls&lt;/em>, &lt;em>Windows.Media.Capture&lt;/em>, &lt;em>Windows.Storage&lt;/em>, etc.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Windows App SDK&lt;/strong> permite usar ambas API en una misma aplicación, lo que ofrece más flexibilidad y compatibilidad a los desarrolladores1.&lt;/p>
&lt;p>Esta es una pequeña introducción (con sabor a trabajo práctico) sobre Windows App SDK. A partir de esto se vienen muchos artículos sobre este &lt;em>SDK&lt;/em>.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Desarrollo en Windows App SDK</title><link>https://cmas.dev/posts/2022-05-18-windows-app-sdk-development/</link><pubDate>Wed, 18 May 2022 21:56:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-05-18-windows-app-sdk-development/</guid><description>&lt;p>En este articulo, mostraré cómo empezar con el desarrollo con Windows App SDK especialmente diseñado para Widnows 11 y ciertas versiones de Windows 10 (superior a la versión 1809).&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22621&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Entresacando un poco las definiciones desde la &lt;a href="https://learn.microsoft.com/es-es/windows/apps/windows-app-sdk/">página oficial de Microsoft&lt;/a> encontramos este resumen:&lt;/p>
&lt;blockquote>
&lt;p>Windows App SDK es un conjunto de nuevas herramientas y componentes para desarrolladores que representa la próxima evolución en la plataforma de desarrollo de aplicaciones de Windows. Windows App SDK proporciona un conjunto unificado de API y herramientas que cualquier aplicación de escritorio puede usar de forma coherente en Windows 11 y niveles inferiores hasta Windows 10, versión 1809.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Windows App SDK complementa estas herramientas y tipos de aplicación existentes con un conjunto común de API que los desarrolladores pueden utilizar en estas plataformas.&lt;/p>
&lt;/blockquote>
&lt;p>Con todo esto podemos ver las &lt;a href="https://learn.microsoft.com/es-es/windows/apps/windows-app-sdk/#windows-app-sdk-features">&lt;strong>características de Windows App SDK&lt;/strong>&lt;/a>.&lt;/p>
&lt;h1 id="creación-de-un-proyecto-winui">Creación de un proyecto WinUI&lt;/h1>
&lt;p>Para empezar a utilizar Windows App SDK, debemos crear una interfaz de usuario y eso se explica en el sitio oficial de Microsoft:&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>WinUI 3&lt;/strong> es el componente de la plataforma de interfaz de usuario nativa que se incluye con el SDK de Aplicaciones para Windows (completamente desacoplado de los SDK de Windows). El SDK de Aplicaciones para Windows proporciona un conjunto unificado de API y herramientas que se pueden usar para crear aplicaciones de escritorio de producción destinadas a Windows 10 y versiones posteriores que se pueden publicar en Microsoft Store.&lt;/p>
&lt;/blockquote>
&lt;p>Para la creación del proyecto debemos realizar los siguientes pasos:&lt;/p>
&lt;ol>
&lt;li>Crear un proyecto de tipo &lt;strong>WinUI 3&lt;/strong>
&lt;img src="https://cmas.dev/img/posts/2022/05/18/1.png" alt="">&lt;/li>
&lt;li>Se coloca un nombre descriptivo para el proyecto:
&lt;img src="https://cmas.dev/img/posts/2022/05/18/2.png" alt="">&lt;/li>
&lt;li>Se crea el proyecto con los siguientes archivos:
&lt;img src="https://cmas.dev/img/posts/2022/05/18/3.png" alt="">&lt;/li>
&lt;li>Procedemos a ejecutar la aplicación (y se ejecutará en nuestro &lt;strong>Windows 11&lt;/strong> directamente):
&lt;img src="https://cmas.dev/img/posts/2022/05/18/4.png" alt="">&lt;/li>
&lt;li>Veremos la aplicación ejecutada:
&lt;img src="https://cmas.dev/img/posts/2022/05/18/5.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>Con esto logramos crear nuestra primera aplicación &lt;strong>WinUI 3&lt;/strong>.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>UWP en Windows 11</title><link>https://cmas.dev/posts/2022-05-11-uwp-in-windows-11/</link><pubDate>Wed, 11 May 2022 19:53:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-05-11-uwp-in-windows-11/</guid><description>&lt;p>En este artículo mostraré cómo crear una aplicación UWP (Universal Windows Platform) en Windows 11 (aunque ya debemos ir dejándola ;)).&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22621&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Los prerrequisitos para poder crear son:&lt;/p>
&lt;ol>
&lt;li>Visual Studio 2022.&lt;/li>
&lt;li>UWP habilitado para el desarrollo sobre Windows 11.&lt;/li>
&lt;li>Windows 11 ;)&lt;/li>
&lt;/ol>
&lt;h2 id="crear-una-aplicación-uwp">Crear una aplicación UWP&lt;/h2>
&lt;p>Para la creación del proyecto debemos seguir los siguientes pasos:&lt;/p>
&lt;ol>
&lt;li>Crear una nueva aplicación en Visual Studio:
&lt;img src="https://cmas.dev/img/posts/2022/05/11/1.png" alt="">&lt;/li>
&lt;li>Colocamos el nombre descriptivo para el nuevo proyecto:
&lt;img src="https://cmas.dev/img/posts/2022/05/11/2.png" alt="">&lt;/li>
&lt;li>Seleccionamos la versión del destino (En Windows 11):
&lt;img src="https://cmas.dev/img/posts/2022/05/11/3.png" alt="">&lt;/li>
&lt;li>Verificamos que el proyecto se haya creado correctamente:
&lt;img src="https://cmas.dev/img/posts/2022/05/11/4.png" alt="">&lt;/li>
&lt;li>Agregamos un control de prueba para poder ejecutarlo:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;Page
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> x:Class=&amp;#34;UWP_Blog.MainPage&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns=&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:local=&amp;#34;using:UWP_Blog&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:d=&amp;#34;http://schemas.microsoft.com/expression/blend/2008&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> xmlns:mc=&amp;#34;http://schemas.openxmlformats.org/markup-compatibility/2006&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mc:Ignorable=&amp;#34;d&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Background=&amp;#34;{ThemeResource ApplicationPageBackgroundThemeBrush}&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;TextBlock Text=&amp;#34;Hola mundo, desde UWP y el Blog de Christian&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Grid&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/Page&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>Ejecutamos la aplicación:
&lt;img src="https://cmas.dev/img/posts/2022/05/11/5.png" alt="">&lt;/li>
&lt;li>Voilá, tenemos nuestra primera app UWP para Windows 11:
&lt;img src="https://cmas.dev/img/posts/2022/05/11/6.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>Si bien es cierto, se recomienda que las aplicaciones para Windows sean creadas con WinUI, aún es posible desarrollarlas con UWP (pero es recomendable hacer la migración correspondiente).&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>WSL sin internet</title><link>https://cmas.dev/posts/2022-04-27-wsl-no-internet/</link><pubDate>Wed, 27 Apr 2022 12:26:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-04-27-wsl-no-internet/</guid><description>&lt;p>En este artículo mostraré cómo conectar a internet en &lt;strong>Windows Subsystem for Linux&lt;/strong> para cualquier distro (pero aquí siempre con Ubuntu) utilizando &lt;strong>Windows Terminal&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22598&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Debemos seguir algunos pasos sencillos para poder habilitar internet de manera permanente en nuestra distro preferida.&lt;/p>
&lt;h2 id="conexión-a-internet-en-windows-subsystem-for-linux">Conexión a internet en Windows Subsystem for Linux&lt;/h2>
&lt;p>Primero, hacemos ping a algún DNS (que tenga salida a internet):
&lt;img src="https://cmas.dev/img/posts/2022/04/27/wsl1.png" alt="">&lt;/p>
&lt;p>Entonces, debemos abrirl el archivo &lt;strong>resolv.conf&lt;/strong> que se encuentra en nuestro distro WSL:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">nano /etc/resolv.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Abrirá el editor y procedemos a verificar el dato presente allí:
&lt;img src="https://cmas.dev/img/posts/2022/04/27/wsl3.png" alt="">&lt;/p>
&lt;p>Esa IP es privada. ¡Quítala de allí! y usemos el DNS de Google:
&lt;img src="https://cmas.dev/img/posts/2022/04/27/wsl4.png" alt="">&lt;/p>
&lt;p>Probemos nuestro comando &lt;strong>ping&lt;/strong> a ver que ocurre:
&lt;img src="https://cmas.dev/img/posts/2022/04/27/wsl5.png" alt="">&lt;/p>
&lt;h2 id="configuración-permanente-para-acceso-a-internet">Configuración permanente para acceso a Internet&lt;/h2>
&lt;p>Como paso de prueba podemos salir de Ubuntu (emular el apagado de equipo desde &lt;strong>Windows Terminal&lt;/strong>, no desde Ubuntu):
&lt;img src="https://cmas.dev/img/posts/2022/04/27/wsl6.png" alt="">&lt;/p>
&lt;p>Iniciamos Ubuntu nuevamente y probamos &lt;strong>ping&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/04/27/wsl1.png" alt="">&lt;/p>
&lt;p>¡BOOM!&lt;/p>
&lt;p>Corregimos esto al estilo Ubuntu, con &lt;strong>Terminal&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo bash -c &amp;#39;echo -e &amp;#34;[network]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">generateResolvConf = false&amp;#34; &amp;gt; /etc/wsl.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">echo -e &amp;#34;options timeout:1 attempts:1 rotate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nameserver 8.8.8.8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nameserver 8.8.4.4&amp;#34; &amp;gt; /etc/resolv.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chattr -f +i /etc/resolv.conf&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Con esto, logramos que todo funcione correctamente&amp;gt;
&lt;img src="https://cmas.dev/img/posts/2022/04/27/wsl5.png" alt="">&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Configurando mi ambiente WSL</title><link>https://cmas.dev/posts/2022-04-26-configuring-my-wsl-environment/</link><pubDate>Tue, 26 Apr 2022 20:41:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-04-26-configuring-my-wsl-environment/</guid><description>&lt;p>En este artículo mostraré cómo configurar un ambiente de desarrollo WSL (Windows Subsystem Linux) dentro de Windows para el desarrollo de aplicaciones en múltiples plataformas (que en el futuro iré asociando a este artículo). Para este artículo ya tenemos disponible la nueva distro de Ubuntu 22.04 (recientemente lanzada).&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22598&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Debemos seguir algunos pasos para poder habilitar el WSL (Windows Subsystem for Linux) en Windows 11. Es excelente esto para probar todo tipo de aplicaciones sin salir de Windows. Especialmente preparado para .NET Core :)&lt;/p>
&lt;h2 id="preparar-windows-subsystem-for-linux">Preparar Windows Subsystem for Linux&lt;/h2>
&lt;p>Para preparar la plataforma debemos seguir estos pasos:&lt;/p>
&lt;ol>
&lt;li>Nos dirigimos a &lt;strong>Panel de Control&lt;/strong> &amp;gt; &lt;strong>Programas&lt;/strong> &amp;gt; &lt;strong>Habilitar funcionalidades de Windows&lt;/strong>.&lt;/li>
&lt;li>Buscar la opción &lt;strong>Windows Subsystem for Linux&lt;/strong>, marcamos la opción y hacemos clic en &lt;strong>Aceptar&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/04/26/Wsl1.png" alt="">&lt;/li>
&lt;li>Cuando termine la instalación debemos reiniciar el sistema operativo y veremos este nuevo enlace en el &lt;strong>Explorador de archivos&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/04/26/Wsl2.png" alt="">&lt;/li>
&lt;/ol>
&lt;h2 id="instalamos-la-distro-de-preferencia">Instalamos la distro de preferencia&lt;/h2>
&lt;p>En mi caso selecciono Ubuntu, pero existen otras que se encuentran disponibles para su instalación. Aquí procedemos a instalar desde &lt;strong>Microsoft Store&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/04/26/Wsl3.png" alt="">&lt;/p>
&lt;p>Una vez que haya culminado la instalación, procedemos a abrir la nueva App (sí, se encuentra como una App):
&lt;img src="https://cmas.dev/img/posts/2022/04/26/Wsl4.png" alt="">&lt;/p>
&lt;h2 id="windows-terminal">Windows Terminal&lt;/h2>
&lt;p>Aquí es donde empezamos a disfrutar de nuestra distro de Linux favorita para empezar a jugar con ella.&lt;/p>
&lt;p>Creamos un usuario para nuestro sistema operativo Ubuntu (puede o no ser igual al usuario de Windows):
&lt;img src="https://cmas.dev/img/posts/2022/04/26/Wsl5.png" alt="">&lt;/p>
&lt;p>Por último, accedemos a la terminal de Ubuntu y realizamos las tareas que queramos dentro de Ubuntu, que está dentro de Windows 11.
&lt;img src="https://cmas.dev/img/posts/2022/04/26/Wsl6.png" alt="">&lt;/p>
&lt;p>Podemos verificar que distro estamos ejecutando:
&lt;img src="https://cmas.dev/img/posts/2022/04/26/Wsl7.png" alt="">&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Introducción a Windows Fluent Design System</title><link>https://cmas.dev/posts/2022-04-25-introduction-to-windows-fluent-system/</link><pubDate>Mon, 25 Apr 2022 19:22:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-04-25-introduction-to-windows-fluent-system/</guid><description>&lt;p>En este artículo intentaré enteder y explicar qué es &lt;strong>Windows Fluent Design System&lt;/strong>, por qué es Open Source, para qué se utiliza y que se puede lograr con esto.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22598&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Personalmente tengo muchas dudas y consultas sobre este punto. Hace un tiempo que veo esto pero no he tenido el tiempo para detenerme a investigar. Así que hagámos juntos el recorrido. Las consultas que me surgen son:&lt;/p>
&lt;ul>
&lt;li>¿Qué es?&lt;/li>
&lt;li>¿Para qué se utiliza?&lt;/li>
&lt;li>¿Por qué Microsoft apostó a este proyecto &lt;strong>Open Source&lt;/strong>?&lt;/li>
&lt;li>¿Qué beneficios tengo como desarrollador &lt;em>Windows&lt;/em>?&lt;/li>
&lt;li>¿Qué puedo lograr con esto?&lt;/li>
&lt;/ul>
&lt;h2 id="qué-es-windows-fluent-design-system">¿Qué es &lt;strong>Windows Fluent Design System&lt;/strong>?&lt;/h2>
&lt;p>&lt;strong>Fluent Design System&lt;/strong> es un sistema de diseño abierto y multiplataforma que ofrece a los diseñadores y desarrolladores los marcos que necesitan para crear experiencias de producto atractivas.&lt;/p>
&lt;p>&lt;strong>Fluent Design System&lt;/strong> es el sistema de diseño en evolución de Microsoft que se basa en cinco principios: &lt;strong>luz&lt;/strong>, &lt;strong>profundidad&lt;/strong>, &lt;strong>movimiento&lt;/strong>, &lt;strong>material&lt;/strong> y &lt;strong>escala&lt;/strong>. El objetivo es crear experiencias de usuario fluidas y adaptables a diferentes contextos y dispositivos.&lt;/p>
&lt;p>🤔&lt;/p>
&lt;h2 id="para-qué-windows-fluent-design-system">¿Para qué &lt;strong>Windows Fluent Design System&lt;/strong>?&lt;/h2>
&lt;p>Utilizaría &lt;strong>Fluent Design System&lt;/strong> para crear experiencias de producto atractivas y naturales en cada dispositivo. Algunos beneficios son:&lt;/p>
&lt;ol>
&lt;li>La accesibilidad se refiere a la capacidad de diseñar para todos los rangos de diversidad humana, reconociendo las exclusiones y usándolas como oportunidades para crear diseños inclusivos.&lt;/li>
&lt;li>La internacionalización se refiere a la capacidad de adaptar el diseño a diferentes idiomas, culturas y contextos.&lt;/li>
&lt;li>El rendimiento se refiere a la capacidad de optimizar el diseño para que funcione bien en diferentes dispositivos y plataformas.&lt;/li>
&lt;li>La coherencia entre los equipos de diseño y desarrollo se refiere a la capacidad de crear una fuente única de verdad entre todos los equipos de desarrollo de productos, trabajando con los mismos componentes y limitaciones.&lt;/li>
&lt;/ol>
&lt;p>Algunas posibles desventajas de usar &lt;strong>Fluent Design System&lt;/strong> son:&lt;/p>
&lt;ul>
&lt;li>Puede ser percibido como una copia de otros sistemas de diseño como &lt;em>iOS&lt;/em> o &lt;em>Material Design&lt;/em>.&lt;/li>
&lt;li>Puede ser incompleto y sin una fecha o hitos claros de lanzamiento.&lt;/li>
&lt;li>Puede requerir un aprendizaje y una adaptación constantes a medida que evoluciona.&lt;/li>
&lt;/ul>
&lt;h2 id="por-qué-microsoft-apostó-a-este-proyecto-open-source">¿Por qué Microsoft apostó a este proyecto &lt;strong>Open Source&lt;/strong>?&lt;/h2>
&lt;p>Microsoft posiblemente apostó a este proyecto &lt;strong>Open Source&lt;/strong> porque:&lt;/p>
&lt;ul>
&lt;li>Quería construir un sistema de diseño colectivo que aprovechara el impulso de las cosas geniales que ya estaban sucediendo en &lt;strong>Microsoft&lt;/strong>, sin pisar los pies a nadie.&lt;/li>
&lt;li>Quería celebrar a quienes contribuyen a lo que hace colectivamente la comunidad, sin importar en qué equipo trabajen.&lt;/li>
&lt;li>Quería crear experiencias de producto atractivas y adaptables a diferentes contextos y dispositivos.&lt;/li>
&lt;/ul>
&lt;h2 id="qué-beneficios-tengo-como-desarrollador-windows">¿Qué beneficios tengo como desarrollador &lt;em>Windows&lt;/em>?&lt;/h2>
&lt;p>Algunos beneficios que se tiene como desarrollador al usar &lt;strong>Fluent Design System&lt;/strong> son:&lt;/p>
&lt;ul>
&lt;li>Se puede crear aplicaciones hermosas y expresivas con el lenguaje de diseño &lt;strong>Fluent&lt;/strong>, con animaciones, desenfoque y fluidez.&lt;/li>
&lt;li>Se puede trabajar con los mismos componentes y limitaciones que los diseñadores, creando una fuente única de verdad entre todos los equipos de desarrollo de productos.&lt;/li>
&lt;li>Se puede aprovechar los marcos de trabajo que ofrece &lt;strong>Fluent&lt;/strong> para crear experiencias de producto atractivas e inclusivas en diferentes plataformas y dispositivos.&lt;/li>
&lt;/ul>
&lt;p>La relación entre &lt;strong>Fluent Design System&lt;/strong> y el desarrollador de software es la siguiente:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Fluent&lt;/strong> es un sistema de diseño abierto y multiplataforma que ofrece al desarrollador los marcos de trabajo necesarios para crear experiencias de producto atractivas e inclusivas en diferentes plataformas y dispositivos.&lt;/li>
&lt;li>&lt;strong>Fluent&lt;/strong> es independiente de cualquier tecnología de implementación particular, lo que permite al desarrollador elegir la que más convenga.&lt;/li>
&lt;li>&lt;strong>Fluent&lt;/strong> le proporciona al desarrollador una serie de componentes web, sistemas de diseño y aplicaciones que puede usar para crear sus propios proyectos.&lt;/li>
&lt;/ol>
&lt;h2 id="qué-puedo-lograr-con-esto">¿Qué puedo lograr con esto?&lt;/h2>
&lt;p>Con &lt;strong>Fluent&lt;/strong> se puede lograr lo siguiente:&lt;/p>
&lt;ul>
&lt;li>Crear experiencias de producto coherentes, de calidad y alineadas con la plataforma Microsoft.&lt;/li>
&lt;li>Extender y personalizar sus proyectos con una base sólida y flexible.&lt;/li>
&lt;li>Aplicar los principios de accesibilidad, internacionalización y rendimiento a sus diseños.&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Como conclusión podemos menciona que:&lt;/p>
&lt;ul>
&lt;li>Ayuda a crear experiencias naturales y productivas en cada dispositivo.&lt;/li>
&lt;li>Ofrece recursos para diseñar interfaces de usuario en &lt;strong>Windows&lt;/strong>, &lt;strong>Web&lt;/strong>, &lt;strong>Móvil&lt;/strong> y &lt;strong>Multiplataforma&lt;/strong>.&lt;/li>
&lt;li>Proporciona un sistema de diseño inclusivo y diverso que se adapta a las necesidades de los usuarios.&lt;/li>
&lt;li>Facilita el trabajo en equipo con una fuente única de verdad para los componentes y herramientas de diseño.&lt;/li>
&lt;/ul>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Instalar aplicaciones Android desde APK en Windows 11</title><link>https://cmas.dev/posts/2022-04-20-install-android-apps-from-apk/</link><pubDate>Wed, 20 Apr 2022 13:01:14 -0400</pubDate><guid>https://cmas.dev/posts/2022-04-20-install-android-apps-from-apk/</guid><description>&lt;p>En este artículo mostraré cómo instalar aplicaciones Android en Windows 11 gracias a &lt;strong>Windows Subsystem for Android&lt;/strong> utilizando herramientas del propio Android y habilitando ciertas opciones. En un &lt;a href="https://cmas.dev/posts/2022-04-13-enable-wsa/">artículo anterior&lt;/a> hemos visto cómo habilitar la plataforma desde &lt;strong>Microsoft Store&lt;/strong>.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22598&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Debemos seguir algunos pasos para poder tener cualquier aplicación Android directamente en Windows 11, recordando que para habilitar esto debemos tener la región indicada como Estados Unidos.&lt;/p>
&lt;h2 id="preparar-windows-subsystem-for-android">Preparar Windows Subsystem for Android&lt;/h2>
&lt;p>Para preparar la plataforma debemos seguir estos pasos:&lt;/p>
&lt;ol>
&lt;li>Iniciar la aplicación &lt;strong>Windows Subsystem for Android&lt;/strong>&lt;/li>
&lt;li>Establecer el &lt;strong>Modo desarrollador&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/04/20/adb1.png" alt="">&lt;/li>
&lt;li>Hacemos clic en la opción &lt;strong>Gestionar configuración de desarrollador&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/04/20/adb2.png" alt="">&lt;/li>
&lt;li>Habilitamos la opción de &lt;strong>Depuración USB&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/04/20/adb3.png" alt="">&lt;/li>
&lt;/ol>
&lt;h2 id="preparar-herramientas-de-android-sdk">Preparar herramientas de Android SDK&lt;/h2>
&lt;h3 id="preparar-android-sdk-platform-tools">Preparar Android SDk Platform Tools&lt;/h3>
&lt;blockquote>
&lt;p>Las Herramientas de la plataforma del SDK de Android son un componente del SDK de Android. Se incluyen herramientas que interactúan con la plataforma de Android, principalmente, &lt;em>adb&lt;/em> y &lt;em>fastboot&lt;/em>. Si bien adb es obligatorio en el desarrollo de apps para Android, por lo general, los desarrolladores de apps solo usarán la copia que instala Studio. Esta descarga es útil si deseas usar adb directamente desde la línea de comandos, y no tienes instalado Studio. (Si tienes instalado Studio, recomendamos que uses la copia que se instaló, ya que Studio lo actualizará automáticamente). Se necesita fastboot si deseas desbloquear el bootloader de tu dispositivo y actualizarlo con una nueva imagen del sistema. Este paquete solía contener &lt;em>systrace&lt;/em>, pero quedó obsoleto y se reemplazó por el generador de perfiles de Android Studio, &lt;em>gpuinspector.dev&lt;/em>, o &lt;em>Perfetto&lt;/em>.&lt;/p>
&lt;/blockquote>
&lt;p>Para esto debemos descargar la última versión disponible para Windows desde &lt;a href="https://dl.google.com/android/repository/platform-tools-latest-windows.zip">aquí&lt;/a>&lt;/p>
&lt;h3 id="ubicar-los-archivos">Ubicar los archivos&lt;/h3>
&lt;ol>
&lt;li>Debemos crear una nueva carpeta en el directorio principal de Windows y copiar la carpeta descomprimida. Quedaría así:
&lt;img src="https://cmas.dev/img/posts/2022/04/20/adb4.png" alt="">&lt;/li>
&lt;li>Hacemos clic derecho en el icono de Windows en la barra de tareas o &lt;strong>Win&lt;/strong>+&lt;strong>i&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/04/20/adb5.png" alt="">&lt;/li>
&lt;li>Seleccionamos &lt;strong>Variables de entorno&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/04/20/adb6.png" alt="">&lt;/li>
&lt;li>Seleccionamos la variable &lt;strong>Path&lt;/strong> y agregamos un nuevo registro:
&lt;img src="https://cmas.dev/img/posts/2022/04/20/adb7.png" alt="">&lt;/li>
&lt;li>Agregamos la ubicación del ejecutable que queremos agregar a la variable:
&lt;img src="https://cmas.dev/img/posts/2022/04/20/adb8.png" alt="">&lt;/li>
&lt;li>Abrimos el comando de windows &lt;strong>CMD&lt;/strong> o &lt;strong>PowerShell&lt;/strong> y probamos el comando &lt;strong>adb&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">adb devices
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://cmas.dev/img/posts/2022/04/20/adb9.png" alt="">&lt;/p>
&lt;h3 id="conexión-al-dispositivo">Conexión al dispositivo&lt;/h3>
&lt;ol>
&lt;li>Verificamos la IP del dispositivo (en la configuración de &lt;strong>Windows Subsystem for Android&lt;/strong>):
&lt;img src="https://cmas.dev/img/posts/2022/04/20/adb10.png" alt="">&lt;/li>
&lt;li>Nos conectamos a la IP y al puerto correspondiente:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">adb connect 172.18.136.138:5555
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="instalación-en-el-dispositivo">Instalación en el dispositivo&lt;/h3>
&lt;ol>
&lt;li>Descargamos un archivo apk, en este caso la última versión de Angry Birds Dream Blast &lt;a href="https://www.apkmirror.com/apk/rovio-entertainment-corporation/angry-birds-dream-blast/angry-birds-dream-blast-1-40-1-release/angry-birds-dream-blast-1-40-1-android-apk-download/">aquí&lt;/a>&lt;/li>
&lt;li>Instalamos el paquete descargado:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">adb&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="s2">&amp;#34;C:\Users\chris\Downloads&lt;/span>&lt;span class="se">\a&lt;/span>&lt;span class="s2">ndry.apk&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Veremos el icono anclado al menú inicio:
&lt;img src="https://cmas.dev/img/posts/2022/04/20/adb11.png" alt="">&lt;/li>
&lt;li>La aplicación se verá así:
&lt;img src="https://cmas.dev/img/posts/2022/04/20/adb12.png" alt="">&lt;/li>
&lt;/ol>
&lt;p>Para cualquier aplicación que funcione para Android debemos repetir estos 4 pasos anteriores. Aprovecharé &lt;em>HBO Max&lt;/em> para ver el nuevo Batman&amp;hellip;&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Habilitar Windows Subsystem for Android™️</title><link>https://cmas.dev/posts/2022-04-13-enable-wsa/</link><pubDate>Wed, 13 Apr 2022 13:41:27 -0400</pubDate><guid>https://cmas.dev/posts/2022-04-13-enable-wsa/</guid><description>&lt;p>En este artículo mostraré paso a paso como habilitar el &lt;strong>Windows Subsystem for Android&lt;/strong> en nuestro sistema operativo favorito. Tener en cuenta que al momento de escribir este artículo no está disponible fuera de EEUU.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22598&lt;/strong>&lt;/em>&lt;/p>
&lt;h2 id="qué-es-wsa">¿Qué es WSA?&lt;/h2>
&lt;p>Windows Subsystem for Android™ permite que un dispositivo con Windows 11 ejecute aplicaciones de Android que están disponibles en Amazon Appstore. Android es una marca comercial de Google LLC. Si es desarrollador y le interesa apuntar a dispositivos de escritorio Windows y optimizar para el sistema operativo Windows, esta guía es para usted.&lt;/p>
&lt;h2 id="configuraciones-previas">Configuraciones previas&lt;/h2>
&lt;p>En el momento que estoy escribiendo este artículo no funciona esto fuera de Estados Unidos, pero cambiando la región lo podemos lograr.&lt;/p>
&lt;p>Para eso, debemos ir a &lt;em>Configuración&lt;/em> &amp;gt; &lt;em>Tiempo y Región&lt;/em>:
&lt;img src="https://cmas.dev/img/posts/2022/04/13/wsa1.png" alt="">&lt;/p>
&lt;h2 id="habilitación-de-windows-subsystem-for-android">Habilitación de Windows Subsystem for Android&lt;/h2>
&lt;p>Debemos dirigirnos a &lt;strong>Microsoft Store&lt;/strong>, buscar e instalar &lt;strong>Amazon Appstore&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/04/13/wsa2.png" alt="">&lt;/p>
&lt;p>El sistema nos pedirá hacer clic en &lt;strong>Descargar&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/04/13/wsa3.png" alt="">&lt;/p>
&lt;p>Veremos el progreso de descarga:
&lt;img src="https://cmas.dev/img/posts/2022/04/13/wsa4.png" alt="">&lt;/p>
&lt;p>Abrimos la nueva aplicación:
&lt;img src="https://cmas.dev/img/posts/2022/04/13/wsa5.png" alt="">&lt;/p>
&lt;p>Se inicia el &lt;strong>Windows Subsystem for Android&lt;/strong>:
&lt;img src="https://cmas.dev/img/posts/2022/04/13/wsa6.png" alt="">&lt;/p>
&lt;p>Iniciamos sesión (o creamos una nueva cuenta) en Amazon y listo.&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item><item><title>Crear acceso directo a máquina virtual</title><link>https://cmas.dev/posts/2022-04-06-windows-11-shortcut-vm/</link><pubDate>Wed, 06 Apr 2022 19:21:43 -0400</pubDate><guid>https://cmas.dev/posts/2022-04-06-windows-11-shortcut-vm/</guid><description>&lt;p>Lo más práctico y útil para un usuario es encontrar lo que busca de manera rápida y sencilla. Es por eso que mostraré los pasos a seguir para crear un acceso directo a una máquina virtual en Hyper-V.&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 22593&lt;/strong>&lt;/em>&lt;/p>
&lt;p>Primero debemos dirigirnos a nuestro gestor de máquinas virtuales de Hyper-V y obtener el nombre de la máquina virtual en cuestión (Ubuntu, en este caso):
&lt;img src="https://cmas.dev/img/posts/2022/04/06/hyperv1.png" alt="">&lt;/p>
&lt;p>Nos dirigimos al escritorio de Windows, &lt;em>clic derecho&lt;/em> &amp;gt; &lt;em>Nuevo&lt;/em> &amp;gt; &lt;em>Crear acceso directo&lt;/em>:
&lt;img src="https://cmas.dev/img/posts/2022/04/06/hyperv2.png" alt="">&lt;/p>
&lt;p>Agregamos la siguiente ubicación de archivo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">vmconnect.exe localhost &amp;#34;Ubuntu&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>El nombre de programa es &lt;strong>vmconnect.exe&lt;/strong>&lt;/li>
&lt;li>&lt;strong>localhost&lt;/strong> porque se trata de nuestra máquina virtual local&lt;/li>
&lt;li>&lt;strong>Ubuntu&lt;/strong> es el nombre de la máquina virtual&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cmas.dev/img/posts/2022/04/06/hyperv3.png" alt="">&lt;/p>
&lt;p>Colocamos un nombre descriptivo a nuestro acceso directo:
&lt;img src="https://cmas.dev/img/posts/2022/04/06/hyperv4.png" alt="">&lt;/p>
&lt;p>Veremos en el escritorio el acceso directo creado:
&lt;img src="https://cmas.dev/img/posts/2022/04/06/hyperv5.png" alt="">&lt;/p>
&lt;p>Por último, hacemos la prueba del acceso directo:
&lt;img src="https://cmas.dev/img/posts/2022/04/06/hyperv6.png" alt="">&lt;/p>
&lt;p>¡Espero resulte útil!&lt;/p></description></item></channel></rss>