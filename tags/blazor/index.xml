<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blazor on Christian Amado's Blog</title><link>https://cmas.dev/tags/blazor/</link><description>Recent content in Blazor on Christian Amado's Blog</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Wed, 26 Mar 2025 00:00:00 -0300</lastBuildDate><atom:link href="https://cmas.dev/tags/blazor/index.xml" rel="self" type="application/rss+xml"/><item><title>Despliegue continuo de Blazor con Azure DevOps</title><link>https://cmas.dev/posts/2025-03-26-blazor-/</link><pubDate>Wed, 26 Mar 2025 00:00:00 -0300</pubDate><guid>https://cmas.dev/posts/2025-03-26-blazor-/</guid><description>&lt;p>La automatización del proceso de construcción, prueba y despliegue de aplicaciones &lt;strong>Blazor&lt;/strong> es esencial para mantener un ciclo de desarrollo ágil, confiable y repetible. &lt;strong>Azure DevOps&lt;/strong> proporciona un conjunto completo de herramientas que permiten implementar pipelines de integración y entrega continua (CI/CD) para aplicaciones &lt;strong>Blazor Server&lt;/strong> o &lt;strong>Blazor WebAssembly&lt;/strong>.&lt;/p>
&lt;p>Este artículo explica cómo configurar un pipeline de CI/CD para una aplicación &lt;strong>Blazor Server&lt;/strong>, incluyendo la integración con un repositorio Git, la definición del proceso de build y el despliegue automático a &lt;strong>Azure App Service&lt;/strong>.&lt;/p>
&lt;h2 id="requisitos-previos">Requisitos previos&lt;/h2>
&lt;ul>
&lt;li>Cuenta activa en Azure y acceso al portal &lt;a href="https://portal.azure.com">https://portal.azure.com&lt;/a>.&lt;/li>
&lt;li>Proyecto Blazor Server funcional y almacenado en un repositorio Git (GitHub o Azure Repos).&lt;/li>
&lt;li>Cuenta de Azure DevOps y organización configurada.&lt;/li>
&lt;li>Azure App Service creado para recibir el despliegue.&lt;/li>
&lt;/ul>
&lt;h2 id="crear-el-proyecto-en-azure-devops">Crear el proyecto en Azure DevOps&lt;/h2>
&lt;ol>
&lt;li>Acceder a &lt;a href="https://dev.azure.com">https://dev.azure.com&lt;/a> y crear un nuevo proyecto.&lt;/li>
&lt;li>Importar el repositorio Git donde se encuentra el código fuente de la aplicación Blazor Server.&lt;/li>
&lt;li>Verificar que el proyecto tenga una rama principal (&lt;code>main&lt;/code> o &lt;code>master&lt;/code>) correctamente configurada.&lt;/li>
&lt;/ol>
&lt;h2 id="crear-una-app-service-en-azure">Crear una App Service en Azure&lt;/h2>
&lt;ol>
&lt;li>En el portal de Azure, seleccionar &lt;strong>Crear recurso &amp;gt; App Service&lt;/strong>.&lt;/li>
&lt;li>Configurar:
&lt;ul>
&lt;li>Nombre: &lt;code>blazor-devops-demo&lt;/code>&lt;/li>
&lt;li>Publicar: &lt;strong>Código&lt;/strong>&lt;/li>
&lt;li>Pilas: &lt;strong>.NET 8 (o superior)&lt;/strong>&lt;/li>
&lt;li>Región: la más cercana al entorno de desarrollo&lt;/li>
&lt;li>Grupo de recursos: crear uno nuevo si es necesario&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Crear el servicio y esperar a que esté disponible.&lt;/li>
&lt;/ol>
&lt;h2 id="crear-un-pipeline-de-cicd-en-azure-devops">Crear un pipeline de CI/CD en Azure DevOps&lt;/h2>
&lt;ol>
&lt;li>Ir a la sección &lt;strong>Pipelines &amp;gt; Pipelines&lt;/strong> y seleccionar &lt;strong>Crear Pipeline&lt;/strong>.&lt;/li>
&lt;li>Elegir la fuente de repositorio: GitHub o Azure Repos.&lt;/li>
&lt;li>Seleccionar &lt;strong>YAML&lt;/strong> como método de configuración.&lt;/li>
&lt;li>Agregar el siguiente contenido para el archivo &lt;code>azure-pipelines.yml&lt;/code>:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">trigger&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">include&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">main&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">pool&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vmImage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;windows-latest&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">variables&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">buildConfiguration&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Release&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">task&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">UseDotNet@2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">inputs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">packageType&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;sdk&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;8.x&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">installationPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">$(Agent.ToolsDirectory)/dotnet&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">task&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">DotNetCoreCLI@2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">inputs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;restore&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">projects&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;**/*.csproj&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">task&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">DotNetCoreCLI@2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">inputs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;build&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">projects&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;**/*.csproj&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">arguments&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;--configuration $(buildConfiguration)&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">task&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">DotNetCoreCLI@2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">inputs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;publish&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">projects&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;**/*.csproj&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">arguments&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">task&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">PublishBuildArtifacts@1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">inputs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">PathtoPublish&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;$(Build.ArtifactStagingDirectory)&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ArtifactName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;drop&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Este pipeline compila y publica la aplicación Blazor en formato listo para despliegue. A continuación, se debe crear una &lt;strong>Release Pipeline&lt;/strong>.&lt;/p>
&lt;h2 id="crear-el-pipeline-de-release-despliegue">Crear el pipeline de Release (Despliegue)&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Ir a &lt;strong>Pipelines &amp;gt; Releases&lt;/strong>, seleccionar &lt;strong>New Pipeline&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Elegir &lt;strong>Empty Job&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>En el artefacto, seleccionar el pipeline generado anteriormente (&lt;code>drop&lt;/code>) y enlazarlo.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>En la fase de despliegue, agregar una nueva tarea: &lt;strong>Azure App Service Deploy&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Configurar:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>App Type:&lt;/strong> Web App on Windows&lt;/li>
&lt;li>&lt;strong>App Service name:&lt;/strong> seleccionar el creado previamente&lt;/li>
&lt;li>&lt;strong>Package or folder:&lt;/strong> &lt;code>$(System.DefaultWorkingDirectory)/drop&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Habilitar &lt;strong>Despliegue automático después del build&lt;/strong> en la pestaña &lt;strong>Triggers&lt;/strong> del artefacto.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="personalizar-con-variables-de-entorno">Personalizar con variables de entorno&lt;/h2>
&lt;p>En Azure App Service es posible definir variables de entorno que se pueden consumir desde &lt;code>appsettings.Production.json&lt;/code> o directamente en tiempo de ejecución:&lt;/p>
&lt;ol>
&lt;li>En el portal de Azure, ir a la App Service &amp;gt; Configuración &amp;gt; Configuración de la aplicación.&lt;/li>
&lt;li>Agregar claves como &lt;code>ConnectionStrings__Default&lt;/code> o &lt;code>MyCustomVariable&lt;/code>.&lt;/li>
&lt;/ol>
&lt;p>Estas configuraciones son seguras, persistentes y no requieren recompilación.&lt;/p>
&lt;h2 id="pruebas-automáticas-antes-del-despliegue">Pruebas automáticas antes del despliegue&lt;/h2>
&lt;p>Si el proyecto incluye pruebas unitarias, se puede agregar el siguiente paso antes del &lt;code>publish&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">- &lt;span class="nt">task&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">DotNetCoreCLI@2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">inputs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;test&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">projects&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;**/*Tests.csproj&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">arguments&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;--configuration $(buildConfiguration)&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto asegura que solo se desplieguen builds que hayan superado las pruebas.&lt;/p>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Implementar un flujo de CI/CD para aplicaciones &lt;strong>Blazor&lt;/strong> con &lt;strong>Azure DevOps&lt;/strong> automatiza completamente el proceso de entrega, desde la validación del código hasta el despliegue en producción. Esto no solo acelera el desarrollo, sino que también reduce errores humanos y mejora la calidad del software.&lt;/p>
&lt;p>Gracias a los pipelines &lt;strong>YAML&lt;/strong>, las definiciones son auditables, versionables y portables. Esta integración es ideal para proyectos &lt;strong>Blazor&lt;/strong> en entornos empresariales o colaborativos, permitiendo adoptar prácticas modernas de &lt;strong>DevOps&lt;/strong> sin abandonar el ecosistema &lt;strong>.NET&lt;/strong>.&lt;/p></description></item><item><title>Dashboards interactivos con Blazor y gráficos dinámicos</title><link>https://cmas.dev/posts/2025-03-19-blazor-dashboard/</link><pubDate>Wed, 19 Mar 2025 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2025-03-19-blazor-dashboard/</guid><description>&lt;p>Los dashboards interactivos se han convertido en herramientas esenciales para visualizar grandes volúmenes de información en tiempo real. &lt;strong>Blazor&lt;/strong>, como framework moderno para construir aplicaciones web con C#, permite crear interfaces ricas que se ejecutan directamente en el navegador o en el servidor. Cuando se combina con bibliotecas de gráficos dinámicos como Chart.js o ApexCharts, Blazor ofrece una experiencia visual potente y altamente personalizable.&lt;/p>
&lt;p>Este artículo explora cómo construir un dashboard interactivo en &lt;strong>Blazor Server&lt;/strong> utilizando datos dinámicos y gráficos en tiempo real, abordando tanto el diseño del componente visual como la lógica de actualización de datos.&lt;/p>
&lt;h2 id="requisitos-previos">Requisitos previos&lt;/h2>
&lt;ul>
&lt;li>Visual Studio 2022 o superior con soporte para ASP.NET y Blazor.&lt;/li>
&lt;li>Conocimientos intermedios de C# y Blazor Server.&lt;/li>
&lt;li>Familiaridad con conceptos de visualización de datos.&lt;/li>
&lt;li>Paquete NuGet &lt;code>Blazor-ApexCharts&lt;/code> (u otra biblioteca de gráficos compatible con Blazor).&lt;/li>
&lt;/ul>
&lt;h2 id="crear-el-proyecto-base">Crear el proyecto base&lt;/h2>
&lt;ol>
&lt;li>Abrir Visual Studio y seleccionar &lt;strong>Crear nuevo proyecto&lt;/strong>.&lt;/li>
&lt;li>Seleccionar &lt;strong>Blazor Server App&lt;/strong>.&lt;/li>
&lt;li>Nombrar el proyecto como &lt;code>BlazorDashboardApp&lt;/code> y confirmar la plantilla con .NET 8 (o superior).&lt;/li>
&lt;/ol>
&lt;h2 id="instalar-apexcharts-para-blazor">Instalar ApexCharts para Blazor&lt;/h2>
&lt;p>Desde la consola del administrador de paquetes ejecutar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Install-Package&lt;/span> &lt;span class="n">ApexCharts&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>También se puede agregar desde el administrador de NuGet buscando &lt;code>ApexCharts&lt;/code>.&lt;/p>
&lt;h2 id="configurar-apexcharts">Configurar ApexCharts&lt;/h2>
&lt;p>En &lt;code>_Imports.razor&lt;/code>, agregar:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@using ApexCharts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>En &lt;code>Pages/_Host.cshtml&lt;/code>, agregar en el &lt;code>&amp;lt;head&amp;gt;&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">link&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;_content/ApexCharts.Blazor/apexcharts.css&amp;#34;&lt;/span> &lt;span class="na">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;stylesheet&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Y antes de cerrar la etiqueta &lt;code>&amp;lt;/body&amp;gt;&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;_content/ApexCharts.Blazor/apexcharts.js&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="crear-un-componente-de-gráfico">Crear un componente de gráfico&lt;/h2>
&lt;p>Crear una carpeta llamada &lt;code>Components&lt;/code>, y dentro un archivo &lt;code>SalesChart.razor&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@using ApexCharts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@using BlazorDashboardApp.Data
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;ApexChart TItem=&amp;#34;SalesData&amp;#34; Title=&amp;#34;Ventas por mes&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Width=&amp;#34;100%&amp;#34; Height=&amp;#34;350&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Series=&amp;#34;@series&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Options=&amp;#34;@options&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/ApexChart&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private List&amp;lt;Series&amp;lt;SalesData&amp;gt;&amp;gt; series = new();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private ApexChartOptions&amp;lt;SalesData&amp;gt; options = new();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> protected override void OnInitialized()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> series.Add(new Series&amp;lt;SalesData&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Name = &amp;#34;Ventas&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Data = new List&amp;lt;SalesData&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> new() { X = &amp;#34;Ene&amp;#34;, Y = 25000 },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> new() { X = &amp;#34;Feb&amp;#34;, Y = 42000 },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> new() { X = &amp;#34;Mar&amp;#34;, Y = 37000 },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> new() { X = &amp;#34;Abr&amp;#34;, Y = 54000 }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> });
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> options = new ApexChartOptions&amp;lt;SalesData&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Chart = new Chart
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Type = ChartType.Bar
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Xaxis = new XAxis
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Title = new Title { Text = &amp;#34;Mes&amp;#34; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Yaxis = new List&amp;lt;YAxis&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> new() { Title = new Title { Text = &amp;#34;Monto (USD)&amp;#34; } }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> };
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Y definir la clase &lt;code>SalesData.cs&lt;/code> en la carpeta &lt;code>Data&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">namespace&lt;/span> &lt;span class="nn">BlazorDashboardApp.Data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="nc">SalesData&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="n">X&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Empty&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="kt">decimal&lt;/span> &lt;span class="n">Y&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="incluir-el-gráfico-en-una-página">Incluir el gráfico en una página&lt;/h2>
&lt;p>Editar &lt;code>Pages/Index.razor&lt;/code> para incluir el componente del gráfico:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@page &amp;#34;/&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;h3&amp;gt;Dashboard de Ventas&amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;SalesChart /&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>También es necesario importar el componente:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@using BlazorDashboardApp.Components
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="hacer-el-gráfico-dinámico">Hacer el gráfico dinámico&lt;/h2>
&lt;p>Para que el gráfico se actualice cada cierto intervalo, se puede usar un &lt;code>Timer&lt;/code>. Reemplazar el bloque &lt;code>@code&lt;/code> en &lt;code>SalesChart.razor&lt;/code> por:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">code&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Series&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SalesData&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">series&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">ApexChartOptions&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SalesData&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timer&lt;/span>&lt;span class="err">?&lt;/span> &lt;span class="n">updateTimer&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">protected&lt;/span> &lt;span class="n">override&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">OnInitialized&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">InicializarGrafico&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">updateTimer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Timer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5000&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="n">cada&lt;/span> &lt;span class="mi">5&lt;/span> &lt;span class="n">segundos&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">updateTimer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Elapsed&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">ActualizarDatos&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">updateTimer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">InicializarGrafico&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">series&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new&lt;/span> &lt;span class="n">Series&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SalesData&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Ventas&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">GenerarDatos&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">ApexChartOptions&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SalesData&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Chart&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Chart&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ChartType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Bar&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Xaxis&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">XAxis&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Title&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Mes&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Yaxis&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">YAxis&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Title&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Monto (USD)&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">ActualizarDatos&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">nuevosDatos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">GenerarDatos&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">InvokeAsync&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">series&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">nuevosDatos&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">StateHasChanged&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SalesData&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">GenerarDatos&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">rnd&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Random&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SalesData&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">new&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">X&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Ene&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rnd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Next&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">20000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">50000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">new&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">X&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Feb&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rnd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Next&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">20000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">50000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">new&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">X&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Mar&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rnd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Next&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">20000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">50000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">new&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">X&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Abr&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rnd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Next&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">20000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">50000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">Dispose&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">updateTimer&lt;/span>&lt;span class="err">?&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Stop&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">updateTimer&lt;/span>&lt;span class="err">?&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Dispose&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto simula datos que se actualizan automáticamente en tiempo real.&lt;/p>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>&lt;strong>Blazor&lt;/strong> permite construir dashboards ricos e interactivos combinando componentes gráficos como ApexCharts con datos en tiempo real. Con unas pocas líneas de código, es posible crear visualizaciones profesionales que se actualizan dinámicamente, ya sea mediante temporizadores o eventos del sistema.&lt;/p>
&lt;p>Este enfoque puede escalar fácilmente para representar múltiples gráficos, integrarse con bases de datos, servicios &lt;strong>REST&lt;/strong> o incluso conectarse a flujos de eventos como &lt;strong>SignalR&lt;/strong> o &lt;strong>Azure Event Hubs&lt;/strong>. Los dashboards construidos con &lt;strong>Blazor&lt;/strong> ofrecen una alternativa moderna, extensible y mantenible a frameworks de &lt;strong>JavaScript&lt;/strong> tradicionales, sin salir del ecosistema &lt;strong>.NET&lt;/strong>.&lt;/p></description></item><item><title>Integración de Blazor con bases de datos SQL en Azure</title><link>https://cmas.dev/posts/2025-03-12-blazor-sql-azure/</link><pubDate>Wed, 12 Mar 2025 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2025-03-12-blazor-sql-azure/</guid><description>&lt;p>El desarrollo de aplicaciones web modernas con &lt;strong>Blazor&lt;/strong> permite aprovechar el poder de .NET para construir interfaces interactivas del lado cliente utilizando &lt;strong>C#&lt;/strong>. A su vez, las bases de datos SQL en &lt;strong>Azure&lt;/strong> ofrecen una solución altamente escalable, segura y gestionada para el almacenamiento de datos. Integrar ambas tecnologías representa una solución robusta para proyectos empresariales que requieren rendimiento, fiabilidad y facilidad de mantenimiento.&lt;/p>
&lt;p>Este artículo detalla cómo conectar una aplicación Blazor Server con una base de datos SQL en &lt;strong>Azure&lt;/strong>, utilizando &lt;strong>Entity Framework Core&lt;/strong> como ORM (Object-Relational Mapping). Se cubre desde la creación de la base de datos hasta la implementación de operaciones CRUD básicas.&lt;/p>
&lt;h2 id="requisitos-previos">Requisitos previos&lt;/h2>
&lt;p>Para seguir este tutorial, se requiere:&lt;/p>
&lt;ul>
&lt;li>Una cuenta activa en Microsoft Azure.&lt;/li>
&lt;li>Visual Studio 2022 o superior con soporte para ASP.NET y desarrollo Blazor.&lt;/li>
&lt;li>Conocimientos básicos en C#, Blazor Server y Entity Framework Core.&lt;/li>
&lt;li>SQL Server Management Studio (SSMS) opcional, para gestionar la base de datos en Azure.&lt;/li>
&lt;/ul>
&lt;h2 id="crear-una-base-de-datos-sql-en-azure">Crear una base de datos SQL en Azure&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Iniciar sesión en &lt;a href="https://portal.azure.com">https://portal.azure.com&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Seleccionar &lt;strong>&amp;ldquo;Crear un recurso&amp;rdquo;&lt;/strong> &amp;gt; &lt;strong>&amp;ldquo;Base de datos SQL&amp;rdquo;&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>En el formulario de configuración, establecer:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Nombre de la base de datos:&lt;/strong> &lt;code>BlazorAppDB&lt;/code>&lt;/li>
&lt;li>&lt;strong>Servidor:&lt;/strong> Crear uno nuevo o seleccionar uno existente. Al crear uno nuevo, asignar un nombre como &lt;code>blazor-sql-server&lt;/code>, seleccionar región, usuario administrador (por ejemplo &lt;code>adminuser&lt;/code>) y contraseña.&lt;/li>
&lt;li>&lt;strong>Nivel de precio:&lt;/strong> Seleccionar el plan básico para propósitos de prueba.&lt;/li>
&lt;li>&lt;strong>Redes:&lt;/strong> Habilitar el acceso a través del cliente actual para permitir la conexión desde el entorno de desarrollo.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Una vez creada, tomar nota del &lt;strong>nombre del servidor&lt;/strong> (por ejemplo, &lt;code>blazor-sql-server.database.windows.net&lt;/code>) y el &lt;strong>nombre de la base de datos&lt;/strong>.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="crear-el-proyecto-blazor-server">Crear el proyecto Blazor Server&lt;/h2>
&lt;ol>
&lt;li>Abrir Visual Studio y seleccionar &lt;strong>Crear nuevo proyecto&lt;/strong>.&lt;/li>
&lt;li>Elegir &lt;strong>Blazor Server App&lt;/strong>.&lt;/li>
&lt;li>Asignar un nombre, por ejemplo, &lt;code>BlazorAzureSqlApp&lt;/code>.&lt;/li>
&lt;li>Confirmar que la opción &lt;strong>.NET 8 (o superior)&lt;/strong> esté seleccionada.&lt;/li>
&lt;li>Finalizar la creación del proyecto.&lt;/li>
&lt;/ol>
&lt;h2 id="agregar-entity-framework-core">Agregar Entity Framework Core&lt;/h2>
&lt;ol>
&lt;li>Abrir la consola del administrador de paquetes (Package Manager Console).&lt;/li>
&lt;li>Ejecutar los siguientes comandos:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Install-Package&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">EntityFrameworkCore&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">SqlServer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Install-Package&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">EntityFrameworkCore&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">Tools&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="definir-el-modelo-de-datos">Definir el modelo de datos&lt;/h2>
&lt;p>Crear una carpeta llamada &lt;code>Models&lt;/code> y dentro, un archivo &lt;code>Product.cs&lt;/code> con el siguiente contenido:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="nn">System.ComponentModel.DataAnnotations&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">namespace&lt;/span> &lt;span class="nn">BlazorAzureSqlApp.Models&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="nc">Product&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">Id&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na"> [Required]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="kt">string?&lt;/span> &lt;span class="n">Name&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na"> [Range(0, double.MaxValue)]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="kt">decimal&lt;/span> &lt;span class="n">Price&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="crear-el-contexto-de-base-de-datos">Crear el contexto de base de datos&lt;/h2>
&lt;p>Crear una carpeta llamada &lt;code>Data&lt;/code> y un archivo &lt;code>AppDbContext.cs&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="nn">Microsoft.EntityFrameworkCore&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="nn">BlazorAzureSqlApp.Models&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">namespace&lt;/span> &lt;span class="nn">BlazorAzureSqlApp.Data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="nc">AppDbContext&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">DbContext&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="n">AppDbContext&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">DbContextOptions&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">AppDbContext&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">options&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">:&lt;/span> &lt;span class="k">base&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">options&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="n">DbSet&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">Product&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">Products&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="n">Set&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">Product&lt;/span>&lt;span class="p">&amp;gt;();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configurar-la-cadena-de-conexión-a-azure-sql">Configurar la cadena de conexión a Azure SQL&lt;/h2>
&lt;p>En el archivo &lt;code>appsettings.json&lt;/code>, agregar la cadena de conexión:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;ConnectionStrings&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;DefaultConnection&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Server=tcp:blazor-sql-server.database.windows.net,1433;Initial Catalog=BlazorAppDB;Persist Security Info=False;User ID=adminuser;Password=TuPassword123!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Nota:&lt;/strong> Sustituir &lt;code>adminuser&lt;/code> y &lt;code>TuPassword123!&lt;/code> por las credenciales reales utilizadas al crear el servidor de Azure SQL.&lt;/p>
&lt;h2 id="registrar-el-contexto-en-el-contenedor-de-servicios">Registrar el contexto en el contenedor de servicios&lt;/h2>
&lt;p>En el archivo &lt;code>Program.cs&lt;/code>, agregar la configuración del contexto justo antes de &lt;code>builder.Build()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">builder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Services&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">AddDbContext&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">AppDbContext&lt;/span>&lt;span class="p">&amp;gt;(&lt;/span>&lt;span class="n">options&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">UseSqlServer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Configuration&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetConnectionString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;DefaultConnection&amp;#34;&lt;/span>&lt;span class="p">)));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="crear-la-migración-e-inicializar-la-base-de-datos">Crear la migración e inicializar la base de datos&lt;/h2>
&lt;p>Ejecutar en la consola del administrador de paquetes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Add-Migration&lt;/span> &lt;span class="n">InitialCreate&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Update-Database&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto creará las tablas necesarias directamente en la base de datos SQL de Azure.&lt;/p>
&lt;h2 id="crear-un-servicio-para-acceso-a-datos">Crear un servicio para acceso a datos&lt;/h2>
&lt;p>Dentro de la carpeta &lt;code>Data&lt;/code>, crear el archivo &lt;code>ProductService.cs&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="nn">Microsoft.EntityFrameworkCore&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="nn">BlazorAzureSqlApp.Models&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">namespace&lt;/span> &lt;span class="nn">BlazorAzureSqlApp.Data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="nc">ProductService&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">private&lt;/span> &lt;span class="k">readonly&lt;/span> &lt;span class="n">AppDbContext&lt;/span> &lt;span class="n">_context&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="n">ProductService&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AppDbContext&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_context&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="kd">async&lt;/span> &lt;span class="n">Task&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">Product&lt;/span>&lt;span class="p">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">GetAllAsync&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">_context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Products&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ToListAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="kd">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">AddAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Product&lt;/span> &lt;span class="n">product&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Products&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">product&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">_context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SaveChangesAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="kd">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">DeleteAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">product&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="n">_context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Products&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">FindAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">product&lt;/span> &lt;span class="p">!=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Products&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Remove&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">product&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">_context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SaveChangesAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Y registrar el servicio en &lt;code>Program.cs&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">builder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Services&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">AddScoped&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">ProductService&lt;/span>&lt;span class="p">&amp;gt;();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="crear-una-interfaz-para-gestionar-productos">Crear una interfaz para gestionar productos&lt;/h2>
&lt;p>Agregar un nuevo componente Razor llamado &lt;code>Pages/Products.razor&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">page&lt;/span> &lt;span class="s2">&amp;#34;/products&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">inject&lt;/span> &lt;span class="n">ProductService&lt;/span> &lt;span class="n">ProductService&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">h3&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Productos&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">h3&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">EditForm&lt;/span> &lt;span class="n">Model&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;@newProduct&amp;#34;&lt;/span> &lt;span class="n">OnValidSubmit&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;AddProduct&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">DataAnnotationsValidator&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">ValidationSummary&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">InputText&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">bind&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;newProduct.Name&amp;#34;&lt;/span> &lt;span class="n">placeholder&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Nombre&amp;#34;&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">InputNumber&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">bind&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;newProduct.Price&amp;#34;&lt;/span> &lt;span class="n">placeholder&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Precio&amp;#34;&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">button&lt;/span> &lt;span class="k">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;btn btn-primary&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Agregar&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">button&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">EditForm&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">hr&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">ul&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">foreach&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">var&lt;/span> &lt;span class="n">product&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">products&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">li&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">product&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Name&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">product&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Price&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">button&lt;/span> &lt;span class="k">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;btn btn-sm btn-danger&amp;#34;&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">onclick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;() =&amp;gt; DeleteProduct(product.Id)&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Eliminar&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">button&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">li&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">ul&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">code&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Product&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">products&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">Product&lt;/span> &lt;span class="n">newProduct&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">protected&lt;/span> &lt;span class="n">override&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">OnInitializedAsync&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">products&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">ProductService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetAllAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">AddProduct&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">ProductService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">newProduct&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">newProduct&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">products&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">ProductService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetAllAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">DeleteProduct&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ne">int&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">ProductService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DeleteAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">products&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">ProductService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetAllAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Agregar esta ruta al menú en &lt;code>Shared/NavMenu.razor&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;NavLink class=&amp;#34;nav-link&amp;#34; href=&amp;#34;products&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;span class=&amp;#34;oi oi-list-rich&amp;#34; aria-hidden=&amp;#34;true&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; Productos
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/NavLink&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Integrar &lt;strong>Blazor&lt;/strong> con una base de datos SQL en &lt;strong>Azure&lt;/strong> es un proceso directo cuando se utiliza &lt;strong>Entity Framework Core&lt;/strong> como puente entre la aplicación y la capa de persistencia. Esta arquitectura permite desarrollar aplicaciones empresariales modernas, seguras y escalables que se ejecutan sobre infraestructura de nube gestionada. El modelo de desarrollo &lt;strong>Blazor Server&lt;/strong>, combinado con una base de datos en &lt;strong>Azure&lt;/strong>, permite reducir costos operativos, mejorar la experiencia de usuario en tiempo real y mantener una lógica de negocio robusta y centralizada en el servidor.&lt;/p>
&lt;p>A partir de esta base, es posible escalar la solución incorporando autenticación con &lt;strong>Microsoft Entra ID&lt;/strong>, funciones más complejas como reportes dinámicos, paginación, integración con servicios externos y migración hacia una arquitectura Blazor WebAssembly si se desea delegar más carga al cliente. Además, se puede extender el modelo para trabajar con procedimientos almacenados o vistas, y aprovechar herramientas como Azure Key Vault para almacenar credenciales de forma segura.&lt;/p>
&lt;p>Este enfoque garantiza una solución moderna alineada con los estándares de desarrollo en la nube de &lt;strong>Microsoft&lt;/strong>.**&lt;/p></description></item><item><title>Optimización de rendimiento en Blazor WebAssembly</title><link>https://cmas.dev/posts/2025-01-06-performance-optimization-blazor-webassembly/</link><pubDate>Mon, 06 Jan 2025 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2025-01-06-performance-optimization-blazor-webassembly/</guid><description>&lt;p>&lt;strong>Blazor WebAssembly&lt;/strong> es una tecnología poderosa que permite a los desarrolladores crear aplicaciones web interactivas utilizando &lt;strong>C#&lt;/strong> y &lt;strong>.NET&lt;/strong> en lugar de &lt;strong>JavaScript&lt;/strong>. Sin embargo, debido a las características inherentes de su arquitectura, la optimización del rendimiento puede ser un desafío crítico. En este artículo, exploraremos técnicas, estrategias y mejores prácticas para optimizar el rendimiento en aplicaciones &lt;strong>Blazor WebAssembly&lt;/strong>.&lt;/p>
&lt;h2 id="1-introducción-a-blazor-webassembly">1. Introducción a Blazor WebAssembly&lt;/h2>
&lt;p>&lt;strong>Blazor WebAssembly&lt;/strong> es un modelo de alojamiento de &lt;strong>Blazor&lt;/strong> que ejecuta aplicaciones directamente en el navegador utilizando &lt;strong>WebAssembly&lt;/strong>. Esto permite que las aplicaciones sean ejecutadas en un entorno completamente independiente del servidor, lo que habilita experiencias sin interrupciones.&lt;/p>
&lt;h3 id="ventajas-de-blazor-webassembly">Ventajas de Blazor WebAssembly&lt;/h3>
&lt;ul>
&lt;li>Ejecución en el cliente, reduciendo la carga en el servidor.&lt;/li>
&lt;li>Uso del ecosistema de .NET para compartir lógica entre el cliente y el servidor.&lt;/li>
&lt;li>Potencial de desarrollo sin dependencias directas de JavaScript.&lt;/li>
&lt;/ul>
&lt;h3 id="limitaciones-de-rendimiento">Limitaciones de rendimiento&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Tamaño inicial grande:&lt;/strong> Los archivos necesarios para ejecutar aplicaciones &lt;strong>Blazor WebAssembly&lt;/strong> pueden ser significativamente grandes.&lt;/li>
&lt;li>&lt;strong>Capacidad de cómputo:&lt;/strong> La velocidad de ejecución está limitada por el rendimiento del navegador.&lt;/li>
&lt;li>&lt;strong>Latencia de red:&lt;/strong> Aunque el código se ejecuta en el cliente, el acceso a datos externos sigue dependiendo de la red.&lt;/li>
&lt;/ul>
&lt;h2 id="2-entendiendo-los-problemas-comunes-de-rendimiento">2. Entendiendo los problemas comunes de rendimiento&lt;/h2>
&lt;h3 id="tamaño-del-payload-inicial">Tamaño del payload inicial&lt;/h3>
&lt;p>El tamaño de la aplicación &lt;strong>Blazor WebAssembly&lt;/strong> afecta directamente el tiempo de carga inicial, ya que los navegadores necesitan descargar los binarios de &lt;strong>WebAssembly&lt;/strong> antes de ejecutar la aplicación.&lt;/p>
&lt;h3 id="manejo-de-estado">Manejo de estado&lt;/h3>
&lt;p>Mantener estados complejos puede consumir recursos significativos de memoria y tiempo de procesamiento.&lt;/p>
&lt;h3 id="renderizado-innecesario">Renderizado innecesario&lt;/h3>
&lt;p>El renderizado excesivo de componentes afecta negativamente el rendimiento debido a operaciones DOM innecesarias.&lt;/p>
&lt;h2 id="3-estrategias-generales-de-optimización">3. Estrategias generales de optimización&lt;/h2>
&lt;h3 id="reducción-del-tamaño-de-la-carga-inicial">Reducción del tamaño de la carga inicial&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Habilitar la compresión Brotli:&lt;/strong> Los navegadores modernos admiten &lt;strong>Brotli&lt;/strong>, un algoritmo de compresión que reduce drásticamente el tamaño de los archivos.&lt;/p>
&lt;p>&lt;strong>Configuración en ASP.NET Core:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">app.UseResponseCompression();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Eliminar dependencias innecesarias:&lt;/strong> Revisa y elimina bibliotecas que no estén en uso.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Lazy loading de ensamblados:&lt;/strong> Utiliza la carga diferida para ensamblados específicos.&lt;/p>
&lt;p>&lt;strong>Ejemplo:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@if (assemblyLoaded)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Component /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="uso-eficiente-de-memoria">Uso eficiente de memoria&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Liberar recursos no utilizados:&lt;/strong> Implementa &lt;code>IDisposable&lt;/code> en componentes que utilizan recursos pesados.&lt;/li>
&lt;li>&lt;strong>Evitar grandes objetos en memoria:&lt;/strong> Descompone datos grandes en fragmentos más pequeños.&lt;/li>
&lt;/ol>
&lt;h3 id="minimizar-la-cantidad-de-renderizados">Minimizar la cantidad de renderizados&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Evita operaciones innecesarias en el DOM:&lt;/strong> Utiliza &lt;code>ShouldRender&lt;/code> para controlar el renderizado de componentes.&lt;/p>
&lt;p>&lt;strong>Ejemplo:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">protected override bool ShouldRender()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return StateHasChanged;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Optimiza el enlace de datos:&lt;/strong> Evita vincular propiedades que cambian frecuentemente a componentes de renderizado intensivo.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="4-optimización-del-ciclo-de-vida-de-los-componentes">4. Optimización del ciclo de vida de los componentes&lt;/h2>
&lt;p>El ciclo de vida de los componentes de &lt;strong>Blazor&lt;/strong> ofrece varios puntos para optimizar:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>OnInitializedAsync:&lt;/strong> Carga datos de forma diferida para evitar bloqueos iniciales.&lt;/p>
&lt;p>&lt;strong>Ejemplo:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">protected override async Task OnInitializedAsync()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Data = await LoadDataAsync();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Dispose:&lt;/strong> Libera recursos o desconecta eventos para evitar fugas de memoria.&lt;/p>
&lt;p>&lt;strong>Ejemplo:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">public void Dispose()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> MyEvent -= EventHandler;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="5-optimizar-las-dependencias-externas">5. Optimizar las dependencias externas&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Interoperabilidad con JavaScript:&lt;/strong> Minimiza las llamadas JSInterop y agrúpalas cuando sea posible.&lt;/p>
&lt;p>&lt;strong>Ejemplo:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">function batchedOperation(data) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // Procesa múltiples operaciones en una sola llamada
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Uso de bibliotecas ligeras:&lt;/strong> Prioriza bibliotecas específicamente diseñadas para &lt;strong>WebAssembly&lt;/strong>.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="6-uso-de-almacenamiento-en-caché-y-almacenamiento-local">6. Uso de almacenamiento en caché y almacenamiento local&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Persistencia en el cliente:&lt;/strong> Aprovecha el almacenamiento local para datos que no necesitan ser recargados frecuentemente.&lt;/p>
&lt;p>&lt;strong>Ejemplo:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">localStorage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SetItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;key&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">localStorage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;key&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Service Workers:&lt;/strong> Implementa &lt;strong>PWA&lt;/strong> para optimizar la caché y reducir la dependencia de la red.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="7-ejemplos-prácticos-y-patrones-de-código">7. Ejemplos prácticos y patrones de código&lt;/h2>
&lt;h3 id="ejemplo-1-lazy-loading">Ejemplo 1: Lazy Loading&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private bool assemblyLoaded;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> protected override async Task OnAfterRenderAsync(bool firstRender)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (firstRender)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> assemblyLoaded = await LoadAssemblyAsync(&amp;#34;Library.dll&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> StateHasChanged();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ejemplo-2-optimizar-renderizado-condicional">Ejemplo 2: Optimizar Renderizado Condicional&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private bool isVisible;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> protected override bool ShouldRender()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return isVisible;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="8-herramientas-para-medir-el-rendimiento">8. Herramientas para medir el rendimiento&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Browser Developer Tools:&lt;/strong> Analiza las solicitudes de red y tiempos de renderizado.&lt;/li>
&lt;li>&lt;strong>dotnet-trace:&lt;/strong> Herramienta para trazar el rendimiento de las aplicaciones &lt;strong>.NET&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Blazor Performance Analyzer:&lt;/strong> Un complemento para inspeccionar cuellos de botella en aplicaciones &lt;strong>Blazor&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;h2 id="9-conclusión">9. Conclusión&lt;/h2>
&lt;p>Optimizar el rendimiento en &lt;strong>Blazor WebAssembly&lt;/strong> requiere un enfoque integral que combine estrategias de reducción de tamaño, uso eficiente de recursos y configuraciones inteligentes. Al implementar las técnicas descritas, puedes garantizar que tus aplicaciones sean rápidas, receptivas y eficientes.&lt;/p>
&lt;h2 id="10-recursos-adicionales">10. Recursos adicionales&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/aspnet/core/blazor/">Documentación oficial de Blazor&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://webassembly.org/">Mejoras en WebAssembly&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/dotnet/diagnostics">Herramientas de depuración en .NET&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Usando Blazor para crear Progressive Web Apps (PWA)</title><link>https://cmas.dev/posts/2024-12-24-blazor-pwa/</link><pubDate>Tue, 24 Dec 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-12-24-blazor-pwa/</guid><description>&lt;p>&lt;strong>Blazor&lt;/strong>, el framework moderno basado en &lt;strong>.NET&lt;/strong>, ha demostrado ser una herramienta poderosa para el desarrollo de aplicaciones web interactivas. Combinado con las capacidades de &lt;strong>Progressive Web Apps (PWA)&lt;/strong>, ofrece una forma innovadora de construir aplicaciones que funcionan offline. Se pueden instalar en dispositivos y ofrecen una experiencia similar a las aplicaciones nativas. En este artículo, exploraremos cómo usar &lt;strong>Blazor&lt;/strong> para crear &lt;strong>PWAs&lt;/strong>, centrándonos en las nuevas capacidades introducidas con &lt;strong>.NET 9&lt;/strong>, buenas prácticas y ejemplos detallados.&lt;/p>
&lt;h2 id="qué-es-una-progressive-web-app-pwa">¿Qué es una Progressive Web App (PWA)?&lt;/h2>
&lt;p>Las &lt;strong>PWAs&lt;/strong> son aplicaciones web que combinan las mejores características de las aplicaciones web y las nativas. Algunas de sus características clave incluyen:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Capacidad offline&lt;/strong>: Funcionan sin conexión a internet mediante el uso de &lt;em>Service Workers&lt;/em>.&lt;/li>
&lt;li>&lt;strong>Instalables&lt;/strong>: Se pueden agregar a la pantalla de inicio de un dispositivo.&lt;/li>
&lt;li>&lt;strong>Rápidas y responsivas&lt;/strong>: Optimizadas para ofrecer un rendimiento similar al de las aplicaciones nativas.&lt;/li>
&lt;li>&lt;strong>Seguras&lt;/strong>: Utilizan &lt;em>HTTPS&lt;/em> para garantizar conexiones seguras.&lt;/li>
&lt;/ol>
&lt;h2 id="por-qué-usar-blazor-para-pwas">¿Por qué usar Blazor para PWAs?&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Reutilización de código&lt;/strong>: Con &lt;strong>Blazor&lt;/strong>, puedes usar &lt;strong>C#&lt;/strong> y &lt;strong>.NET&lt;/strong> tanto en el cliente como en el servidor.&lt;/li>
&lt;li>&lt;strong>Ecosistema robusto&lt;/strong>: Accede a las bibliotecas de .&lt;strong>NET&lt;/strong> y herramientas modernas.&lt;/li>
&lt;li>&lt;strong>Soporte para WebAssembly&lt;/strong>: &lt;strong>Blazor WebAssembly&lt;/strong> permite ejecutar aplicaciones completas en el navegador.&lt;/li>
&lt;li>&lt;strong>Integración nativa de PWA&lt;/strong>: Con configuraciones simples, &lt;strong>Blazor&lt;/strong> puede transformar una aplicación en una &lt;strong>PWA&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;h2 id="configuración-inicial">Configuración inicial&lt;/h2>
&lt;h3 id="requisitos-previos">Requisitos previos&lt;/h3>
&lt;ol>
&lt;li>Tener instalado &lt;strong>.NET 9 SDK&lt;/strong>:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Editor de código, como &lt;strong>Visual Studio 2022&lt;/strong> o &lt;strong>Visual Studio Code&lt;/strong>.&lt;/li>
&lt;li>Navegador moderno compatible con &lt;strong>PWAs&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;h3 id="crear-un-proyecto-blazor-webassembly">Crear un proyecto Blazor WebAssembly&lt;/h3>
&lt;ol>
&lt;li>Ejecutar el comando para crear un proyecto &lt;strong>PWA&lt;/strong>:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet new blazorwasm -o BlazorPwaApp --pwa
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Navegar al directorio del proyecto:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd BlazorPwaApp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Ejecutar la aplicación:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>Al usar la opción &lt;code>--pwa&lt;/code>, el proyecto incluye configuraciones predeterminadas para convertirlo en una &lt;strong>PWA&lt;/strong>.&lt;/p>
&lt;h2 id="entender-los-archivos-clave-de-una-pwa">Entender los archivos clave de una PWA&lt;/h2>
&lt;h3 id="manifestjson">&lt;code>manifest.json&lt;/code>&lt;/h3>
&lt;p>El archivo &lt;code>manifest.json&lt;/code> proporciona metadatos sobre la aplicación, como el nombre, íconos y configuraciones de inicio.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;short_name&amp;#34;: &amp;#34;BlazorPWA&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;name&amp;#34;: &amp;#34;Blazor Progressive Web App&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;start_url&amp;#34;: &amp;#34;/&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;display&amp;#34;: &amp;#34;standalone&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;background_color&amp;#34;: &amp;#34;#ffffff&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;theme_color&amp;#34;: &amp;#34;#0078D7&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;icons&amp;#34;: [
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;src&amp;#34;: &amp;#34;icons/icon-192.png&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;sizes&amp;#34;: &amp;#34;192x192&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;type&amp;#34;: &amp;#34;image/png&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> },
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;src&amp;#34;: &amp;#34;icons/icon-512.png&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;sizes&amp;#34;: &amp;#34;512x512&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;type&amp;#34;: &amp;#34;image/png&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="service-worker">Service Worker&lt;/h3>
&lt;p>El &lt;em>Service Worker&lt;/em> gestiona el almacenamiento en caché y las funcionalidades offline. En &lt;strong>Blazor&lt;/strong>, el archivo predeterminado es &lt;code>service-worker.published.js&lt;/code>.&lt;/p>
&lt;h4 id="ejemplo-de-manejo-de-caché">Ejemplo de manejo de caché&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">self.addEventListener(&amp;#39;install&amp;#39;, event =&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> event.waitUntil(
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> caches.open(&amp;#39;blazor-cache&amp;#39;).then(cache =&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return cache.addAll([
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;/&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;index.html&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;manifest.json&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;_framework/blazor.webassembly.js&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ]);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> })
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> );
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">});
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">self.addEventListener(&amp;#39;fetch&amp;#39;, event =&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> event.respondWith(
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> caches.match(event.request).then(response =&amp;gt; {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return response || fetch(event.request);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> })
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> );
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="crear-una-experiencia-offline">Crear una experiencia offline&lt;/h2>
&lt;h3 id="habilitar-funcionalidad-offline">Habilitar funcionalidad offline&lt;/h3>
&lt;ol>
&lt;li>Actualizar el &lt;em>Service Worker&lt;/em> para gestionar recursos adicionales.&lt;/li>
&lt;li>Configurar rutas en &lt;code>manifest.json&lt;/code> y asegurarse de incluir recursos clave.&lt;/li>
&lt;/ol>
&lt;h4 id="ejemplo">Ejemplo&lt;/h4>
&lt;p>Agrega un mensaje personalizado para los usuarios sin conexión:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@if (isOffline)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;p&amp;gt;No tienes conexión a internet. Algunas funcionalidades pueden no estar disponibles.&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private bool isOffline;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> protected override void OnInitialized()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> isOffline = !navigator.onLine;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> window.addEventListener(&amp;#39;online&amp;#39;, () =&amp;gt; isOffline = false);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> window.addEventListener(&amp;#39;offline&amp;#39;, () =&amp;gt; isOffline = true);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="buenas-prácticas-para-pwas-con-blazor">Buenas prácticas para PWAs con Blazor&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Optimizar recursos&lt;/strong>:
&lt;ul>
&lt;li>Usa herramientas como &lt;code>dotnet publish&lt;/code> con opciones para reducir el tamaño de los archivos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Usar HTTPS&lt;/strong>:
&lt;ul>
&lt;li>Las &lt;strong>PWAs&lt;/strong> requieren &lt;em>HTTPS&lt;/em> para funcionar correctamente.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Pruebas regulares&lt;/strong>:
&lt;ul>
&lt;li>Prueba la aplicación en diferentes navegadores y dispositivos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Actualizar el Service Worker&lt;/strong>:
&lt;ul>
&lt;li>Implementa una estrategia para actualizar el &lt;em>Service Worker&lt;/em> cuando haya cambios significativos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Diseño responsivo&lt;/strong>:
&lt;ul>
&lt;li>Asegúrate de que la interfaz funcione en diferentes tamaños de pantalla.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="ventajas-y-limitaciones-de-blazor-para-pwas">Ventajas y limitaciones de Blazor para PWAs&lt;/h2>
&lt;h3 id="ventajas">Ventajas&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Reutilización de código&lt;/strong> entre plataformas.&lt;/li>
&lt;li>&lt;strong>Integración nativa con .NET&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Compatibilidad con WebAssembly&lt;/strong> para un rendimiento eficiente en el cliente.&lt;/li>
&lt;/ol>
&lt;h3 id="limitaciones">Limitaciones&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Tamaño inicial&lt;/strong> alto en &lt;strong>Blazor WebAssembly&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Dependencia del ecosistema .NET&lt;/strong> para ciertos escenarios.&lt;/li>
&lt;li>&lt;strong>Curva de aprendizaje&lt;/strong> para desarrolladores nuevos en &lt;strong>.NET&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Combinar las capacidades de &lt;strong>Blazor&lt;/strong> y &lt;strong>PWAs&lt;/strong> permite a los desarrolladores crear aplicaciones modernas y escalables que funcionan offline, se pueden instalar y ofrecen una experiencia de usuario mejorada. Aunque existen algunas limitaciones, las ventajas de usar &lt;strong>Blazor&lt;/strong> con &lt;strong>PWA&lt;/strong> superan ampliamente los desafíos, especialmente para equipos que ya utilizan &lt;strong>.NET&lt;/strong> en su flujo de desarrollo. ¡Explora las posibilidades de &lt;strong>Blazor&lt;/strong> para &lt;strong>PWAs&lt;/strong> y lleva tus aplicaciones web al siguiente nivel!&lt;/p></description></item><item><title>Blazor y Microsoft Entra ID: Implementación de autenticación</title><link>https://cmas.dev/posts/2024-12-18-blazor-and-microsoft-entra/</link><pubDate>Wed, 18 Dec 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-12-18-blazor-and-microsoft-entra/</guid><description>&lt;p>La integración de &lt;strong>Microsoft Entra ID (anteriormente Azure AD)&lt;/strong> con &lt;strong>Blazor&lt;/strong> permite implementar autenticación segura en aplicaciones web y mejorar la gestión de identidades. En este artículo, exploraremos cómo integrar &lt;strong>Microsoft Entra ID&lt;/strong> en una aplicación &lt;strong>Blazor&lt;/strong>, proporcionando un flujo de autenticación robusto y seguro.&lt;/p>
&lt;h2 id="1-introducción-a-microsoft-entra-id-y-blazor">1. Introducción a Microsoft Entra ID y Blazor&lt;/h2>
&lt;h3 id="qué-es-microsoft-entra-id">&lt;strong>¿Qué es Microsoft Entra ID?&lt;/strong>&lt;/h3>
&lt;p>Microsoft Entra ID es una plataforma de administración de identidad basada en la nube que permite el inicio de sesión único (SSO), autenticación multifactor (MFA) y gestión de usuarios y roles en aplicaciones corporativas.&lt;/p>
&lt;h3 id="por-qué-usar-blazor-con-entra-id">&lt;strong>¿Por qué usar Blazor con Entra ID?&lt;/strong>&lt;/h3>
&lt;p>Blazor es un framework de desarrollo web de Microsoft basado en C# y Razor, que permite construir aplicaciones interactivas sin depender de JavaScript. Integrarlo con Microsoft Entra ID ofrece beneficios como:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Autenticación segura basada en estándares OAuth 2.0 y OpenID Connect&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>SSO (Inicio de Sesión Único) en entornos empresariales&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Compatibilidad con MFA (Autenticación Multifactor)&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Gestión de permisos y roles con Microsoft Graph API&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="2-configuración-de-microsoft-entra-id">2. Configuración de Microsoft Entra ID&lt;/h2>
&lt;p>Antes de integrar Entra ID con Blazor, necesitamos configurar una aplicación en el portal de Azure.&lt;/p>
&lt;h3 id="paso-1-crear-una-aplicación-en-microsoft-entra-id">&lt;strong>Paso 1: Crear una aplicación en Microsoft Entra ID&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>Accede a &lt;a href="https://portal.azure.com/">Azure Portal&lt;/a>.&lt;/li>
&lt;li>Dirígete a &lt;strong>Microsoft Entra ID&lt;/strong> &amp;gt; &lt;strong>App Registrations&lt;/strong>.&lt;/li>
&lt;li>Haz clic en &lt;strong>New Registration&lt;/strong> y configura:
&lt;ul>
&lt;li>&lt;strong>Nombre&lt;/strong>: &lt;code>BlazorAuthApp&lt;/code>&lt;/li>
&lt;li>&lt;strong>Tipo de cuenta&lt;/strong>: &amp;ldquo;Cualquier organización de directorios&amp;rdquo; o &amp;ldquo;Cuentas personales y organizativas&amp;rdquo;.&lt;/li>
&lt;li>&lt;strong>Redirección&lt;/strong>: &lt;code>https://localhost:5001/authentication/login-callback&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Guarda los cambios y copia:
&lt;ul>
&lt;li>&lt;strong>Application (client) ID&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Directory (tenant) ID&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="paso-2-configurar-permisos-de-api">&lt;strong>Paso 2: Configurar permisos de API&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>En la sección &lt;strong>API Permissions&lt;/strong>, añade permisos para &lt;code>User.Read&lt;/code> (Microsoft Graph).&lt;/li>
&lt;li>&lt;strong>Grant Admin Consent&lt;/strong> para aplicar los permisos a todos los usuarios.&lt;/li>
&lt;/ol>
&lt;h3 id="paso-3-crear-un-cliente-secreto">&lt;strong>Paso 3: Crear un Cliente Secreto&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>Ve a &lt;strong>Certificates &amp;amp; Secrets&lt;/strong>.&lt;/li>
&lt;li>Genera un nuevo secreto y copia el valor.&lt;/li>
&lt;/ol>
&lt;h2 id="3-configuración-de-blazor-con-entra-id">3. Configuración de Blazor con Entra ID&lt;/h2>
&lt;p>Ahora que tenemos configurada la aplicación en Entra ID, podemos integrar la autenticación en Blazor.&lt;/p>
&lt;h3 id="paso-1-crear-un-proyecto-blazor-webassembly">&lt;strong>Paso 1: Crear un Proyecto Blazor WebAssembly&lt;/strong>&lt;/h3>
&lt;p>Ejecuta el siguiente comando en la terminal:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> dotnet new blazorwasm -o BlazorAuthApp --auth IndividualB2C
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cd BlazorAuthApp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-2-instalar-paquetes-necesarios">&lt;strong>Paso 2: Instalar Paquetes Necesarios&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">dotnet&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="kn">package&lt;/span> &lt;span class="nx">Microsoft&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">AspNetCore&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Authentication&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">AzureADB2C&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UI&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-3-configurar-appsettingsjson">&lt;strong>Paso 3: Configurar &lt;code>appsettings.json&lt;/code>&lt;/strong>&lt;/h3>
&lt;p>Edita el archivo &lt;code>appsettings.json&lt;/code> con la información de Entra ID:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;AzureAd&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;Instance&amp;#34;: &amp;#34;https://login.microsoftonline.com/&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;Domain&amp;#34;: &amp;#34;yourdomain.onmicrosoft.com&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;TenantId&amp;#34;: &amp;#34;your-tenant-id&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;ClientId&amp;#34;: &amp;#34;your-client-id&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;CallbackPath&amp;#34;: &amp;#34;/authentication/login-callback&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;SignedOutCallbackPath&amp;#34;: &amp;#34;/authentication/logout-callback&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-4-configurar-autenticación-en-programcs">&lt;strong>Paso 4: Configurar Autenticación en &lt;code>Program.cs&lt;/code>&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AspNetCore&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Authentication&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AspNetCore&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Authentication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">OpenIdConnect&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AspNetCore&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Authorization&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AspNetCore&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Builder&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AspNetCore&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Components&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Web&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AspNetCore&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Components&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">WebAssembly&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Hosting&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AspNetCore&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Http&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Extensions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DependencyInjection&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Extensions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Hosting&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">builder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">WebAssemblyHostBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CreateDefault&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddAuthentication&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">options&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DefaultScheme&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Cookies&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DefaultChallengeScheme&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">OpenIdConnectDefaults&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AuthenticationScheme&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">.&lt;/span>&lt;span class="n">AddOpenIdConnect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">OpenIdConnectDefaults&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AuthenticationScheme&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">options&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Authority&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;https://login.microsoftonline.com/{your-tenant-id}&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ClientId&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;your-client-id&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ResponseType&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;code&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SaveTokens&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddAuthorizationCore&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">await&lt;/span> &lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Build&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">RunAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="4-protección-de-rutas-y-gestión-de-roles">4. Protección de Rutas y Gestión de Roles&lt;/h2>
&lt;h3 id="paso-1-crear-una-página-protegida">&lt;strong>Paso 1: Crear una Página Protegida&lt;/strong>&lt;/h3>
&lt;p>Modifica &lt;code>Pages/Protected.razor&lt;/code> para permitir el acceso solo a usuarios autenticados:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@page &amp;#34;/protected&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@using Microsoft.AspNetCore.Components.Authorization
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;AuthorizeView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Authorized&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;h3&amp;gt;Bienvenido, usuario autenticado&amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;button @onclick=&amp;#34;Logout&amp;#34;&amp;gt;Cerrar Sesión&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Authorized&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;NotAuthorized&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;h3&amp;gt;Acceso Restringido&amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/NotAuthorized&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/AuthorizeView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Inject] NavigationManager Navigation { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private async Task Logout()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Navigation.NavigateTo(&amp;#34;authentication/logout&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-2-configurar-el-routeview-en-apprazor">&lt;strong>Paso 2: Configurar el &lt;code>RouteView&lt;/code> en &lt;code>App.razor&lt;/code>&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;CascadingAuthenticationState&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;AuthorizeRouteView RouteData=&amp;#34;@routeData&amp;#34; DefaultLayout=&amp;#34;typeof(MainLayout)&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/CascadingAuthenticationState&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-3-agregar-un-componente-de-login">&lt;strong>Paso 3: Agregar un Componente de Login&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;AuthorizeView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Authorized&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;button @onclick=&amp;#34;Logout&amp;#34;&amp;gt;Cerrar Sesión&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Authorized&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;NotAuthorized&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;button @onclick=&amp;#34;Login&amp;#34;&amp;gt;Iniciar Sesión&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/NotAuthorized&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/AuthorizeView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private void Login() =&amp;gt; Navigation.NavigateTo(&amp;#34;authentication/login&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private void Logout() =&amp;gt; Navigation.NavigateTo(&amp;#34;authentication/logout&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="5-conclusión">5. Conclusión&lt;/h2>
&lt;p>La integración de &lt;strong>Blazor con Microsoft Entra ID&lt;/strong> proporciona una solución robusta para la autenticación de usuarios, garantizando seguridad y facilidad de administración. Gracias a OpenID Connect y OAuth 2.0, podemos ofrecer inicio de sesión seguro y control de acceso basado en roles.&lt;/p>
&lt;h3 id="resumen">&lt;strong>Resumen:&lt;/strong>&lt;/h3>
&lt;p>✅ Configuración de &lt;strong>Microsoft Entra ID&lt;/strong> en Azure.
✅ Integración de &lt;strong>Blazor WebAssembly&lt;/strong> con Entra ID.
✅ Protección de rutas y gestión de autenticación.
✅ Implementación de un flujo de inicio y cierre de sesión seguro.&lt;/p>
&lt;p>¡Ahora puedes implementar autenticación avanzada en tus aplicaciones Blazor con Entra ID! 🚀&lt;/p></description></item><item><title>Testing unitario en Blazor: Herramientas y estrategias</title><link>https://cmas.dev/posts/2024-10-16-testing-unitario-in-blazor/</link><pubDate>Wed, 16 Oct 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-10-16-testing-unitario-in-blazor/</guid><description>&lt;p>El desarrollo de aplicaciones robustas y fiables en &lt;strong>Blazor&lt;/strong> requiere un enfoque disciplinado hacia las pruebas unitarias. Las pruebas unitarias no solo garantizan que los componentes y servicios funcionen como se espera, sino que también facilitan el mantenimiento, la detección temprana de errores y la calidad del software. En este artículo, exploraremos en detalle cómo realizar pruebas unitarias en Blazor utilizando herramientas modernas, estrategias eficaces y ejemplos prácticos.&lt;/p>
&lt;h2 id="qué-es-el-testing-unitario">¿Qué es el testing unitario?&lt;/h2>
&lt;p>El testing unitario es un tipo de prueba de software que se enfoca en verificar la funcionalidad de componentes individuales, como clases, métodos o funciones. En Blazor, esto implica probar componentes y servicios para garantizar que realicen su tarea específica de manera correcta.&lt;/p>
&lt;h3 id="beneficios-del-testing-unitario">Beneficios del testing unitario&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Detección temprana de errores&lt;/strong>:
&lt;ul>
&lt;li>Ayuda a identificar problemas en etapas iniciales del desarrollo.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Facilita el refactoring&lt;/strong>:
&lt;ul>
&lt;li>Permite realizar cambios en el código con confianza.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Mejora la calidad del software&lt;/strong>:
&lt;ul>
&lt;li>Garantiza que cada unidad de código funcione correctamente.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Documentación viva&lt;/strong>:
&lt;ul>
&lt;li>Las pruebas actúan como una guía sobre cómo debe comportarse el sistema.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="herramientas-para-testing-unitario-en-blazor">Herramientas para testing unitario en Blazor&lt;/h2>
&lt;h3 id="1-xunit">1. &lt;strong>xUnit&lt;/strong>&lt;/h3>
&lt;p>xUnit es un framework popular para pruebas unitarias en .NET. Ofrece una sintaxis simple y características avanzadas para escribir y ejecutar pruebas.&lt;/p>
&lt;p>&lt;strong>Instalación:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">dotnet&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="kn">package&lt;/span> &lt;span class="nx">xunit&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-bunit">2. &lt;strong>bUnit&lt;/strong>&lt;/h3>
&lt;p>bUnit es un framework especializado para probar componentes de Blazor. Proporciona una API fácil de usar para renderizar componentes y realizar aserciones sobre su salida.&lt;/p>
&lt;p>&lt;strong>Instalación:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">dotnet&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="kn">package&lt;/span> &lt;span class="nx">Bunit&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-moq">3. &lt;strong>Moq&lt;/strong>&lt;/h3>
&lt;p>Moq es una biblioteca de mocking que permite simular dependencias como servicios o repositorios durante las pruebas.&lt;/p>
&lt;p>&lt;strong>Instalación:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">dotnet&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="kn">package&lt;/span> &lt;span class="nx">Moq&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-fluentassertions">4. &lt;strong>FluentAssertions&lt;/strong>&lt;/h3>
&lt;p>FluentAssertions es una biblioteca que facilita escribir aserciones legibles y expresivas.&lt;/p>
&lt;p>&lt;strong>Instalación:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">dotnet&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="kn">package&lt;/span> &lt;span class="nx">FluentAssertions&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configuración-del-entorno">Configuración del entorno&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Crear un proyecto de pruebas&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet new xunit -o BlazorApp.Tests
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd BlazorApp.Tests
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Agregar referencias al proyecto principal&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet add reference ../BlazorApp/BlazorApp.csproj
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Instalar las herramientas necesarias&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">dotnet&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="kn">package&lt;/span> &lt;span class="nx">Bunit&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">dotnet&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="kn">package&lt;/span> &lt;span class="nx">Moq&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">dotnet&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="kn">package&lt;/span> &lt;span class="nx">FluentAssertions&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="estrategias-para-el-testing-unitario-en-blazor">Estrategias para el testing unitario en Blazor&lt;/h2>
&lt;h3 id="1-pruebas-de-componentes">1. &lt;strong>Pruebas de componentes&lt;/strong>&lt;/h3>
&lt;p>Probar componentes de Blazor implica verificar su renderizado, interacción y estado interno.&lt;/p>
&lt;h4 id="ejemplo-básico-prueba-de-un-componente-de-contador">Ejemplo básico: Prueba de un componente de contador&lt;/h4>
&lt;p>&lt;strong>Componente Counter.razor:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@page &amp;#34;/counter&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;h3&amp;gt;Contador&amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;p&amp;gt;Valor actual: @count&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;button @onclick=&amp;#34;Increment&amp;#34;&amp;gt;Incrementar&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private int count = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private void Increment()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> count++;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Prueba unitaria:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Bunit&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Xunit&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">CounterTests&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">Fact&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">CounterShouldIncrementWhenButtonClicked&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Configurar&lt;/span> &lt;span class="n">el&lt;/span> &lt;span class="n">contexto&lt;/span> &lt;span class="n">de&lt;/span> &lt;span class="n">pruebas&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">using&lt;/span> &lt;span class="k">var&lt;/span> &lt;span class="n">context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">TestContext&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Renderizar&lt;/span> &lt;span class="n">el&lt;/span> &lt;span class="n">componente&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">component&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">RenderComponent&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Counter&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Verificar&lt;/span> &lt;span class="n">el&lt;/span> &lt;span class="n">estado&lt;/span> &lt;span class="n">inicial&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Assert&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Valor actual: 0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">component&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Markup&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Interactuar&lt;/span> &lt;span class="n">con&lt;/span> &lt;span class="n">el&lt;/span> &lt;span class="n">componente&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">component&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;button&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Click&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Verificar&lt;/span> &lt;span class="n">el&lt;/span> &lt;span class="n">nuevo&lt;/span> &lt;span class="n">estado&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Assert&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Valor actual: 1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">component&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Markup&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-pruebas-de-servicios">2. &lt;strong>Pruebas de servicios&lt;/strong>&lt;/h3>
&lt;p>Los servicios en Blazor suelen manejar la lógica de negocio y las interacciones con APIs. Estas pruebas garantizan que los servicios funcionen correctamente.&lt;/p>
&lt;h4 id="ejemplo-servicio-de-datos">Ejemplo: Servicio de datos&lt;/h4>
&lt;p>&lt;strong>Servicio IDataService:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">public interface IDataService
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Task&amp;lt;List&amp;lt;string&amp;gt;&amp;gt; GetItemsAsync();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Implementación DataService:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">public class DataService : IDataService
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public async Task&amp;lt;List&amp;lt;string&amp;gt;&amp;gt; GetItemsAsync()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // Simulación de datos desde una API
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> await Task.Delay(100);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return new List&amp;lt;string&amp;gt; { &amp;#34;Item1&amp;#34;, &amp;#34;Item2&amp;#34;, &amp;#34;Item3&amp;#34; };
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Prueba unitaria con Moq:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Moq&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Xunit&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">FluentAssertions&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">DataServiceTests&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">Fact&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">GetItemsAsync_ShouldReturnListOfItems&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Crear&lt;/span> &lt;span class="n">un&lt;/span> &lt;span class="n">mock&lt;/span> &lt;span class="n">del&lt;/span> &lt;span class="n">servicio&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">mockService&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Mock&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">IDataService&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mockService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Setup&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetItemsAsync&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ReturnsAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="s2">&amp;#34;MockItem1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;MockItem2&amp;#34;&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Llamar&lt;/span> &lt;span class="n">al&lt;/span> &lt;span class="n">método&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">mockService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetItemsAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Verificar&lt;/span> &lt;span class="n">resultados&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Should&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">NotBeNull&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Should&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">HaveCount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Should&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Contain&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;MockItem1&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-pruebas-de-integración">3. &lt;strong>Pruebas de integración&lt;/strong>&lt;/h3>
&lt;p>Las pruebas de integración verifican cómo interactúan múltiples componentes o servicios.&lt;/p>
&lt;h4 id="ejemplo-integración-de-un-componente-con-un-servicio">Ejemplo: Integración de un componente con un servicio&lt;/h4>
&lt;p>&lt;strong>Componente ItemList.razor:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">inject&lt;/span> &lt;span class="n">IDataService&lt;/span> &lt;span class="n">DataService&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">h3&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Lista&lt;/span> &lt;span class="n">de&lt;/span> &lt;span class="n">Items&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">h3&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">ul&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">foreach&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">var&lt;/span> &lt;span class="n">item&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">Items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">li&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">li&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">ul&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">code&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">Items&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">protected&lt;/span> &lt;span class="n">override&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">OnInitializedAsync&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Items&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">DataService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetItemsAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Prueba de integración:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Bunit&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Moq&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Xunit&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">ItemListTests&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">Fact&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">ItemListShouldRenderItemsFromService&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Crear&lt;/span> &lt;span class="n">el&lt;/span> &lt;span class="n">mock&lt;/span> &lt;span class="n">del&lt;/span> &lt;span class="n">servicio&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">mockService&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Mock&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">IDataService&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mockService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Setup&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetItemsAsync&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ReturnsAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="s2">&amp;#34;Item1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Item2&amp;#34;&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Configurar&lt;/span> &lt;span class="n">el&lt;/span> &lt;span class="n">contexto&lt;/span> &lt;span class="n">de&lt;/span> &lt;span class="n">pruebas&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">using&lt;/span> &lt;span class="k">var&lt;/span> &lt;span class="n">context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">TestContext&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddSingleton&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mockService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Renderizar&lt;/span> &lt;span class="n">el&lt;/span> &lt;span class="n">componente&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">component&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">RenderComponent&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="ne">ItemList&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Verificar&lt;/span> &lt;span class="n">el&lt;/span> &lt;span class="n">contenido&lt;/span> &lt;span class="n">renderizado&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Assert&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Item1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">component&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Markup&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Assert&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Item2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">component&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Markup&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Aislar las pruebas&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Usa mocks para evitar dependencias externas.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Pruebas pequeñas y específicas&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Cada prueba debe centrarse en un solo comportamiento.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Automatización&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Integra las pruebas en un pipeline CI/CD para garantizar que se ejecuten automáticamente.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Cobertura de pruebas&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Asegúrate de cubrir tanto escenarios positivos como negativos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>El testing unitario en Blazor es esencial para garantizar la calidad y fiabilidad de las aplicaciones. Al utilizar herramientas como xUnit, bUnit, Moq y FluentAssertions, junto con estrategias efectivas, puedes construir una base sólida de pruebas que facilite el desarrollo y mantenimiento del software. ¡Empieza a implementar estas prácticas en tus proyectos Blazor hoy mismo!&lt;/p></description></item><item><title>Uso de Azure Cosmos DB en aplicaciones Blazor</title><link>https://cmas.dev/posts/2024-10-09-azure-cosmos-in-blazor/</link><pubDate>Wed, 09 Oct 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-10-09-azure-cosmos-in-blazor/</guid><description>&lt;p>&lt;strong>Azure Cosmos DB&lt;/strong> es una base de datos distribuida globalmente y altamente escalable que permite almacenar y consultar datos de forma rápida y segura. Al integrarla con aplicaciones &lt;strong>Blazor&lt;/strong>, puedes construir soluciones web modernas y dinámicas con acceso a datos en tiempo real. Este artículo ofrece un instructivo paso a paso para usar &lt;strong>Azure Cosmos DB&lt;/strong> con &lt;strong>Blazor&lt;/strong>, incluyendo ejemplos de código prácticos y buenas prácticas.&lt;/p>
&lt;h2 id="qué-es-azure-cosmos-db">¿Qué es Azure Cosmos DB?&lt;/h2>
&lt;p>Azure Cosmos DB es un servicio de base de datos NoSQL en la nube que soporta múltiples modelos de datos, como documentos, claves-valor, gráficos y tablas. Ofrece:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Escalabilidad global&lt;/strong>: Replica los datos en múltiples regiones.&lt;/li>
&lt;li>&lt;strong>Latencia baja&lt;/strong>: Respuestas en milisegundos para operaciones de lectura y escritura.&lt;/li>
&lt;li>&lt;strong>Soporte para múltiples API&lt;/strong>: Incluye SQL, MongoDB, Cassandra, Gremlin y Table.&lt;/li>
&lt;li>&lt;strong>Altamente disponible&lt;/strong>: Con acuerdos de nivel de servicio (SLA) del 99.999%.&lt;/li>
&lt;/ul>
&lt;p>Azure Cosmos DB es ideal para aplicaciones que requieren alta disponibilidad, consistencia en datos distribuidos y escalabilidad masiva.&lt;/p>
&lt;h2 id="configuración-inicial">Configuración inicial&lt;/h2>
&lt;h3 id="requisitos-previos">Requisitos previos&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Cuenta de Azure&lt;/strong>: Si no tienes una, regístrate en &lt;a href="https://portal.azure.com/">Azure Portal&lt;/a>.&lt;/li>
&lt;li>&lt;strong>Visual Studio 2022 o Visual Studio Code&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>SDK de .NET 6 o superior&lt;/strong> instalado.&lt;/li>
&lt;/ol>
&lt;h3 id="crear-una-cuenta-de-azure-cosmos-db">Crear una cuenta de Azure Cosmos DB&lt;/h3>
&lt;ol>
&lt;li>Inicia sesión en el &lt;a href="https://portal.azure.com/">portal de Azure&lt;/a>.&lt;/li>
&lt;li>Haz clic en &lt;strong>Crear un recurso&lt;/strong> &amp;gt; &lt;strong>Bases de datos&lt;/strong> &amp;gt; &lt;strong>Azure Cosmos DB&lt;/strong>.&lt;/li>
&lt;li>Selecciona el modelo de API SQL (Core).&lt;/li>
&lt;li>Proporciona los detalles necesarios:
&lt;ul>
&lt;li>&lt;strong>Nombre de la cuenta&lt;/strong>: &lt;code>blazor-cosmosdb-demo&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Grupo de recursos&lt;/strong>: Crea uno nuevo o selecciona uno existente.&lt;/li>
&lt;li>&lt;strong>Ubicación&lt;/strong>: Selecciona la región más cercana a tus usuarios.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Haz clic en &lt;strong>Revisar y crear&lt;/strong>.&lt;/li>
&lt;li>Una vez creada, accede a la cuenta de Cosmos DB y toma nota de la clave primaria y la cadena de conexión.&lt;/li>
&lt;/ol>
&lt;h2 id="crear-una-aplicación-blazor-con-cosmos-db">Crear una aplicación Blazor con Cosmos DB&lt;/h2>
&lt;h3 id="paso-1-configurar-el-proyecto-blazor">Paso 1: Configurar el proyecto Blazor&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Crea un nuevo proyecto Blazor Server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet new blazorserver -o BlazorCosmosDemo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd BlazorCosmosDemo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Instala el paquete NuGet para Azure Cosmos DB:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">dotnet&lt;/span> &lt;span class="nx">add&lt;/span> &lt;span class="kn">package&lt;/span> &lt;span class="nx">Microsoft&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Azure&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Cosmos&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Verifica que los paquetes estén instalados correctamente ejecutando:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet list package
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="paso-2-configurar-la-conexión-a-cosmos-db">Paso 2: Configurar la conexión a Cosmos DB&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Agrega las configuraciones de Cosmos DB al archivo &lt;code>appsettings.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;CosmosDb&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;AccountEndpoint&amp;#34;: &amp;#34;&amp;lt;TU_ENDPOINT&amp;gt;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;AccountKey&amp;#34;: &amp;#34;&amp;lt;TU_LLAVE&amp;gt;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;DatabaseName&amp;#34;: &amp;#34;BlazorDemoDB&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;ContainerName&amp;#34;: &amp;#34;Items&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Configura los servicios en &lt;code>Program.cs&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Azure&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Cosmos&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">builder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">WebApplication&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CreateBuilder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddSingleton&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">config&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetSection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;CosmosDb&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">CosmosClient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;AccountEndpoint&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">config&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;AccountKey&amp;#34;&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddSingleton&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CosmosDbService&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Build&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Run&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="paso-3-crear-el-servicio-cosmos-db">Paso 3: Crear el servicio Cosmos DB&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Crea una clase llamada &lt;code>CosmosDbService&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Azure&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Cosmos&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Threading&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Tasks&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">CosmosDbService&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">readonly&lt;/span> &lt;span class="n">CosmosClient&lt;/span> &lt;span class="n">_cosmosClient&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">readonly&lt;/span> &lt;span class="ne">Container&lt;/span> &lt;span class="n">_container&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">CosmosDbService&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CosmosClient&lt;/span> &lt;span class="n">cosmosClient&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">IConfiguration&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_cosmosClient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cosmosClient&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">databaseName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;CosmosDb:DatabaseName&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">containerName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;CosmosDb:ContainerName&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_container&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_cosmosClient&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetContainer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">databaseName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">containerName&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">AddItemAsync&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">T&lt;/span> &lt;span class="n">item&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">_container&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CreateItemAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">PartitionKey&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">GetItemsAsync&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">query&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">items&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">iterator&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">_container&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetItemQueryIterator&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">query&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">iterator&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">HasMoreResults&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">iterator&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ReadNextAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">items&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">DeleteItemAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">_container&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DeleteItemAsync&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">PartitionKey&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Implementa pruebas básicas para verificar la funcionalidad del servicio:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Ejemplo&lt;/span> &lt;span class="n">de&lt;/span> &lt;span class="n">prueba&lt;/span> &lt;span class="n">rápida&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">service&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">CosmosDbService&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">client&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">configuration&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">await&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddItemAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Test Item&amp;#34;&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">items&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetItemsAsync&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">dynamic&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;SELECT * FROM c&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Console&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">WriteLine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="crear-un-componente-blazor-para-interactuar-con-cosmos-db">Crear un componente Blazor para interactuar con Cosmos DB&lt;/h2>
&lt;h3 id="paso-1-crear-el-componente-itemlistrazor">Paso 1: Crear el componente &lt;code>ItemList.razor&lt;/code>&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Crea un nuevo componente llamado &lt;code>ItemList.razor&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">inject&lt;/span> &lt;span class="n">CosmosDbService&lt;/span> &lt;span class="n">CosmosDbService&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">h3&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Lista&lt;/span> &lt;span class="n">de&lt;/span> &lt;span class="n">Items&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">h3&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">button&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">onclick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;LoadItems&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Cargar&lt;/span> &lt;span class="n">Items&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">button&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">button&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">onclick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;AddNewItem&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Agregar&lt;/span> &lt;span class="n">Item&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">button&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">ul&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">foreach&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">var&lt;/span> &lt;span class="n">item&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">Items&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">li&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Name&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">button&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">onclick&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;() =&amp;gt; DeleteItem(item.Id)&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Eliminar&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">button&lt;/span>&lt;span class="o">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="n">li&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">ul&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">code&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Item&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">Items&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Item&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">LoadItems&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Items&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">CosmosDbService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetItemsAsync&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Item&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;SELECT * FROM c&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">AddNewItem&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">newItem&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Item&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">Id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Guid&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">NewGuid&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ToString&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">Name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Nuevo Item&amp;#34;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">CosmosDbService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddItemAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">newItem&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">newItem&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">LoadItems&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">DeleteItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">CosmosDbService&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DeleteItemAsync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">await&lt;/span> &lt;span class="n">LoadItems&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">Item&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="n">Id&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="n">Name&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="paso-2-agregar-el-componente-a-la-página-principal">Paso 2: Agregar el componente a la página principal&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Abre &lt;code>Pages/Index.razor&lt;/code> y agrega:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;ItemList /&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="buenas-prácticas">Buenas prácticas&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Optimiza las consultas&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Usa índices en Cosmos DB para acelerar las búsquedas.&lt;/li>
&lt;li>Realiza consultas específicas con cláusulas WHERE para evitar iteraciones innecesarias.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Manejo de errores&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Implementa bloques try-catch en las operaciones CRUD.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Paginación&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Implementa la funcionalidad de paginación para manejar grandes volúmenes de datos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Validación de datos&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Verifica y valida los datos antes de insertarlos en Cosmos DB.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Seguridad&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>No expongas directamente las claves de acceso en el cliente.&lt;/li>
&lt;li>Usa servicios de identidad como Azure Managed Identity.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Integrar &lt;strong>Azure Cosmos DB&lt;/strong> con &lt;strong>Blazor&lt;/strong> permite construir aplicaciones escalables y dinámicas con facilidad. Este artículo ha detallado un enfoque paso a paso para configurar, integrar y trabajar con &lt;strong>Cosmos DB&lt;/strong> en aplicaciones &lt;strong>Blazor&lt;/strong>, incluyendo funcionalidades avanzadas como eliminación y paginación. Con el uso de servicios bien configurados y buenas prácticas, puedes aprovechar al máximo esta poderosa base de datos en la nube. ¡Explora las posibilidades de &lt;strong>Azure Cosmos DB&lt;/strong> en tus proyectos &lt;strong>Blazor&lt;/strong> y lleva tus aplicaciones al siguiente nivel!&lt;/p></description></item><item><title>Blazor WebAssembly vs Blazor Server: ¿Cuál elegir?</title><link>https://cmas.dev/posts/2024-10-02-blazor-webassembly-vs-server/</link><pubDate>Wed, 02 Oct 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-10-02-blazor-webassembly-vs-server/</guid><description>&lt;p>&lt;strong>Blazor&lt;/strong>, el framework de desarrollo de aplicaciones web basado en &lt;strong>.NET&lt;/strong>, ofrece dos opciones principales para crear aplicaciones interactivas: &lt;strong>Blazor WebAssembly&lt;/strong> y &lt;strong>Blazor Server&lt;/strong>. Ambas tecnologías tienen sus propias fortalezas, debilidades y casos de uso ideales. En este artículo, exploraremos en detalle estas dos modalidades para ayudarte a decidir cuál se adapta mejor a tu proyecto.&lt;/p>
&lt;h2 id="qué-es-blazor">¿Qué es Blazor?&lt;/h2>
&lt;p>Blazor es un framework desarrollado por Microsoft que permite construir aplicaciones web utilizando C#. Blazor se basa en componentes reutilizables que combinan lógica de programación y diseño HTML. Una de las características más interesantes de Blazor es que permite a los desarrolladores trabajar con C# tanto en el cliente como en el servidor, eliminando la dependencia exclusiva de JavaScript.&lt;/p>
&lt;h2 id="blazor-webassembly">Blazor WebAssembly&lt;/h2>
&lt;h3 id="definición">Definición&lt;/h3>
&lt;p>Blazor WebAssembly (WASM) ejecuta aplicaciones directamente en el navegador utilizando WebAssembly. Todo el código, incluidas las dependencias .NET y la lógica de la aplicación, se descarga y ejecuta en el cliente.&lt;/p>
&lt;h3 id="características-principales">Características principales&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Ejecución en el cliente&lt;/strong>:
&lt;ul>
&lt;li>Todo el procesamiento ocurre en el navegador del usuario.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Sin dependencia del servidor&lt;/strong>:
&lt;ul>
&lt;li>Las aplicaciones pueden ejecutarse completamente offline.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Despliegue sencillo&lt;/strong>:
&lt;ul>
&lt;li>Puede alojarse en cualquier servidor web o incluso en un sistema de almacenamiento estático como Azure Blob Storage o GitHub Pages.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="código-de-ejemplo">Código de ejemplo&lt;/h3>
&lt;h4 id="componente-blazor-webassembly">Componente Blazor WebAssembly&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@page &amp;#34;/counter&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;h3&amp;gt;Contador&amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;p&amp;gt;Cuenta actual: @currentCount&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;button @onclick=&amp;#34;IncrementCount&amp;#34;&amp;gt;Incrementar&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private int currentCount = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private void IncrementCount()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> currentCount++;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ventajas">Ventajas&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Independencia del servidor&lt;/strong>:
&lt;ul>
&lt;li>Ideal para aplicaciones que necesitan trabajar offline o con una conectividad intermitente.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Escalabilidad&lt;/strong>:
&lt;ul>
&lt;li>Reduce la carga en el servidor, ya que el cliente maneja el procesamiento.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Despliegue flexible&lt;/strong>:
&lt;ul>
&lt;li>Compatible con múltiples plataformas de hosting.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="desventajas">Desventajas&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Tiempo de carga inicial&lt;/strong>:
&lt;ul>
&lt;li>La descarga de la aplicación puede ser lenta debido al tamaño de los archivos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Limitaciones del navegador&lt;/strong>:
&lt;ul>
&lt;li>Depende del soporte de WebAssembly y de los recursos disponibles en el dispositivo del usuario.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Seguridad&lt;/strong>:
&lt;ul>
&lt;li>El código ejecutado en el cliente es más susceptible a ser inspeccionado o manipulado.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="casos-de-uso-ideales">Casos de uso ideales&lt;/h3>
&lt;ul>
&lt;li>Aplicaciones que necesitan funcionar offline.&lt;/li>
&lt;li>Interfaces ricas en interactividad que dependen poco del servidor.&lt;/li>
&lt;li>Aplicaciones pequeñas o medianas donde el tamaño inicial de descarga no es un problema.&lt;/li>
&lt;/ul>
&lt;h2 id="blazor-server">Blazor Server&lt;/h2>
&lt;h3 id="definición-1">Definición&lt;/h3>
&lt;p>Blazor Server ejecuta la lógica de la aplicación en el servidor. La interfaz de usuario se actualiza en el cliente a través de una conexión en tiempo real utilizando SignalR.&lt;/p>
&lt;h3 id="características-principales-1">Características principales&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Ejecución en el servidor&lt;/strong>:
&lt;ul>
&lt;li>Todo el procesamiento ocurre en el servidor y solo se envían actualizaciones al cliente.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Rendimiento inmediato&lt;/strong>:
&lt;ul>
&lt;li>No es necesario descargar toda la aplicación al inicio.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Seguridad avanzada&lt;/strong>:
&lt;ul>
&lt;li>El código y los datos permanecen en el servidor.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="código-de-ejemplo-1">Código de ejemplo&lt;/h3>
&lt;h4 id="componente-blazor-server">Componente Blazor Server&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">page&lt;/span> &lt;span class="s2">&amp;#34;/weather&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">h3&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Pronóstico&lt;/span> &lt;span class="n">del&lt;/span> &lt;span class="n">tiempo&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">h3&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">forecasts&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">null&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Cargando&lt;/span>&lt;span class="o">...&amp;lt;/&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">table&lt;/span> &lt;span class="k">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;table&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">thead&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">tr&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">th&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Fecha&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">th&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">th&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Temperatura&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">C&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">th&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">th&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">Resumen&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">th&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">tr&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">thead&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">tbody&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">foreach&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">var&lt;/span> &lt;span class="n">forecast&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">forecasts&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">tr&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">td&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">forecast&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Date&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ToShortDateString&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">td&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">td&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">forecast&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TemperatureC&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">td&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">td&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">forecast&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Summary&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">td&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">tr&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">tbody&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">table&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">code&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">WeatherForecast&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="n">forecasts&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">protected&lt;/span> &lt;span class="n">override&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">OnInitializedAsync&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">forecasts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">Http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetFromJsonAsync&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">WeatherForecast&lt;/span>&lt;span class="p">[]&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;weatherforecast&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">WeatherForecast&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">DateTime&lt;/span> &lt;span class="n">Date&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="ne">int&lt;/span> &lt;span class="n">TemperatureC&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="n">Summary&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">get&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ventajas-1">Ventajas&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Inicio rápido&lt;/strong>:
&lt;ul>
&lt;li>La aplicación comienza a funcionar casi de inmediato.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Menor uso de recursos del cliente&lt;/strong>:
&lt;ul>
&lt;li>Ideal para dispositivos con recursos limitados.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Compatibilidad con navegadores&lt;/strong>:
&lt;ul>
&lt;li>Funciona en cualquier navegador moderno sin necesidad de soporte para WebAssembly.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="desventajas-1">Desventajas&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>Dependencia del servidor&lt;/strong>:
&lt;ul>
&lt;li>Requiere una conexión constante al servidor para funcionar.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Escalabilidad limitada&lt;/strong>:
&lt;ul>
&lt;li>Aumenta la carga en el servidor, especialmente en aplicaciones con muchos usuarios simultáneos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Latencia&lt;/strong>:
&lt;ul>
&lt;li>La experiencia del usuario puede verse afectada por una conexión lenta o inestable.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="casos-de-uso-ideales-1">Casos de uso ideales&lt;/h3>
&lt;ul>
&lt;li>Aplicaciones empresariales que requieren alta seguridad.&lt;/li>
&lt;li>Interfaces con usuarios que necesitan acceso inmediato.&lt;/li>
&lt;li>Aplicaciones que gestionan datos sensibles y complejos.&lt;/li>
&lt;/ul>
&lt;h2 id="comparación-detallada">Comparación detallada&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Característica&lt;/th>
&lt;th>Blazor WebAssembly&lt;/th>
&lt;th>Blazor Server&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Ejecución&lt;/strong>&lt;/td>
&lt;td>Cliente&lt;/td>
&lt;td>Servidor&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Tiempo de carga inicial&lt;/strong>&lt;/td>
&lt;td>Más lento&lt;/td>
&lt;td>Más rápido&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Funciona offline&lt;/strong>&lt;/td>
&lt;td>Sí&lt;/td>
&lt;td>No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Carga del servidor&lt;/strong>&lt;/td>
&lt;td>Baja&lt;/td>
&lt;td>Alta&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Requisitos del cliente&lt;/strong>&lt;/td>
&lt;td>Navegador con soporte WebAssembly&lt;/td>
&lt;td>Navegador moderno&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Conexión persistente&lt;/strong>&lt;/td>
&lt;td>No necesaria&lt;/td>
&lt;td>Necesaria&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Seguridad&lt;/strong>&lt;/td>
&lt;td>Menos seguro&lt;/td>
&lt;td>Más seguro&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="cuál-elegir">¿Cuál elegir?&lt;/h2>
&lt;p>La elección entre Blazor WebAssembly y Blazor Server depende en gran medida de los requisitos de tu proyecto. Aquí tienes una guía básica para ayudarte a decidir:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Elige Blazor WebAssembly si&amp;hellip;&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Necesitas que la aplicación funcione offline.&lt;/li>
&lt;li>Quieres reducir la carga en el servidor.&lt;/li>
&lt;li>Estás desarrollando una aplicación que puede tolerar tiempos de carga inicial más largos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Elige Blazor Server si&amp;hellip;&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Estás creando una aplicación empresarial con datos sensibles.&lt;/li>
&lt;li>Necesitas una experiencia de usuario inmediata sin descargas pesadas.&lt;/li>
&lt;li>El entorno tiene una conectividad constante y fiable.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>&lt;strong>Blazor WebAssembly&lt;/strong> y &lt;strong>Blazor Server&lt;/strong> son dos tecnologías potentes y flexibles que cubren diferentes necesidades. &lt;strong>Blazor WebAssembly&lt;/strong> es ideal para aplicaciones independientes del servidor con requisitos offline, mientras que &lt;strong>Blazor Server&lt;/strong> sobresale en aplicaciones empresariales que necesitan alta seguridad y rendimiento inmediato. Evalúa las necesidades específicas de tu proyecto, el entorno de tus usuarios y los recursos disponibles para tomar la mejor decisión.&lt;/p></description></item><item><title>Blazor WebAssembly con .NET 9: Nuevas características y mejoras</title><link>https://cmas.dev/posts/2024-07-10-blazor-wa-dotnet-9/</link><pubDate>Wed, 10 Jul 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-07-10-blazor-wa-dotnet-9/</guid><description>&lt;p>&lt;strong>Blazor WebAssembly&lt;/strong> ha sido una de las tecnologías más populares en el desarrollo de aplicaciones web interactivas con &lt;strong>C#&lt;/strong> en lugar de &lt;strong>JavaScript&lt;/strong>. Con la llegada de &lt;strong>.NET 9&lt;/strong>, &lt;strong>Blazor WebAssembly&lt;/strong> ha incorporado nuevas características y mejoras que optimizan tanto el rendimiento como la experiencia de desarrollo. En este artículo, exploraremos estas nuevas capacidades con ejemplos prácticos y detallaremos cómo sacarles el máximo provecho.&lt;/p>
&lt;h2 id="introducción">Introducción&lt;/h2>
&lt;p>Blazor WebAssembly (WASM) es una tecnología que permite ejecutar aplicaciones .NET en el navegador utilizando WebAssembly. Esto proporciona una experiencia de desarrollo unificada para aplicaciones web, permitiendo reutilizar código entre el cliente y el servidor. .NET 9 amplía este potencial al mejorar significativamente el rendimiento, la interoperabilidad con JavaScript, la integración con otras plataformas como .NET MAUI, y al simplificar la arquitectura de las aplicaciones modernas.&lt;/p>
&lt;h2 id="principales-características-nuevas-en-blazor-webassembly-con-net-9">Principales características nuevas en Blazor WebAssembly con .NET 9&lt;/h2>
&lt;h3 id="1-optimización-del-rendimiento-en-tiempo-de-carga">1. Optimización del rendimiento en tiempo de carga&lt;/h3>
&lt;p>Una de las prioridades en .NET 9 ha sido reducir los tiempos de arranque de las aplicaciones. A través de mejoras en la compresión de recursos, AOT (Ahead-Of-Time Compilation) y reducción de dependencias innecesarias, las aplicaciones ahora inician de forma más ágil.&lt;/p>
&lt;h3 id="2-compilación-aot-mejorada">2. Compilación AOT mejorada&lt;/h3>
&lt;p>.NET 9 permite compilar completamente la aplicación a WebAssembly de forma anticipada. Esto significa que el tiempo de carga se reduce y el rendimiento de ejecución es más cercano a código nativo.&lt;/p>
&lt;p>&lt;strong>Configuración en el .csproj&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;PropertyGroup&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RunAOTCompilation&amp;gt;true&amp;lt;/RunAOTCompilation&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/PropertyGroup&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-interoperabilidad-javascript-bidireccional-mejorada">3. Interoperabilidad JavaScript bidireccional mejorada&lt;/h3>
&lt;p>Con .NET 9, se introducen nuevas APIs para facilitar la interoperabilidad con JavaScript, permitiendo una integración más fluida entre Blazor y librerías del ecosistema JS como Chart.js, Leaflet, entre otras.&lt;/p>
&lt;p>&lt;strong>Ejemplo de invocación desde JavaScript hacia Blazor&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">DotNet.invokeMethodAsync(&amp;#34;BlazorWasmExample&amp;#34;, &amp;#34;Metodoblazor&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> .then(result =&amp;gt; console.log(result));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-standalone-components-y-mejora-en-la-modularidad">4. Standalone Components y mejora en la modularidad&lt;/h3>
&lt;p>Ahora los componentes pueden desarrollarse sin necesidad de estar dentro de un &lt;code>Razor Component Library&lt;/code> o de depender de un &lt;code>App.razor&lt;/code>, facilitando su reutilización en entornos como MAUI o WASI.&lt;/p>
&lt;h3 id="5-mejor-integración-con-net-maui">5. Mejor integración con .NET MAUI&lt;/h3>
&lt;p>Las aplicaciones Blazor ahora pueden ejecutarse de forma híbrida en dispositivos móviles y escritorio con .NET MAUI. Esto unifica aún más el desarrollo multiplataforma.&lt;/p>
&lt;h3 id="6-lazy-loading-de-ensamblados-optimizado">6. Lazy Loading de ensamblados optimizado&lt;/h3>
&lt;p>La descarga bajo demanda de ensamblados ahora es más eficiente, permitiendo dividir la aplicación en módulos que se cargan dinámicamente.&lt;/p>
&lt;p>&lt;strong>Ejemplo de configuración&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">builder.Services.AddTransient(sp =&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> new LazyAssemblyLoader(sp.GetRequiredService&amp;lt;IJSRuntime&amp;gt;()));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="caso-práctico-creación-de-una-aplicación-con-blazor-wasm-y-net-9">Caso práctico: Creación de una aplicación con Blazor WASM y .NET 9&lt;/h2>
&lt;h3 id="paso-1-crear-el-proyecto-base">Paso 1: Crear el proyecto base&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">dotnet new blazorwasm -n DemoWasmNet9 -f net9.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-2-activar-aot-y-trimming">Paso 2: Activar AOT y trimming&lt;/h3>
&lt;p>Agrega en &lt;code>DemoWasmNet9.csproj&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;PropertyGroup&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;RunAOTCompilation&amp;gt;true&amp;lt;/RunAOTCompilation&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;PublishTrimmed&amp;gt;true&amp;lt;/PublishTrimmed&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/PropertyGroup&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-3-usar-interoperabilidad-mejorada-con-js">Paso 3: Usar interoperabilidad mejorada con JS&lt;/h3>
&lt;p>En &lt;code>Pages/Index.razor&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@inject IJSRuntime JS
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;button @onclick=&amp;#34;MostrarMensaje&amp;#34;&amp;gt;Alerta JS&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private async Task MostrarMensaje() {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> await JS.InvokeVoidAsync(&amp;#34;alert&amp;#34;, &amp;#34;¡Hola desde Blazor con .NET 9!&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="buenas-prácticas-con-blazor-webassembly-en-net-9">Buenas prácticas con Blazor WebAssembly en .NET 9&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Minimizar el uso de librerías grandes de terceros&lt;/strong> cuando no son necesarias.&lt;/li>
&lt;li>&lt;strong>Utilizar lazy loading de rutas y componentes&lt;/strong> para mejorar la experiencia inicial del usuario.&lt;/li>
&lt;li>&lt;strong>Aplicar almacenamiento local con &lt;code>localStorage&lt;/code> o &lt;code>IndexedDB&lt;/code>&lt;/strong> para evitar solicitudes innecesarias.&lt;/li>
&lt;li>&lt;strong>Medir y optimizar con herramientas como Lighthouse, Application Insights o Web Vitals&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Blazor WebAssembly con .NET 9 representa una evolución significativa en la forma de construir aplicaciones web modernas con .NET. Gracias a sus mejoras en compilación, rendimiento, interoperabilidad y soporte multiplataforma, los desarrolladores pueden crear soluciones rápidas, seguras y altamente reutilizables.&lt;/p>
&lt;p>Esta versión reafirma el compromiso de Microsoft con una plataforma unificada, flexible y lista para la nube y el cliente. Es el momento ideal para adoptar Blazor si aún no lo has hecho, o para actualizar tus aplicaciones actuales y aprovechar las ventajas que ofrece .NET 9.&lt;/p></description></item><item><title>Optimización de rendimiento en Blazor WebAssembly: Estrategias y buenas prácticas con .NET</title><link>https://cmas.dev/posts/2024-07-03-blazor-performance-optimization/</link><pubDate>Wed, 03 Jul 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-07-03-blazor-performance-optimization/</guid><description>&lt;p>&lt;strong>Blazor WebAssembly&lt;/strong> ha revolucionado el desarrollo de aplicaciones web modernas, permitiendo ejecutar aplicaciones &lt;strong>.NET&lt;/strong> directamente en el navegador utilizando &lt;strong>WebAssembly&lt;/strong>. Aunque &lt;strong>Blazor WebAssembly&lt;/strong> ofrece una excelente experiencia de usuario y una integración perfecta con &lt;strong>.NET&lt;/strong>, es crucial aplicar estrategias y buenas prácticas de optimización para asegurar que nuestras aplicaciones funcionen de manera eficiente, especialmente cuando se trata de aplicaciones grandes y complejas.&lt;/p>
&lt;p>En este artículo, exploraremos estrategias y técnicas de optimización para mejorar el rendimiento de aplicaciones &lt;strong>Blazor WebAssembly&lt;/strong> usando &lt;strong>.NET 8&lt;/strong>, con ejemplos prácticos de código y buenas prácticas.&lt;/p>
&lt;h2 id="1-entender-cómo-funciona-blazor-webassembly">1. &lt;strong>Entender cómo funciona Blazor WebAssembly&lt;/strong>&lt;/h2>
&lt;p>Blazor WebAssembly permite ejecutar aplicaciones .NET directamente en el navegador mediante WebAssembly, una tecnología que permite ejecutar código compilado en el navegador de forma segura y eficiente. A diferencia de Blazor Server, que realiza la lógica de la aplicación en el servidor y se comunica con el cliente a través de SignalR, Blazor WebAssembly ejecuta todo en el cliente. Esto puede mejorar la latencia y la experiencia del usuario, pero también introduce desafíos en términos de rendimiento.&lt;/p>
&lt;h3 id="características-clave-de-blazor-webassembly">Características clave de Blazor WebAssembly:&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Ejecución en el cliente&lt;/strong>: El código .NET se ejecuta directamente en el navegador, lo que permite que la lógica de la aplicación no dependa del servidor para su ejecución.&lt;/li>
&lt;li>&lt;strong>Uso de WebAssembly&lt;/strong>: Blazor WebAssembly aprovecha WebAssembly para ejecutar código en el navegador a una velocidad casi nativa.&lt;/li>
&lt;li>&lt;strong>Interoperabilidad con JavaScript&lt;/strong>: Aunque Blazor WebAssembly se ejecuta en .NET, también puede interoperar con JavaScript para acceder a las capacidades del navegador que no están disponibles de forma nativa en .NET.&lt;/li>
&lt;/ul>
&lt;h2 id="2-estrategias-de-optimización-para-blazor-webassembly">2. &lt;strong>Estrategias de optimización para Blazor WebAssembly&lt;/strong>&lt;/h2>
&lt;h3 id="21-reducir-el-tamaño-de-la-carga-inicial">2.1 &lt;strong>Reducir el tamaño de la carga inicial&lt;/strong>&lt;/h3>
&lt;p>Uno de los principales desafíos de las aplicaciones Blazor WebAssembly es el tiempo de carga inicial. Cuando un usuario visita una aplicación Blazor WebAssembly, el navegador tiene que descargar la aplicación completa (incluyendo el ensamblado .NET y las bibliotecas necesarias).&lt;/p>
&lt;h4 id="estrategias-para-reducir-el-tamaño-de-la-carga-inicial">Estrategias para reducir el tamaño de la carga inicial:&lt;/h4>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Habilitar la compresión de archivos&lt;/strong>:
Asegúrate de que los archivos de la aplicación Blazor estén comprimidos. Esto se puede hacer fácilmente configurando la compresión en el servidor (por ejemplo, mediante GZIP o Brotli en un servidor como Nginx o Azure).&lt;/p>
&lt;p>&lt;strong>Ejemplo en Azure&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>En la configuración de tu aplicación en Azure, habilita la compresión para archivos &lt;code>.blazor&lt;/code>, &lt;code>.wasm&lt;/code>, y otros archivos estáticos.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Dividir el código en fragmentos más pequeños&lt;/strong>:
Al usar la opción de &lt;strong>Lazy Loading&lt;/strong>, puedes cargar solo las partes necesarias de la aplicación en lugar de cargar toda la aplicación al inicio.&lt;/p>
&lt;p>&lt;strong>Ejemplo de Lazy Loading en Blazor&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">builder.Services.AddBlazorWebAssemblyLazyLoad();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto puede ser útil cuando se tiene una aplicación con muchas rutas y componentes pesados.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Optimizar los archivos WebAssembly&lt;/strong>:
Utiliza el compilador de .NET para optimizar el código WebAssembly para el entorno de producción. En .NET 8, esto se puede lograr configurando el &lt;code>PublishTrimmed&lt;/code> y &lt;code>OptimizeForSize&lt;/code> en el archivo &lt;code>.csproj&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;PropertyGroup&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;PublishTrimmed&amp;gt;true&amp;lt;/PublishTrimmed&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;OptimizeForSize&amp;gt;true&amp;lt;/OptimizeForSize&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/PropertyGroup&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto elimina código no utilizado y reduce el tamaño del archivo &lt;code>.wasm&lt;/code>.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="22-optimización-de-la-carga-de-recursos">2.2 &lt;strong>Optimización de la carga de recursos&lt;/strong>&lt;/h3>
&lt;p>Los recursos de la aplicación, como imágenes, hojas de estilo y scripts adicionales, deben ser optimizados para reducir la latencia.&lt;/p>
&lt;h4 id="buenas-prácticas-para-la-carga-de-recursos">Buenas prácticas para la carga de recursos:&lt;/h4>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Minificación de CSS y JavaScript&lt;/strong>:
Asegúrate de que todos los archivos CSS y JavaScript estén minificados. Esto reducirá el tamaño de los archivos y mejorará los tiempos de carga.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Uso de imágenes optimizadas&lt;/strong>:
Utiliza formatos de imágenes modernos como WebP y SVG, que son más eficientes en cuanto a tamaño que los tradicionales JPEG y PNG.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Pre-carga de recursos críticos&lt;/strong>:
Utiliza técnicas de pre-carga (por ejemplo, con el atributo &lt;code>rel=&amp;quot;preload&amp;quot;&lt;/code> en los enlaces de los recursos importantes como las hojas de estilo y scripts) para cargar estos recursos antes de que sean necesarios en la aplicación.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">link&lt;/span> &lt;span class="n">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;preload&amp;#34;&lt;/span> &lt;span class="n">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;styles.css&amp;#34;&lt;/span> &lt;span class="n">as&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;style&amp;#34;&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">link&lt;/span> &lt;span class="n">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;preload&amp;#34;&lt;/span> &lt;span class="n">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;script.js&amp;#34;&lt;/span> &lt;span class="n">as&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;script&amp;#34;&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="23-optimización-de-la-ejecución-en-el-navegador">2.3 &lt;strong>Optimización de la ejecución en el navegador&lt;/strong>&lt;/h3>
&lt;p>Al ejecutar Blazor WebAssembly, el código .NET debe ejecutarse en el navegador, lo que puede consumir recursos. Existen estrategias para optimizar la ejecución en el cliente.&lt;/p>
&lt;h4 id="estrategias-de-optimización-para-la-ejecución">Estrategias de optimización para la ejecución:&lt;/h4>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Uso eficiente de los hilos&lt;/strong>:
Blazor WebAssembly se ejecuta en un solo hilo en el navegador. Para evitar bloqueos y mejorar el rendimiento, asegúrate de no bloquear el hilo principal. Utiliza &lt;code>Task.Run()&lt;/code> y &lt;code>async/await&lt;/code> adecuadamente para las operaciones de larga duración.&lt;/p>
&lt;p>&lt;strong>Ejemplo de ejecución asincrónica&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="n">async&lt;/span> &lt;span class="n">Task&lt;/span> &lt;span class="n">LoadDataAsync&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">var&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">await&lt;/span> &lt;span class="n">Http&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetFromJsonAsync&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">MyData&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;api/data&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">StateHasChanged&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Reducir la cantidad de renderizados&lt;/strong>:
Blazor WebAssembly utiliza un modelo de renderizado basado en la actualización de los componentes. Cada vez que un estado de la aplicación cambia, el componente se vuelve a renderizar. Para optimizar el rendimiento, reduce la cantidad de cambios de estado y actualiza solo cuando sea necesario.&lt;/p>
&lt;p>&lt;strong>Ejemplo de optimización de renderizado&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">// Evitar un renderizado innecesario
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">private async Task OnClickAsync()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (someCondition)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // Solo actualizar si realmente es necesario
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> await InvokeAsync(StateHasChanged);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="24-uso-de-técnicas-de-almacenamiento-en-caché">2.4 &lt;strong>Uso de técnicas de almacenamiento en caché&lt;/strong>&lt;/h3>
&lt;p>El almacenamiento en caché puede mejorar significativamente el rendimiento de una aplicación Blazor WebAssembly al reducir la necesidad de cargar datos o archivos repetidos desde el servidor.&lt;/p>
&lt;h4 id="buenas-prácticas-para-almacenamiento-en-caché">Buenas prácticas para almacenamiento en caché:&lt;/h4>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Almacenar datos en &lt;code>localStorage&lt;/code> o &lt;code>sessionStorage&lt;/code>&lt;/strong>:
Utiliza &lt;code>localStorage&lt;/code> o &lt;code>sessionStorage&lt;/code> para almacenar datos que se deben acceder rápidamente sin necesidad de hacer nuevas solicitudes al servidor.&lt;/p>
&lt;p>&lt;strong>Ejemplo de uso de &lt;code>localStorage&lt;/code>&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">public void StoreDataInLocalStorage(string key, string data)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> JSRuntime.InvokeVoidAsync(&amp;#34;localStorage.setItem&amp;#34;, key, data);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">public async Task&amp;lt;string&amp;gt; GetDataFromLocalStorage(string key)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return await JSRuntime.InvokeAsync&amp;lt;string&amp;gt;(&amp;#34;localStorage.getItem&amp;#34;, key);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Caching de API REST&lt;/strong>:
Si tu aplicación realiza muchas solicitudes a una API, puedes usar técnicas de almacenamiento en caché como Service Workers para cachear respuestas de API, reduciendo el tiempo de carga.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="3-conclusión">3. &lt;strong>Conclusión&lt;/strong>&lt;/h2>
&lt;p>La optimización del rendimiento en Blazor WebAssembly es crucial para proporcionar una experiencia de usuario rápida y fluida. Aplicando las estrategias mencionadas, como la reducción del tamaño de la carga inicial, la optimización de recursos, la mejora en la ejecución del código y el uso de almacenamiento en caché, se puede lograr un rendimiento mucho más eficiente en aplicaciones Blazor. Además, la configuración adecuada de la infraestructura, como la compresión y el uso de técnicas de Lazy Loading, p&amp;hellip;&lt;/p>
&lt;p>Implementando estas buenas prácticas y aprovechando las características avanzadas de .NET 8, es posible crear aplicaciones Blazor WebAssembly rápidas, escalables y con una experiencia de usuario optimizada.&lt;/p></description></item><item><title>Autenticación y autorización en Blazor WebAssembly con Microsoft Entra ID</title><link>https://cmas.dev/posts/2024-06-26-identity-blazor-wa-entra/</link><pubDate>Wed, 26 Jun 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-06-26-identity-blazor-wa-entra/</guid><description>&lt;p>&lt;strong>Blazor WebAssembly&lt;/strong> es una tecnología poderosa dentro del ecosistema &lt;strong>.NET&lt;/strong> que permite construir aplicaciones web interactivas completamente en C#. Para aplicaciones empresariales y seguras, la autenticación y autorización son aspectos fundamentales. &lt;strong>Microsoft Entra ID&lt;/strong> (anteriormente Azure Active Directory) proporciona una solución confiable y escalable para la gestión de identidad. En este artículo, exploraremos cómo integrar autenticación y autorización en una aplicación &lt;strong>Blazor WebAssembly&lt;/strong> utilizando &lt;strong>.NET 8&lt;/strong> y &lt;strong>Microsoft Entra ID&lt;/strong>.&lt;/p>
&lt;h2 id="requisitos-previos">Requisitos previos&lt;/h2>
&lt;p>Antes de comenzar, asegúrate de contar con lo siguiente:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>.NET 8 SDK&lt;/strong> instalado en tu sistema.&lt;/li>
&lt;li>&lt;strong>Cuenta de Azure&lt;/strong> con acceso a Microsoft Entra ID.&lt;/li>
&lt;li>&lt;strong>Visual Studio 2022&lt;/strong> o Visual Studio Code.&lt;/li>
&lt;li>&lt;strong>Azure CLI&lt;/strong> instalado para la configuración de la identidad.&lt;/li>
&lt;/ul>
&lt;h2 id="creación-de-la-aplicación-blazor-webassembly">Creación de la aplicación Blazor WebAssembly&lt;/h2>
&lt;p>Para iniciar, crearemos una nueva aplicación Blazor WebAssembly con soporte para autenticación de Microsoft Entra ID.&lt;/p>
&lt;p>Ejecuta el siguiente comando en la terminal:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> dotnet new blazorwasm -o BlazorAuthApp --auth IndividualB2C
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cd BlazorAuthApp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto genera una aplicación Blazor WebAssembly con autenticación preconfigurada.&lt;/p>
&lt;h2 id="configuración-de-microsoft-entra-id">Configuración de Microsoft Entra ID&lt;/h2>
&lt;h3 id="1-registrar-la-aplicación-en-azure">1. Registrar la aplicación en Azure&lt;/h3>
&lt;ol>
&lt;li>Accede al portal de Azure.&lt;/li>
&lt;li>Dirígete a &lt;strong>Microsoft Entra ID&lt;/strong>.&lt;/li>
&lt;li>Ve a &lt;strong>Registros de Aplicaciones&lt;/strong> y selecciona &lt;strong>Nueva Aplicación&lt;/strong>.&lt;/li>
&lt;li>Ingresa un nombre y elige &lt;strong>Cuentas en cualquier directorio organizacional&lt;/strong>.&lt;/li>
&lt;li>Configura la URL de redirección como &lt;code>https://localhost:5001/authentication/login-callback&lt;/code>.&lt;/li>
&lt;li>Guarda la aplicación y copia el &lt;strong>Application (client) ID&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;h3 id="2-configurar-los-permisos-de-la-api">2. Configurar los permisos de la API&lt;/h3>
&lt;ol>
&lt;li>Dentro del registro de la aplicación, ve a &lt;strong>Permisos de API&lt;/strong>.&lt;/li>
&lt;li>Agrega los siguientes permisos:
&lt;ul>
&lt;li>&lt;code>openid&lt;/code>&lt;/li>
&lt;li>&lt;code>profile&lt;/code>&lt;/li>
&lt;li>&lt;code>email&lt;/code>&lt;/li>
&lt;li>&lt;code>User.Read&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Concede el consentimiento del administrador.&lt;/li>
&lt;/ol>
&lt;h3 id="3-configurar-los-secretos-del-cliente">3. Configurar los secretos del cliente&lt;/h3>
&lt;ol>
&lt;li>Ve a &lt;strong>Certificados y secretos&lt;/strong>.&lt;/li>
&lt;li>Genera un nuevo secreto de cliente y copia su valor.&lt;/li>
&lt;/ol>
&lt;h2 id="integración-de-la-autenticación-en-blazor-webassembly">Integración de la autenticación en Blazor WebAssembly&lt;/h2>
&lt;h3 id="configurar-appsettingsjson">Configurar appsettings.json&lt;/h3>
&lt;p>Modifica &lt;code>wwwroot/appsettings.json&lt;/code> para agregar la configuración de Microsoft Entra ID:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;AzureAd&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;Authority&amp;#34;: &amp;#34;https://login.microsoftonline.com/{tenant_id}&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;ClientId&amp;#34;: &amp;#34;{client_id}&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;ValidateAuthority&amp;#34;: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Reemplaza &lt;code>{tenant_id}&lt;/code> y &lt;code>{client_id}&lt;/code> con los valores de tu aplicación en Azure.&lt;/p>
&lt;h3 id="configurar-autenticación-en-programcs">Configurar autenticación en Program.cs&lt;/h3>
&lt;p>Edita &lt;code>Program.cs&lt;/code> para habilitar la autenticación:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AspNetCore&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Components&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Web&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AspNetCore&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Components&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">WebAssembly&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Authentication&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">Microsoft&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AspNetCore&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Components&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">WebAssembly&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Hosting&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">using&lt;/span> &lt;span class="n">BlazorAuthApp&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span> &lt;span class="n">builder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">WebAssemblyHostBuilder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CreateDefault&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddAuthorizationCore&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AddMsalAuthentication&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">options&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Bind&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;AzureAd&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">options&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ProviderOptions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Authentication&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">await&lt;/span> &lt;span class="n">builder&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Build&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">RunAsync&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto permite que Blazor WebAssembly use Microsoft Entra ID para autenticación.&lt;/p>
&lt;h3 id="agregar-control-de-autenticación-en-la-ui">Agregar control de autenticación en la UI&lt;/h3>
&lt;p>Modifica &lt;code>MainLayout.razor&lt;/code> para incluir botones de inicio de sesión y cierre de sesión:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;AuthorizeView&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;Authorized&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;p&amp;gt;Bienvenido, @context.User.Identity.Name!&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;button @onclick=&amp;#34;(() =&amp;gt; Navigation.NavigateTo(&amp;#39;authentication/logout&amp;#39;))&amp;#34;&amp;gt;Cerrar sesión&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/Authorized&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;NotAuthorized&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;button @onclick=&amp;#34;(() =&amp;gt; Navigation.NavigateTo(&amp;#39;authentication/login&amp;#39;))&amp;#34;&amp;gt;Iniciar sesión&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/NotAuthorized&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/AuthorizeView&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto mostrará diferentes opciones dependiendo del estado de autenticación del usuario.&lt;/p>
&lt;h2 id="implementar-autorización-basada-en-roles">Implementar Autorización basada en Roles&lt;/h2>
&lt;p>Para restringir el acceso a componentes específicos según roles, puedes modificar el componente Blazor de la siguiente manera:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;AuthorizeView Roles=&amp;#34;Admin&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;p&amp;gt;Contenido exclusivo para administradores.&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/AuthorizeView&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Esto garantiza que solo los usuarios con el rol &amp;ldquo;Admin&amp;rdquo; puedan ver el contenido.&lt;/p>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Hemos configurado una aplicación &lt;strong>Blazor WebAssembly&lt;/strong> para autenticarse con &lt;strong>Microsoft Entra ID&lt;/strong> y hemos implementado autorización basada en roles. Esta configuración permite construir aplicaciones seguras y escalables en el ecosistema Microsoft.&lt;/p>
&lt;p>Con estos pasos, ahora puedes extender tu aplicación agregando más protecciones y permisos según las necesidades de tu proyecto.&lt;/p></description></item><item><title>Despliegue de aplicaciones Blazor en Azure App Services</title><link>https://cmas.dev/posts/2024-04-17-deploy-blazor-apps-azure/</link><pubDate>Wed, 17 Apr 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-04-17-deploy-blazor-apps-azure/</guid><description>&lt;p>El despliegue de aplicaciones Blazor en Azure App Services ofrece una forma rápida y eficiente de llevar tus proyectos al entorno de producción. Azure proporciona escalabilidad, seguridad y opciones flexibles para automatizar el flujo de trabajo de despliegue. En este artículo, exploramos tres métodos clave: usando Visual Studio, la CLI de Azure, y GitHub Actions, con pasos prácticos y ejemplos detallados. Con las mejoras de .NET 8, las aplicaciones Blazor ahora son más rápidas y optimizadas para la nube, lo que facilita la entrega de soluciones web escalables y modernas.&lt;/p>
&lt;h2 id="introducción">Introducción&lt;/h2>
&lt;p>Desplegar aplicaciones Blazor en &lt;strong>Azure App Services&lt;/strong> es una solución sencilla y eficiente para llevar tus aplicaciones web al entorno de producción. Azure proporciona escalabilidad, seguridad y herramientas integradas para un despliegue rápido. En este artículo, exploraremos cómo configurar y desplegar una aplicación Blazor, incluyendo pasos prácticos y ejemplos detallados. Con &lt;strong>.NET 8&lt;/strong>, el rendimiento y la optimización de aplicaciones Blazor han mejorado significativamente, facilitando el despliegue en la nube.&lt;/p>
&lt;hr>
&lt;h2 id="prerrequisitos">Prerrequisitos&lt;/h2>
&lt;p>Antes de comenzar, asegúrate de contar con lo siguiente:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>.NET SDK 8&lt;/strong> instalado en tu máquina.&lt;/li>
&lt;li>Una cuenta de &lt;strong>Azure&lt;/strong>.&lt;/li>
&lt;li>Azure CLI instalada y configurada.&lt;/li>
&lt;li>Una aplicación Blazor lista para ser desplegada.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="paso-1-crear-una-aplicación-blazor">Paso 1: Crear una aplicación Blazor&lt;/h2>
&lt;p>Primero, crea una aplicación Blazor WebAssembly básica si no tienes una ya:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">dotnet new blazorwasm -o BlazorApp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> BlazorApp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dotnet build
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ejecuta el proyecto para verificar que funciona correctamente:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">dotnet run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Accede a &lt;code>http://localhost:5000&lt;/code> para comprobar que la aplicación se ejecuta correctamente.&lt;/p>
&lt;hr>
&lt;h2 id="paso-2-configurar-azure-app-service">Paso 2: Configurar Azure App Service&lt;/h2>
&lt;h3 id="21-acceder-al-portal-de-azure">&lt;strong>2.1 Acceder al portal de Azure&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>Ve al &lt;a href="https://portal.azure.com">Portal de Azure&lt;/a> e inicia sesión con tu cuenta.&lt;/li>
&lt;li>En la barra de búsqueda superior, escribe &amp;ldquo;App Services&amp;rdquo; y selecciona la opción &lt;strong>App Services&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;h3 id="22-crear-un-nuevo-app-service">&lt;strong>2.2 Crear un nuevo App Service&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Haz clic en el botón &lt;strong>Crear&lt;/strong> en la parte superior.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Aparecerá un formulario de configuración donde debes proporcionar la siguiente información:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Suscripción&lt;/strong>: Selecciona tu suscripción activa.&lt;/li>
&lt;li>&lt;strong>Grupo de recursos&lt;/strong>: Crea uno nuevo o elige un grupo existente.&lt;/li>
&lt;li>&lt;strong>Nombre de la aplicación&lt;/strong>: Introduce un nombre único, por ejemplo, &lt;code>blazor-app-deploy&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Publicación&lt;/strong>: Selecciona &lt;strong>Código&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Pila de ejecución&lt;/strong>: Elige &lt;strong>.NET 8&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Sistema operativo&lt;/strong>: Selecciona &lt;strong>Windows&lt;/strong> o &lt;strong>Linux&lt;/strong> según tu preferencia.&lt;/li>
&lt;li>&lt;strong>Plan de App Service&lt;/strong>: Crea uno nuevo o selecciona un plan existente.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Haz clic en &lt;strong>Revisar + Crear&lt;/strong> y luego en &lt;strong>Crear&lt;/strong> para iniciar la implementación del App Service.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="23-validar-la-creación-del-app-service">&lt;strong>2.3 Validar la creación del App Service&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>Una vez creada, verás un mensaje de confirmación en la parte superior del portal.&lt;/li>
&lt;li>Haz clic en &lt;strong>Ir al recurso&lt;/strong> para acceder al panel del App Service.&lt;/li>
&lt;/ol>
&lt;h3 id="24-configurar-las-opciones-del-app-service">&lt;strong>2.4 Configurar las opciones del App Service&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>En el panel del App Service, selecciona &lt;strong>Configuración&lt;/strong> en el menú lateral.&lt;/li>
&lt;li>Verifica que la versión de .NET sea la correcta (&lt;strong>.NET 8&lt;/strong>).&lt;/li>
&lt;li>Configura las variables de entorno necesarias para tu aplicación (si aplica) en la pestaña &lt;strong>Configuración de aplicaciones&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;h3 id="25-obtener-la-url-del-app-service">&lt;strong>2.5 Obtener la URL del App Service&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>En el panel principal del App Service, encuentra el enlace de &lt;strong>URL predeterminada&lt;/strong>.&lt;/li>
&lt;li>Esta será la dirección donde se alojará tu aplicación una vez desplegada.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="paso-3-publicar-la-aplicación-desde-visual-studio">Paso 3: Publicar la aplicación desde Visual Studio&lt;/h2>
&lt;ol>
&lt;li>Abre tu proyecto Blazor en &lt;strong>Visual Studio&lt;/strong>.&lt;/li>
&lt;li>Haz clic derecho en el proyecto y selecciona &lt;strong>Publicar&lt;/strong>.&lt;/li>
&lt;li>Selecciona &lt;strong>App Service (Windows)&lt;/strong> o &lt;strong>App Service (Linux)&lt;/strong> según tu configuración.&lt;/li>
&lt;li>Inicia sesión en tu cuenta de Azure.&lt;/li>
&lt;li>Selecciona el App Service creado previamente.&lt;/li>
&lt;li>Haz clic en &lt;strong>Publicar&lt;/strong> y espera a que finalice el proceso.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="paso-4-usar-azure-cli-para-el-despliegue">Paso 4: Usar Azure CLI para el despliegue&lt;/h2>
&lt;p>Si prefieres usar la CLI, sigue estos pasos:&lt;/p>
&lt;ol>
&lt;li>Publica la aplicación localmente:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">dotnet publish -c Release
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Crea un recurso de App Service en Azure si aún no lo has hecho:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">az webapp create --name blazor-app-deploy --resource-group &amp;lt;tu-grupo&amp;gt; --plan &amp;lt;tu-plan&amp;gt; --runtime &lt;span class="s2">&amp;#34;DOTNET-8.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Despliega la aplicación:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">az webapp deploy --resource-group &amp;lt;tu-grupo&amp;gt; --name blazor-app-deploy --src-path ./bin/Release/net8.0/publish
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Accede a la URL proporcionada por Azure para ver tu aplicación.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="paso-5-configurar-cicd-con-github-actions">Paso 5: Configurar CI/CD con GitHub Actions&lt;/h2>
&lt;p>Automatiza el despliegue utilizando GitHub Actions:&lt;/p>
&lt;ol>
&lt;li>Crea un archivo llamado &lt;code>.github/workflows/azure-webapp.yml&lt;/code> en tu repositorio.&lt;/li>
&lt;li>Añade la siguiente configuración:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy Blazor App to Azure&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">main&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">build-and-deploy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Setup .NET&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/setup-dotnet@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">dotnet-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;8.0&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build Project&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dotnet build --configuration Release&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy to Azure&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">azure/webapps-deploy@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app-name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">blazor-app-deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">slot-name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">production&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">publish-profile&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Configura el secreto &lt;code>AZURE_WEBAPP_PUBLISH_PROFILE&lt;/code> en los ajustes de tu repositorio.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Desplegar aplicaciones Blazor en Azure App Services es un proceso flexible y eficiente. Ya sea utilizando Visual Studio, la CLI de Azure o GitHub Actions, Azure ofrece las herramientas necesarias para simplificar el flujo de trabajo de desarrollo y despliegue. Con las mejoras de &lt;strong>.NET 8&lt;/strong>, tus aplicaciones serán más rápidas y escalables que nunca. ¡Empieza hoy mismo a aprovechar el poder de Blazor en la nube!&lt;/p></description></item><item><title>Creación de componentes reutilizables en Blazor para aplicaciones escalables</title><link>https://cmas.dev/posts/2024-04-10-blazor-reusable-components/</link><pubDate>Wed, 10 Apr 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-04-10-blazor-reusable-components/</guid><description>&lt;p>Los componentes reutilizables son esenciales para construir aplicaciones Blazor escalables y mantenibles. Este artículo explora cómo aprovechar las capacidades de .NET 8 para crear componentes modulares que mejoren la eficiencia y la reutilización en proyectos de cualquier tamaño. Además, aprenderás las mejores prácticas y técnicas clave para optimizar la construcción de interfaces dinámicas con Blazor.&lt;/p>
&lt;h2 id="introducción">Introducción&lt;/h2>
&lt;p>Blazor permite a los desarrolladores de .NET construir aplicaciones web interactivas con componentes reutilizables, un enfoque que no solo mejora la eficiencia del desarrollo, sino que también facilita la escalabilidad de las aplicaciones. Con &lt;strong>.NET 8&lt;/strong>, Blazor incluye mejoras significativas en el rendimiento y capacidades avanzadas para la creación de componentes, lo que lo convierte en una herramienta ideal para construir aplicaciones mantenibles y modulares.&lt;/p>
&lt;p>En este artículo, exploraremos cómo crear componentes reutilizables en Blazor y cómo organizarlos de manera eficiente para aplicaciones escalables.&lt;/p>
&lt;hr>
&lt;h2 id="qué-son-los-componentes-en-blazor">¿Qué son los componentes en Blazor?&lt;/h2>
&lt;p>Un componente en Blazor es una unidad modular de interfaz de usuario (UI) que encapsula lógica, datos y presentación. Los componentes son la base de cualquier aplicación Blazor y permiten construir UI dinámicas de forma sencilla.&lt;/p>
&lt;p>Un componente puede incluir:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>HTML y Razor&lt;/strong>: Para definir la estructura y el diseño.&lt;/li>
&lt;li>&lt;strong>C#&lt;/strong>: Para la lógica y el manejo de eventos.&lt;/li>
&lt;li>&lt;strong>CSS&lt;/strong>: Para el estilo.&lt;/li>
&lt;/ul>
&lt;p>Estos componentes son reutilizables, lo que significa que pueden ser compartidos en diferentes partes de la aplicación o incluso entre diferentes proyectos.&lt;/p>
&lt;hr>
&lt;h2 id="beneficios-de-los-componentes-reutilizables">Beneficios de los componentes reutilizables&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Eficiencia en el desarrollo&lt;/strong>:&lt;br>
Reduce la duplicación de código al centralizar funcionalidades comunes en un único componente.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Facilidad de mantenimiento&lt;/strong>:&lt;br>
Los cambios realizados en un componente se reflejan automáticamente donde sea utilizado.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Escalabilidad&lt;/strong>:&lt;br>
Una arquitectura basada en componentes facilita la expansión de la aplicación.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Reutilización entre proyectos&lt;/strong>:&lt;br>
Los componentes pueden empaquetarse como bibliotecas para su uso en múltiples aplicaciones.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="creación-de-un-componente-reutilizable-ejemplo-práctico">Creación de un componente reutilizable: Ejemplo práctico&lt;/h2>
&lt;h3 id="escenario-botón-genérico-reutilizable">&lt;strong>Escenario: Botón genérico reutilizable&lt;/strong>&lt;/h3>
&lt;p>Vamos a crear un botón genérico que se pueda reutilizar en diferentes partes de la aplicación. Este botón incluirá propiedades configurables para el texto, el estilo y la acción que ejecuta al ser clicado.&lt;/p>
&lt;h3 id="paso-1-crear-el-componente">Paso 1: Crear el componente&lt;/h3>
&lt;p>Crea un archivo llamado &lt;code>ReusableButton.razor&lt;/code> en tu proyecto Blazor:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;button class=&amp;#34;@ButtonClass&amp;#34; @onclick=&amp;#34;HandleClick&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> @ButtonText
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Parameter]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public string ButtonText { get; set; } = &amp;#34;Click me&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Parameter]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public string ButtonClass { get; set; } = &amp;#34;btn btn-primary&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [Parameter]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public EventCallback OnClick { get; set; }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private async Task HandleClick()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (OnClick.HasDelegate)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> await OnClick.InvokeAsync();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-2-explicación-del-código">Paso 2: Explicación del código&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>[Parameter]&lt;/strong>:&lt;br>
Los parámetros permiten que las propiedades del componente sean configurables desde su punto de uso.&lt;/p>
&lt;ul>
&lt;li>&lt;code>ButtonText&lt;/code>: El texto que aparecerá en el botón.&lt;/li>
&lt;li>&lt;code>ButtonClass&lt;/code>: Las clases CSS para personalizar el estilo.&lt;/li>
&lt;li>&lt;code>OnClick&lt;/code>: Un delegado para manejar la acción al hacer clic en el botón.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>EventCallback&lt;/strong>:&lt;br>
Es la forma recomendada en Blazor para manejar eventos como clics de botón.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="paso-3-uso-del-componente">Paso 3: Uso del componente&lt;/h3>
&lt;p>Ahora puedes utilizar este componente en cualquier parte de tu aplicación:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;ReusableButton
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ButtonText=&amp;#34;Guardar&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ButtonClass=&amp;#34;btn btn-success&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> OnClick=&amp;#34;GuardarCambios&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;ReusableButton
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ButtonText=&amp;#34;Eliminar&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ButtonClass=&amp;#34;btn btn-danger&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> OnClick=&amp;#34;EliminarRegistro&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private void GuardarCambios()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Console.WriteLine(&amp;#34;Cambios guardados&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private void EliminarRegistro()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Console.WriteLine(&amp;#34;Registro eliminado&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="resultado">Resultado&lt;/h3>
&lt;p>Los dos botones tendrán textos y estilos diferentes, pero comparten la misma lógica de interacción encapsulada en el componente &lt;code>ReusableButton&lt;/code>.&lt;/p>
&lt;hr>
&lt;h2 id="buenas-prácticas-para-componentes-reutilizables">Buenas prácticas para componentes reutilizables&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Modularidad&lt;/strong>:&lt;br>
Divide los componentes en unidades pequeñas y específicas que puedan ser fácilmente combinadas.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Evita la lógica excesiva&lt;/strong>:&lt;br>
Mantén los componentes centrados en la UI y delega la lógica compleja a servicios o clases separadas.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Uso de bibliotecas compartidas&lt;/strong>:&lt;br>
Empaqueta componentes comunes en una &lt;strong>librería Razor Class Library (RCL)&lt;/strong> para su reutilización entre proyectos.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Documentación clara&lt;/strong>:&lt;br>
Proporciona ejemplos de uso y documentación para que otros desarrolladores puedan integrarlos fácilmente.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="blazor-en-net-8-mejoras-para-componentes">Blazor en .NET 8: Mejoras para componentes&lt;/h2>
&lt;p>Con &lt;strong>.NET 8&lt;/strong>, Blazor introduce mejoras clave para el desarrollo basado en componentes:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Renderización condicional optimizada&lt;/strong>:&lt;br>
Reduce el impacto de cambios frecuentes en la UI.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Soporte para componentes híbridos (Blazor United)&lt;/strong>:&lt;br>
Combina los beneficios de Blazor Server y WebAssembly, facilitando la creación de componentes reutilizables en cualquier modelo.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Mejoras en la interoperabilidad con JavaScript&lt;/strong>:&lt;br>
Permite integrar bibliotecas externas en componentes Blazor de manera más eficiente.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Los componentes reutilizables son fundamentales para construir aplicaciones Blazor escalables y mantenibles. Al encapsular la lógica y la presentación en módulos independientes, puedes reducir la duplicación de código, mejorar la eficiencia y facilitar la expansión de tu aplicación.&lt;/p>
&lt;p>Con las mejoras introducidas en &lt;strong>.NET 8&lt;/strong>, crear componentes en Blazor es más poderoso que nunca. Ya sea que estés desarrollando una aplicación pequeña o un sistema complejo, el enfoque modular de Blazor te ayudará a mantener tu proyecto organizado y fácil de escalar.&lt;/p></description></item><item><title>Introducción a Blazor: Cambiando el paradigma del desarrollo web</title><link>https://cmas.dev/posts/2024-04-03-intro-blazor/</link><pubDate>Wed, 03 Apr 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-04-03-intro-blazor/</guid><description>&lt;p>El framework de Microsoft, está transformando el desarrollo web al permitir crear aplicaciones interactivas con C# y .NET, eliminando la necesidad de JavaScript. Con las mejoras de .NET 8, ofrece mayor rendimiento y flexibilidad, facilitando la creación de aplicaciones tanto en el cliente como en el servidor. Este artículo explora cómo Blazor redefine el desarrollo web y muestra cómo empezar a usarlo.&lt;/p>
&lt;h2 id="qué-es-blazor">¿Qué es Blazor?&lt;/h2>
&lt;p>Blazor es un framework de desarrollo web de &lt;strong>Microsoft&lt;/strong> que permite construir aplicaciones web interactivas utilizando &lt;strong>C# y .NET&lt;/strong> en lugar de depender exclusivamente de &lt;strong>JavaScript&lt;/strong>. Lanzado inicialmente como una alternativa a frameworks como Angular o React, Blazor ha evolucionado significativamente, y con la llegada de &lt;strong>.NET 8&lt;/strong>, sus capacidades y rendimiento han alcanzado nuevos niveles.&lt;/p>
&lt;h3 id="por-qué-blazor-es-revolucionario">¿Por qué Blazor es revolucionario?&lt;/h3>
&lt;p>Blazor introduce un cambio importante al permitir que los desarrolladores trabajen en aplicaciones web sin salir del ecosistema .NET. Esto reduce la necesidad de manejar múltiples lenguajes y frameworks en un solo proyecto. Además, Blazor está diseñado para cubrir diversos escenarios:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Blazor Server:&lt;/strong> Renderiza componentes en el servidor y envía actualizaciones al cliente a través de SignalR.&lt;/li>
&lt;li>&lt;strong>Blazor WebAssembly (WASM):&lt;/strong> Ejecuta la aplicación directamente en el navegador, utilizando WebAssembly para una experiencia completamente client-side.&lt;/li>
&lt;li>&lt;strong>Blazor en .NET MAUI:&lt;/strong> Permite usar Blazor para construir aplicaciones de escritorio y móviles.&lt;/li>
&lt;/ul>
&lt;p>Con &lt;strong>.NET 8&lt;/strong>, estas capacidades han sido optimizadas para ofrecer un mejor rendimiento y una experiencia de desarrollo más fluida.&lt;/p>
&lt;hr>
&lt;h2 id="ventajas-de-usar-blazor-en-net-8">Ventajas de usar Blazor en .NET 8&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Un único lenguaje para todo:&lt;/strong>&lt;br>
Con Blazor, puedes desarrollar aplicaciones completas utilizando &lt;strong>C#&lt;/strong>, eliminando la necesidad de escribir código en JavaScript para el frontend.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Rendimiento mejorado en WebAssembly:&lt;/strong>&lt;br>
La llegada de .NET 8 ha reducido los tiempos de carga inicial en Blazor WebAssembly, gracias a la optimización de su tamaño y mejor manejo de caché.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Integración con el ecosistema .NET:&lt;/strong>&lt;br>
Blazor se integra perfectamente con APIs .NET, Entity Framework, Azure, y bibliotecas de terceros.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Componentes reutilizables:&lt;/strong>&lt;br>
Blazor permite crear componentes UI que son reutilizables en distintas partes de una aplicación, similar a otros frameworks modernos como React.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Compatibilidad con JavaScript:&lt;/strong>&lt;br>
Aunque elimina la dependencia de JavaScript, Blazor permite interactuar con librerías JavaScript cuando sea necesario.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="blazor-en-acción-un-ejemplo-práctico">Blazor en acción: Un ejemplo práctico&lt;/h2>
&lt;h3 id="paso-1-creación-de-un-proyecto-blazor">Paso 1: Creación de un proyecto Blazor&lt;/h3>
&lt;p>Primero, asegúrate de tener instalada la última versión de .NET 8. Luego, crea un nuevo proyecto Blazor WebAssembly desde la CLI de .NET:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">dotnet new blazorwasm -o BlazorApp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> BlazorApp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dotnet run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Este comando genera una aplicación Blazor básica. Accede a &lt;code>http://localhost:5000&lt;/code> para verla en funcionamiento.&lt;/p>
&lt;h3 id="paso-2-crear-un-componente-de-contador">Paso 2: Crear un componente de contador&lt;/h3>
&lt;p>Edita el archivo &lt;code>Counter.razor&lt;/code> para personalizar el contador:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">@page &amp;#34;/counter&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;h3&amp;gt;Contador&amp;lt;/h3&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;p&amp;gt;Contador actual: @count&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;button class=&amp;#34;btn btn-primary&amp;#34; @onclick=&amp;#34;IncrementarContador&amp;#34;&amp;gt;Incrementar&amp;lt;/button&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@code {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private int count = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private void IncrementarContador()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> count++;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="paso-3-agregar-estilos-personalizados">Paso 3: Agregar estilos personalizados&lt;/h3>
&lt;p>Puedes personalizar los estilos en el archivo &lt;code>wwwroot/css/app.css&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">button&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">font-size&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">1.2&lt;/span>&lt;span class="kt">rem&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">padding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">margin-top&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Este simple ejemplo muestra cómo Blazor permite crear componentes interactivos utilizando únicamente C#.&lt;/p>
&lt;hr>
&lt;h2 id="blazor-y-el-futuro-del-desarrollo-web">Blazor y el futuro del desarrollo web&lt;/h2>
&lt;p>Con la llegada de &lt;strong>.NET 8&lt;/strong>, Microsoft ha reforzado su compromiso con Blazor como una herramienta clave para el desarrollo web. Algunas de las mejoras que destacan en esta versión incluyen:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Mejoras en el soporte de WebAssembly:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Reducción del tiempo de carga inicial.&lt;/li>
&lt;li>Implementación de AOT (Ahead-of-Time Compilation) para optimizar el rendimiento.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Blazor United:&lt;/strong>&lt;br>
Introducción de un enfoque híbrido que combina las ventajas de Blazor Server y WebAssembly, permitiendo cambiar dinámicamente entre ambos modelos según las necesidades de la aplicación.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Integración con .NET MAUI:&lt;/strong>&lt;br>
Blazor ahora puede usarse para desarrollar aplicaciones de escritorio y móviles con un solo código base.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="cuándo-elegir-blazor-para-tu-proyecto">Cuándo elegir Blazor para tu proyecto&lt;/h2>
&lt;p>Blazor es una excelente opción si:&lt;/p>
&lt;ol>
&lt;li>Tu equipo ya está familiarizado con el ecosistema .NET.&lt;/li>
&lt;li>Necesitas desarrollar aplicaciones web rápidamente sin aprender un nuevo lenguaje como JavaScript.&lt;/li>
&lt;li>Quieres aprovechar las capacidades de WebAssembly para mejorar la experiencia del cliente.&lt;/li>
&lt;li>Planeas integrar tu aplicación con otros servicios en Azure o APIs basadas en .NET.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="conclusión">Conclusión&lt;/h2>
&lt;p>Blazor está cambiando el paradigma del desarrollo web al eliminar la necesidad de separar el frontend y backend en lenguajes diferentes. Gracias a .NET 8, las aplicaciones Blazor son más rápidas, ligeras y fáciles de desarrollar que nunca.&lt;/p>
&lt;p>Si todavía no has probado Blazor, ahora es el momento perfecto para sumergirte en esta tecnología y descubrir cómo puede transformar tus proyectos web. Con un lenguaje unificado y un ecosistema robusto, Blazor está listo para liderar el futuro del desarrollo web.&lt;/p></description></item></channel></rss>