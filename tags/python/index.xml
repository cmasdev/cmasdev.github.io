<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Christian Amado</title><link>https://cmas.dev/tags/python/</link><description>Recent content in Python on Christian Amado</description><generator>Hugo</generator><language>es</language><lastBuildDate>Fri, 14 Jun 2024 00:00:00 -0400</lastBuildDate><atom:link href="https://cmas.dev/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Deno, Go y Python en WSL2 para flujos mixtos de backend + AI</title><link>https://cmas.dev/posts/2024-06-14-wsl2-backend-ai/</link><pubDate>Fri, 14 Jun 2024 00:00:00 -0400</pubDate><guid>https://cmas.dev/posts/2024-06-14-wsl2-backend-ai/</guid><description>&lt;p>Combinar lenguajes modernos como &lt;strong>Deno&lt;/strong>, &lt;strong>Go&lt;/strong> y &lt;strong>Python&lt;/strong> permite crear soluciones backend de alto rendimiento con componentes de inteligencia artificial de forma modular y eficiente. Gracias a &lt;strong>WSL2&lt;/strong>, es posible configurar este stack en Linux desde Windows, integrando herramientas, librerías y entornos de ejecución en un mismo flujo de trabajo.&lt;/p></description></item><item><title>Django sobre WSL</title><link>https://cmas.dev/posts/2022-12-21-django-on-wsl/</link><pubDate>Wed, 21 Dec 2022 19:39:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-12-21-django-on-wsl/</guid><description>&lt;p>En este corto artículo veremos cómo desarrollar sobre &lt;strong>WSL (Windows Subsystem for Linux)&lt;/strong> con &lt;strong>Python&lt;/strong> y &lt;strong>Django&lt;/strong>. Ya hemos visto que lo podemos hacer con &lt;a href="https://cmas.dev/posts/2022-06-29-java-with-wsl-part-2/" >Java&lt;/a>&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25267&lt;/strong>&lt;/em>&lt;/p></description></item><item><title>Desarrollo con Python sobre WSL</title><link>https://cmas.dev/posts/2022-12-14-developing-python-on-wsl/</link><pubDate>Wed, 14 Dec 2022 21:12:00 -0400</pubDate><guid>https://cmas.dev/posts/2022-12-14-developing-python-on-wsl/</guid><description>&lt;p>En este corto artículo veremos cómo desarrollar sobre &lt;strong>WSL (Windows Subsystem for Linux)&lt;/strong> con &lt;strong>Python&lt;/strong>. Ya hemos visto que lo podemos hacer con &lt;a href="https://cmas.dev/posts/2022-06-29-java-with-wsl-part-2/" >Java&lt;/a>&lt;/p>
&lt;p>&lt;em>&lt;strong>Windows 11 Insider Preview Build 25267&lt;/strong>&lt;/em>&lt;/p></description></item><item><title>Python: Instalando en Visual Studio Code</title><link>https://cmas.dev/posts/2019-04-04-python-instalando-en-visual-studio-code/</link><pubDate>Thu, 04 Apr 2019 20:19:30 -0400</pubDate><guid>https://cmas.dev/posts/2019-04-04-python-instalando-en-visual-studio-code/</guid><description>&lt;p>En esta entrada veremos cómo instalar Python para utilizarlo con nuestro IDE favorito, el Visual Studio Code. En una &lt;a href="https://cmas.dev/2019/04/python-instalacion/" >entrada anterior&lt;/a>, hemos visto cómo instalar Python en uestro Windows.&lt;/p></description></item><item><title>Python: Instalación</title><link>https://cmas.dev/posts/2019-04-02-python-instalacion/</link><pubDate>Tue, 02 Apr 2019 19:13:52 -0400</pubDate><guid>https://cmas.dev/posts/2019-04-02-python-instalacion/</guid><description>&lt;p>A partir de hoy, volveré a escribir artículos referentes a desarrollo de software. Además de aplicaciones de negocios me apasiona lo referente al mundo del desarrollo. ¡Así que manos a la obra!&lt;/p>
&lt;p>Primeramente, debemos conocer lo que es Python y para tal motivio podemos &lt;a href="https://wiki.python.org/moin/BeginnersGuide" class="external-link" target="_blank" rel="noopener">ver la documentación oficial del lenguaje&lt;/a>.&lt;/p>
&lt;p>En esta entrada veremos cómo instalar Python y realizar una pequeña prueba.&lt;/p></description></item></channel></rss>